[IO]
# entity graph G on the left
G = /home/hanxiaol/TOP/data/Flixter/userGraph.txt
# entity graph H on the right
H = /home/hanxiaol/TOP/data/Flixter/movieGraph20NN-loop.txt
# cross-graph links for training
linksTrain = /home/hanxiaol/TOP/data/Flixter/ratings-train.txt
# cross-graph links to be predicted
linksTest = /home/hanxiaol/TOP/data/Flixter/ratings-test.txt
# output file
prediction = /home/hanxiaol/TOP/predict.txt

[Model]
# algorithm to use -- 1: Top; 2: PMF
alg = 1
# inner dimension of the prediction matrix
k_f = 5
# number of G's eigen-vectors for training
k_g = 20
# number of H's eigen-vectors for training
k_h = 20
# decay factor for infinite ramdom walk:
# \kappa(decay*A) = I + decay*A + \frac{1}{2}*decay^2*A^2 + ... 
decay = 3
# tuning parameter in "C*loss_function + graph_regularization"
C = 1e+4

[Optimization]
# tolerance of inexact Newton's method
tol = 1e-6
# maximum number of PCG iterations
pcgIter = 100
# tolerance of PCG method
pcgTol = 5e-4
# initial learning rate for PMF
eta0 = 5e-8
# backtracking parameter 1 in Newton update
alpha = 0.5
# backtracking parameter 2 in Newton update
beta = 0.5
