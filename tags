!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
10	tools/eigen/blas/testing/cblat2.f	/^   10                         CONTINUE$/;"	l	subroutine:CCHK1	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10                      CONTINUE$/;"	l	subroutine:CCHK2	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10                CONTINUE$/;"	l	subroutine:CCHK4	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10                CONTINUE$/;"	l	subroutine:CCHK6	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10             CONTINUE$/;"	l	subroutine:CCHK5	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10       CONTINUE$/;"	l	function:LCERES	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10       CONTINUE$/;"	l	subroutine:CMVCH	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10    CONTINUE$/;"	l	subroutine:CMAKE	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10 CONTINUE$/;"	l	function:LCE	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10 CONTINUE$/;"	l	program:CBLAT2	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10 CONTINUE$/;"	l	subroutine:CCHK3	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10 I = I*MI$/;"	l	function:CBEG	file:
10	tools/eigen/blas/testing/cblat2.f	/^   10 INFOT = 1$/;"	l	subroutine:CCHKE	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10                      CONTINUE$/;"	l	subroutine:CCHK1	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:CCHK2	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:CCHK4	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:CCHK5	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10       CONTINUE$/;"	l	function:LCERES	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10    CONTINUE$/;"	l	subroutine:CCHK3	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10    CONTINUE$/;"	l	subroutine:CMAKE	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10    CONTINUE$/;"	l	subroutine:CMMCH	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10 CONTINUE$/;"	l	function:LCE	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10 CONTINUE$/;"	l	program:CBLAT3	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10 I = I*MI$/;"	l	function:CBEG	file:
10	tools/eigen/blas/testing/cblat3.f	/^   10 INFOT = 1$/;"	l	subroutine:CCHKE	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10                         CONTINUE$/;"	l	subroutine:DCHK1	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10                      CONTINUE$/;"	l	subroutine:DCHK2	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10                CONTINUE$/;"	l	subroutine:DCHK4	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10                CONTINUE$/;"	l	subroutine:DCHK6	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10             CONTINUE$/;"	l	subroutine:DCHK5	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10       CONTINUE$/;"	l	function:LDERES	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10       CONTINUE$/;"	l	subroutine:DMVCH	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10    CONTINUE$/;"	l	subroutine:DMAKE	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10 CONTINUE$/;"	l	function:LDE	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10 CONTINUE$/;"	l	program:DBLAT2	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10 CONTINUE$/;"	l	subroutine:DCHK3	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10 I = I*MI$/;"	l	function:DBEG	file:
10	tools/eigen/blas/testing/dblat2.f	/^   10 INFOT = 1$/;"	l	subroutine:DCHKE	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10                      CONTINUE$/;"	l	subroutine:DCHK1	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:DCHK2	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:DCHK4	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:DCHK5	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10       CONTINUE$/;"	l	function:LDERES	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10    CONTINUE$/;"	l	subroutine:DCHK3	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10    CONTINUE$/;"	l	subroutine:DMAKE	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10    CONTINUE$/;"	l	subroutine:DMMCH	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10 CONTINUE$/;"	l	function:LDE	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10 CONTINUE$/;"	l	program:DBLAT3	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10 I = I*MI$/;"	l	function:DBEG	file:
10	tools/eigen/blas/testing/dblat3.f	/^   10 INFOT = 1$/;"	l	subroutine:DCHKE	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10                         CONTINUE$/;"	l	subroutine:SCHK1	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10                      CONTINUE$/;"	l	subroutine:SCHK2	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10                CONTINUE$/;"	l	subroutine:SCHK4	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10                CONTINUE$/;"	l	subroutine:SCHK6	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10             CONTINUE$/;"	l	subroutine:SCHK5	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10       CONTINUE$/;"	l	function:LSERES	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10       CONTINUE$/;"	l	subroutine:SMVCH	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10    CONTINUE$/;"	l	subroutine:SMAKE	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10 CONTINUE$/;"	l	function:LSE	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10 CONTINUE$/;"	l	program:SBLAT2	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10 CONTINUE$/;"	l	subroutine:SCHK3	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10 I = I*MI$/;"	l	function:SBEG	file:
10	tools/eigen/blas/testing/sblat2.f	/^   10 INFOT = 1$/;"	l	subroutine:SCHKE	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10                      CONTINUE$/;"	l	subroutine:SCHK1	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:SCHK2	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:SCHK4	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:SCHK5	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10       CONTINUE$/;"	l	function:LSERES	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10    CONTINUE$/;"	l	subroutine:SCHK3	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10    CONTINUE$/;"	l	subroutine:SMAKE	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10    CONTINUE$/;"	l	subroutine:SMMCH	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10 CONTINUE$/;"	l	function:LSE	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10 CONTINUE$/;"	l	program:SBLAT3	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10 I = I*MI$/;"	l	function:SBEG	file:
10	tools/eigen/blas/testing/sblat3.f	/^   10 INFOT = 1$/;"	l	subroutine:SCHKE	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10                         CONTINUE$/;"	l	subroutine:ZCHK1	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10                      CONTINUE$/;"	l	subroutine:ZCHK2	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10                CONTINUE$/;"	l	subroutine:ZCHK4	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10                CONTINUE$/;"	l	subroutine:ZCHK6	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10             CONTINUE$/;"	l	subroutine:ZCHK5	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10       CONTINUE$/;"	l	function:LZERES	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10       CONTINUE$/;"	l	subroutine:ZMVCH	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10    CONTINUE$/;"	l	subroutine:ZMAKE	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10 CONTINUE$/;"	l	function:LZE	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10 CONTINUE$/;"	l	program:ZBLAT2	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10 CONTINUE$/;"	l	subroutine:ZCHK3	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10 I = I*MI$/;"	l	function:ZBEG	file:
10	tools/eigen/blas/testing/zblat2.f	/^   10 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10                      CONTINUE$/;"	l	subroutine:ZCHK1	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:ZCHK2	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:ZCHK4	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10                   CONTINUE$/;"	l	subroutine:ZCHK5	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10       CONTINUE$/;"	l	function:LZERES	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10    CONTINUE$/;"	l	subroutine:ZCHK3	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10    CONTINUE$/;"	l	subroutine:ZMAKE	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10    CONTINUE$/;"	l	subroutine:ZMMCH	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10 CONTINUE$/;"	l	function:LZE	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10 CONTINUE$/;"	l	program:ZBLAT3	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10 I = I*MI$/;"	l	function:ZBEG	file:
10	tools/eigen/blas/testing/zblat3.f	/^   10 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
10	tools/eigen/lapack/clacgv.f	/^   10    CONTINUE$/;"	l	subroutine:CLACGV	file:
10	tools/eigen/lapack/clarfb.f	/^   10          CONTINUE$/;"	l	subroutine:CLARFB	file:
10	tools/eigen/lapack/clarfg.f	/^   10       CONTINUE$/;"	l	subroutine:CLARFG	file:
10	tools/eigen/lapack/dlarfb.f	/^   10          CONTINUE$/;"	l	subroutine:DLARFB	file:
10	tools/eigen/lapack/dlarfg.f	/^   10       CONTINUE$/;"	l	subroutine:DLARFG	file:
10	tools/eigen/lapack/slarfb.f	/^   10          CONTINUE$/;"	l	subroutine:SLARFB	file:
10	tools/eigen/lapack/slarfg.f	/^   10       CONTINUE$/;"	l	subroutine:SLARFG	file:
10	tools/eigen/lapack/zlacgv.f	/^   10    CONTINUE$/;"	l	subroutine:ZLACGV	file:
10	tools/eigen/lapack/zlarfb.f	/^   10          CONTINUE$/;"	l	subroutine:ZLARFB	file:
10	tools/eigen/lapack/zlarfg.f	/^   10       CONTINUE$/;"	l	subroutine:ZLARFG	file:
100	tools/eigen/blas/testing/cblat1.f	/^  100    CONTINUE$/;"	l	subroutine:CHECK1	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100             CONTINUE$/;"	l	subroutine:CCHK6	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100       CONTINUE$/;"	l	subroutine:CCHK1	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100       CONTINUE$/;"	l	subroutine:CCHK4	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100       CONTINUE$/;"	l	subroutine:CMAKE	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100    CONTINUE$/;"	l	subroutine:CCHK2	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100    CONTINUE$/;"	l	subroutine:CCHK3	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100 CONTINUE$/;"	l	program:CBLAT2	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100 CONTINUE$/;"	l	subroutine:CCHK5	file:
100	tools/eigen/blas/testing/cblat2.f	/^  100 INFOT = 1$/;"	l	subroutine:CCHKE	file:
100	tools/eigen/blas/testing/cblat3.f	/^  100             CONTINUE$/;"	l	subroutine:CCHK3	file:
100	tools/eigen/blas/testing/cblat3.f	/^  100             CONTINUE$/;"	l	subroutine:CMMCH	file:
100	tools/eigen/blas/testing/cblat3.f	/^  100          CONTINUE$/;"	l	subroutine:CCHK5	file:
100	tools/eigen/blas/testing/cblat3.f	/^  100    CONTINUE$/;"	l	subroutine:CCHK1	file:
100	tools/eigen/blas/testing/cblat3.f	/^  100 CONTINUE$/;"	l	program:CBLAT3	file:
100	tools/eigen/blas/testing/cblat3.f	/^  100 CONTINUE$/;"	l	subroutine:CCHK2	file:
100	tools/eigen/blas/testing/cblat3.f	/^  100 CONTINUE$/;"	l	subroutine:CCHK4	file:
100	tools/eigen/blas/testing/cblat3.f	/^  100 IF( OK )THEN$/;"	l	subroutine:CCHKE	file:
100	tools/eigen/blas/testing/dblat1.f	/^  100    CONTINUE$/;"	l	subroutine:CHECK2	file:
100	tools/eigen/blas/testing/dblat1.f	/^  100 CONTINUE$/;"	l	subroutine:CHECK3	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100             CONTINUE$/;"	l	subroutine:DCHK6	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100       CONTINUE$/;"	l	subroutine:DCHK1	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100       CONTINUE$/;"	l	subroutine:DCHK4	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100       CONTINUE$/;"	l	subroutine:DMAKE	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100    CONTINUE$/;"	l	subroutine:DCHK2	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100    CONTINUE$/;"	l	subroutine:DCHK3	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100 CONTINUE$/;"	l	program:DBLAT2	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100 CONTINUE$/;"	l	subroutine:DCHK5	file:
100	tools/eigen/blas/testing/dblat2.f	/^  100 INFOT = 1$/;"	l	subroutine:DCHKE	file:
100	tools/eigen/blas/testing/dblat3.f	/^  100             CONTINUE$/;"	l	subroutine:DCHK3	file:
100	tools/eigen/blas/testing/dblat3.f	/^  100          CONTINUE$/;"	l	subroutine:DCHK5	file:
100	tools/eigen/blas/testing/dblat3.f	/^  100    CONTINUE$/;"	l	subroutine:DCHK1	file:
100	tools/eigen/blas/testing/dblat3.f	/^  100    CONTINUE$/;"	l	subroutine:DMMCH	file:
100	tools/eigen/blas/testing/dblat3.f	/^  100 CONTINUE$/;"	l	program:DBLAT3	file:
100	tools/eigen/blas/testing/dblat3.f	/^  100 CONTINUE$/;"	l	subroutine:DCHK2	file:
100	tools/eigen/blas/testing/dblat3.f	/^  100 CONTINUE$/;"	l	subroutine:DCHK4	file:
100	tools/eigen/blas/testing/sblat1.f	/^  100    CONTINUE$/;"	l	subroutine:CHECK2	file:
100	tools/eigen/blas/testing/sblat1.f	/^  100 CONTINUE$/;"	l	subroutine:CHECK3	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100             CONTINUE$/;"	l	subroutine:SCHK6	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100       CONTINUE$/;"	l	subroutine:SCHK1	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100       CONTINUE$/;"	l	subroutine:SCHK4	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100       CONTINUE$/;"	l	subroutine:SMAKE	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100    CONTINUE$/;"	l	subroutine:SCHK2	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100    CONTINUE$/;"	l	subroutine:SCHK3	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100 CONTINUE$/;"	l	program:SBLAT2	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100 CONTINUE$/;"	l	subroutine:SCHK5	file:
100	tools/eigen/blas/testing/sblat2.f	/^  100 INFOT = 1$/;"	l	subroutine:SCHKE	file:
100	tools/eigen/blas/testing/sblat3.f	/^  100             CONTINUE$/;"	l	subroutine:SCHK3	file:
100	tools/eigen/blas/testing/sblat3.f	/^  100          CONTINUE$/;"	l	subroutine:SCHK5	file:
100	tools/eigen/blas/testing/sblat3.f	/^  100    CONTINUE$/;"	l	subroutine:SCHK1	file:
100	tools/eigen/blas/testing/sblat3.f	/^  100    CONTINUE$/;"	l	subroutine:SMMCH	file:
100	tools/eigen/blas/testing/sblat3.f	/^  100 CONTINUE$/;"	l	program:SBLAT3	file:
100	tools/eigen/blas/testing/sblat3.f	/^  100 CONTINUE$/;"	l	subroutine:SCHK2	file:
100	tools/eigen/blas/testing/sblat3.f	/^  100 CONTINUE$/;"	l	subroutine:SCHK4	file:
100	tools/eigen/blas/testing/zblat1.f	/^  100    CONTINUE$/;"	l	subroutine:CHECK1	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100             CONTINUE$/;"	l	subroutine:ZCHK6	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100       CONTINUE$/;"	l	subroutine:ZCHK1	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100       CONTINUE$/;"	l	subroutine:ZCHK4	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100       CONTINUE$/;"	l	subroutine:ZMAKE	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100    CONTINUE$/;"	l	subroutine:ZCHK2	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100    CONTINUE$/;"	l	subroutine:ZCHK3	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100 CONTINUE$/;"	l	program:ZBLAT2	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100 CONTINUE$/;"	l	subroutine:ZCHK5	file:
100	tools/eigen/blas/testing/zblat2.f	/^  100 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
100	tools/eigen/blas/testing/zblat3.f	/^  100             CONTINUE$/;"	l	subroutine:ZCHK3	file:
100	tools/eigen/blas/testing/zblat3.f	/^  100             CONTINUE$/;"	l	subroutine:ZMMCH	file:
100	tools/eigen/blas/testing/zblat3.f	/^  100          CONTINUE$/;"	l	subroutine:ZCHK5	file:
100	tools/eigen/blas/testing/zblat3.f	/^  100    CONTINUE$/;"	l	subroutine:ZCHK1	file:
100	tools/eigen/blas/testing/zblat3.f	/^  100 CONTINUE$/;"	l	program:ZBLAT3	file:
100	tools/eigen/blas/testing/zblat3.f	/^  100 CONTINUE$/;"	l	subroutine:ZCHK2	file:
100	tools/eigen/blas/testing/zblat3.f	/^  100 CONTINUE$/;"	l	subroutine:ZCHK4	file:
100	tools/eigen/blas/testing/zblat3.f	/^  100 IF( OK )THEN$/;"	l	subroutine:ZCHKE	file:
100	tools/eigen/lapack/clarfb.f	/^  100          CONTINUE$/;"	l	subroutine:CLARFB	file:
100	tools/eigen/lapack/dlarfb.f	/^  100          CONTINUE$/;"	l	subroutine:DLARFB	file:
100	tools/eigen/lapack/slarfb.f	/^  100          CONTINUE$/;"	l	subroutine:SLARFB	file:
100	tools/eigen/lapack/zlarfb.f	/^  100          CONTINUE$/;"	l	subroutine:ZLARFB	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110          CONTINUE$/;"	l	subroutine:CCHK6	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110       CONTINUE$/;"	l	subroutine:CMAKE	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110    CONTINUE$/;"	l	program:CBLAT2	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110    CONTINUE$/;"	l	subroutine:CCHK1	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110    CONTINUE$/;"	l	subroutine:CCHK4	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110 CONTINUE$/;"	l	subroutine:CCHK2	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110 CONTINUE$/;"	l	subroutine:CCHK3	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110 CONTINUE$/;"	l	subroutine:CCHK5	file:
110	tools/eigen/blas/testing/cblat2.f	/^  110 INFOT = 1$/;"	l	subroutine:CCHKE	file:
110	tools/eigen/blas/testing/cblat3.f	/^  110          CONTINUE$/;"	l	subroutine:CCHK3	file:
110	tools/eigen/blas/testing/cblat3.f	/^  110          CONTINUE$/;"	l	subroutine:CMMCH	file:
110	tools/eigen/blas/testing/cblat3.f	/^  110       CONTINUE$/;"	l	subroutine:CCHK5	file:
110	tools/eigen/blas/testing/cblat3.f	/^  110 CONTINUE$/;"	l	program:CBLAT3	file:
110	tools/eigen/blas/testing/cblat3.f	/^  110 CONTINUE$/;"	l	subroutine:CCHK1	file:
110	tools/eigen/blas/testing/cblat3.f	/^  110 CONTINUE$/;"	l	subroutine:CCHK2	file:
110	tools/eigen/blas/testing/cblat3.f	/^  110 CONTINUE$/;"	l	subroutine:CCHK4	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110          CONTINUE$/;"	l	subroutine:DCHK6	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110       CONTINUE$/;"	l	subroutine:DMAKE	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110    CONTINUE$/;"	l	program:DBLAT2	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110    CONTINUE$/;"	l	subroutine:DCHK1	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110    CONTINUE$/;"	l	subroutine:DCHK4	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110 CONTINUE$/;"	l	subroutine:DCHK2	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110 CONTINUE$/;"	l	subroutine:DCHK3	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110 CONTINUE$/;"	l	subroutine:DCHK5	file:
110	tools/eigen/blas/testing/dblat2.f	/^  110 INFOT = 1$/;"	l	subroutine:DCHKE	file:
110	tools/eigen/blas/testing/dblat3.f	/^  110          CONTINUE$/;"	l	subroutine:DCHK3	file:
110	tools/eigen/blas/testing/dblat3.f	/^  110       CONTINUE$/;"	l	subroutine:DCHK5	file:
110	tools/eigen/blas/testing/dblat3.f	/^  110    CONTINUE$/;"	l	subroutine:DMMCH	file:
110	tools/eigen/blas/testing/dblat3.f	/^  110 CONTINUE$/;"	l	program:DBLAT3	file:
110	tools/eigen/blas/testing/dblat3.f	/^  110 CONTINUE$/;"	l	subroutine:DCHK1	file:
110	tools/eigen/blas/testing/dblat3.f	/^  110 CONTINUE$/;"	l	subroutine:DCHK2	file:
110	tools/eigen/blas/testing/dblat3.f	/^  110 CONTINUE$/;"	l	subroutine:DCHK4	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110          CONTINUE$/;"	l	subroutine:SCHK6	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110       CONTINUE$/;"	l	subroutine:SMAKE	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110    CONTINUE$/;"	l	program:SBLAT2	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110    CONTINUE$/;"	l	subroutine:SCHK1	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110    CONTINUE$/;"	l	subroutine:SCHK4	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110 CONTINUE$/;"	l	subroutine:SCHK2	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110 CONTINUE$/;"	l	subroutine:SCHK3	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110 CONTINUE$/;"	l	subroutine:SCHK5	file:
110	tools/eigen/blas/testing/sblat2.f	/^  110 INFOT = 1$/;"	l	subroutine:SCHKE	file:
110	tools/eigen/blas/testing/sblat3.f	/^  110          CONTINUE$/;"	l	subroutine:SCHK3	file:
110	tools/eigen/blas/testing/sblat3.f	/^  110       CONTINUE$/;"	l	subroutine:SCHK5	file:
110	tools/eigen/blas/testing/sblat3.f	/^  110    CONTINUE$/;"	l	subroutine:SMMCH	file:
110	tools/eigen/blas/testing/sblat3.f	/^  110 CONTINUE$/;"	l	program:SBLAT3	file:
110	tools/eigen/blas/testing/sblat3.f	/^  110 CONTINUE$/;"	l	subroutine:SCHK1	file:
110	tools/eigen/blas/testing/sblat3.f	/^  110 CONTINUE$/;"	l	subroutine:SCHK2	file:
110	tools/eigen/blas/testing/sblat3.f	/^  110 CONTINUE$/;"	l	subroutine:SCHK4	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110          CONTINUE$/;"	l	subroutine:ZCHK6	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110       CONTINUE$/;"	l	subroutine:ZMAKE	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110    CONTINUE$/;"	l	program:ZBLAT2	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110    CONTINUE$/;"	l	subroutine:ZCHK1	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110    CONTINUE$/;"	l	subroutine:ZCHK4	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110 CONTINUE$/;"	l	subroutine:ZCHK2	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110 CONTINUE$/;"	l	subroutine:ZCHK3	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110 CONTINUE$/;"	l	subroutine:ZCHK5	file:
110	tools/eigen/blas/testing/zblat2.f	/^  110 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
110	tools/eigen/blas/testing/zblat3.f	/^  110          CONTINUE$/;"	l	subroutine:ZCHK3	file:
110	tools/eigen/blas/testing/zblat3.f	/^  110          CONTINUE$/;"	l	subroutine:ZMMCH	file:
110	tools/eigen/blas/testing/zblat3.f	/^  110       CONTINUE$/;"	l	subroutine:ZCHK5	file:
110	tools/eigen/blas/testing/zblat3.f	/^  110 CONTINUE$/;"	l	program:ZBLAT3	file:
110	tools/eigen/blas/testing/zblat3.f	/^  110 CONTINUE$/;"	l	subroutine:ZCHK1	file:
110	tools/eigen/blas/testing/zblat3.f	/^  110 CONTINUE$/;"	l	subroutine:ZCHK2	file:
110	tools/eigen/blas/testing/zblat3.f	/^  110 CONTINUE$/;"	l	subroutine:ZCHK4	file:
110	tools/eigen/lapack/clarfb.f	/^  110             CONTINUE$/;"	l	subroutine:CLARFB	file:
110	tools/eigen/lapack/dlarfb.f	/^  110             CONTINUE$/;"	l	subroutine:DLARFB	file:
110	tools/eigen/lapack/slarfb.f	/^  110             CONTINUE$/;"	l	subroutine:SLARFB	file:
110	tools/eigen/lapack/zlarfb.f	/^  110             CONTINUE$/;"	l	subroutine:ZLARFB	file:
120	tools/eigen/blas/testing/cblat1.f	/^  120    CONTINUE$/;"	l	subroutine:CHECK1	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120       CONTINUE$/;"	l	subroutine:CCHK6	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120       CONTINUE$/;"	l	subroutine:CMAKE	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120 CONTINUE$/;"	l	program:CBLAT2	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120 CONTINUE$/;"	l	subroutine:CCHK1	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120 CONTINUE$/;"	l	subroutine:CCHK2	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120 CONTINUE$/;"	l	subroutine:CCHK3	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120 CONTINUE$/;"	l	subroutine:CCHK4	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120 CONTINUE$/;"	l	subroutine:CCHK5	file:
120	tools/eigen/blas/testing/cblat2.f	/^  120 INFOT = 1$/;"	l	subroutine:CCHKE	file:
120	tools/eigen/blas/testing/cblat3.f	/^  120                CONTINUE$/;"	l	subroutine:CMMCH	file:
120	tools/eigen/blas/testing/cblat3.f	/^  120       CONTINUE$/;"	l	subroutine:CCHK3	file:
120	tools/eigen/blas/testing/cblat3.f	/^  120    CONTINUE$/;"	l	subroutine:CCHK5	file:
120	tools/eigen/blas/testing/cblat3.f	/^  120 CONTINUE$/;"	l	program:CBLAT3	file:
120	tools/eigen/blas/testing/cblat3.f	/^  120 CONTINUE$/;"	l	subroutine:CCHK1	file:
120	tools/eigen/blas/testing/cblat3.f	/^  120 CONTINUE$/;"	l	subroutine:CCHK2	file:
120	tools/eigen/blas/testing/cblat3.f	/^  120 CONTINUE$/;"	l	subroutine:CCHK4	file:
120	tools/eigen/blas/testing/dblat1.f	/^  120 CONTINUE$/;"	l	subroutine:CHECK2	file:
120	tools/eigen/blas/testing/dblat1.f	/^  120 CONTINUE$/;"	l	subroutine:CHECK3	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120       CONTINUE$/;"	l	subroutine:DCHK6	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120       CONTINUE$/;"	l	subroutine:DMAKE	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120 CONTINUE$/;"	l	program:DBLAT2	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120 CONTINUE$/;"	l	subroutine:DCHK1	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120 CONTINUE$/;"	l	subroutine:DCHK2	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120 CONTINUE$/;"	l	subroutine:DCHK3	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120 CONTINUE$/;"	l	subroutine:DCHK4	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120 CONTINUE$/;"	l	subroutine:DCHK5	file:
120	tools/eigen/blas/testing/dblat2.f	/^  120 INFOT = 1$/;"	l	subroutine:DCHKE	file:
120	tools/eigen/blas/testing/dblat3.f	/^  120       CONTINUE$/;"	l	subroutine:DCHK3	file:
120	tools/eigen/blas/testing/dblat3.f	/^  120    CONTINUE$/;"	l	subroutine:DCHK5	file:
120	tools/eigen/blas/testing/dblat3.f	/^  120 CONTINUE$/;"	l	program:DBLAT3	file:
120	tools/eigen/blas/testing/dblat3.f	/^  120 CONTINUE$/;"	l	subroutine:DCHK1	file:
120	tools/eigen/blas/testing/dblat3.f	/^  120 CONTINUE$/;"	l	subroutine:DCHK2	file:
120	tools/eigen/blas/testing/dblat3.f	/^  120 CONTINUE$/;"	l	subroutine:DCHK4	file:
120	tools/eigen/blas/testing/dblat3.f	/^  120 CONTINUE$/;"	l	subroutine:DMMCH	file:
120	tools/eigen/blas/testing/sblat1.f	/^  120 CONTINUE$/;"	l	subroutine:CHECK2	file:
120	tools/eigen/blas/testing/sblat1.f	/^  120 CONTINUE$/;"	l	subroutine:CHECK3	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120       CONTINUE$/;"	l	subroutine:SCHK6	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120       CONTINUE$/;"	l	subroutine:SMAKE	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120 CONTINUE$/;"	l	program:SBLAT2	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120 CONTINUE$/;"	l	subroutine:SCHK1	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120 CONTINUE$/;"	l	subroutine:SCHK2	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120 CONTINUE$/;"	l	subroutine:SCHK3	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120 CONTINUE$/;"	l	subroutine:SCHK4	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120 CONTINUE$/;"	l	subroutine:SCHK5	file:
120	tools/eigen/blas/testing/sblat2.f	/^  120 INFOT = 1$/;"	l	subroutine:SCHKE	file:
120	tools/eigen/blas/testing/sblat3.f	/^  120       CONTINUE$/;"	l	subroutine:SCHK3	file:
120	tools/eigen/blas/testing/sblat3.f	/^  120    CONTINUE$/;"	l	subroutine:SCHK5	file:
120	tools/eigen/blas/testing/sblat3.f	/^  120 CONTINUE$/;"	l	program:SBLAT3	file:
120	tools/eigen/blas/testing/sblat3.f	/^  120 CONTINUE$/;"	l	subroutine:SCHK1	file:
120	tools/eigen/blas/testing/sblat3.f	/^  120 CONTINUE$/;"	l	subroutine:SCHK2	file:
120	tools/eigen/blas/testing/sblat3.f	/^  120 CONTINUE$/;"	l	subroutine:SCHK4	file:
120	tools/eigen/blas/testing/sblat3.f	/^  120 CONTINUE$/;"	l	subroutine:SMMCH	file:
120	tools/eigen/blas/testing/zblat1.f	/^  120    CONTINUE$/;"	l	subroutine:CHECK1	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120       CONTINUE$/;"	l	subroutine:ZCHK6	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120       CONTINUE$/;"	l	subroutine:ZMAKE	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120 CONTINUE$/;"	l	program:ZBLAT2	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120 CONTINUE$/;"	l	subroutine:ZCHK1	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120 CONTINUE$/;"	l	subroutine:ZCHK2	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120 CONTINUE$/;"	l	subroutine:ZCHK3	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120 CONTINUE$/;"	l	subroutine:ZCHK4	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120 CONTINUE$/;"	l	subroutine:ZCHK5	file:
120	tools/eigen/blas/testing/zblat2.f	/^  120 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
120	tools/eigen/blas/testing/zblat3.f	/^  120                CONTINUE$/;"	l	subroutine:ZMMCH	file:
120	tools/eigen/blas/testing/zblat3.f	/^  120       CONTINUE$/;"	l	subroutine:ZCHK3	file:
120	tools/eigen/blas/testing/zblat3.f	/^  120    CONTINUE$/;"	l	subroutine:ZCHK5	file:
120	tools/eigen/blas/testing/zblat3.f	/^  120 CONTINUE$/;"	l	program:ZBLAT3	file:
120	tools/eigen/blas/testing/zblat3.f	/^  120 CONTINUE$/;"	l	subroutine:ZCHK1	file:
120	tools/eigen/blas/testing/zblat3.f	/^  120 CONTINUE$/;"	l	subroutine:ZCHK2	file:
120	tools/eigen/blas/testing/zblat3.f	/^  120 CONTINUE$/;"	l	subroutine:ZCHK4	file:
120	tools/eigen/lapack/clarfb.f	/^  120          CONTINUE$/;"	l	subroutine:CLARFB	file:
120	tools/eigen/lapack/dlarfb.f	/^  120          CONTINUE$/;"	l	subroutine:DLARFB	file:
120	tools/eigen/lapack/slarfb.f	/^  120          CONTINUE$/;"	l	subroutine:SLARFB	file:
120	tools/eigen/lapack/zlarfb.f	/^  120          CONTINUE$/;"	l	subroutine:ZLARFB	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130    CONTINUE$/;"	l	subroutine:CCHK6	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130    CONTINUE$/;"	l	subroutine:CMAKE	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130 CONTINUE$/;"	l	program:CBLAT2	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130 CONTINUE$/;"	l	subroutine:CCHK1	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130 CONTINUE$/;"	l	subroutine:CCHK2	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130 CONTINUE$/;"	l	subroutine:CCHK3	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130 CONTINUE$/;"	l	subroutine:CCHK4	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130 CONTINUE$/;"	l	subroutine:CCHK5	file:
130	tools/eigen/blas/testing/cblat2.f	/^  130 INFOT = 1$/;"	l	subroutine:CCHKE	file:
130	tools/eigen/blas/testing/cblat3.f	/^  130             CONTINUE$/;"	l	subroutine:CMMCH	file:
130	tools/eigen/blas/testing/cblat3.f	/^  130    CONTINUE$/;"	l	subroutine:CCHK3	file:
130	tools/eigen/blas/testing/cblat3.f	/^  130 CONTINUE$/;"	l	program:CBLAT3	file:
130	tools/eigen/blas/testing/cblat3.f	/^  130 CONTINUE$/;"	l	subroutine:CCHK1	file:
130	tools/eigen/blas/testing/cblat3.f	/^  130 CONTINUE$/;"	l	subroutine:CCHK4	file:
130	tools/eigen/blas/testing/cblat3.f	/^  130 CONTINUE$/;"	l	subroutine:CCHK5	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130    CONTINUE$/;"	l	subroutine:DCHK6	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130    CONTINUE$/;"	l	subroutine:DMAKE	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130 CONTINUE$/;"	l	program:DBLAT2	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130 CONTINUE$/;"	l	subroutine:DCHK1	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130 CONTINUE$/;"	l	subroutine:DCHK2	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130 CONTINUE$/;"	l	subroutine:DCHK3	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130 CONTINUE$/;"	l	subroutine:DCHK4	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130 CONTINUE$/;"	l	subroutine:DCHK5	file:
130	tools/eigen/blas/testing/dblat2.f	/^  130 INFOT = 1$/;"	l	subroutine:DCHKE	file:
130	tools/eigen/blas/testing/dblat3.f	/^  130    CONTINUE$/;"	l	subroutine:DCHK3	file:
130	tools/eigen/blas/testing/dblat3.f	/^  130 CONTINUE$/;"	l	program:DBLAT3	file:
130	tools/eigen/blas/testing/dblat3.f	/^  130 CONTINUE$/;"	l	subroutine:DCHK1	file:
130	tools/eigen/blas/testing/dblat3.f	/^  130 CONTINUE$/;"	l	subroutine:DCHK4	file:
130	tools/eigen/blas/testing/dblat3.f	/^  130 CONTINUE$/;"	l	subroutine:DCHK5	file:
130	tools/eigen/blas/testing/dblat3.f	/^  130 FATAL = .TRUE.$/;"	l	subroutine:DMMCH	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130    CONTINUE$/;"	l	subroutine:SCHK6	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130    CONTINUE$/;"	l	subroutine:SMAKE	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130 CONTINUE$/;"	l	program:SBLAT2	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130 CONTINUE$/;"	l	subroutine:SCHK1	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130 CONTINUE$/;"	l	subroutine:SCHK2	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130 CONTINUE$/;"	l	subroutine:SCHK3	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130 CONTINUE$/;"	l	subroutine:SCHK4	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130 CONTINUE$/;"	l	subroutine:SCHK5	file:
130	tools/eigen/blas/testing/sblat2.f	/^  130 INFOT = 1$/;"	l	subroutine:SCHKE	file:
130	tools/eigen/blas/testing/sblat3.f	/^  130    CONTINUE$/;"	l	subroutine:SCHK3	file:
130	tools/eigen/blas/testing/sblat3.f	/^  130 CONTINUE$/;"	l	program:SBLAT3	file:
130	tools/eigen/blas/testing/sblat3.f	/^  130 CONTINUE$/;"	l	subroutine:SCHK1	file:
130	tools/eigen/blas/testing/sblat3.f	/^  130 CONTINUE$/;"	l	subroutine:SCHK4	file:
130	tools/eigen/blas/testing/sblat3.f	/^  130 CONTINUE$/;"	l	subroutine:SCHK5	file:
130	tools/eigen/blas/testing/sblat3.f	/^  130 FATAL = .TRUE.$/;"	l	subroutine:SMMCH	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130    CONTINUE$/;"	l	subroutine:ZCHK6	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130    CONTINUE$/;"	l	subroutine:ZMAKE	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130 CONTINUE$/;"	l	program:ZBLAT2	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130 CONTINUE$/;"	l	subroutine:ZCHK1	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130 CONTINUE$/;"	l	subroutine:ZCHK2	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130 CONTINUE$/;"	l	subroutine:ZCHK3	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130 CONTINUE$/;"	l	subroutine:ZCHK4	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130 CONTINUE$/;"	l	subroutine:ZCHK5	file:
130	tools/eigen/blas/testing/zblat2.f	/^  130 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
130	tools/eigen/blas/testing/zblat3.f	/^  130             CONTINUE$/;"	l	subroutine:ZMMCH	file:
130	tools/eigen/blas/testing/zblat3.f	/^  130    CONTINUE$/;"	l	subroutine:ZCHK3	file:
130	tools/eigen/blas/testing/zblat3.f	/^  130 CONTINUE$/;"	l	program:ZBLAT3	file:
130	tools/eigen/blas/testing/zblat3.f	/^  130 CONTINUE$/;"	l	subroutine:ZCHK1	file:
130	tools/eigen/blas/testing/zblat3.f	/^  130 CONTINUE$/;"	l	subroutine:ZCHK4	file:
130	tools/eigen/blas/testing/zblat3.f	/^  130 CONTINUE$/;"	l	subroutine:ZCHK5	file:
130	tools/eigen/lapack/clarfb.f	/^  130          CONTINUE$/;"	l	subroutine:CLARFB	file:
130	tools/eigen/lapack/dlarfb.f	/^  130          CONTINUE$/;"	l	subroutine:DLARFB	file:
130	tools/eigen/lapack/slarfb.f	/^  130          CONTINUE$/;"	l	subroutine:SLARFB	file:
130	tools/eigen/lapack/zlarfb.f	/^  130          CONTINUE$/;"	l	subroutine:ZLARFB	file:
140	tools/eigen/blas/testing/cblat1.f	/^  140    CONTINUE$/;"	l	subroutine:CHECK1	file:
140	tools/eigen/blas/testing/cblat2.f	/^  140       CALL CCHK1( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT2	file:
140	tools/eigen/blas/testing/cblat2.f	/^  140       CONTINUE$/;"	l	subroutine:CMAKE	file:
140	tools/eigen/blas/testing/cblat2.f	/^  140 CONTINUE$/;"	l	subroutine:CCHK1	file:
140	tools/eigen/blas/testing/cblat2.f	/^  140 CONTINUE$/;"	l	subroutine:CCHK4	file:
140	tools/eigen/blas/testing/cblat2.f	/^  140 CONTINUE$/;"	l	subroutine:CCHK6	file:
140	tools/eigen/blas/testing/cblat2.f	/^  140 INFOT = 1$/;"	l	subroutine:CCHKE	file:
140	tools/eigen/blas/testing/cblat3.f	/^  140                CONTINUE$/;"	l	subroutine:CMMCH	file:
140	tools/eigen/blas/testing/cblat3.f	/^  140       CALL CCHK1( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT3	file:
140	tools/eigen/blas/testing/cblat3.f	/^  140 CONTINUE$/;"	l	subroutine:CCHK3	file:
140	tools/eigen/blas/testing/cblat3.f	/^  140 CONTINUE$/;"	l	subroutine:CCHK5	file:
140	tools/eigen/blas/testing/dblat1.f	/^  140 CONTINUE$/;"	l	subroutine:CHECK3	file:
140	tools/eigen/blas/testing/dblat2.f	/^  140       CALL DCHK1( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT2	file:
140	tools/eigen/blas/testing/dblat2.f	/^  140       CONTINUE$/;"	l	subroutine:DMAKE	file:
140	tools/eigen/blas/testing/dblat2.f	/^  140 CONTINUE$/;"	l	subroutine:DCHK1	file:
140	tools/eigen/blas/testing/dblat2.f	/^  140 CONTINUE$/;"	l	subroutine:DCHK4	file:
140	tools/eigen/blas/testing/dblat2.f	/^  140 CONTINUE$/;"	l	subroutine:DCHK6	file:
140	tools/eigen/blas/testing/dblat2.f	/^  140 INFOT = 1$/;"	l	subroutine:DCHKE	file:
140	tools/eigen/blas/testing/dblat3.f	/^  140       CALL DCHK1( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT3	file:
140	tools/eigen/blas/testing/dblat3.f	/^  140 CONTINUE$/;"	l	subroutine:DCHK3	file:
140	tools/eigen/blas/testing/dblat3.f	/^  140 CONTINUE$/;"	l	subroutine:DCHK5	file:
140	tools/eigen/blas/testing/dblat3.f	/^  140 CONTINUE$/;"	l	subroutine:DMMCH	file:
140	tools/eigen/blas/testing/sblat1.f	/^  140 CONTINUE$/;"	l	subroutine:CHECK3	file:
140	tools/eigen/blas/testing/sblat2.f	/^  140       CALL SCHK1( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT2	file:
140	tools/eigen/blas/testing/sblat2.f	/^  140       CONTINUE$/;"	l	subroutine:SMAKE	file:
140	tools/eigen/blas/testing/sblat2.f	/^  140 CONTINUE$/;"	l	subroutine:SCHK1	file:
140	tools/eigen/blas/testing/sblat2.f	/^  140 CONTINUE$/;"	l	subroutine:SCHK4	file:
140	tools/eigen/blas/testing/sblat2.f	/^  140 CONTINUE$/;"	l	subroutine:SCHK6	file:
140	tools/eigen/blas/testing/sblat2.f	/^  140 INFOT = 1$/;"	l	subroutine:SCHKE	file:
140	tools/eigen/blas/testing/sblat3.f	/^  140       CALL SCHK1( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT3	file:
140	tools/eigen/blas/testing/sblat3.f	/^  140 CONTINUE$/;"	l	subroutine:SCHK3	file:
140	tools/eigen/blas/testing/sblat3.f	/^  140 CONTINUE$/;"	l	subroutine:SCHK5	file:
140	tools/eigen/blas/testing/sblat3.f	/^  140 CONTINUE$/;"	l	subroutine:SMMCH	file:
140	tools/eigen/blas/testing/zblat1.f	/^  140    CONTINUE$/;"	l	subroutine:CHECK1	file:
140	tools/eigen/blas/testing/zblat2.f	/^  140       CALL ZCHK1( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT2	file:
140	tools/eigen/blas/testing/zblat2.f	/^  140       CONTINUE$/;"	l	subroutine:ZMAKE	file:
140	tools/eigen/blas/testing/zblat2.f	/^  140 CONTINUE$/;"	l	subroutine:ZCHK1	file:
140	tools/eigen/blas/testing/zblat2.f	/^  140 CONTINUE$/;"	l	subroutine:ZCHK4	file:
140	tools/eigen/blas/testing/zblat2.f	/^  140 CONTINUE$/;"	l	subroutine:ZCHK6	file:
140	tools/eigen/blas/testing/zblat2.f	/^  140 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
140	tools/eigen/blas/testing/zblat3.f	/^  140                CONTINUE$/;"	l	subroutine:ZMMCH	file:
140	tools/eigen/blas/testing/zblat3.f	/^  140       CALL ZCHK1( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT3	file:
140	tools/eigen/blas/testing/zblat3.f	/^  140 CONTINUE$/;"	l	subroutine:ZCHK3	file:
140	tools/eigen/blas/testing/zblat3.f	/^  140 CONTINUE$/;"	l	subroutine:ZCHK5	file:
140	tools/eigen/lapack/clarfb.f	/^  140             CONTINUE$/;"	l	subroutine:CLARFB	file:
140	tools/eigen/lapack/dlarfb.f	/^  140             CONTINUE$/;"	l	subroutine:DLARFB	file:
140	tools/eigen/lapack/slarfb.f	/^  140             CONTINUE$/;"	l	subroutine:SLARFB	file:
140	tools/eigen/lapack/zlarfb.f	/^  140             CONTINUE$/;"	l	subroutine:ZLARFB	file:
150	tools/eigen/blas/testing/cblat2.f	/^  150       CALL CCHK2( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT2	file:
150	tools/eigen/blas/testing/cblat2.f	/^  150       CONTINUE$/;"	l	subroutine:CMAKE	file:
150	tools/eigen/blas/testing/cblat2.f	/^  150 CONTINUE$/;"	l	subroutine:CCHK4	file:
150	tools/eigen/blas/testing/cblat2.f	/^  150 CONTINUE$/;"	l	subroutine:CCHK6	file:
150	tools/eigen/blas/testing/cblat2.f	/^  150 INFOT = 1$/;"	l	subroutine:CCHKE	file:
150	tools/eigen/blas/testing/cblat3.f	/^  150             CONTINUE$/;"	l	subroutine:CMMCH	file:
150	tools/eigen/blas/testing/cblat3.f	/^  150       CALL CCHK2( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT3	file:
150	tools/eigen/blas/testing/cblat3.f	/^  150 CONTINUE$/;"	l	subroutine:CCHK3	file:
150	tools/eigen/blas/testing/cblat3.f	/^  150 CONTINUE$/;"	l	subroutine:CCHK5	file:
150	tools/eigen/blas/testing/dblat2.f	/^  150       CALL DCHK2( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT2	file:
150	tools/eigen/blas/testing/dblat2.f	/^  150       CONTINUE$/;"	l	subroutine:DMAKE	file:
150	tools/eigen/blas/testing/dblat2.f	/^  150 CONTINUE$/;"	l	subroutine:DCHK4	file:
150	tools/eigen/blas/testing/dblat2.f	/^  150 CONTINUE$/;"	l	subroutine:DCHK6	file:
150	tools/eigen/blas/testing/dblat2.f	/^  150 INFOT = 1$/;"	l	subroutine:DCHKE	file:
150	tools/eigen/blas/testing/dblat3.f	/^  150       CALL DCHK2( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT3	file:
150	tools/eigen/blas/testing/dblat3.f	/^  150 CONTINUE$/;"	l	subroutine:DCHK3	file:
150	tools/eigen/blas/testing/dblat3.f	/^  150 CONTINUE$/;"	l	subroutine:DCHK5	file:
150	tools/eigen/blas/testing/dblat3.f	/^  150 CONTINUE$/;"	l	subroutine:DMMCH	file:
150	tools/eigen/blas/testing/sblat2.f	/^  150       CALL SCHK2( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT2	file:
150	tools/eigen/blas/testing/sblat2.f	/^  150       CONTINUE$/;"	l	subroutine:SMAKE	file:
150	tools/eigen/blas/testing/sblat2.f	/^  150 CONTINUE$/;"	l	subroutine:SCHK4	file:
150	tools/eigen/blas/testing/sblat2.f	/^  150 CONTINUE$/;"	l	subroutine:SCHK6	file:
150	tools/eigen/blas/testing/sblat2.f	/^  150 INFOT = 1$/;"	l	subroutine:SCHKE	file:
150	tools/eigen/blas/testing/sblat3.f	/^  150       CALL SCHK2( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT3	file:
150	tools/eigen/blas/testing/sblat3.f	/^  150 CONTINUE$/;"	l	subroutine:SCHK3	file:
150	tools/eigen/blas/testing/sblat3.f	/^  150 CONTINUE$/;"	l	subroutine:SCHK5	file:
150	tools/eigen/blas/testing/sblat3.f	/^  150 CONTINUE$/;"	l	subroutine:SMMCH	file:
150	tools/eigen/blas/testing/zblat2.f	/^  150       CALL ZCHK2( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT2	file:
150	tools/eigen/blas/testing/zblat2.f	/^  150       CONTINUE$/;"	l	subroutine:ZMAKE	file:
150	tools/eigen/blas/testing/zblat2.f	/^  150 CONTINUE$/;"	l	subroutine:ZCHK4	file:
150	tools/eigen/blas/testing/zblat2.f	/^  150 CONTINUE$/;"	l	subroutine:ZCHK6	file:
150	tools/eigen/blas/testing/zblat2.f	/^  150 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
150	tools/eigen/blas/testing/zblat3.f	/^  150             CONTINUE$/;"	l	subroutine:ZMMCH	file:
150	tools/eigen/blas/testing/zblat3.f	/^  150       CALL ZCHK2( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT3	file:
150	tools/eigen/blas/testing/zblat3.f	/^  150 CONTINUE$/;"	l	subroutine:ZCHK3	file:
150	tools/eigen/blas/testing/zblat3.f	/^  150 CONTINUE$/;"	l	subroutine:ZCHK5	file:
150	tools/eigen/lapack/clarfb.f	/^  150          CONTINUE$/;"	l	subroutine:CLARFB	file:
150	tools/eigen/lapack/dlarfb.f	/^  150          CONTINUE$/;"	l	subroutine:DLARFB	file:
150	tools/eigen/lapack/slarfb.f	/^  150          CONTINUE$/;"	l	subroutine:SLARFB	file:
150	tools/eigen/lapack/zlarfb.f	/^  150          CONTINUE$/;"	l	subroutine:ZLARFB	file:
160	tools/eigen/blas/testing/cblat2.f	/^  160       CALL CCHK3( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT2	file:
160	tools/eigen/blas/testing/cblat2.f	/^  160       CONTINUE$/;"	l	subroutine:CMAKE	file:
160	tools/eigen/blas/testing/cblat2.f	/^  160 CONTINUE$/;"	l	subroutine:CCHK6	file:
160	tools/eigen/blas/testing/cblat2.f	/^  160 INFOT = 1$/;"	l	subroutine:CCHKE	file:
160	tools/eigen/blas/testing/cblat3.f	/^  160                CONTINUE$/;"	l	subroutine:CMMCH	file:
160	tools/eigen/blas/testing/cblat3.f	/^  160       CALL CCHK3( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT3	file:
160	tools/eigen/blas/testing/cblat3.f	/^  160 CONTINUE$/;"	l	subroutine:CCHK3	file:
160	tools/eigen/blas/testing/cblat3.f	/^  160 CONTINUE$/;"	l	subroutine:CCHK5	file:
160	tools/eigen/blas/testing/dblat1.f	/^  160 CONTINUE$/;"	l	subroutine:CHECK3	file:
160	tools/eigen/blas/testing/dblat2.f	/^  160       CALL DCHK3( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT2	file:
160	tools/eigen/blas/testing/dblat2.f	/^  160       CONTINUE$/;"	l	subroutine:DMAKE	file:
160	tools/eigen/blas/testing/dblat2.f	/^  160 CONTINUE$/;"	l	subroutine:DCHK6	file:
160	tools/eigen/blas/testing/dblat2.f	/^  160 INFOT = 1$/;"	l	subroutine:DCHKE	file:
160	tools/eigen/blas/testing/dblat3.f	/^  160       CALL DCHK3( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT3	file:
160	tools/eigen/blas/testing/dblat3.f	/^  160 CONTINUE$/;"	l	subroutine:DCHK3	file:
160	tools/eigen/blas/testing/dblat3.f	/^  160 CONTINUE$/;"	l	subroutine:DCHK5	file:
160	tools/eigen/blas/testing/sblat1.f	/^  160 CONTINUE$/;"	l	subroutine:CHECK3	file:
160	tools/eigen/blas/testing/sblat2.f	/^  160       CALL SCHK3( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT2	file:
160	tools/eigen/blas/testing/sblat2.f	/^  160       CONTINUE$/;"	l	subroutine:SMAKE	file:
160	tools/eigen/blas/testing/sblat2.f	/^  160 CONTINUE$/;"	l	subroutine:SCHK6	file:
160	tools/eigen/blas/testing/sblat2.f	/^  160 INFOT = 1$/;"	l	subroutine:SCHKE	file:
160	tools/eigen/blas/testing/sblat3.f	/^  160       CALL SCHK3( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT3	file:
160	tools/eigen/blas/testing/sblat3.f	/^  160 CONTINUE$/;"	l	subroutine:SCHK3	file:
160	tools/eigen/blas/testing/sblat3.f	/^  160 CONTINUE$/;"	l	subroutine:SCHK5	file:
160	tools/eigen/blas/testing/zblat2.f	/^  160       CALL ZCHK3( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT2	file:
160	tools/eigen/blas/testing/zblat2.f	/^  160       CONTINUE$/;"	l	subroutine:ZMAKE	file:
160	tools/eigen/blas/testing/zblat2.f	/^  160 CONTINUE$/;"	l	subroutine:ZCHK6	file:
160	tools/eigen/blas/testing/zblat2.f	/^  160 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
160	tools/eigen/blas/testing/zblat3.f	/^  160                CONTINUE$/;"	l	subroutine:ZMMCH	file:
160	tools/eigen/blas/testing/zblat3.f	/^  160       CALL ZCHK3( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT3	file:
160	tools/eigen/blas/testing/zblat3.f	/^  160 CONTINUE$/;"	l	subroutine:ZCHK3	file:
160	tools/eigen/blas/testing/zblat3.f	/^  160 CONTINUE$/;"	l	subroutine:ZCHK5	file:
160	tools/eigen/lapack/clarfb.f	/^  160          CONTINUE$/;"	l	subroutine:CLARFB	file:
160	tools/eigen/lapack/dlarfb.f	/^  160          CONTINUE$/;"	l	subroutine:DLARFB	file:
160	tools/eigen/lapack/slarfb.f	/^  160          CONTINUE$/;"	l	subroutine:SLARFB	file:
160	tools/eigen/lapack/zlarfb.f	/^  160          CONTINUE$/;"	l	subroutine:ZLARFB	file:
170	tools/eigen/blas/testing/cblat2.f	/^  170       CALL CCHK4( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT2	file:
170	tools/eigen/blas/testing/cblat2.f	/^  170    CONTINUE$/;"	l	subroutine:CMAKE	file:
170	tools/eigen/blas/testing/cblat2.f	/^  170 CONTINUE$/;"	l	subroutine:CCHK6	file:
170	tools/eigen/blas/testing/cblat2.f	/^  170 INFOT = 1$/;"	l	subroutine:CCHKE	file:
170	tools/eigen/blas/testing/cblat3.f	/^  170             CONTINUE$/;"	l	subroutine:CMMCH	file:
170	tools/eigen/blas/testing/cblat3.f	/^  170       CALL CCHK4( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT3	file:
170	tools/eigen/blas/testing/dblat2.f	/^  170       CALL DCHK4( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT2	file:
170	tools/eigen/blas/testing/dblat2.f	/^  170    CONTINUE$/;"	l	subroutine:DMAKE	file:
170	tools/eigen/blas/testing/dblat2.f	/^  170 CONTINUE$/;"	l	subroutine:DCHK6	file:
170	tools/eigen/blas/testing/dblat2.f	/^  170 IF( OK )THEN$/;"	l	subroutine:DCHKE	file:
170	tools/eigen/blas/testing/dblat3.f	/^  170       CALL DCHK4( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT3	file:
170	tools/eigen/blas/testing/sblat2.f	/^  170       CALL SCHK4( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT2	file:
170	tools/eigen/blas/testing/sblat2.f	/^  170    CONTINUE$/;"	l	subroutine:SMAKE	file:
170	tools/eigen/blas/testing/sblat2.f	/^  170 CONTINUE$/;"	l	subroutine:SCHK6	file:
170	tools/eigen/blas/testing/sblat2.f	/^  170 IF( OK )THEN$/;"	l	subroutine:SCHKE	file:
170	tools/eigen/blas/testing/sblat3.f	/^  170       CALL SCHK4( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT3	file:
170	tools/eigen/blas/testing/zblat2.f	/^  170       CALL ZCHK4( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT2	file:
170	tools/eigen/blas/testing/zblat2.f	/^  170    CONTINUE$/;"	l	subroutine:ZMAKE	file:
170	tools/eigen/blas/testing/zblat2.f	/^  170 CONTINUE$/;"	l	subroutine:ZCHK6	file:
170	tools/eigen/blas/testing/zblat2.f	/^  170 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
170	tools/eigen/blas/testing/zblat3.f	/^  170             CONTINUE$/;"	l	subroutine:ZMMCH	file:
170	tools/eigen/blas/testing/zblat3.f	/^  170       CALL ZCHK4( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT3	file:
170	tools/eigen/lapack/clarfb.f	/^  170             CONTINUE$/;"	l	subroutine:CLARFB	file:
170	tools/eigen/lapack/dlarfb.f	/^  170             CONTINUE$/;"	l	subroutine:DLARFB	file:
170	tools/eigen/lapack/slarfb.f	/^  170             CONTINUE$/;"	l	subroutine:SLARFB	file:
170	tools/eigen/lapack/zlarfb.f	/^  170             CONTINUE$/;"	l	subroutine:ZLARFB	file:
180	tools/eigen/blas/testing/cblat2.f	/^  180       CALL CCHK5( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT2	file:
180	tools/eigen/blas/testing/cblat2.f	/^  180       CONTINUE$/;"	l	subroutine:CMAKE	file:
180	tools/eigen/blas/testing/cblat2.f	/^  180 IF( OK )THEN$/;"	l	subroutine:CCHKE	file:
180	tools/eigen/blas/testing/cblat3.f	/^  180                CONTINUE$/;"	l	subroutine:CMMCH	file:
180	tools/eigen/blas/testing/cblat3.f	/^  180       CALL CCHK5( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT3	file:
180	tools/eigen/blas/testing/dblat1.f	/^  180    CONTINUE$/;"	l	subroutine:CHECK3	file:
180	tools/eigen/blas/testing/dblat2.f	/^  180       CALL DCHK5( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT2	file:
180	tools/eigen/blas/testing/dblat2.f	/^  180       CONTINUE$/;"	l	subroutine:DMAKE	file:
180	tools/eigen/blas/testing/dblat3.f	/^  180       CALL DCHK5( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT3	file:
180	tools/eigen/blas/testing/sblat1.f	/^  180    CONTINUE$/;"	l	subroutine:CHECK3	file:
180	tools/eigen/blas/testing/sblat2.f	/^  180       CALL SCHK5( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT2	file:
180	tools/eigen/blas/testing/sblat2.f	/^  180       CONTINUE$/;"	l	subroutine:SMAKE	file:
180	tools/eigen/blas/testing/sblat3.f	/^  180       CALL SCHK5( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT3	file:
180	tools/eigen/blas/testing/zblat2.f	/^  180       CALL ZCHK5( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT2	file:
180	tools/eigen/blas/testing/zblat2.f	/^  180       CONTINUE$/;"	l	subroutine:ZMAKE	file:
180	tools/eigen/blas/testing/zblat2.f	/^  180 IF( OK )THEN$/;"	l	subroutine:ZCHKE	file:
180	tools/eigen/blas/testing/zblat3.f	/^  180                CONTINUE$/;"	l	subroutine:ZMMCH	file:
180	tools/eigen/blas/testing/zblat3.f	/^  180       CALL ZCHK5( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT3	file:
180	tools/eigen/lapack/clarfb.f	/^  180          CONTINUE$/;"	l	subroutine:CLARFB	file:
180	tools/eigen/lapack/dlarfb.f	/^  180          CONTINUE$/;"	l	subroutine:DLARFB	file:
180	tools/eigen/lapack/slarfb.f	/^  180          CONTINUE$/;"	l	subroutine:SLARFB	file:
180	tools/eigen/lapack/zlarfb.f	/^  180          CONTINUE$/;"	l	subroutine:ZLARFB	file:
190	tools/eigen/blas/testing/cblat2.f	/^  190       CALL CCHK6( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:CBLAT2	file:
190	tools/eigen/blas/testing/cblat2.f	/^  190    CONTINUE$/;"	l	subroutine:CMAKE	file:
190	tools/eigen/blas/testing/cblat3.f	/^  190             CONTINUE$/;"	l	subroutine:CMMCH	file:
190	tools/eigen/blas/testing/cblat3.f	/^  190       IF( FATAL.AND.SFATAL )$/;"	l	program:CBLAT3	file:
190	tools/eigen/blas/testing/dblat2.f	/^  190       CALL DCHK6( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:DBLAT2	file:
190	tools/eigen/blas/testing/dblat2.f	/^  190    CONTINUE$/;"	l	subroutine:DMAKE	file:
190	tools/eigen/blas/testing/dblat3.f	/^  190       IF( FATAL.AND.SFATAL )$/;"	l	program:DBLAT3	file:
190	tools/eigen/blas/testing/sblat2.f	/^  190       CALL SCHK6( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:SBLAT2	file:
190	tools/eigen/blas/testing/sblat2.f	/^  190    CONTINUE$/;"	l	subroutine:SMAKE	file:
190	tools/eigen/blas/testing/sblat3.f	/^  190       IF( FATAL.AND.SFATAL )$/;"	l	program:SBLAT3	file:
190	tools/eigen/blas/testing/zblat2.f	/^  190       CALL ZCHK6( SNAMES( ISNUM ), EPS, THRESH, NOUT, NTRA, TRACE,$/;"	l	program:ZBLAT2	file:
190	tools/eigen/blas/testing/zblat2.f	/^  190    CONTINUE$/;"	l	subroutine:ZMAKE	file:
190	tools/eigen/blas/testing/zblat3.f	/^  190             CONTINUE$/;"	l	subroutine:ZMMCH	file:
190	tools/eigen/blas/testing/zblat3.f	/^  190       IF( FATAL.AND.SFATAL )$/;"	l	program:ZBLAT3	file:
190	tools/eigen/lapack/clarfb.f	/^  190          CONTINUE$/;"	l	subroutine:CLARFB	file:
190	tools/eigen/lapack/dlarfb.f	/^  190          CONTINUE$/;"	l	subroutine:DLARFB	file:
190	tools/eigen/lapack/slarfb.f	/^  190          CONTINUE$/;"	l	subroutine:SLARFB	file:
190	tools/eigen/lapack/zlarfb.f	/^  190          CONTINUE$/;"	l	subroutine:ZLARFB	file:
20	tools/eigen/blas/testing/cblat1.f	/^   20       CONTINUE$/;"	l	subroutine:CHECK1	file:
20	tools/eigen/blas/testing/cblat1.f	/^   20       CONTINUE$/;"	l	subroutine:CHECK2	file:
20	tools/eigen/blas/testing/cblat1.f	/^   20    WRITE (NOUT,99997) ICASE, N, INCX, INCY, MODE, I, SCOMP(I),$/;"	l	subroutine:STEST	file:
20	tools/eigen/blas/testing/cblat1.f	/^   20 CONTINUE$/;"	l	program:CBLAT1	file:
20	tools/eigen/blas/testing/cblat1.f	/^   20 CONTINUE$/;"	l	subroutine:CTEST	file:
20	tools/eigen/blas/testing/cblat1.f	/^   20 ID = ICOMP - ITRUE$/;"	l	subroutine:ITEST1	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20                         CONTINUE$/;"	l	subroutine:CCHK1	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20                      CONTINUE$/;"	l	subroutine:CCHK2	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20                   CONTINUE$/;"	l	subroutine:CCHK3	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20                CONTINUE$/;"	l	subroutine:CCHK4	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20                CONTINUE$/;"	l	subroutine:CCHK6	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20             CONTINUE$/;"	l	subroutine:CCHK5	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20       CONTINUE$/;"	l	subroutine:CMVCH	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20    CONTINUE$/;"	l	function:LCERES	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20 CONTINUE$/;"	l	function:LCE	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20 CONTINUE$/;"	l	program:CBLAT2	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20 CONTINUE$/;"	l	subroutine:CMAKE	file:
20	tools/eigen/blas/testing/cblat2.f	/^   20 INFOT = 1$/;"	l	subroutine:CCHKE	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20                      CONTINUE$/;"	l	subroutine:CCHK1	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:CCHK2	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:CCHK4	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:CCHK5	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20          CONTINUE$/;"	l	subroutine:CMMCH	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20    CONTINUE$/;"	l	function:LCERES	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20 CONTINUE$/;"	l	function:LCE	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20 CONTINUE$/;"	l	program:CBLAT3	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20 CONTINUE$/;"	l	subroutine:CCHK3	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20 CONTINUE$/;"	l	subroutine:CMAKE	file:
20	tools/eigen/blas/testing/cblat3.f	/^   20 INFOT = 1$/;"	l	subroutine:CCHKE	file:
20	tools/eigen/blas/testing/dblat1.f	/^   20          CONTINUE$/;"	l	subroutine:CHECK3	file:
20	tools/eigen/blas/testing/dblat1.f	/^   20       CONTINUE$/;"	l	subroutine:CHECK1	file:
20	tools/eigen/blas/testing/dblat1.f	/^   20       CONTINUE$/;"	l	subroutine:CHECK2	file:
20	tools/eigen/blas/testing/dblat1.f	/^   20    WRITE (NOUT,99997) ICASE, N, INCX, INCY, I, SCOMP(I),$/;"	l	subroutine:STEST	file:
20	tools/eigen/blas/testing/dblat1.f	/^   20    WRITE (NOUT,99997) ICASE, N, INCX, INCY, SCOMP,$/;"	l	subroutine:TESTDSDOT	file:
20	tools/eigen/blas/testing/dblat1.f	/^   20 CONTINUE$/;"	l	program:DBLAT1	file:
20	tools/eigen/blas/testing/dblat1.f	/^   20 CONTINUE$/;"	l	subroutine:CHECK0	file:
20	tools/eigen/blas/testing/dblat1.f	/^   20 ID = ICOMP - ITRUE$/;"	l	subroutine:ITEST1	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20                         CONTINUE$/;"	l	subroutine:DCHK1	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20                      CONTINUE$/;"	l	subroutine:DCHK2	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20                   CONTINUE$/;"	l	subroutine:DCHK3	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20                CONTINUE$/;"	l	subroutine:DCHK4	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20                CONTINUE$/;"	l	subroutine:DCHK6	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20             CONTINUE$/;"	l	subroutine:DCHK5	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20       CONTINUE$/;"	l	subroutine:DMVCH	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20    CONTINUE$/;"	l	function:LDERES	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20 CONTINUE$/;"	l	function:LDE	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20 CONTINUE$/;"	l	program:DBLAT2	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20 CONTINUE$/;"	l	subroutine:DMAKE	file:
20	tools/eigen/blas/testing/dblat2.f	/^   20 INFOT = 1$/;"	l	subroutine:DCHKE	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20                      CONTINUE$/;"	l	subroutine:DCHK1	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:DCHK2	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:DCHK4	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:DCHK5	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20          CONTINUE$/;"	l	subroutine:DMMCH	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20    CONTINUE$/;"	l	function:LDERES	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20 CONTINUE$/;"	l	function:LDE	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20 CONTINUE$/;"	l	program:DBLAT3	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20 CONTINUE$/;"	l	subroutine:DCHK3	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20 CONTINUE$/;"	l	subroutine:DMAKE	file:
20	tools/eigen/blas/testing/dblat3.f	/^   20 INFOT = 1$/;"	l	subroutine:DCHKE	file:
20	tools/eigen/blas/testing/sblat1.f	/^   20          CONTINUE$/;"	l	subroutine:CHECK3	file:
20	tools/eigen/blas/testing/sblat1.f	/^   20       CONTINUE$/;"	l	subroutine:CHECK1	file:
20	tools/eigen/blas/testing/sblat1.f	/^   20       CONTINUE$/;"	l	subroutine:CHECK2	file:
20	tools/eigen/blas/testing/sblat1.f	/^   20    WRITE (NOUT,99997) ICASE, N, INCX, INCY, I, SCOMP(I),$/;"	l	subroutine:STEST	file:
20	tools/eigen/blas/testing/sblat1.f	/^   20 CONTINUE$/;"	l	program:SBLAT1	file:
20	tools/eigen/blas/testing/sblat1.f	/^   20 CONTINUE$/;"	l	subroutine:CHECK0	file:
20	tools/eigen/blas/testing/sblat1.f	/^   20 ID = ICOMP - ITRUE$/;"	l	subroutine:ITEST1	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20                         CONTINUE$/;"	l	subroutine:SCHK1	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20                      CONTINUE$/;"	l	subroutine:SCHK2	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20                   CONTINUE$/;"	l	subroutine:SCHK3	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20                CONTINUE$/;"	l	subroutine:SCHK4	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20                CONTINUE$/;"	l	subroutine:SCHK6	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20             CONTINUE$/;"	l	subroutine:SCHK5	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20       CONTINUE$/;"	l	subroutine:SMVCH	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20    CONTINUE$/;"	l	function:LSERES	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20 CONTINUE$/;"	l	function:LSE	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20 CONTINUE$/;"	l	program:SBLAT2	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20 CONTINUE$/;"	l	subroutine:SMAKE	file:
20	tools/eigen/blas/testing/sblat2.f	/^   20 INFOT = 1$/;"	l	subroutine:SCHKE	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20                      CONTINUE$/;"	l	subroutine:SCHK1	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:SCHK2	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:SCHK4	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:SCHK5	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20          CONTINUE$/;"	l	subroutine:SMMCH	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20    CONTINUE$/;"	l	function:LSERES	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20 CONTINUE$/;"	l	function:LSE	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20 CONTINUE$/;"	l	program:SBLAT3	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20 CONTINUE$/;"	l	subroutine:SCHK3	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20 CONTINUE$/;"	l	subroutine:SMAKE	file:
20	tools/eigen/blas/testing/sblat3.f	/^   20 INFOT = 1$/;"	l	subroutine:SCHKE	file:
20	tools/eigen/blas/testing/zblat1.f	/^   20       CONTINUE$/;"	l	subroutine:CHECK1	file:
20	tools/eigen/blas/testing/zblat1.f	/^   20       CONTINUE$/;"	l	subroutine:CHECK2	file:
20	tools/eigen/blas/testing/zblat1.f	/^   20    WRITE (NOUT,99997) ICASE, N, INCX, INCY, MODE, I, SCOMP(I),$/;"	l	subroutine:STEST	file:
20	tools/eigen/blas/testing/zblat1.f	/^   20 CONTINUE$/;"	l	program:ZBLAT1	file:
20	tools/eigen/blas/testing/zblat1.f	/^   20 CONTINUE$/;"	l	subroutine:CTEST	file:
20	tools/eigen/blas/testing/zblat1.f	/^   20 ID = ICOMP - ITRUE$/;"	l	subroutine:ITEST1	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20                         CONTINUE$/;"	l	subroutine:ZCHK1	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20                      CONTINUE$/;"	l	subroutine:ZCHK2	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20                   CONTINUE$/;"	l	subroutine:ZCHK3	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20                CONTINUE$/;"	l	subroutine:ZCHK4	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20                CONTINUE$/;"	l	subroutine:ZCHK6	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20             CONTINUE$/;"	l	subroutine:ZCHK5	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20       CONTINUE$/;"	l	subroutine:ZMVCH	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20    CONTINUE$/;"	l	function:LZERES	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20 CONTINUE$/;"	l	function:LZE	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20 CONTINUE$/;"	l	program:ZBLAT2	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20 CONTINUE$/;"	l	subroutine:ZMAKE	file:
20	tools/eigen/blas/testing/zblat2.f	/^   20 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20                      CONTINUE$/;"	l	subroutine:ZCHK1	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:ZCHK2	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:ZCHK4	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20                   CONTINUE$/;"	l	subroutine:ZCHK5	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20          CONTINUE$/;"	l	subroutine:ZMMCH	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20    CONTINUE$/;"	l	function:LZERES	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20 CONTINUE$/;"	l	function:LZE	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20 CONTINUE$/;"	l	program:ZBLAT3	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20 CONTINUE$/;"	l	subroutine:ZCHK3	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20 CONTINUE$/;"	l	subroutine:ZMAKE	file:
20	tools/eigen/blas/testing/zblat3.f	/^   20 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
20	tools/eigen/lapack/clacgv.f	/^   20    CONTINUE$/;"	l	subroutine:CLACGV	file:
20	tools/eigen/lapack/clarfb.f	/^   20             CONTINUE$/;"	l	subroutine:CLARFB	file:
20	tools/eigen/lapack/clarfg.f	/^ 20      CONTINUE$/;"	l	subroutine:CLARFG	file:
20	tools/eigen/lapack/dlarfb.f	/^   20             CONTINUE$/;"	l	subroutine:DLARFB	file:
20	tools/eigen/lapack/dlarfg.f	/^ 20      CONTINUE$/;"	l	subroutine:DLARFG	file:
20	tools/eigen/lapack/slarfb.f	/^   20             CONTINUE$/;"	l	subroutine:SLARFB	file:
20	tools/eigen/lapack/slarfg.f	/^ 20      CONTINUE$/;"	l	subroutine:SLARFG	file:
20	tools/eigen/lapack/zlacgv.f	/^   20    CONTINUE$/;"	l	subroutine:ZLACGV	file:
20	tools/eigen/lapack/zlarfb.f	/^   20             CONTINUE$/;"	l	subroutine:ZLARFB	file:
20	tools/eigen/lapack/zlarfg.f	/^ 20      CONTINUE$/;"	l	subroutine:ZLARFG	file:
200	tools/eigen/blas/testing/cblat2.f	/^  200       IF( FATAL.AND.SFATAL )$/;"	l	program:CBLAT2	file:
200	tools/eigen/blas/testing/cblat3.f	/^  200    CONTINUE$/;"	l	subroutine:CMMCH	file:
200	tools/eigen/blas/testing/cblat3.f	/^  200 CONTINUE$/;"	l	program:CBLAT3	file:
200	tools/eigen/blas/testing/dblat1.f	/^  200 CONTINUE$/;"	l	subroutine:CHECK3	file:
200	tools/eigen/blas/testing/dblat2.f	/^  200       IF( FATAL.AND.SFATAL )$/;"	l	program:DBLAT2	file:
200	tools/eigen/blas/testing/dblat3.f	/^  200 CONTINUE$/;"	l	program:DBLAT3	file:
200	tools/eigen/blas/testing/sblat1.f	/^  200 CONTINUE$/;"	l	subroutine:CHECK3	file:
200	tools/eigen/blas/testing/sblat2.f	/^  200       IF( FATAL.AND.SFATAL )$/;"	l	program:SBLAT2	file:
200	tools/eigen/blas/testing/sblat3.f	/^  200 CONTINUE$/;"	l	program:SBLAT3	file:
200	tools/eigen/blas/testing/zblat2.f	/^  200       IF( FATAL.AND.SFATAL )$/;"	l	program:ZBLAT2	file:
200	tools/eigen/blas/testing/zblat3.f	/^  200    CONTINUE$/;"	l	subroutine:ZMMCH	file:
200	tools/eigen/blas/testing/zblat3.f	/^  200 CONTINUE$/;"	l	program:ZBLAT3	file:
200	tools/eigen/lapack/clarfb.f	/^  200             CONTINUE$/;"	l	subroutine:CLARFB	file:
200	tools/eigen/lapack/dlarfb.f	/^  200             CONTINUE$/;"	l	subroutine:DLARFB	file:
200	tools/eigen/lapack/slarfb.f	/^  200             CONTINUE$/;"	l	subroutine:SLARFB	file:
200	tools/eigen/lapack/zlarfb.f	/^  200             CONTINUE$/;"	l	subroutine:ZLARFB	file:
210	tools/eigen/blas/testing/cblat2.f	/^  210 CONTINUE$/;"	l	program:CBLAT2	file:
210	tools/eigen/blas/testing/cblat3.f	/^  210    CONTINUE$/;"	l	subroutine:CMMCH	file:
210	tools/eigen/blas/testing/cblat3.f	/^  210 CONTINUE$/;"	l	program:CBLAT3	file:
210	tools/eigen/blas/testing/dblat2.f	/^  210 CONTINUE$/;"	l	program:DBLAT2	file:
210	tools/eigen/blas/testing/dblat3.f	/^  210 CONTINUE$/;"	l	program:DBLAT3	file:
210	tools/eigen/blas/testing/sblat2.f	/^  210 CONTINUE$/;"	l	program:SBLAT2	file:
210	tools/eigen/blas/testing/sblat3.f	/^  210 CONTINUE$/;"	l	program:SBLAT3	file:
210	tools/eigen/blas/testing/zblat2.f	/^  210 CONTINUE$/;"	l	program:ZBLAT2	file:
210	tools/eigen/blas/testing/zblat3.f	/^  210    CONTINUE$/;"	l	subroutine:ZMMCH	file:
210	tools/eigen/blas/testing/zblat3.f	/^  210 CONTINUE$/;"	l	program:ZBLAT3	file:
210	tools/eigen/lapack/clarfb.f	/^  210          CONTINUE$/;"	l	subroutine:CLARFB	file:
210	tools/eigen/lapack/dlarfb.f	/^  210          CONTINUE$/;"	l	subroutine:DLARFB	file:
210	tools/eigen/lapack/slarfb.f	/^  210          CONTINUE$/;"	l	subroutine:SLARFB	file:
210	tools/eigen/lapack/zlarfb.f	/^  210          CONTINUE$/;"	l	subroutine:ZLARFB	file:
220	tools/eigen/blas/testing/cblat2.f	/^  220 CONTINUE$/;"	l	program:CBLAT2	file:
220	tools/eigen/blas/testing/cblat3.f	/^  220 CONTINUE$/;"	l	program:CBLAT3	file:
220	tools/eigen/blas/testing/cblat3.f	/^  220 CONTINUE$/;"	l	subroutine:CMMCH	file:
220	tools/eigen/blas/testing/dblat2.f	/^  220 CONTINUE$/;"	l	program:DBLAT2	file:
220	tools/eigen/blas/testing/dblat3.f	/^  220 CONTINUE$/;"	l	program:DBLAT3	file:
220	tools/eigen/blas/testing/sblat2.f	/^  220 CONTINUE$/;"	l	program:SBLAT2	file:
220	tools/eigen/blas/testing/sblat3.f	/^  220 CONTINUE$/;"	l	program:SBLAT3	file:
220	tools/eigen/blas/testing/zblat2.f	/^  220 CONTINUE$/;"	l	program:ZBLAT2	file:
220	tools/eigen/blas/testing/zblat3.f	/^  220 CONTINUE$/;"	l	program:ZBLAT3	file:
220	tools/eigen/blas/testing/zblat3.f	/^  220 CONTINUE$/;"	l	subroutine:ZMMCH	file:
220	tools/eigen/lapack/clarfb.f	/^  220          CONTINUE$/;"	l	subroutine:CLARFB	file:
220	tools/eigen/lapack/dlarfb.f	/^  220          CONTINUE$/;"	l	subroutine:DLARFB	file:
220	tools/eigen/lapack/slarfb.f	/^  220          CONTINUE$/;"	l	subroutine:SLARFB	file:
220	tools/eigen/lapack/zlarfb.f	/^  220          CONTINUE$/;"	l	subroutine:ZLARFB	file:
230	tools/eigen/blas/testing/cblat2.f	/^  230 CONTINUE$/;"	l	program:CBLAT2	file:
230	tools/eigen/blas/testing/cblat3.f	/^  230 CONTINUE$/;"	l	program:CBLAT3	file:
230	tools/eigen/blas/testing/cblat3.f	/^  230 FATAL = .TRUE.$/;"	l	subroutine:CMMCH	file:
230	tools/eigen/blas/testing/dblat2.f	/^  230 CONTINUE$/;"	l	program:DBLAT2	file:
230	tools/eigen/blas/testing/dblat3.f	/^  230 CONTINUE$/;"	l	program:DBLAT3	file:
230	tools/eigen/blas/testing/sblat2.f	/^  230 CONTINUE$/;"	l	program:SBLAT2	file:
230	tools/eigen/blas/testing/sblat3.f	/^  230 CONTINUE$/;"	l	program:SBLAT3	file:
230	tools/eigen/blas/testing/zblat2.f	/^  230 CONTINUE$/;"	l	program:ZBLAT2	file:
230	tools/eigen/blas/testing/zblat3.f	/^  230 CONTINUE$/;"	l	program:ZBLAT3	file:
230	tools/eigen/blas/testing/zblat3.f	/^  230 FATAL = .TRUE.$/;"	l	subroutine:ZMMCH	file:
230	tools/eigen/lapack/clarfb.f	/^  230             CONTINUE$/;"	l	subroutine:CLARFB	file:
230	tools/eigen/lapack/dlarfb.f	/^  230             CONTINUE$/;"	l	subroutine:DLARFB	file:
230	tools/eigen/lapack/slarfb.f	/^  230             CONTINUE$/;"	l	subroutine:SLARFB	file:
230	tools/eigen/lapack/zlarfb.f	/^  230             CONTINUE$/;"	l	subroutine:ZLARFB	file:
240	tools/eigen/blas/testing/cblat2.f	/^  240 CONTINUE$/;"	l	program:CBLAT2	file:
240	tools/eigen/blas/testing/cblat3.f	/^  240 CONTINUE$/;"	l	subroutine:CMMCH	file:
240	tools/eigen/blas/testing/dblat2.f	/^  240 CONTINUE$/;"	l	program:DBLAT2	file:
240	tools/eigen/blas/testing/sblat2.f	/^  240 CONTINUE$/;"	l	program:SBLAT2	file:
240	tools/eigen/blas/testing/zblat2.f	/^  240 CONTINUE$/;"	l	program:ZBLAT2	file:
240	tools/eigen/blas/testing/zblat3.f	/^  240 CONTINUE$/;"	l	subroutine:ZMMCH	file:
240	tools/eigen/lapack/clarfb.f	/^  240          CONTINUE$/;"	l	subroutine:CLARFB	file:
240	tools/eigen/lapack/dlarfb.f	/^  240          CONTINUE$/;"	l	subroutine:DLARFB	file:
240	tools/eigen/lapack/slarfb.f	/^  240          CONTINUE$/;"	l	subroutine:SLARFB	file:
240	tools/eigen/lapack/zlarfb.f	/^  240          CONTINUE$/;"	l	subroutine:ZLARFB	file:
250	tools/eigen/blas/testing/cblat3.f	/^  250 CONTINUE$/;"	l	subroutine:CMMCH	file:
250	tools/eigen/blas/testing/zblat3.f	/^  250 CONTINUE$/;"	l	subroutine:ZMMCH	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30                         CONTINUE$/;"	l	subroutine:CCHK1	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30                      CONTINUE$/;"	l	subroutine:CCHK2	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30                   CONTINUE$/;"	l	subroutine:CCHK3	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30                CONTINUE$/;"	l	subroutine:CCHK4	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30                CONTINUE$/;"	l	subroutine:CCHK6	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30             CONTINUE$/;"	l	subroutine:CCHK5	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30       CONTINUE$/;"	l	function:LCERES	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30       CONTINUE$/;"	l	subroutine:CMAKE	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30       CONTINUE$/;"	l	subroutine:CMVCH	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30 CONTINUE$/;"	l	program:CBLAT2	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30 INFOT = 1$/;"	l	subroutine:CCHKE	file:
30	tools/eigen/blas/testing/cblat2.f	/^   30 RETURN$/;"	l	function:LCE	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30                      CONTINUE$/;"	l	subroutine:CCHK1	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30                      CONTINUE$/;"	l	subroutine:CCHK3	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:CCHK2	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:CCHK4	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:CCHK5	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30       CONTINUE$/;"	l	function:LCERES	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30       CONTINUE$/;"	l	subroutine:CMAKE	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30       CONTINUE$/;"	l	subroutine:CMMCH	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30 INFOT = 1$/;"	l	subroutine:CCHKE	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30 READ( NIN, FMT = 9988, END = 60 )SNAMET, LTESTT$/;"	l	program:CBLAT3	file:
30	tools/eigen/blas/testing/cblat3.f	/^   30 RETURN$/;"	l	function:LCE	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30                         CONTINUE$/;"	l	subroutine:DCHK1	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30                      CONTINUE$/;"	l	subroutine:DCHK2	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30                   CONTINUE$/;"	l	subroutine:DCHK3	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30                CONTINUE$/;"	l	subroutine:DCHK4	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30                CONTINUE$/;"	l	subroutine:DCHK6	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30             CONTINUE$/;"	l	subroutine:DCHK5	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30       CONTINUE$/;"	l	function:LDERES	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30       CONTINUE$/;"	l	subroutine:DMAKE	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30 CONTINUE$/;"	l	program:DBLAT2	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30 CONTINUE$/;"	l	subroutine:DMVCH	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30 INFOT = 1$/;"	l	subroutine:DCHKE	file:
30	tools/eigen/blas/testing/dblat2.f	/^   30 RETURN$/;"	l	function:LDE	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30                      CONTINUE$/;"	l	subroutine:DCHK1	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30                      CONTINUE$/;"	l	subroutine:DCHK3	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:DCHK2	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:DCHK4	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:DCHK5	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30       CONTINUE$/;"	l	function:LDERES	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30       CONTINUE$/;"	l	subroutine:DMAKE	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30       CONTINUE$/;"	l	subroutine:DMMCH	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30 INFOT = 1$/;"	l	subroutine:DCHKE	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30 READ( NIN, FMT = 9988, END = 60 )SNAMET, LTESTT$/;"	l	program:DBLAT3	file:
30	tools/eigen/blas/testing/dblat3.f	/^   30 RETURN$/;"	l	function:LDE	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30                         CONTINUE$/;"	l	subroutine:SCHK1	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30                      CONTINUE$/;"	l	subroutine:SCHK2	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30                   CONTINUE$/;"	l	subroutine:SCHK3	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30                CONTINUE$/;"	l	subroutine:SCHK4	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30                CONTINUE$/;"	l	subroutine:SCHK6	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30             CONTINUE$/;"	l	subroutine:SCHK5	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30       CONTINUE$/;"	l	function:LSERES	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30       CONTINUE$/;"	l	subroutine:SMAKE	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30 CONTINUE$/;"	l	program:SBLAT2	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30 CONTINUE$/;"	l	subroutine:SMVCH	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30 INFOT = 1$/;"	l	subroutine:SCHKE	file:
30	tools/eigen/blas/testing/sblat2.f	/^   30 RETURN$/;"	l	function:LSE	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30                      CONTINUE$/;"	l	subroutine:SCHK1	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30                      CONTINUE$/;"	l	subroutine:SCHK3	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:SCHK2	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:SCHK4	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:SCHK5	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30       CONTINUE$/;"	l	function:LSERES	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30       CONTINUE$/;"	l	subroutine:SMAKE	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30       CONTINUE$/;"	l	subroutine:SMMCH	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30 INFOT = 1$/;"	l	subroutine:SCHKE	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30 READ( NIN, FMT = 9988, END = 60 )SNAMET, LTESTT$/;"	l	program:SBLAT3	file:
30	tools/eigen/blas/testing/sblat3.f	/^   30 RETURN$/;"	l	function:LSE	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30                         CONTINUE$/;"	l	subroutine:ZCHK1	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30                      CONTINUE$/;"	l	subroutine:ZCHK2	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30                   CONTINUE$/;"	l	subroutine:ZCHK3	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30                CONTINUE$/;"	l	subroutine:ZCHK4	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30                CONTINUE$/;"	l	subroutine:ZCHK6	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30             CONTINUE$/;"	l	subroutine:ZCHK5	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30       CONTINUE$/;"	l	function:LZERES	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30       CONTINUE$/;"	l	subroutine:ZMAKE	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30       CONTINUE$/;"	l	subroutine:ZMVCH	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30 CONTINUE$/;"	l	program:ZBLAT2	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
30	tools/eigen/blas/testing/zblat2.f	/^   30 RETURN$/;"	l	function:LZE	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30                      CONTINUE$/;"	l	subroutine:ZCHK1	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30                      CONTINUE$/;"	l	subroutine:ZCHK3	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:ZCHK2	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:ZCHK4	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30                   CONTINUE$/;"	l	subroutine:ZCHK5	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30       CONTINUE$/;"	l	function:LZERES	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30       CONTINUE$/;"	l	subroutine:ZMAKE	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30       CONTINUE$/;"	l	subroutine:ZMMCH	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30 READ( NIN, FMT = 9988, END = 60 )SNAMET, LTESTT$/;"	l	program:ZBLAT3	file:
30	tools/eigen/blas/testing/zblat3.f	/^   30 RETURN$/;"	l	function:LZE	file:
30	tools/eigen/lapack/clarfb.f	/^   30          CONTINUE$/;"	l	subroutine:CLARFB	file:
30	tools/eigen/lapack/dlarfb.f	/^   30          CONTINUE$/;"	l	subroutine:DLARFB	file:
30	tools/eigen/lapack/slarfb.f	/^   30          CONTINUE$/;"	l	subroutine:SLARFB	file:
30	tools/eigen/lapack/zlarfb.f	/^   30          CONTINUE$/;"	l	subroutine:ZLARFB	file:
40	tools/eigen/blas/testing/cblat1.f	/^   40    CONTINUE$/;"	l	subroutine:CHECK1	file:
40	tools/eigen/blas/testing/cblat1.f	/^   40    CONTINUE$/;"	l	subroutine:CHECK2	file:
40	tools/eigen/blas/testing/cblat1.f	/^   40 CONTINUE$/;"	l	subroutine:ITEST1	file:
40	tools/eigen/blas/testing/cblat1.f	/^   40 CONTINUE$/;"	l	subroutine:STEST	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40                         CONTINUE$/;"	l	subroutine:CCHK1	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40                      CONTINUE$/;"	l	subroutine:CCHK2	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40                   CONTINUE$/;"	l	subroutine:CCHK3	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40                   CONTINUE$/;"	l	subroutine:CCHK5	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40                CONTINUE$/;"	l	subroutine:CCHK4	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40                CONTINUE$/;"	l	subroutine:CCHK6	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40       CONTINUE$/;"	l	function:LCERES	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40       CONTINUE$/;"	l	subroutine:CMAKE	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40 CONTINUE$/;"	l	program:CBLAT2	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40 CONTINUE$/;"	l	subroutine:CMVCH	file:
40	tools/eigen/blas/testing/cblat2.f	/^   40 INFOT = 1$/;"	l	subroutine:CCHKE	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:CCHK1	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:CCHK3	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:CCHK4	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40                   CONTINUE$/;"	l	subroutine:CCHK2	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40                   CONTINUE$/;"	l	subroutine:CCHK5	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40             CONTINUE$/;"	l	subroutine:CMMCH	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40       CONTINUE$/;"	l	function:LCERES	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40       CONTINUE$/;"	l	subroutine:CMAKE	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40 CONTINUE$/;"	l	program:CBLAT3	file:
40	tools/eigen/blas/testing/cblat3.f	/^   40 INFOT = 1$/;"	l	subroutine:CCHKE	file:
40	tools/eigen/blas/testing/dblat1.f	/^   40          CONTINUE$/;"	l	subroutine:CHECK1	file:
40	tools/eigen/blas/testing/dblat1.f	/^   40          CONTINUE$/;"	l	subroutine:CHECK2	file:
40	tools/eigen/blas/testing/dblat1.f	/^   40    CONTINUE$/;"	l	subroutine:CHECK3	file:
40	tools/eigen/blas/testing/dblat1.f	/^   40 CONTINUE$/;"	l	subroutine:ITEST1	file:
40	tools/eigen/blas/testing/dblat1.f	/^   40 CONTINUE$/;"	l	subroutine:STEST	file:
40	tools/eigen/blas/testing/dblat1.f	/^   40 CONTINUE$/;"	l	subroutine:TESTDSDOT	file:
40	tools/eigen/blas/testing/dblat1.f	/^   40 RETURN$/;"	l	subroutine:CHECK0	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40                         CONTINUE$/;"	l	subroutine:DCHK1	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40                      CONTINUE$/;"	l	subroutine:DCHK2	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40                   CONTINUE$/;"	l	subroutine:DCHK3	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40                   CONTINUE$/;"	l	subroutine:DCHK5	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40                CONTINUE$/;"	l	subroutine:DCHK4	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40                CONTINUE$/;"	l	subroutine:DCHK6	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40       CONTINUE$/;"	l	function:LDERES	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40       CONTINUE$/;"	l	subroutine:DMAKE	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40 CONTINUE$/;"	l	program:DBLAT2	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40 CONTINUE$/;"	l	subroutine:DMVCH	file:
40	tools/eigen/blas/testing/dblat2.f	/^   40 INFOT = 1$/;"	l	subroutine:DCHKE	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:DCHK1	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:DCHK3	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:DCHK4	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40                   CONTINUE$/;"	l	subroutine:DCHK2	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40                   CONTINUE$/;"	l	subroutine:DCHK5	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40          CONTINUE$/;"	l	subroutine:DMMCH	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40       CONTINUE$/;"	l	function:LDERES	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40       CONTINUE$/;"	l	subroutine:DMAKE	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40 CONTINUE$/;"	l	program:DBLAT3	file:
40	tools/eigen/blas/testing/dblat3.f	/^   40 INFOT = 1$/;"	l	subroutine:DCHKE	file:
40	tools/eigen/blas/testing/sblat1.f	/^   40          CONTINUE$/;"	l	subroutine:CHECK1	file:
40	tools/eigen/blas/testing/sblat1.f	/^   40          CONTINUE$/;"	l	subroutine:CHECK2	file:
40	tools/eigen/blas/testing/sblat1.f	/^   40    CONTINUE$/;"	l	subroutine:CHECK3	file:
40	tools/eigen/blas/testing/sblat1.f	/^   40 CONTINUE$/;"	l	subroutine:ITEST1	file:
40	tools/eigen/blas/testing/sblat1.f	/^   40 CONTINUE$/;"	l	subroutine:STEST	file:
40	tools/eigen/blas/testing/sblat1.f	/^   40 RETURN$/;"	l	subroutine:CHECK0	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40                         CONTINUE$/;"	l	subroutine:SCHK1	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40                      CONTINUE$/;"	l	subroutine:SCHK2	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40                   CONTINUE$/;"	l	subroutine:SCHK3	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40                   CONTINUE$/;"	l	subroutine:SCHK5	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40                CONTINUE$/;"	l	subroutine:SCHK4	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40                CONTINUE$/;"	l	subroutine:SCHK6	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40       CONTINUE$/;"	l	function:LSERES	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40       CONTINUE$/;"	l	subroutine:SMAKE	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40 CONTINUE$/;"	l	program:SBLAT2	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40 CONTINUE$/;"	l	subroutine:SMVCH	file:
40	tools/eigen/blas/testing/sblat2.f	/^   40 INFOT = 1$/;"	l	subroutine:SCHKE	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:SCHK1	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:SCHK3	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:SCHK4	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40                   CONTINUE$/;"	l	subroutine:SCHK2	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40                   CONTINUE$/;"	l	subroutine:SCHK5	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40          CONTINUE$/;"	l	subroutine:SMMCH	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40       CONTINUE$/;"	l	function:LSERES	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40       CONTINUE$/;"	l	subroutine:SMAKE	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40 CONTINUE$/;"	l	program:SBLAT3	file:
40	tools/eigen/blas/testing/sblat3.f	/^   40 INFOT = 1$/;"	l	subroutine:SCHKE	file:
40	tools/eigen/blas/testing/zblat1.f	/^   40    CONTINUE$/;"	l	subroutine:CHECK1	file:
40	tools/eigen/blas/testing/zblat1.f	/^   40    CONTINUE$/;"	l	subroutine:CHECK2	file:
40	tools/eigen/blas/testing/zblat1.f	/^   40 CONTINUE$/;"	l	subroutine:ITEST1	file:
40	tools/eigen/blas/testing/zblat1.f	/^   40 CONTINUE$/;"	l	subroutine:STEST	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40                         CONTINUE$/;"	l	subroutine:ZCHK1	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40                      CONTINUE$/;"	l	subroutine:ZCHK2	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40                   CONTINUE$/;"	l	subroutine:ZCHK3	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40                   CONTINUE$/;"	l	subroutine:ZCHK5	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40                CONTINUE$/;"	l	subroutine:ZCHK4	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40                CONTINUE$/;"	l	subroutine:ZCHK6	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40       CONTINUE$/;"	l	function:LZERES	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40       CONTINUE$/;"	l	subroutine:ZMAKE	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40 CONTINUE$/;"	l	program:ZBLAT2	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40 CONTINUE$/;"	l	subroutine:ZMVCH	file:
40	tools/eigen/blas/testing/zblat2.f	/^   40 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:ZCHK1	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:ZCHK3	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40                      CONTINUE$/;"	l	subroutine:ZCHK4	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40                   CONTINUE$/;"	l	subroutine:ZCHK2	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40                   CONTINUE$/;"	l	subroutine:ZCHK5	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40             CONTINUE$/;"	l	subroutine:ZMMCH	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40       CONTINUE$/;"	l	function:LZERES	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40       CONTINUE$/;"	l	subroutine:ZMAKE	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40 CONTINUE$/;"	l	program:ZBLAT3	file:
40	tools/eigen/blas/testing/zblat3.f	/^   40 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
40	tools/eigen/lapack/clarfb.f	/^   40          CONTINUE$/;"	l	subroutine:CLARFB	file:
40	tools/eigen/lapack/dlarfb.f	/^   40          CONTINUE$/;"	l	subroutine:DLARFB	file:
40	tools/eigen/lapack/slarfb.f	/^   40          CONTINUE$/;"	l	subroutine:SLARFB	file:
40	tools/eigen/lapack/zlarfb.f	/^   40          CONTINUE$/;"	l	subroutine:ZLARFB	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50                         CONTINUE$/;"	l	subroutine:CCHK3	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:CCHK1	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:CCHK4	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:CCHK6	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50                   CONTINUE$/;"	l	subroutine:CCHK2	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50                   CONTINUE$/;"	l	subroutine:CCHK5	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50    CONTINUE$/;"	l	function:LCERES	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50    CONTINUE$/;"	l	subroutine:CMAKE	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50 CONTINUE$/;"	l	subroutine:CMVCH	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50 INFOT = 1$/;"	l	subroutine:CCHKE	file:
50	tools/eigen/blas/testing/cblat2.f	/^   50 READ( NIN, FMT = 9984, END = 80 )SNAMET, LTESTT$/;"	l	program:CBLAT2	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50                            CONTINUE$/;"	l	subroutine:CCHK5	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50                      CONTINUE$/;"	l	subroutine:CCHK3	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50                   CONTINUE$/;"	l	subroutine:CCHK1	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50                CONTINUE$/;"	l	subroutine:CCHK2	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50                CONTINUE$/;"	l	subroutine:CCHK4	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50          CONTINUE$/;"	l	subroutine:CMMCH	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50    CONTINUE$/;"	l	function:LCERES	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50    CONTINUE$/;"	l	subroutine:CMAKE	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50 INFOT = 1$/;"	l	subroutine:CCHKE	file:
50	tools/eigen/blas/testing/cblat3.f	/^   50 LTEST( I ) = LTESTT$/;"	l	program:CBLAT3	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50                         CONTINUE$/;"	l	subroutine:DCHK3	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:DCHK1	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:DCHK4	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:DCHK6	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50                   CONTINUE$/;"	l	subroutine:DCHK2	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50                   CONTINUE$/;"	l	subroutine:DCHK5	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50    CONTINUE$/;"	l	function:LDERES	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50    CONTINUE$/;"	l	subroutine:DMAKE	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50 FATAL = .TRUE.$/;"	l	subroutine:DMVCH	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50 INFOT = 1$/;"	l	subroutine:DCHKE	file:
50	tools/eigen/blas/testing/dblat2.f	/^   50 READ( NIN, FMT = 9984, END = 80 )SNAMET, LTESTT$/;"	l	program:DBLAT2	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50                            CONTINUE$/;"	l	subroutine:DCHK5	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50                      CONTINUE$/;"	l	subroutine:DCHK3	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50                   CONTINUE$/;"	l	subroutine:DCHK1	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50                CONTINUE$/;"	l	subroutine:DCHK2	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50                CONTINUE$/;"	l	subroutine:DCHK4	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50       CONTINUE$/;"	l	subroutine:DMMCH	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50    CONTINUE$/;"	l	function:LDERES	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50    CONTINUE$/;"	l	subroutine:DMAKE	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50 INFOT = 1$/;"	l	subroutine:DCHKE	file:
50	tools/eigen/blas/testing/dblat3.f	/^   50 LTEST( I ) = LTESTT$/;"	l	program:DBLAT3	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50                         CONTINUE$/;"	l	subroutine:SCHK3	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:SCHK1	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:SCHK4	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:SCHK6	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50                   CONTINUE$/;"	l	subroutine:SCHK2	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50                   CONTINUE$/;"	l	subroutine:SCHK5	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50    CONTINUE$/;"	l	function:LSERES	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50    CONTINUE$/;"	l	subroutine:SMAKE	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50 FATAL = .TRUE.$/;"	l	subroutine:SMVCH	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50 INFOT = 1$/;"	l	subroutine:SCHKE	file:
50	tools/eigen/blas/testing/sblat2.f	/^   50 READ( NIN, FMT = 9984, END = 80 )SNAMET, LTESTT$/;"	l	program:SBLAT2	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50                            CONTINUE$/;"	l	subroutine:SCHK5	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50                      CONTINUE$/;"	l	subroutine:SCHK3	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50                   CONTINUE$/;"	l	subroutine:SCHK1	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50                CONTINUE$/;"	l	subroutine:SCHK2	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50                CONTINUE$/;"	l	subroutine:SCHK4	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50       CONTINUE$/;"	l	subroutine:SMMCH	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50    CONTINUE$/;"	l	function:LSERES	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50    CONTINUE$/;"	l	subroutine:SMAKE	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50 INFOT = 1$/;"	l	subroutine:SCHKE	file:
50	tools/eigen/blas/testing/sblat3.f	/^   50 LTEST( I ) = LTESTT$/;"	l	program:SBLAT3	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50                         CONTINUE$/;"	l	subroutine:ZCHK3	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:ZCHK1	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:ZCHK4	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50                      CONTINUE$/;"	l	subroutine:ZCHK6	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50                   CONTINUE$/;"	l	subroutine:ZCHK2	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50                   CONTINUE$/;"	l	subroutine:ZCHK5	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50    CONTINUE$/;"	l	function:LZERES	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50    CONTINUE$/;"	l	subroutine:ZMAKE	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50 CONTINUE$/;"	l	subroutine:ZMVCH	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
50	tools/eigen/blas/testing/zblat2.f	/^   50 READ( NIN, FMT = 9984, END = 80 )SNAMET, LTESTT$/;"	l	program:ZBLAT2	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50                            CONTINUE$/;"	l	subroutine:ZCHK5	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50                      CONTINUE$/;"	l	subroutine:ZCHK3	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50                   CONTINUE$/;"	l	subroutine:ZCHK1	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50                CONTINUE$/;"	l	subroutine:ZCHK2	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50                CONTINUE$/;"	l	subroutine:ZCHK4	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50          CONTINUE$/;"	l	subroutine:ZMMCH	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50    CONTINUE$/;"	l	function:LZERES	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50    CONTINUE$/;"	l	subroutine:ZMAKE	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
50	tools/eigen/blas/testing/zblat3.f	/^   50 LTEST( I ) = LTESTT$/;"	l	program:ZBLAT3	file:
50	tools/eigen/lapack/clarfb.f	/^   50             CONTINUE$/;"	l	subroutine:CLARFB	file:
50	tools/eigen/lapack/dlarfb.f	/^   50             CONTINUE$/;"	l	subroutine:DLARFB	file:
50	tools/eigen/lapack/slarfb.f	/^   50             CONTINUE$/;"	l	subroutine:SLARFB	file:
50	tools/eigen/lapack/zlarfb.f	/^   50             CONTINUE$/;"	l	subroutine:ZLARFB	file:
60	tools/eigen/blas/testing/cblat1.f	/^   60 CONTINUE$/;"	l	subroutine:CHECK1	file:
60	tools/eigen/blas/testing/cblat1.f	/^   60 CONTINUE$/;"	l	subroutine:CHECK2	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60                      CONTINUE$/;"	l	subroutine:CCHK4	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60                      CONTINUE$/;"	l	subroutine:CCHK6	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60                   CONTINUE$/;"	l	subroutine:CCHK1	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60                CONTINUE$/;"	l	subroutine:CCHK2	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60                CONTINUE$/;"	l	subroutine:CCHK3	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60                CONTINUE$/;"	l	subroutine:CCHK5	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60       CONTINUE$/;"	l	subroutine:CMAKE	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60 CONTINUE$/;"	l	function:LCERES	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60 CONTINUE$/;"	l	program:CBLAT2	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60 FATAL = .TRUE.$/;"	l	subroutine:CMVCH	file:
60	tools/eigen/blas/testing/cblat2.f	/^   60 INFOT = 1$/;"	l	subroutine:CCHKE	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60                               CONTINUE$/;"	l	subroutine:CCHK3	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60                            CONTINUE$/;"	l	subroutine:CCHK5	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60                CONTINUE$/;"	l	subroutine:CCHK1	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60             CONTINUE$/;"	l	subroutine:CCHK2	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60             CONTINUE$/;"	l	subroutine:CCHK4	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60             CONTINUE$/;"	l	subroutine:CMMCH	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60       CONTINUE$/;"	l	subroutine:CMAKE	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60 CONTINUE$/;"	l	function:LCERES	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60 CONTINUE$/;"	l	program:CBLAT3	file:
60	tools/eigen/blas/testing/cblat3.f	/^   60 INFOT = 1$/;"	l	subroutine:CCHKE	file:
60	tools/eigen/blas/testing/dblat1.f	/^   60          CONTINUE$/;"	l	subroutine:CHECK2	file:
60	tools/eigen/blas/testing/dblat1.f	/^   60    CONTINUE$/;"	l	subroutine:CHECK1	file:
60	tools/eigen/blas/testing/dblat1.f	/^   60 CONTINUE$/;"	l	subroutine:CHECK3	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60                      CONTINUE$/;"	l	subroutine:DCHK4	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60                      CONTINUE$/;"	l	subroutine:DCHK6	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60                   CONTINUE$/;"	l	subroutine:DCHK1	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60                CONTINUE$/;"	l	subroutine:DCHK2	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60                CONTINUE$/;"	l	subroutine:DCHK3	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60                CONTINUE$/;"	l	subroutine:DCHK5	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60       CONTINUE$/;"	l	subroutine:DMAKE	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60 CONTINUE$/;"	l	function:LDERES	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60 CONTINUE$/;"	l	program:DBLAT2	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60 CONTINUE$/;"	l	subroutine:DMVCH	file:
60	tools/eigen/blas/testing/dblat2.f	/^   60 INFOT = 1$/;"	l	subroutine:DCHKE	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60                               CONTINUE$/;"	l	subroutine:DCHK3	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60                            CONTINUE$/;"	l	subroutine:DCHK5	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60                CONTINUE$/;"	l	subroutine:DCHK1	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60             CONTINUE$/;"	l	subroutine:DCHK2	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60             CONTINUE$/;"	l	subroutine:DCHK4	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60          CONTINUE$/;"	l	subroutine:DMMCH	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60       CONTINUE$/;"	l	subroutine:DMAKE	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60 CONTINUE$/;"	l	function:LDERES	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60 CONTINUE$/;"	l	program:DBLAT3	file:
60	tools/eigen/blas/testing/dblat3.f	/^   60 INFOT = 1$/;"	l	subroutine:DCHKE	file:
60	tools/eigen/blas/testing/sblat1.f	/^   60          CONTINUE$/;"	l	subroutine:CHECK2	file:
60	tools/eigen/blas/testing/sblat1.f	/^   60    CONTINUE$/;"	l	subroutine:CHECK1	file:
60	tools/eigen/blas/testing/sblat1.f	/^   60 CONTINUE$/;"	l	subroutine:CHECK3	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60                      CONTINUE$/;"	l	subroutine:SCHK4	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60                      CONTINUE$/;"	l	subroutine:SCHK6	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60                   CONTINUE$/;"	l	subroutine:SCHK1	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60                CONTINUE$/;"	l	subroutine:SCHK2	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60                CONTINUE$/;"	l	subroutine:SCHK3	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60                CONTINUE$/;"	l	subroutine:SCHK5	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60       CONTINUE$/;"	l	subroutine:SMAKE	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60 CONTINUE$/;"	l	function:LSERES	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60 CONTINUE$/;"	l	program:SBLAT2	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60 CONTINUE$/;"	l	subroutine:SMVCH	file:
60	tools/eigen/blas/testing/sblat2.f	/^   60 INFOT = 1$/;"	l	subroutine:SCHKE	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60                               CONTINUE$/;"	l	subroutine:SCHK3	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60                            CONTINUE$/;"	l	subroutine:SCHK5	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60                CONTINUE$/;"	l	subroutine:SCHK1	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60             CONTINUE$/;"	l	subroutine:SCHK2	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60             CONTINUE$/;"	l	subroutine:SCHK4	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60          CONTINUE$/;"	l	subroutine:SMMCH	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60       CONTINUE$/;"	l	subroutine:SMAKE	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60 CONTINUE$/;"	l	function:LSERES	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60 CONTINUE$/;"	l	program:SBLAT3	file:
60	tools/eigen/blas/testing/sblat3.f	/^   60 INFOT = 1$/;"	l	subroutine:SCHKE	file:
60	tools/eigen/blas/testing/zblat1.f	/^   60 CONTINUE$/;"	l	subroutine:CHECK1	file:
60	tools/eigen/blas/testing/zblat1.f	/^   60 CONTINUE$/;"	l	subroutine:CHECK2	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60                      CONTINUE$/;"	l	subroutine:ZCHK4	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60                      CONTINUE$/;"	l	subroutine:ZCHK6	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60                   CONTINUE$/;"	l	subroutine:ZCHK1	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60                CONTINUE$/;"	l	subroutine:ZCHK2	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60                CONTINUE$/;"	l	subroutine:ZCHK3	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60                CONTINUE$/;"	l	subroutine:ZCHK5	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60       CONTINUE$/;"	l	subroutine:ZMAKE	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60 CONTINUE$/;"	l	function:LZERES	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60 CONTINUE$/;"	l	program:ZBLAT2	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60 FATAL = .TRUE.$/;"	l	subroutine:ZMVCH	file:
60	tools/eigen/blas/testing/zblat2.f	/^   60 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60                               CONTINUE$/;"	l	subroutine:ZCHK3	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60                            CONTINUE$/;"	l	subroutine:ZCHK5	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60                CONTINUE$/;"	l	subroutine:ZCHK1	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60             CONTINUE$/;"	l	subroutine:ZCHK2	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60             CONTINUE$/;"	l	subroutine:ZCHK4	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60             CONTINUE$/;"	l	subroutine:ZMMCH	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60       CONTINUE$/;"	l	subroutine:ZMAKE	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60 CONTINUE$/;"	l	function:LZERES	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60 CONTINUE$/;"	l	program:ZBLAT3	file:
60	tools/eigen/blas/testing/zblat3.f	/^   60 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
60	tools/eigen/lapack/clarfb.f	/^   60          CONTINUE$/;"	l	subroutine:CLARFB	file:
60	tools/eigen/lapack/dlarfb.f	/^   60          CONTINUE$/;"	l	subroutine:DLARFB	file:
60	tools/eigen/lapack/slarfb.f	/^   60          CONTINUE$/;"	l	subroutine:SLARFB	file:
60	tools/eigen/lapack/zlarfb.f	/^   60          CONTINUE$/;"	l	subroutine:ZLARFB	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70                      CONTINUE$/;"	l	subroutine:CCHK6	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70                   CONTINUE$/;"	l	subroutine:CCHK4	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70                CONTINUE$/;"	l	subroutine:CCHK1	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70             CONTINUE$/;"	l	subroutine:CCHK2	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70             CONTINUE$/;"	l	subroutine:CCHK3	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70          CONTINUE$/;"	l	subroutine:CCHK5	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70       CONTINUE$/;"	l	subroutine:CMAKE	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70 CONTINUE$/;"	l	function:LCERES	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70 CONTINUE$/;"	l	subroutine:CMVCH	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70 INFOT = 1$/;"	l	subroutine:CCHKE	file:
70	tools/eigen/blas/testing/cblat2.f	/^   70 LTEST( I ) = LTESTT$/;"	l	program:CBLAT2	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70                            CONTINUE$/;"	l	subroutine:CCHK3	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70                      CONTINUE$/;"	l	subroutine:CCHK5	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70             CONTINUE$/;"	l	subroutine:CCHK1	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70          CONTINUE$/;"	l	subroutine:CCHK2	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70          CONTINUE$/;"	l	subroutine:CCHK4	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70          CONTINUE$/;"	l	subroutine:CMMCH	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70       CONTINUE$/;"	l	subroutine:CMAKE	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70 CONTINUE$/;"	l	function:LCERES	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70 CONTINUE$/;"	l	program:CBLAT3	file:
70	tools/eigen/blas/testing/cblat3.f	/^   70 INFOT = 1$/;"	l	subroutine:CCHKE	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70                      CONTINUE$/;"	l	subroutine:DCHK6	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70                   CONTINUE$/;"	l	subroutine:DCHK4	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70                CONTINUE$/;"	l	subroutine:DCHK1	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70             CONTINUE$/;"	l	subroutine:DCHK2	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70             CONTINUE$/;"	l	subroutine:DCHK3	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70          CONTINUE$/;"	l	subroutine:DCHK5	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70       CONTINUE$/;"	l	subroutine:DMAKE	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70 CONTINUE$/;"	l	function:LDERES	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70 CONTINUE$/;"	l	subroutine:DMVCH	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70 INFOT = 1$/;"	l	subroutine:DCHKE	file:
70	tools/eigen/blas/testing/dblat2.f	/^   70 LTEST( I ) = LTESTT$/;"	l	program:DBLAT2	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70                            CONTINUE$/;"	l	subroutine:DCHK3	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70                      CONTINUE$/;"	l	subroutine:DCHK5	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70             CONTINUE$/;"	l	subroutine:DCHK1	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70          CONTINUE$/;"	l	subroutine:DCHK2	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70          CONTINUE$/;"	l	subroutine:DCHK4	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70       CONTINUE$/;"	l	subroutine:DMAKE	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70       CONTINUE$/;"	l	subroutine:DMMCH	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70 CONTINUE$/;"	l	function:LDERES	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70 CONTINUE$/;"	l	program:DBLAT3	file:
70	tools/eigen/blas/testing/dblat3.f	/^   70 IF( OK )THEN$/;"	l	subroutine:DCHKE	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70                      CONTINUE$/;"	l	subroutine:SCHK6	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70                   CONTINUE$/;"	l	subroutine:SCHK4	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70                CONTINUE$/;"	l	subroutine:SCHK1	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70             CONTINUE$/;"	l	subroutine:SCHK2	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70             CONTINUE$/;"	l	subroutine:SCHK3	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70          CONTINUE$/;"	l	subroutine:SCHK5	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70       CONTINUE$/;"	l	subroutine:SMAKE	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70 CONTINUE$/;"	l	function:LSERES	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70 CONTINUE$/;"	l	subroutine:SMVCH	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70 INFOT = 1$/;"	l	subroutine:SCHKE	file:
70	tools/eigen/blas/testing/sblat2.f	/^   70 LTEST( I ) = LTESTT$/;"	l	program:SBLAT2	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70                            CONTINUE$/;"	l	subroutine:SCHK3	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70                      CONTINUE$/;"	l	subroutine:SCHK5	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70             CONTINUE$/;"	l	subroutine:SCHK1	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70          CONTINUE$/;"	l	subroutine:SCHK2	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70          CONTINUE$/;"	l	subroutine:SCHK4	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70       CONTINUE$/;"	l	subroutine:SMAKE	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70       CONTINUE$/;"	l	subroutine:SMMCH	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70 CONTINUE$/;"	l	function:LSERES	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70 CONTINUE$/;"	l	program:SBLAT3	file:
70	tools/eigen/blas/testing/sblat3.f	/^   70 IF( OK )THEN$/;"	l	subroutine:SCHKE	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70                      CONTINUE$/;"	l	subroutine:ZCHK6	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70                   CONTINUE$/;"	l	subroutine:ZCHK4	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70                CONTINUE$/;"	l	subroutine:ZCHK1	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70             CONTINUE$/;"	l	subroutine:ZCHK2	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70             CONTINUE$/;"	l	subroutine:ZCHK3	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70          CONTINUE$/;"	l	subroutine:ZCHK5	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70       CONTINUE$/;"	l	subroutine:ZMAKE	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70 CONTINUE$/;"	l	function:LZERES	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70 CONTINUE$/;"	l	subroutine:ZMVCH	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
70	tools/eigen/blas/testing/zblat2.f	/^   70 LTEST( I ) = LTESTT$/;"	l	program:ZBLAT2	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70                            CONTINUE$/;"	l	subroutine:ZCHK3	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70                      CONTINUE$/;"	l	subroutine:ZCHK5	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70             CONTINUE$/;"	l	subroutine:ZCHK1	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70          CONTINUE$/;"	l	subroutine:ZCHK2	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70          CONTINUE$/;"	l	subroutine:ZCHK4	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70          CONTINUE$/;"	l	subroutine:ZMMCH	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70       CONTINUE$/;"	l	subroutine:ZMAKE	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70 CONTINUE$/;"	l	function:LZERES	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70 CONTINUE$/;"	l	program:ZBLAT3	file:
70	tools/eigen/blas/testing/zblat3.f	/^   70 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
70	tools/eigen/lapack/clarfb.f	/^   70          CONTINUE$/;"	l	subroutine:CLARFB	file:
70	tools/eigen/lapack/dlarfb.f	/^   70          CONTINUE$/;"	l	subroutine:DLARFB	file:
70	tools/eigen/lapack/slarfb.f	/^   70          CONTINUE$/;"	l	subroutine:SLARFB	file:
70	tools/eigen/lapack/zlarfb.f	/^   70          CONTINUE$/;"	l	subroutine:ZLARFB	file:
80	tools/eigen/blas/testing/cblat1.f	/^   80    CONTINUE$/;"	l	subroutine:CHECK1	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80                      CONTINUE$/;"	l	subroutine:CCHK6	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80             CONTINUE$/;"	l	subroutine:CCHK1	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80             CONTINUE$/;"	l	subroutine:CCHK4	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80          CONTINUE$/;"	l	subroutine:CCHK2	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80          CONTINUE$/;"	l	subroutine:CCHK3	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80       CONTINUE$/;"	l	subroutine:CCHK5	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80       CONTINUE$/;"	l	subroutine:CMAKE	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80 CONTINUE$/;"	l	program:CBLAT2	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80 CONTINUE$/;"	l	subroutine:CMVCH	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80 INFOT = 1$/;"	l	subroutine:CCHKE	file:
80	tools/eigen/blas/testing/cblat2.f	/^   80 RETURN$/;"	l	function:LCERES	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80                   CONTINUE$/;"	l	subroutine:CCHK3	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80                CONTINUE$/;"	l	subroutine:CCHK5	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80             CONTINUE$/;"	l	subroutine:CMMCH	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80          CONTINUE$/;"	l	subroutine:CCHK1	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80       CONTINUE$/;"	l	subroutine:CCHK2	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80       CONTINUE$/;"	l	subroutine:CCHK4	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80       CONTINUE$/;"	l	subroutine:CMAKE	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80 CONTINUE$/;"	l	program:CBLAT3	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80 INFOT = 1$/;"	l	subroutine:CCHKE	file:
80	tools/eigen/blas/testing/cblat3.f	/^   80 RETURN$/;"	l	function:LCERES	file:
80	tools/eigen/blas/testing/dblat1.f	/^   80          CONTINUE$/;"	l	subroutine:CHECK2	file:
80	tools/eigen/blas/testing/dblat1.f	/^   80 CONTINUE$/;"	l	subroutine:CHECK1	file:
80	tools/eigen/blas/testing/dblat1.f	/^   80 CONTINUE$/;"	l	subroutine:CHECK3	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80                      CONTINUE$/;"	l	subroutine:DCHK6	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80             CONTINUE$/;"	l	subroutine:DCHK1	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80             CONTINUE$/;"	l	subroutine:DCHK4	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80          CONTINUE$/;"	l	subroutine:DCHK2	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80          CONTINUE$/;"	l	subroutine:DCHK3	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80       CONTINUE$/;"	l	subroutine:DCHK5	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80       CONTINUE$/;"	l	subroutine:DMAKE	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80 CONTINUE$/;"	l	program:DBLAT2	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80 INFOT = 1$/;"	l	subroutine:DCHKE	file:
80	tools/eigen/blas/testing/dblat2.f	/^   80 RETURN$/;"	l	function:LDERES	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80                   CONTINUE$/;"	l	subroutine:DCHK3	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80                CONTINUE$/;"	l	subroutine:DCHK5	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80          CONTINUE$/;"	l	subroutine:DCHK1	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80          CONTINUE$/;"	l	subroutine:DMMCH	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80       CONTINUE$/;"	l	subroutine:DCHK2	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80       CONTINUE$/;"	l	subroutine:DCHK4	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80       CONTINUE$/;"	l	subroutine:DMAKE	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80 CONTINUE$/;"	l	program:DBLAT3	file:
80	tools/eigen/blas/testing/dblat3.f	/^   80 RETURN$/;"	l	function:LDERES	file:
80	tools/eigen/blas/testing/sblat1.f	/^   80          CONTINUE$/;"	l	subroutine:CHECK2	file:
80	tools/eigen/blas/testing/sblat1.f	/^   80 CONTINUE$/;"	l	subroutine:CHECK1	file:
80	tools/eigen/blas/testing/sblat1.f	/^   80 CONTINUE$/;"	l	subroutine:CHECK3	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80                      CONTINUE$/;"	l	subroutine:SCHK6	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80             CONTINUE$/;"	l	subroutine:SCHK1	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80             CONTINUE$/;"	l	subroutine:SCHK4	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80          CONTINUE$/;"	l	subroutine:SCHK2	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80          CONTINUE$/;"	l	subroutine:SCHK3	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80       CONTINUE$/;"	l	subroutine:SCHK5	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80       CONTINUE$/;"	l	subroutine:SMAKE	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80 CONTINUE$/;"	l	program:SBLAT2	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80 INFOT = 1$/;"	l	subroutine:SCHKE	file:
80	tools/eigen/blas/testing/sblat2.f	/^   80 RETURN$/;"	l	function:LSERES	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80                   CONTINUE$/;"	l	subroutine:SCHK3	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80                CONTINUE$/;"	l	subroutine:SCHK5	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80          CONTINUE$/;"	l	subroutine:SCHK1	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80          CONTINUE$/;"	l	subroutine:SMMCH	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80       CONTINUE$/;"	l	subroutine:SCHK2	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80       CONTINUE$/;"	l	subroutine:SCHK4	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80       CONTINUE$/;"	l	subroutine:SMAKE	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80 CONTINUE$/;"	l	program:SBLAT3	file:
80	tools/eigen/blas/testing/sblat3.f	/^   80 RETURN$/;"	l	function:LSERES	file:
80	tools/eigen/blas/testing/zblat1.f	/^   80    CONTINUE$/;"	l	subroutine:CHECK1	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80                      CONTINUE$/;"	l	subroutine:ZCHK6	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80             CONTINUE$/;"	l	subroutine:ZCHK1	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80             CONTINUE$/;"	l	subroutine:ZCHK4	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80          CONTINUE$/;"	l	subroutine:ZCHK2	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80          CONTINUE$/;"	l	subroutine:ZCHK3	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80       CONTINUE$/;"	l	subroutine:ZCHK5	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80       CONTINUE$/;"	l	subroutine:ZMAKE	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80 CONTINUE$/;"	l	program:ZBLAT2	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80 CONTINUE$/;"	l	subroutine:ZMVCH	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
80	tools/eigen/blas/testing/zblat2.f	/^   80 RETURN$/;"	l	function:LZERES	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80                   CONTINUE$/;"	l	subroutine:ZCHK3	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80                CONTINUE$/;"	l	subroutine:ZCHK5	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80             CONTINUE$/;"	l	subroutine:ZMMCH	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80          CONTINUE$/;"	l	subroutine:ZCHK1	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80       CONTINUE$/;"	l	subroutine:ZCHK2	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80       CONTINUE$/;"	l	subroutine:ZCHK4	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80       CONTINUE$/;"	l	subroutine:ZMAKE	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80 CONTINUE$/;"	l	program:ZBLAT3	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
80	tools/eigen/blas/testing/zblat3.f	/^   80 RETURN$/;"	l	function:LZERES	file:
80	tools/eigen/lapack/clarfb.f	/^   80             CONTINUE$/;"	l	subroutine:CLARFB	file:
80	tools/eigen/lapack/dlarfb.f	/^   80             CONTINUE$/;"	l	subroutine:DLARFB	file:
80	tools/eigen/lapack/slarfb.f	/^   80             CONTINUE$/;"	l	subroutine:SLARFB	file:
80	tools/eigen/lapack/zlarfb.f	/^   80             CONTINUE$/;"	l	subroutine:ZLARFB	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90                   CONTINUE$/;"	l	subroutine:CCHK6	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90          CONTINUE$/;"	l	subroutine:CCHK1	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90          CONTINUE$/;"	l	subroutine:CCHK4	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90       CONTINUE$/;"	l	subroutine:CCHK2	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90       CONTINUE$/;"	l	subroutine:CCHK3	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90    CONTINUE$/;"	l	subroutine:CCHK5	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90    CONTINUE$/;"	l	subroutine:CMAKE	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90 CONTINUE$/;"	l	program:CBLAT2	file:
90	tools/eigen/blas/testing/cblat2.f	/^   90 INFOT = 1$/;"	l	subroutine:CCHKE	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90                CONTINUE$/;"	l	subroutine:CCHK3	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90             CONTINUE$/;"	l	subroutine:CCHK5	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90          CONTINUE$/;"	l	subroutine:CMMCH	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90       CONTINUE$/;"	l	subroutine:CCHK1	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90    CONTINUE$/;"	l	program:CBLAT3	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90    CONTINUE$/;"	l	subroutine:CCHK2	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90    CONTINUE$/;"	l	subroutine:CCHK4	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90    CONTINUE$/;"	l	subroutine:CMAKE	file:
90	tools/eigen/blas/testing/cblat3.f	/^   90 INFOT = 1$/;"	l	subroutine:CCHKE	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90                   CONTINUE$/;"	l	subroutine:DCHK6	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90          CONTINUE$/;"	l	subroutine:DCHK1	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90          CONTINUE$/;"	l	subroutine:DCHK4	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90       CONTINUE$/;"	l	subroutine:DCHK2	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90       CONTINUE$/;"	l	subroutine:DCHK3	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90    CONTINUE$/;"	l	subroutine:DCHK5	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90    CONTINUE$/;"	l	subroutine:DMAKE	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90 CONTINUE$/;"	l	program:DBLAT2	file:
90	tools/eigen/blas/testing/dblat2.f	/^   90 INFOT = 1$/;"	l	subroutine:DCHKE	file:
90	tools/eigen/blas/testing/dblat3.f	/^   90                CONTINUE$/;"	l	subroutine:DCHK3	file:
90	tools/eigen/blas/testing/dblat3.f	/^   90             CONTINUE$/;"	l	subroutine:DCHK5	file:
90	tools/eigen/blas/testing/dblat3.f	/^   90       CONTINUE$/;"	l	subroutine:DCHK1	file:
90	tools/eigen/blas/testing/dblat3.f	/^   90       CONTINUE$/;"	l	subroutine:DMMCH	file:
90	tools/eigen/blas/testing/dblat3.f	/^   90    CONTINUE$/;"	l	program:DBLAT3	file:
90	tools/eigen/blas/testing/dblat3.f	/^   90    CONTINUE$/;"	l	subroutine:DCHK2	file:
90	tools/eigen/blas/testing/dblat3.f	/^   90    CONTINUE$/;"	l	subroutine:DCHK4	file:
90	tools/eigen/blas/testing/dblat3.f	/^   90    CONTINUE$/;"	l	subroutine:DMAKE	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90                   CONTINUE$/;"	l	subroutine:SCHK6	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90          CONTINUE$/;"	l	subroutine:SCHK1	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90          CONTINUE$/;"	l	subroutine:SCHK4	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90       CONTINUE$/;"	l	subroutine:SCHK2	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90       CONTINUE$/;"	l	subroutine:SCHK3	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90    CONTINUE$/;"	l	subroutine:SCHK5	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90    CONTINUE$/;"	l	subroutine:SMAKE	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90 CONTINUE$/;"	l	program:SBLAT2	file:
90	tools/eigen/blas/testing/sblat2.f	/^   90 INFOT = 1$/;"	l	subroutine:SCHKE	file:
90	tools/eigen/blas/testing/sblat3.f	/^   90                CONTINUE$/;"	l	subroutine:SCHK3	file:
90	tools/eigen/blas/testing/sblat3.f	/^   90             CONTINUE$/;"	l	subroutine:SCHK5	file:
90	tools/eigen/blas/testing/sblat3.f	/^   90       CONTINUE$/;"	l	subroutine:SCHK1	file:
90	tools/eigen/blas/testing/sblat3.f	/^   90       CONTINUE$/;"	l	subroutine:SMMCH	file:
90	tools/eigen/blas/testing/sblat3.f	/^   90    CONTINUE$/;"	l	program:SBLAT3	file:
90	tools/eigen/blas/testing/sblat3.f	/^   90    CONTINUE$/;"	l	subroutine:SCHK2	file:
90	tools/eigen/blas/testing/sblat3.f	/^   90    CONTINUE$/;"	l	subroutine:SCHK4	file:
90	tools/eigen/blas/testing/sblat3.f	/^   90    CONTINUE$/;"	l	subroutine:SMAKE	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90                   CONTINUE$/;"	l	subroutine:ZCHK6	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90          CONTINUE$/;"	l	subroutine:ZCHK1	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90          CONTINUE$/;"	l	subroutine:ZCHK4	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90       CONTINUE$/;"	l	subroutine:ZCHK2	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90       CONTINUE$/;"	l	subroutine:ZCHK3	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90    CONTINUE$/;"	l	subroutine:ZCHK5	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90    CONTINUE$/;"	l	subroutine:ZMAKE	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90 CONTINUE$/;"	l	program:ZBLAT2	file:
90	tools/eigen/blas/testing/zblat2.f	/^   90 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90                CONTINUE$/;"	l	subroutine:ZCHK3	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90             CONTINUE$/;"	l	subroutine:ZCHK5	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90          CONTINUE$/;"	l	subroutine:ZMMCH	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90       CONTINUE$/;"	l	subroutine:ZCHK1	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90    CONTINUE$/;"	l	program:ZBLAT3	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90    CONTINUE$/;"	l	subroutine:ZCHK2	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90    CONTINUE$/;"	l	subroutine:ZCHK4	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90    CONTINUE$/;"	l	subroutine:ZMAKE	file:
90	tools/eigen/blas/testing/zblat3.f	/^   90 INFOT = 1$/;"	l	subroutine:ZCHKE	file:
90	tools/eigen/lapack/clarfb.f	/^   90          CONTINUE$/;"	l	subroutine:CLARFB	file:
90	tools/eigen/lapack/dlarfb.f	/^   90          CONTINUE$/;"	l	subroutine:DLARFB	file:
90	tools/eigen/lapack/slarfb.f	/^   90          CONTINUE$/;"	l	subroutine:SLARFB	file:
90	tools/eigen/lapack/zlarfb.f	/^   90          CONTINUE$/;"	l	subroutine:ZLARFB	file:
9980	tools/eigen/blas/testing/cblat2.f	/^ 9980 FORMAT( ' ERROR-EXITS WILL NOT BE TESTED' )$/;"	l	program:CBLAT2	file:
9980	tools/eigen/blas/testing/dblat2.f	/^ 9980 FORMAT( ' ERROR-EXITS WILL NOT BE TESTED' )$/;"	l	program:DBLAT2	file:
9980	tools/eigen/blas/testing/sblat2.f	/^ 9980 FORMAT( ' ERROR-EXITS WILL NOT BE TESTED' )$/;"	l	program:SBLAT2	file:
9980	tools/eigen/blas/testing/zblat2.f	/^ 9980 FORMAT( ' ERROR-EXITS WILL NOT BE TESTED' )$/;"	l	program:ZBLAT2	file:
9981	tools/eigen/blas/testing/cblat2.f	/^ 9981 FORMAT( \/' ******* FATAL ERROR - TESTS ABANDONED *******' )$/;"	l	program:CBLAT2	file:
9981	tools/eigen/blas/testing/dblat2.f	/^ 9981 FORMAT( \/' ******* FATAL ERROR - TESTS ABANDONED *******' )$/;"	l	program:DBLAT2	file:
9981	tools/eigen/blas/testing/sblat2.f	/^ 9981 FORMAT( \/' ******* FATAL ERROR - TESTS ABANDONED *******' )$/;"	l	program:SBLAT2	file:
9981	tools/eigen/blas/testing/zblat2.f	/^ 9981 FORMAT( \/' ******* FATAL ERROR - TESTS ABANDONED *******' )$/;"	l	program:ZBLAT2	file:
9982	tools/eigen/blas/testing/cblat2.f	/^ 9982 FORMAT( \/' END OF TESTS' )$/;"	l	program:CBLAT2	file:
9982	tools/eigen/blas/testing/dblat2.f	/^ 9982 FORMAT( \/' END OF TESTS' )$/;"	l	program:DBLAT2	file:
9982	tools/eigen/blas/testing/sblat2.f	/^ 9982 FORMAT( \/' END OF TESTS' )$/;"	l	program:SBLAT2	file:
9982	tools/eigen/blas/testing/zblat2.f	/^ 9982 FORMAT( \/' END OF TESTS' )$/;"	l	program:ZBLAT2	file:
9983	tools/eigen/blas/testing/cblat2.f	/^ 9983 FORMAT( 1X, A6, ' WAS NOT TESTED' )$/;"	l	program:CBLAT2	file:
9983	tools/eigen/blas/testing/dblat2.f	/^ 9983 FORMAT( 1X, A6, ' WAS NOT TESTED' )$/;"	l	program:DBLAT2	file:
9983	tools/eigen/blas/testing/sblat2.f	/^ 9983 FORMAT( 1X, A6, ' WAS NOT TESTED' )$/;"	l	program:SBLAT2	file:
9983	tools/eigen/blas/testing/zblat2.f	/^ 9983 FORMAT( 1X, A6, ' WAS NOT TESTED' )$/;"	l	program:ZBLAT2	file:
9984	tools/eigen/blas/testing/cblat2.f	/^ 9984 FORMAT( A6, L2 )$/;"	l	program:CBLAT2	file:
9984	tools/eigen/blas/testing/cblat3.f	/^ 9984 FORMAT( ' ERROR-EXITS WILL NOT BE TESTED' )$/;"	l	program:CBLAT3	file:
9984	tools/eigen/blas/testing/dblat2.f	/^ 9984 FORMAT( A6, L2 )$/;"	l	program:DBLAT2	file:
9984	tools/eigen/blas/testing/dblat3.f	/^ 9984 FORMAT( ' ERROR-EXITS WILL NOT BE TESTED' )$/;"	l	program:DBLAT3	file:
9984	tools/eigen/blas/testing/sblat2.f	/^ 9984 FORMAT( A6, L2 )$/;"	l	program:SBLAT2	file:
9984	tools/eigen/blas/testing/sblat3.f	/^ 9984 FORMAT( ' ERROR-EXITS WILL NOT BE TESTED' )$/;"	l	program:SBLAT3	file:
9984	tools/eigen/blas/testing/zblat2.f	/^ 9984 FORMAT( A6, L2 )$/;"	l	program:ZBLAT2	file:
9984	tools/eigen/blas/testing/zblat3.f	/^ 9984 FORMAT( ' ERROR-EXITS WILL NOT BE TESTED' )$/;"	l	program:ZBLAT3	file:
9985	tools/eigen/blas/testing/cblat2.f	/^ 9985 FORMAT( ' ERROR IN CMVCH -  IN-LINE DOT PRODUCTS ARE BEING EVALU',$/;"	l	program:CBLAT2	file:
9985	tools/eigen/blas/testing/cblat3.f	/^ 9985 FORMAT( \/' ******* FATAL ERROR - TESTS ABANDONED *******' )$/;"	l	program:CBLAT3	file:
9985	tools/eigen/blas/testing/dblat2.f	/^ 9985 FORMAT( ' ERROR IN DMVCH -  IN-LINE DOT PRODUCTS ARE BEING EVALU',$/;"	l	program:DBLAT2	file:
9985	tools/eigen/blas/testing/dblat3.f	/^ 9985 FORMAT( \/' ******* FATAL ERROR - TESTS ABANDONED *******' )$/;"	l	program:DBLAT3	file:
9985	tools/eigen/blas/testing/sblat2.f	/^ 9985 FORMAT( ' ERROR IN SMVCH -  IN-LINE DOT PRODUCTS ARE BEING EVALU',$/;"	l	program:SBLAT2	file:
9985	tools/eigen/blas/testing/sblat3.f	/^ 9985 FORMAT( \/' ******* FATAL ERROR - TESTS ABANDONED *******' )$/;"	l	program:SBLAT3	file:
9985	tools/eigen/blas/testing/zblat2.f	/^ 9985 FORMAT( ' ERROR IN ZMVCH -  IN-LINE DOT PRODUCTS ARE BEING EVALU',$/;"	l	program:ZBLAT2	file:
9985	tools/eigen/blas/testing/zblat3.f	/^ 9985 FORMAT( \/' ******* FATAL ERROR - TESTS ABANDONED *******' )$/;"	l	program:ZBLAT3	file:
9986	tools/eigen/blas/testing/cblat2.f	/^ 9986 FORMAT( ' SUBPROGRAM NAME ', A6, ' NOT RECOGNIZED', \/' ******* T',$/;"	l	program:CBLAT2	file:
9986	tools/eigen/blas/testing/cblat3.f	/^ 9986 FORMAT( \/' END OF TESTS' )$/;"	l	program:CBLAT3	file:
9986	tools/eigen/blas/testing/dblat2.f	/^ 9986 FORMAT( ' SUBPROGRAM NAME ', A6, ' NOT RECOGNIZED', \/' ******* T',$/;"	l	program:DBLAT2	file:
9986	tools/eigen/blas/testing/dblat3.f	/^ 9986 FORMAT( \/' END OF TESTS' )$/;"	l	program:DBLAT3	file:
9986	tools/eigen/blas/testing/sblat2.f	/^ 9986 FORMAT( ' SUBPROGRAM NAME ', A6, ' NOT RECOGNIZED', \/' ******* T',$/;"	l	program:SBLAT2	file:
9986	tools/eigen/blas/testing/sblat3.f	/^ 9986 FORMAT( \/' END OF TESTS' )$/;"	l	program:SBLAT3	file:
9986	tools/eigen/blas/testing/zblat2.f	/^ 9986 FORMAT( ' SUBPROGRAM NAME ', A6, ' NOT RECOGNIZED', \/' ******* T',$/;"	l	program:ZBLAT2	file:
9986	tools/eigen/blas/testing/zblat3.f	/^ 9986 FORMAT( \/' END OF TESTS' )$/;"	l	program:ZBLAT3	file:
9987	tools/eigen/blas/testing/cblat2.f	/^ 9987 FORMAT( ' AMEND DATA FILE OR INCREASE ARRAY SIZES IN PROGRAM',$/;"	l	program:CBLAT2	file:
9987	tools/eigen/blas/testing/cblat3.f	/^ 9987 FORMAT( 1X, A6, ' WAS NOT TESTED' )$/;"	l	program:CBLAT3	file:
9987	tools/eigen/blas/testing/dblat2.f	/^ 9987 FORMAT( ' AMEND DATA FILE OR INCREASE ARRAY SIZES IN PROGRAM',$/;"	l	program:DBLAT2	file:
9987	tools/eigen/blas/testing/dblat3.f	/^ 9987 FORMAT( 1X, A6, ' WAS NOT TESTED' )$/;"	l	program:DBLAT3	file:
9987	tools/eigen/blas/testing/sblat2.f	/^ 9987 FORMAT( ' AMEND DATA FILE OR INCREASE ARRAY SIZES IN PROGRAM',$/;"	l	program:SBLAT2	file:
9987	tools/eigen/blas/testing/sblat3.f	/^ 9987 FORMAT( 1X, A6, ' WAS NOT TESTED' )$/;"	l	program:SBLAT3	file:
9987	tools/eigen/blas/testing/zblat2.f	/^ 9987 FORMAT( ' AMEND DATA FILE OR INCREASE ARRAY SIZES IN PROGRAM',$/;"	l	program:ZBLAT2	file:
9987	tools/eigen/blas/testing/zblat3.f	/^ 9987 FORMAT( 1X, A6, ' WAS NOT TESTED' )$/;"	l	program:ZBLAT3	file:
9988	tools/eigen/blas/testing/cblat2.f	/^ 9988 FORMAT( '   FOR BETA           ',$/;"	l	program:CBLAT2	file:
9988	tools/eigen/blas/testing/cblat3.f	/^ 9988 FORMAT( A6, L2 )$/;"	l	program:CBLAT3	file:
9988	tools/eigen/blas/testing/dblat2.f	/^ 9988 FORMAT( '   FOR BETA           ', 7F6.1 )$/;"	l	program:DBLAT2	file:
9988	tools/eigen/blas/testing/dblat3.f	/^ 9988 FORMAT( A6, L2 )$/;"	l	program:DBLAT3	file:
9988	tools/eigen/blas/testing/sblat2.f	/^ 9988 FORMAT( '   FOR BETA           ', 7F6.1 )$/;"	l	program:SBLAT2	file:
9988	tools/eigen/blas/testing/sblat3.f	/^ 9988 FORMAT( A6, L2 )$/;"	l	program:SBLAT3	file:
9988	tools/eigen/blas/testing/zblat2.f	/^ 9988 FORMAT( '   FOR BETA           ',$/;"	l	program:ZBLAT2	file:
9988	tools/eigen/blas/testing/zblat3.f	/^ 9988 FORMAT( A6, L2 )$/;"	l	program:ZBLAT3	file:
9989	tools/eigen/blas/testing/cblat2.f	/^ 9989 FORMAT( '   FOR ALPHA          ',$/;"	l	program:CBLAT2	file:
9989	tools/eigen/blas/testing/cblat3.f	/^ 9989 FORMAT( ' ERROR IN CMMCH -  IN-LINE DOT PRODUCTS ARE BEING EVALU',$/;"	l	program:CBLAT3	file:
9989	tools/eigen/blas/testing/dblat2.f	/^ 9989 FORMAT( '   FOR ALPHA          ', 7F6.1 )$/;"	l	program:DBLAT2	file:
9989	tools/eigen/blas/testing/dblat3.f	/^ 9989 FORMAT( ' ERROR IN DMMCH -  IN-LINE DOT PRODUCTS ARE BEING EVALU',$/;"	l	program:DBLAT3	file:
9989	tools/eigen/blas/testing/sblat2.f	/^ 9989 FORMAT( '   FOR ALPHA          ', 7F6.1 )$/;"	l	program:SBLAT2	file:
9989	tools/eigen/blas/testing/sblat3.f	/^ 9989 FORMAT( ' ERROR IN SMMCH -  IN-LINE DOT PRODUCTS ARE BEING EVALU',$/;"	l	program:SBLAT3	file:
9989	tools/eigen/blas/testing/zblat2.f	/^ 9989 FORMAT( '   FOR ALPHA          ',$/;"	l	program:ZBLAT2	file:
9989	tools/eigen/blas/testing/zblat3.f	/^ 9989 FORMAT( ' ERROR IN ZMMCH -  IN-LINE DOT PRODUCTS ARE BEING EVALU',$/;"	l	program:ZBLAT3	file:
9990	tools/eigen/blas/testing/cblat2.f	/^ 9990 FORMAT( '   FOR INCX AND INCY  ', 7I6 )$/;"	l	program:CBLAT2	file:
9990	tools/eigen/blas/testing/cblat3.f	/^ 9990 FORMAT( ' SUBPROGRAM NAME ', A6, ' NOT RECOGNIZED', \/' ******* T',$/;"	l	program:CBLAT3	file:
9990	tools/eigen/blas/testing/dblat2.f	/^ 9990 FORMAT( '   FOR INCX AND INCY  ', 7I6 )$/;"	l	program:DBLAT2	file:
9990	tools/eigen/blas/testing/dblat3.f	/^ 9990 FORMAT( ' SUBPROGRAM NAME ', A6, ' NOT RECOGNIZED', \/' ******* T',$/;"	l	program:DBLAT3	file:
9990	tools/eigen/blas/testing/sblat2.f	/^ 9990 FORMAT( '   FOR INCX AND INCY  ', 7I6 )$/;"	l	program:SBLAT2	file:
9990	tools/eigen/blas/testing/sblat3.f	/^ 9990 FORMAT( ' SUBPROGRAM NAME ', A6, ' NOT RECOGNIZED', \/' ******* T',$/;"	l	program:SBLAT3	file:
9990	tools/eigen/blas/testing/zblat2.f	/^ 9990 FORMAT( '   FOR INCX AND INCY  ', 7I6 )$/;"	l	program:ZBLAT2	file:
9990	tools/eigen/blas/testing/zblat3.f	/^ 9990 FORMAT( ' SUBPROGRAM NAME ', A6, ' NOT RECOGNIZED', \/' ******* T',$/;"	l	program:ZBLAT3	file:
9991	tools/eigen/blas/testing/cblat2.f	/^ 9991 FORMAT( '   FOR K              ', 7I6 )$/;"	l	program:CBLAT2	file:
9991	tools/eigen/blas/testing/cblat3.f	/^ 9991 FORMAT( ' AMEND DATA FILE OR INCREASE ARRAY SIZES IN PROGRAM',$/;"	l	program:CBLAT3	file:
9991	tools/eigen/blas/testing/dblat2.f	/^ 9991 FORMAT( '   FOR K              ', 7I6 )$/;"	l	program:DBLAT2	file:
9991	tools/eigen/blas/testing/dblat3.f	/^ 9991 FORMAT( ' AMEND DATA FILE OR INCREASE ARRAY SIZES IN PROGRAM',$/;"	l	program:DBLAT3	file:
9991	tools/eigen/blas/testing/sblat2.f	/^ 9991 FORMAT( '   FOR K              ', 7I6 )$/;"	l	program:SBLAT2	file:
9991	tools/eigen/blas/testing/sblat3.f	/^ 9991 FORMAT( ' AMEND DATA FILE OR INCREASE ARRAY SIZES IN PROGRAM',$/;"	l	program:SBLAT3	file:
9991	tools/eigen/blas/testing/zblat2.f	/^ 9991 FORMAT( '   FOR K              ', 7I6 )$/;"	l	program:ZBLAT2	file:
9991	tools/eigen/blas/testing/zblat3.f	/^ 9991 FORMAT( ' AMEND DATA FILE OR INCREASE ARRAY SIZES IN PROGRAM',$/;"	l	program:ZBLAT3	file:
9992	tools/eigen/blas/testing/cblat2.f	/^ 9992 FORMAT( '   FOR N              ', 9I6 )$/;"	l	program:CBLAT2	file:
9992	tools/eigen/blas/testing/cblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK2	file:
9992	tools/eigen/blas/testing/cblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK3	file:
9992	tools/eigen/blas/testing/cblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK5	file:
9992	tools/eigen/blas/testing/cblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK6	file:
9992	tools/eigen/blas/testing/cblat3.f	/^ 9992 FORMAT( '   FOR BETA           ',$/;"	l	program:CBLAT3	file:
9992	tools/eigen/blas/testing/cblat3.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK4	file:
9992	tools/eigen/blas/testing/cblat3.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK5	file:
9992	tools/eigen/blas/testing/dblat2.f	/^ 9992 FORMAT( '   FOR N              ', 9I6 )$/;"	l	program:DBLAT2	file:
9992	tools/eigen/blas/testing/dblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK2	file:
9992	tools/eigen/blas/testing/dblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK3	file:
9992	tools/eigen/blas/testing/dblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK5	file:
9992	tools/eigen/blas/testing/dblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK6	file:
9992	tools/eigen/blas/testing/dblat3.f	/^ 9992 FORMAT( '   FOR BETA           ', 7F6.1 )$/;"	l	program:DBLAT3	file:
9992	tools/eigen/blas/testing/sblat2.f	/^ 9992 FORMAT( '   FOR N              ', 9I6 )$/;"	l	program:SBLAT2	file:
9992	tools/eigen/blas/testing/sblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK2	file:
9992	tools/eigen/blas/testing/sblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK3	file:
9992	tools/eigen/blas/testing/sblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK5	file:
9992	tools/eigen/blas/testing/sblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK6	file:
9992	tools/eigen/blas/testing/sblat3.f	/^ 9992 FORMAT( '   FOR BETA           ', 7F6.1 )$/;"	l	program:SBLAT3	file:
9992	tools/eigen/blas/testing/zblat2.f	/^ 9992 FORMAT( '   FOR N              ', 9I6 )$/;"	l	program:ZBLAT2	file:
9992	tools/eigen/blas/testing/zblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK2	file:
9992	tools/eigen/blas/testing/zblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK3	file:
9992	tools/eigen/blas/testing/zblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK5	file:
9992	tools/eigen/blas/testing/zblat2.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK6	file:
9992	tools/eigen/blas/testing/zblat3.f	/^ 9992 FORMAT( '   FOR BETA           ',$/;"	l	program:ZBLAT3	file:
9992	tools/eigen/blas/testing/zblat3.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK4	file:
9992	tools/eigen/blas/testing/zblat3.f	/^ 9992 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK5	file:
9993	tools/eigen/blas/testing/cblat2.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK1	file:
9993	tools/eigen/blas/testing/cblat2.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK4	file:
9993	tools/eigen/blas/testing/cblat2.f	/^ 9993 FORMAT( ' TESTS OF THE COMPLEX          LEVEL 2 BLAS', \/\/' THE F',$/;"	l	program:CBLAT2	file:
9993	tools/eigen/blas/testing/cblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:CCHK5	file:
9993	tools/eigen/blas/testing/cblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',(', F4.1, ',',$/;"	l	subroutine:CCHK2	file:
9993	tools/eigen/blas/testing/cblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',(', F4.1, ',',$/;"	l	subroutine:CCHK6	file:
9993	tools/eigen/blas/testing/cblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), I3, ', A,',$/;"	l	subroutine:CCHK3	file:
9993	tools/eigen/blas/testing/cblat3.f	/^ 9993 FORMAT( '   FOR ALPHA          ',$/;"	l	program:CBLAT3	file:
9993	tools/eigen/blas/testing/cblat3.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:CCHK4	file:
9993	tools/eigen/blas/testing/cblat3.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:CCHK5	file:
9993	tools/eigen/blas/testing/dblat2.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK1	file:
9993	tools/eigen/blas/testing/dblat2.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK4	file:
9993	tools/eigen/blas/testing/dblat2.f	/^ 9993 FORMAT( ' TESTS OF THE DOUBLE PRECISION LEVEL 2 BLAS', \/\/' THE F',$/;"	l	program:DBLAT2	file:
9993	tools/eigen/blas/testing/dblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', A,',$/;"	l	subroutine:DCHK2	file:
9993	tools/eigen/blas/testing/dblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:DCHK5	file:
9993	tools/eigen/blas/testing/dblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:DCHK6	file:
9993	tools/eigen/blas/testing/dblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), I3, ', A,',$/;"	l	subroutine:DCHK3	file:
9993	tools/eigen/blas/testing/dblat3.f	/^ 9993 FORMAT( '   FOR ALPHA          ', 7F6.1 )$/;"	l	program:DBLAT3	file:
9993	tools/eigen/blas/testing/dblat3.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK4	file:
9993	tools/eigen/blas/testing/dblat3.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK5	file:
9993	tools/eigen/blas/testing/sblat2.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK1	file:
9993	tools/eigen/blas/testing/sblat2.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK4	file:
9993	tools/eigen/blas/testing/sblat2.f	/^ 9993 FORMAT( ' TESTS OF THE REAL             LEVEL 2 BLAS', \/\/' THE F',$/;"	l	program:SBLAT2	file:
9993	tools/eigen/blas/testing/sblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', A,',$/;"	l	subroutine:SCHK2	file:
9993	tools/eigen/blas/testing/sblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:SCHK5	file:
9993	tools/eigen/blas/testing/sblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:SCHK6	file:
9993	tools/eigen/blas/testing/sblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), I3, ', A,',$/;"	l	subroutine:SCHK3	file:
9993	tools/eigen/blas/testing/sblat3.f	/^ 9993 FORMAT( '   FOR ALPHA          ', 7F6.1 )$/;"	l	program:SBLAT3	file:
9993	tools/eigen/blas/testing/sblat3.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK4	file:
9993	tools/eigen/blas/testing/sblat3.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK5	file:
9993	tools/eigen/blas/testing/zblat2.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK1	file:
9993	tools/eigen/blas/testing/zblat2.f	/^ 9993 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK4	file:
9993	tools/eigen/blas/testing/zblat2.f	/^ 9993 FORMAT( ' TESTS OF THE COMPLEX*16       LEVEL 2 BLAS', \/\/' THE F',$/;"	l	program:ZBLAT2	file:
9993	tools/eigen/blas/testing/zblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:ZCHK5	file:
9993	tools/eigen/blas/testing/zblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',(', F4.1, ',',$/;"	l	subroutine:ZCHK2	file:
9993	tools/eigen/blas/testing/zblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',(', F4.1, ',',$/;"	l	subroutine:ZCHK6	file:
9993	tools/eigen/blas/testing/zblat2.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), I3, ', A,',$/;"	l	subroutine:ZCHK3	file:
9993	tools/eigen/blas/testing/zblat3.f	/^ 9993 FORMAT( '   FOR ALPHA          ',$/;"	l	program:ZBLAT3	file:
9993	tools/eigen/blas/testing/zblat3.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:ZCHK4	file:
9993	tools/eigen/blas/testing/zblat3.f	/^ 9993 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:ZCHK5	file:
9994	tools/eigen/blas/testing/cblat2.f	/^ 9994 FORMAT( ' ABSOLUTE VALUE OF INCX OR INCY IS 0 OR GREATER THAN ',$/;"	l	program:CBLAT2	file:
9994	tools/eigen/blas/testing/cblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 2( I3, ',' ), '(',$/;"	l	subroutine:CCHK1	file:
9994	tools/eigen/blas/testing/cblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 2( I3, ',' ), '(',$/;"	l	subroutine:CCHK2	file:
9994	tools/eigen/blas/testing/cblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:CCHK5	file:
9994	tools/eigen/blas/testing/cblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',(', F4.1, ',',$/;"	l	subroutine:CCHK6	file:
9994	tools/eigen/blas/testing/cblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( I3, ',' ), '(', F4.1, ',', F4.1,$/;"	l	subroutine:CCHK4	file:
9994	tools/eigen/blas/testing/cblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:CCHK3	file:
9994	tools/eigen/blas/testing/cblat3.f	/^ 9994 FORMAT( '   FOR N              ', 9I6 )$/;"	l	program:CBLAT3	file:
9994	tools/eigen/blas/testing/cblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK1	file:
9994	tools/eigen/blas/testing/cblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK2	file:
9994	tools/eigen/blas/testing/cblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:CCHK3	file:
9994	tools/eigen/blas/testing/cblat3.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:CCHK4	file:
9994	tools/eigen/blas/testing/cblat3.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:CCHK5	file:
9994	tools/eigen/blas/testing/dblat2.f	/^ 9994 FORMAT( ' ABSOLUTE VALUE OF INCX OR INCY IS 0 OR GREATER THAN ',$/;"	l	program:DBLAT2	file:
9994	tools/eigen/blas/testing/dblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 2( I3, ',' ), F4.1,$/;"	l	subroutine:DCHK1	file:
9994	tools/eigen/blas/testing/dblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 2( I3, ',' ), F4.1,$/;"	l	subroutine:DCHK2	file:
9994	tools/eigen/blas/testing/dblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:DCHK5	file:
9994	tools/eigen/blas/testing/dblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:DCHK6	file:
9994	tools/eigen/blas/testing/dblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( I3, ',' ), F4.1, ', X,', I2,$/;"	l	subroutine:DCHK4	file:
9994	tools/eigen/blas/testing/dblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:DCHK3	file:
9994	tools/eigen/blas/testing/dblat3.f	/^ 9994 FORMAT( '   FOR N              ', 9I6 )$/;"	l	program:DBLAT3	file:
9994	tools/eigen/blas/testing/dblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK1	file:
9994	tools/eigen/blas/testing/dblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK2	file:
9994	tools/eigen/blas/testing/dblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:DCHK3	file:
9994	tools/eigen/blas/testing/dblat3.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:DCHK4	file:
9994	tools/eigen/blas/testing/dblat3.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:DCHK5	file:
9994	tools/eigen/blas/testing/sblat2.f	/^ 9994 FORMAT( ' ABSOLUTE VALUE OF INCX OR INCY IS 0 OR GREATER THAN ',$/;"	l	program:SBLAT2	file:
9994	tools/eigen/blas/testing/sblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 2( I3, ',' ), F4.1,$/;"	l	subroutine:SCHK1	file:
9994	tools/eigen/blas/testing/sblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 2( I3, ',' ), F4.1,$/;"	l	subroutine:SCHK2	file:
9994	tools/eigen/blas/testing/sblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:SCHK5	file:
9994	tools/eigen/blas/testing/sblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:SCHK6	file:
9994	tools/eigen/blas/testing/sblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( I3, ',' ), F4.1, ', X,', I2,$/;"	l	subroutine:SCHK4	file:
9994	tools/eigen/blas/testing/sblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:SCHK3	file:
9994	tools/eigen/blas/testing/sblat3.f	/^ 9994 FORMAT( '   FOR N              ', 9I6 )$/;"	l	program:SBLAT3	file:
9994	tools/eigen/blas/testing/sblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK1	file:
9994	tools/eigen/blas/testing/sblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK2	file:
9994	tools/eigen/blas/testing/sblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:SCHK3	file:
9994	tools/eigen/blas/testing/sblat3.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:SCHK4	file:
9994	tools/eigen/blas/testing/sblat3.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:SCHK5	file:
9994	tools/eigen/blas/testing/zblat2.f	/^ 9994 FORMAT( ' ABSOLUTE VALUE OF INCX OR INCY IS 0 OR GREATER THAN ',$/;"	l	program:ZBLAT2	file:
9994	tools/eigen/blas/testing/zblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 2( I3, ',' ), '(',$/;"	l	subroutine:ZCHK1	file:
9994	tools/eigen/blas/testing/zblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 2( I3, ',' ), '(',$/;"	l	subroutine:ZCHK2	file:
9994	tools/eigen/blas/testing/zblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', X,',$/;"	l	subroutine:ZCHK5	file:
9994	tools/eigen/blas/testing/zblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',(', F4.1, ',',$/;"	l	subroutine:ZCHK6	file:
9994	tools/eigen/blas/testing/zblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( I3, ',' ), '(', F4.1, ',', F4.1,$/;"	l	subroutine:ZCHK4	file:
9994	tools/eigen/blas/testing/zblat2.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:ZCHK3	file:
9994	tools/eigen/blas/testing/zblat3.f	/^ 9994 FORMAT( '   FOR N              ', 9I6 )$/;"	l	program:ZBLAT3	file:
9994	tools/eigen/blas/testing/zblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK1	file:
9994	tools/eigen/blas/testing/zblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK2	file:
9994	tools/eigen/blas/testing/zblat3.f	/^ 9994 FORMAT( ' ******* FATAL ERROR - ERROR-EXIT TAKEN ON VALID CALL *',$/;"	l	subroutine:ZCHK3	file:
9994	tools/eigen/blas/testing/zblat3.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:ZCHK4	file:
9994	tools/eigen/blas/testing/zblat3.f	/^ 9994 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:ZCHK5	file:
9995	tools/eigen/blas/testing/cblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:CCHK4	file:
9995	tools/eigen/blas/testing/cblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:CCHK5	file:
9995	tools/eigen/blas/testing/cblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:CCHK6	file:
9995	tools/eigen/blas/testing/cblat2.f	/^ 9995 FORMAT( ' VALUE OF K IS LESS THAN 0' )$/;"	l	program:CBLAT2	file:
9995	tools/eigen/blas/testing/cblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 4( I3, ',' ), '(',$/;"	l	subroutine:CCHK1	file:
9995	tools/eigen/blas/testing/cblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',(', F4.1, ',',$/;"	l	subroutine:CCHK2	file:
9995	tools/eigen/blas/testing/cblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), I3, ', AP, ',$/;"	l	subroutine:CCHK3	file:
9995	tools/eigen/blas/testing/cblat3.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:CCHK4	file:
9995	tools/eigen/blas/testing/cblat3.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:CCHK5	file:
9995	tools/eigen/blas/testing/cblat3.f	/^ 9995 FORMAT( ' TESTS OF THE COMPLEX          LEVEL 3 BLAS', \/\/' THE F',$/;"	l	program:CBLAT3	file:
9995	tools/eigen/blas/testing/cblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',''', A1, ''',',$/;"	l	subroutine:CCHK1	file:
9995	tools/eigen/blas/testing/cblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:CCHK2	file:
9995	tools/eigen/blas/testing/cblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 4( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:CCHK3	file:
9995	tools/eigen/blas/testing/dblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:DCHK4	file:
9995	tools/eigen/blas/testing/dblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:DCHK5	file:
9995	tools/eigen/blas/testing/dblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:DCHK6	file:
9995	tools/eigen/blas/testing/dblat2.f	/^ 9995 FORMAT( ' VALUE OF K IS LESS THAN 0' )$/;"	l	program:DBLAT2	file:
9995	tools/eigen/blas/testing/dblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 4( I3, ',' ), F4.1,$/;"	l	subroutine:DCHK1	file:
9995	tools/eigen/blas/testing/dblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', AP',$/;"	l	subroutine:DCHK2	file:
9995	tools/eigen/blas/testing/dblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), I3, ', AP, ',$/;"	l	subroutine:DCHK3	file:
9995	tools/eigen/blas/testing/dblat3.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:DCHK4	file:
9995	tools/eigen/blas/testing/dblat3.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:DCHK5	file:
9995	tools/eigen/blas/testing/dblat3.f	/^ 9995 FORMAT( ' TESTS OF THE DOUBLE PRECISION LEVEL 3 BLAS', \/\/' THE F',$/;"	l	program:DBLAT3	file:
9995	tools/eigen/blas/testing/dblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',''', A1, ''',',$/;"	l	subroutine:DCHK1	file:
9995	tools/eigen/blas/testing/dblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:DCHK2	file:
9995	tools/eigen/blas/testing/dblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 4( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:DCHK3	file:
9995	tools/eigen/blas/testing/sblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:SCHK4	file:
9995	tools/eigen/blas/testing/sblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:SCHK5	file:
9995	tools/eigen/blas/testing/sblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:SCHK6	file:
9995	tools/eigen/blas/testing/sblat2.f	/^ 9995 FORMAT( ' VALUE OF K IS LESS THAN 0' )$/;"	l	program:SBLAT2	file:
9995	tools/eigen/blas/testing/sblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 4( I3, ',' ), F4.1,$/;"	l	subroutine:SCHK1	file:
9995	tools/eigen/blas/testing/sblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',', F4.1, ', AP',$/;"	l	subroutine:SCHK2	file:
9995	tools/eigen/blas/testing/sblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), I3, ', AP, ',$/;"	l	subroutine:SCHK3	file:
9995	tools/eigen/blas/testing/sblat3.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:SCHK4	file:
9995	tools/eigen/blas/testing/sblat3.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:SCHK5	file:
9995	tools/eigen/blas/testing/sblat3.f	/^ 9995 FORMAT( ' TESTS OF THE REAL             LEVEL 3 BLAS', \/\/' THE F',$/;"	l	program:SBLAT3	file:
9995	tools/eigen/blas/testing/sblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',''', A1, ''',',$/;"	l	subroutine:SCHK1	file:
9995	tools/eigen/blas/testing/sblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:SCHK2	file:
9995	tools/eigen/blas/testing/sblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 4( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:SCHK3	file:
9995	tools/eigen/blas/testing/zblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:ZCHK4	file:
9995	tools/eigen/blas/testing/zblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:ZCHK5	file:
9995	tools/eigen/blas/testing/zblat2.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:ZCHK6	file:
9995	tools/eigen/blas/testing/zblat2.f	/^ 9995 FORMAT( ' VALUE OF K IS LESS THAN 0' )$/;"	l	program:ZBLAT2	file:
9995	tools/eigen/blas/testing/zblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', 4( I3, ',' ), '(',$/;"	l	subroutine:ZCHK1	file:
9995	tools/eigen/blas/testing/zblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',', I3, ',(', F4.1, ',',$/;"	l	subroutine:ZCHK2	file:
9995	tools/eigen/blas/testing/zblat2.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 3( '''', A1, ''',' ), I3, ', AP, ',$/;"	l	subroutine:ZCHK3	file:
9995	tools/eigen/blas/testing/zblat3.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:ZCHK4	file:
9995	tools/eigen/blas/testing/zblat3.f	/^ 9995 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:ZCHK5	file:
9995	tools/eigen/blas/testing/zblat3.f	/^ 9995 FORMAT( ' TESTS OF THE COMPLEX*16       LEVEL 3 BLAS', \/\/' THE F',$/;"	l	program:ZBLAT3	file:
9995	tools/eigen/blas/testing/zblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(''', A1, ''',''', A1, ''',',$/;"	l	subroutine:ZCHK1	file:
9995	tools/eigen/blas/testing/zblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 2( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:ZCHK2	file:
9995	tools/eigen/blas/testing/zblat3.f	/^ 9995 FORMAT( 1X, I6, ': ', A6, '(', 4( '''', A1, ''',' ), 2( I3, ',' ),$/;"	l	subroutine:ZCHK3	file:
9996	tools/eigen/blas/testing/cblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK1	file:
9996	tools/eigen/blas/testing/cblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK2	file:
9996	tools/eigen/blas/testing/cblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK3	file:
9996	tools/eigen/blas/testing/cblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK4	file:
9996	tools/eigen/blas/testing/cblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK5	file:
9996	tools/eigen/blas/testing/cblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK6	file:
9996	tools/eigen/blas/testing/cblat2.f	/^ 9996 FORMAT( ' VALUE OF N IS LESS THAN 0 OR GREATER THAN ', I2 )$/;"	l	program:CBLAT2	file:
9996	tools/eigen/blas/testing/cblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK1	file:
9996	tools/eigen/blas/testing/cblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK2	file:
9996	tools/eigen/blas/testing/cblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK3	file:
9996	tools/eigen/blas/testing/cblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK4	file:
9996	tools/eigen/blas/testing/cblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:CCHK5	file:
9996	tools/eigen/blas/testing/cblat3.f	/^ 9996 FORMAT( ' VALUE OF N IS LESS THAN 0 OR GREATER THAN ', I2 )$/;"	l	program:CBLAT3	file:
9996	tools/eigen/blas/testing/dblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK1	file:
9996	tools/eigen/blas/testing/dblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK2	file:
9996	tools/eigen/blas/testing/dblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK3	file:
9996	tools/eigen/blas/testing/dblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK4	file:
9996	tools/eigen/blas/testing/dblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK5	file:
9996	tools/eigen/blas/testing/dblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK6	file:
9996	tools/eigen/blas/testing/dblat2.f	/^ 9996 FORMAT( ' VALUE OF N IS LESS THAN 0 OR GREATER THAN ', I2 )$/;"	l	program:DBLAT2	file:
9996	tools/eigen/blas/testing/dblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK1	file:
9996	tools/eigen/blas/testing/dblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK2	file:
9996	tools/eigen/blas/testing/dblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK3	file:
9996	tools/eigen/blas/testing/dblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK4	file:
9996	tools/eigen/blas/testing/dblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:DCHK5	file:
9996	tools/eigen/blas/testing/dblat3.f	/^ 9996 FORMAT( ' VALUE OF N IS LESS THAN 0 OR GREATER THAN ', I2 )$/;"	l	program:DBLAT3	file:
9996	tools/eigen/blas/testing/sblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK1	file:
9996	tools/eigen/blas/testing/sblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK2	file:
9996	tools/eigen/blas/testing/sblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK3	file:
9996	tools/eigen/blas/testing/sblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK4	file:
9996	tools/eigen/blas/testing/sblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK5	file:
9996	tools/eigen/blas/testing/sblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK6	file:
9996	tools/eigen/blas/testing/sblat2.f	/^ 9996 FORMAT( ' VALUE OF N IS LESS THAN 0 OR GREATER THAN ', I2 )$/;"	l	program:SBLAT2	file:
9996	tools/eigen/blas/testing/sblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK1	file:
9996	tools/eigen/blas/testing/sblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK2	file:
9996	tools/eigen/blas/testing/sblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK3	file:
9996	tools/eigen/blas/testing/sblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK4	file:
9996	tools/eigen/blas/testing/sblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:SCHK5	file:
9996	tools/eigen/blas/testing/sblat3.f	/^ 9996 FORMAT( ' VALUE OF N IS LESS THAN 0 OR GREATER THAN ', I2 )$/;"	l	program:SBLAT3	file:
9996	tools/eigen/blas/testing/zblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK1	file:
9996	tools/eigen/blas/testing/zblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK2	file:
9996	tools/eigen/blas/testing/zblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK3	file:
9996	tools/eigen/blas/testing/zblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK4	file:
9996	tools/eigen/blas/testing/zblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK5	file:
9996	tools/eigen/blas/testing/zblat2.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK6	file:
9996	tools/eigen/blas/testing/zblat2.f	/^ 9996 FORMAT( ' VALUE OF N IS LESS THAN 0 OR GREATER THAN ', I2 )$/;"	l	program:ZBLAT2	file:
9996	tools/eigen/blas/testing/zblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK1	file:
9996	tools/eigen/blas/testing/zblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK2	file:
9996	tools/eigen/blas/testing/zblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK3	file:
9996	tools/eigen/blas/testing/zblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK4	file:
9996	tools/eigen/blas/testing/zblat3.f	/^ 9996 FORMAT( ' ******* ', A6, ' FAILED ON CALL NUMBER:' )$/;"	l	subroutine:ZCHK5	file:
9996	tools/eigen/blas/testing/zblat3.f	/^ 9996 FORMAT( ' VALUE OF N IS LESS THAN 0 OR GREATER THAN ', I2 )$/;"	l	program:ZBLAT3	file:
9997	tools/eigen/blas/testing/cblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK1	file:
9997	tools/eigen/blas/testing/cblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK2	file:
9997	tools/eigen/blas/testing/cblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK3	file:
9997	tools/eigen/blas/testing/cblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK4	file:
9997	tools/eigen/blas/testing/cblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK5	file:
9997	tools/eigen/blas/testing/cblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK6	file:
9997	tools/eigen/blas/testing/cblat2.f	/^ 9997 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6,$/;"	l	subroutine:XERBLA	file:
9997	tools/eigen/blas/testing/cblat2.f	/^ 9997 FORMAT( ' NUMBER OF VALUES OF ', A, ' IS LESS THAN 1 OR GREATER ',$/;"	l	program:CBLAT2	file:
9997	tools/eigen/blas/testing/cblat3.f	/^ 9997 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:CMMCH	file:
9997	tools/eigen/blas/testing/cblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK1	file:
9997	tools/eigen/blas/testing/cblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK2	file:
9997	tools/eigen/blas/testing/cblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK3	file:
9997	tools/eigen/blas/testing/cblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK4	file:
9997	tools/eigen/blas/testing/cblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:CCHK5	file:
9997	tools/eigen/blas/testing/cblat3.f	/^ 9997 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6,$/;"	l	subroutine:XERBLA	file:
9997	tools/eigen/blas/testing/cblat3.f	/^ 9997 FORMAT( ' NUMBER OF VALUES OF ', A, ' IS LESS THAN 1 OR GREATER ',$/;"	l	program:CBLAT3	file:
9997	tools/eigen/blas/testing/dblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK1	file:
9997	tools/eigen/blas/testing/dblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK2	file:
9997	tools/eigen/blas/testing/dblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK3	file:
9997	tools/eigen/blas/testing/dblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK4	file:
9997	tools/eigen/blas/testing/dblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK5	file:
9997	tools/eigen/blas/testing/dblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK6	file:
9997	tools/eigen/blas/testing/dblat2.f	/^ 9997 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6,$/;"	l	subroutine:XERBLA	file:
9997	tools/eigen/blas/testing/dblat2.f	/^ 9997 FORMAT( ' NUMBER OF VALUES OF ', A, ' IS LESS THAN 1 OR GREATER ',$/;"	l	program:DBLAT2	file:
9997	tools/eigen/blas/testing/dblat3.f	/^ 9997 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:DMMCH	file:
9997	tools/eigen/blas/testing/dblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK1	file:
9997	tools/eigen/blas/testing/dblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK2	file:
9997	tools/eigen/blas/testing/dblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK3	file:
9997	tools/eigen/blas/testing/dblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK4	file:
9997	tools/eigen/blas/testing/dblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:DCHK5	file:
9997	tools/eigen/blas/testing/dblat3.f	/^ 9997 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6,$/;"	l	subroutine:XERBLA	file:
9997	tools/eigen/blas/testing/dblat3.f	/^ 9997 FORMAT( ' NUMBER OF VALUES OF ', A, ' IS LESS THAN 1 OR GREATER ',$/;"	l	program:DBLAT3	file:
9997	tools/eigen/blas/testing/sblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK1	file:
9997	tools/eigen/blas/testing/sblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK2	file:
9997	tools/eigen/blas/testing/sblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK3	file:
9997	tools/eigen/blas/testing/sblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK4	file:
9997	tools/eigen/blas/testing/sblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK5	file:
9997	tools/eigen/blas/testing/sblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK6	file:
9997	tools/eigen/blas/testing/sblat2.f	/^ 9997 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6,$/;"	l	subroutine:XERBLA	file:
9997	tools/eigen/blas/testing/sblat2.f	/^ 9997 FORMAT( ' NUMBER OF VALUES OF ', A, ' IS LESS THAN 1 OR GREATER ',$/;"	l	program:SBLAT2	file:
9997	tools/eigen/blas/testing/sblat3.f	/^ 9997 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:SMMCH	file:
9997	tools/eigen/blas/testing/sblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK1	file:
9997	tools/eigen/blas/testing/sblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK2	file:
9997	tools/eigen/blas/testing/sblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK3	file:
9997	tools/eigen/blas/testing/sblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK4	file:
9997	tools/eigen/blas/testing/sblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:SCHK5	file:
9997	tools/eigen/blas/testing/sblat3.f	/^ 9997 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6,$/;"	l	subroutine:XERBLA	file:
9997	tools/eigen/blas/testing/sblat3.f	/^ 9997 FORMAT( ' NUMBER OF VALUES OF ', A, ' IS LESS THAN 1 OR GREATER ',$/;"	l	program:SBLAT3	file:
9997	tools/eigen/blas/testing/zblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK1	file:
9997	tools/eigen/blas/testing/zblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK2	file:
9997	tools/eigen/blas/testing/zblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK3	file:
9997	tools/eigen/blas/testing/zblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK4	file:
9997	tools/eigen/blas/testing/zblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK5	file:
9997	tools/eigen/blas/testing/zblat2.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK6	file:
9997	tools/eigen/blas/testing/zblat2.f	/^ 9997 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6,$/;"	l	subroutine:XERBLA	file:
9997	tools/eigen/blas/testing/zblat2.f	/^ 9997 FORMAT( ' NUMBER OF VALUES OF ', A, ' IS LESS THAN 1 OR GREATER ',$/;"	l	program:ZBLAT2	file:
9997	tools/eigen/blas/testing/zblat3.f	/^ 9997 FORMAT( '      THESE ARE THE RESULTS FOR COLUMN ', I3 )$/;"	l	subroutine:ZMMCH	file:
9997	tools/eigen/blas/testing/zblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK1	file:
9997	tools/eigen/blas/testing/zblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK2	file:
9997	tools/eigen/blas/testing/zblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK3	file:
9997	tools/eigen/blas/testing/zblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK4	file:
9997	tools/eigen/blas/testing/zblat3.f	/^ 9997 FORMAT( ' ', A6, ' COMPLETED THE COMPUTATIONAL TESTS (', I6, ' C',$/;"	l	subroutine:ZCHK5	file:
9997	tools/eigen/blas/testing/zblat3.f	/^ 9997 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6,$/;"	l	subroutine:XERBLA	file:
9997	tools/eigen/blas/testing/zblat3.f	/^ 9997 FORMAT( ' NUMBER OF VALUES OF ', A, ' IS LESS THAN 1 OR GREATER ',$/;"	l	program:ZBLAT3	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' ******* ', A6, ' FAILED THE TESTS OF ERROR-EXITS *****',$/;"	l	subroutine:CCHKE	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK1	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK2	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK3	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK4	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK5	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK6	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' ******* XERBLA WAS CALLED WITH SRNAME = ', A6, ' INSTE',$/;"	l	subroutine:XERBLA	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( ' RELATIVE MACHINE PRECISION IS TAKEN TO BE', 1P, E9.1 )$/;"	l	program:CBLAT2	file:
9998	tools/eigen/blas/testing/cblat2.f	/^ 9998 FORMAT( 1X, I7, 2( '  (', G15.6, ',', G15.6, ')' ) )$/;"	l	subroutine:CMVCH	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( ' ******* ', A6, ' FAILED THE TESTS OF ERROR-EXITS *****',$/;"	l	subroutine:CCHKE	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK1	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK2	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK3	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK4	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:CCHK5	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( ' ******* XERBLA WAS CALLED WITH SRNAME = ', A6, ' INSTE',$/;"	l	subroutine:XERBLA	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( ' RELATIVE MACHINE PRECISION IS TAKEN TO BE', 1P, E9.1 )$/;"	l	program:CBLAT3	file:
9998	tools/eigen/blas/testing/cblat3.f	/^ 9998 FORMAT( 1X, I7, 2( '  (', G15.6, ',', G15.6, ')' ) )$/;"	l	subroutine:CMMCH	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' ******* ', A6, ' FAILED THE TESTS OF ERROR-EXITS *****',$/;"	l	subroutine:DCHKE	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK1	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK2	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK3	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK4	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK5	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK6	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' ******* XERBLA WAS CALLED WITH SRNAME = ', A6, ' INSTE',$/;"	l	subroutine:XERBLA	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( ' RELATIVE MACHINE PRECISION IS TAKEN TO BE', 1P, D9.1 )$/;"	l	program:DBLAT2	file:
9998	tools/eigen/blas/testing/dblat2.f	/^ 9998 FORMAT( 1X, I7, 2G18.6 )$/;"	l	subroutine:DMVCH	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( ' ******* ', A6, ' FAILED THE TESTS OF ERROR-EXITS *****',$/;"	l	subroutine:DCHKE	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK1	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK2	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK3	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK4	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:DCHK5	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( ' ******* XERBLA WAS CALLED WITH SRNAME = ', A6, ' INSTE',$/;"	l	subroutine:XERBLA	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( ' RELATIVE MACHINE PRECISION IS TAKEN TO BE', 1P, D9.1 )$/;"	l	program:DBLAT3	file:
9998	tools/eigen/blas/testing/dblat3.f	/^ 9998 FORMAT( 1X, I7, 2G18.6 )$/;"	l	subroutine:DMMCH	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' ******* ', A6, ' FAILED THE TESTS OF ERROR-EXITS *****',$/;"	l	subroutine:SCHKE	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK1	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK2	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK3	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK4	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK5	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK6	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' ******* XERBLA WAS CALLED WITH SRNAME = ', A6, ' INSTE',$/;"	l	subroutine:XERBLA	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( ' RELATIVE MACHINE PRECISION IS TAKEN TO BE', 1P, E9.1 )$/;"	l	program:SBLAT2	file:
9998	tools/eigen/blas/testing/sblat2.f	/^ 9998 FORMAT( 1X, I7, 2G18.6 )$/;"	l	subroutine:SMVCH	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( ' ******* ', A6, ' FAILED THE TESTS OF ERROR-EXITS *****',$/;"	l	subroutine:SCHKE	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK1	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK2	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK3	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK4	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:SCHK5	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( ' ******* XERBLA WAS CALLED WITH SRNAME = ', A6, ' INSTE',$/;"	l	subroutine:XERBLA	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( ' RELATIVE MACHINE PRECISION IS TAKEN TO BE', 1P, E9.1 )$/;"	l	program:SBLAT3	file:
9998	tools/eigen/blas/testing/sblat3.f	/^ 9998 FORMAT( 1X, I7, 2G18.6 )$/;"	l	subroutine:SMMCH	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' ******* ', A6, ' FAILED THE TESTS OF ERROR-EXITS *****',$/;"	l	subroutine:ZCHKE	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK1	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK2	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK3	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK4	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK5	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK6	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' ******* XERBLA WAS CALLED WITH SRNAME = ', A6, ' INSTE',$/;"	l	subroutine:XERBLA	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( ' RELATIVE MACHINE PRECISION IS TAKEN TO BE', 1P, D9.1 )$/;"	l	program:ZBLAT2	file:
9998	tools/eigen/blas/testing/zblat2.f	/^ 9998 FORMAT( 1X, I7, 2( '  (', G15.6, ',', G15.6, ')' ) )$/;"	l	subroutine:ZMVCH	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( ' ******* ', A6, ' FAILED THE TESTS OF ERROR-EXITS *****',$/;"	l	subroutine:ZCHKE	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK1	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK2	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK3	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK4	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( ' ******* FATAL ERROR - PARAMETER NUMBER ', I2, ' WAS CH',$/;"	l	subroutine:ZCHK5	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( ' ******* XERBLA WAS CALLED WITH SRNAME = ', A6, ' INSTE',$/;"	l	subroutine:XERBLA	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( ' RELATIVE MACHINE PRECISION IS TAKEN TO BE', 1P, D9.1 )$/;"	l	program:ZBLAT3	file:
9998	tools/eigen/blas/testing/zblat3.f	/^ 9998 FORMAT( 1X, I7, 2( '  (', G15.6, ',', G15.6, ')' ) )$/;"	l	subroutine:ZMMCH	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK1	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK2	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK3	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK4	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK5	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK6	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE TESTS OF ERROR-EXITS' )$/;"	l	subroutine:CCHKE	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ***** ILLEGAL VALUE OF PARAMETER NUMBER ', I2, ' NOT D',$/;"	l	subroutine:CHKXER	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ******* FATAL ERROR - COMPUTED RESULT IS LESS THAN HAL',$/;"	l	subroutine:CMVCH	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6, ' INSTEAD',$/;"	l	subroutine:XERBLA	file:
9999	tools/eigen/blas/testing/cblat2.f	/^ 9999 FORMAT( ' ROUTINES PASS COMPUTATIONAL TESTS IF TEST RATIO IS LES',$/;"	l	program:CBLAT2	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK1	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK2	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK3	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK4	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:CCHK5	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE TESTS OF ERROR-EXITS' )$/;"	l	subroutine:CCHKE	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ***** ILLEGAL VALUE OF PARAMETER NUMBER ', I2, ' NOT D',$/;"	l	subroutine:CHKXER	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ******* FATAL ERROR - COMPUTED RESULT IS LESS THAN HAL',$/;"	l	subroutine:CMMCH	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6, ' INSTEAD',$/;"	l	subroutine:XERBLA	file:
9999	tools/eigen/blas/testing/cblat3.f	/^ 9999 FORMAT( ' ROUTINES PASS COMPUTATIONAL TESTS IF TEST RATIO IS LES',$/;"	l	program:CBLAT3	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK1	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK2	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK3	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK4	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK5	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK6	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE TESTS OF ERROR-EXITS' )$/;"	l	subroutine:DCHKE	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ***** ILLEGAL VALUE OF PARAMETER NUMBER ', I2, ' NOT D',$/;"	l	subroutine:CHKXER	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ******* FATAL ERROR - COMPUTED RESULT IS LESS THAN HAL',$/;"	l	subroutine:DMVCH	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6, ' INSTEAD',$/;"	l	subroutine:XERBLA	file:
9999	tools/eigen/blas/testing/dblat2.f	/^ 9999 FORMAT( ' ROUTINES PASS COMPUTATIONAL TESTS IF TEST RATIO IS LES',$/;"	l	program:DBLAT2	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK1	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK2	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK3	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK4	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:DCHK5	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE TESTS OF ERROR-EXITS' )$/;"	l	subroutine:DCHKE	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ***** ILLEGAL VALUE OF PARAMETER NUMBER ', I2, ' NOT D',$/;"	l	subroutine:CHKXER	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ******* FATAL ERROR - COMPUTED RESULT IS LESS THAN HAL',$/;"	l	subroutine:DMMCH	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6, ' INSTEAD',$/;"	l	subroutine:XERBLA	file:
9999	tools/eigen/blas/testing/dblat3.f	/^ 9999 FORMAT( ' ROUTINES PASS COMPUTATIONAL TESTS IF TEST RATIO IS LES',$/;"	l	program:DBLAT3	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK1	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK2	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK3	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK4	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK5	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK6	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE TESTS OF ERROR-EXITS' )$/;"	l	subroutine:SCHKE	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ***** ILLEGAL VALUE OF PARAMETER NUMBER ', I2, ' NOT D',$/;"	l	subroutine:CHKXER	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ******* FATAL ERROR - COMPUTED RESULT IS LESS THAN HAL',$/;"	l	subroutine:SMVCH	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6, ' INSTEAD',$/;"	l	subroutine:XERBLA	file:
9999	tools/eigen/blas/testing/sblat2.f	/^ 9999 FORMAT( ' ROUTINES PASS COMPUTATIONAL TESTS IF TEST RATIO IS LES',$/;"	l	program:SBLAT2	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK1	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK2	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK3	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK4	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:SCHK5	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE TESTS OF ERROR-EXITS' )$/;"	l	subroutine:SCHKE	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ***** ILLEGAL VALUE OF PARAMETER NUMBER ', I2, ' NOT D',$/;"	l	subroutine:CHKXER	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ******* FATAL ERROR - COMPUTED RESULT IS LESS THAN HAL',$/;"	l	subroutine:SMMCH	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6, ' INSTEAD',$/;"	l	subroutine:XERBLA	file:
9999	tools/eigen/blas/testing/sblat3.f	/^ 9999 FORMAT( ' ROUTINES PASS COMPUTATIONAL TESTS IF TEST RATIO IS LES',$/;"	l	program:SBLAT3	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK1	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK2	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK3	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK4	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK5	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK6	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE TESTS OF ERROR-EXITS' )$/;"	l	subroutine:ZCHKE	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ***** ILLEGAL VALUE OF PARAMETER NUMBER ', I2, ' NOT D',$/;"	l	subroutine:CHKXER	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ******* FATAL ERROR - COMPUTED RESULT IS LESS THAN HAL',$/;"	l	subroutine:ZMVCH	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6, ' INSTEAD',$/;"	l	subroutine:XERBLA	file:
9999	tools/eigen/blas/testing/zblat2.f	/^ 9999 FORMAT( ' ROUTINES PASS COMPUTATIONAL TESTS IF TEST RATIO IS LES',$/;"	l	program:ZBLAT2	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK1	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK2	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK3	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK4	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE COMPUTATIONAL TESTS (', I6, ' CALL',$/;"	l	subroutine:ZCHK5	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ', A6, ' PASSED THE TESTS OF ERROR-EXITS' )$/;"	l	subroutine:ZCHKE	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ***** ILLEGAL VALUE OF PARAMETER NUMBER ', I2, ' NOT D',$/;"	l	subroutine:CHKXER	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ******* FATAL ERROR - COMPUTED RESULT IS LESS THAN HAL',$/;"	l	subroutine:ZMMCH	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ******* XERBLA WAS CALLED WITH INFO = ', I6, ' INSTEAD',$/;"	l	subroutine:XERBLA	file:
9999	tools/eigen/blas/testing/zblat3.f	/^ 9999 FORMAT( ' ROUTINES PASS COMPUTATIONAL TESTS IF TEST RATIO IS LES',$/;"	l	program:ZBLAT3	file:
99997	tools/eigen/blas/testing/cblat1.f	/^99997 FORMAT (1X,I4,I3,3I5,2I36,I12)$/;"	l	subroutine:ITEST1	file:
99997	tools/eigen/blas/testing/cblat1.f	/^99997 FORMAT (1X,I4,I3,3I5,I3,2E36.8,2E12.4)$/;"	l	subroutine:STEST	file:
99997	tools/eigen/blas/testing/dblat1.f	/^99997 FORMAT (1X,I4,I3,1I5,I3,2E36.8,2E12.4)$/;"	l	subroutine:TESTDSDOT	file:
99997	tools/eigen/blas/testing/dblat1.f	/^99997 FORMAT (1X,I4,I3,2I5,2I36,I12)$/;"	l	subroutine:ITEST1	file:
99997	tools/eigen/blas/testing/dblat1.f	/^99997 FORMAT (1X,I4,I3,2I5,I3,2D36.8,2D12.4)$/;"	l	subroutine:STEST	file:
99997	tools/eigen/blas/testing/sblat1.f	/^99997 FORMAT (1X,I4,I3,2I5,2I36,I12)$/;"	l	subroutine:ITEST1	file:
99997	tools/eigen/blas/testing/sblat1.f	/^99997 FORMAT (1X,I4,I3,2I5,I3,2E36.8,2E12.4)$/;"	l	subroutine:STEST	file:
99997	tools/eigen/blas/testing/zblat1.f	/^99997 FORMAT (1X,I4,I3,3I5,2I36,I12)$/;"	l	subroutine:ITEST1	file:
99997	tools/eigen/blas/testing/zblat1.f	/^99997 FORMAT (1X,I4,I3,3I5,I3,2D36.8,2D12.4)$/;"	l	subroutine:STEST	file:
99998	tools/eigen/blas/testing/cblat1.f	/^99998 FORMAT ('                                    ----- PASS -----')$/;"	l	program:CBLAT1	file:
99998	tools/eigen/blas/testing/cblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY MODE                               ',$/;"	l	subroutine:ITEST1	file:
99998	tools/eigen/blas/testing/cblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY MODE  I                            ',$/;"	l	subroutine:STEST	file:
99998	tools/eigen/blas/testing/dblat1.f	/^99998 FORMAT ('                                    ----- PASS -----')$/;"	l	program:DBLAT1	file:
99998	tools/eigen/blas/testing/dblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY                               ',$/;"	l	subroutine:ITEST1	file:
99998	tools/eigen/blas/testing/dblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY                           ',$/;"	l	subroutine:TESTDSDOT	file:
99998	tools/eigen/blas/testing/dblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY  I                            ',$/;"	l	subroutine:STEST	file:
99998	tools/eigen/blas/testing/sblat1.f	/^99998 FORMAT ('                                    ----- PASS -----')$/;"	l	program:SBLAT1	file:
99998	tools/eigen/blas/testing/sblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY                               ',$/;"	l	subroutine:ITEST1	file:
99998	tools/eigen/blas/testing/sblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY  I                            ',$/;"	l	subroutine:STEST	file:
99998	tools/eigen/blas/testing/zblat1.f	/^99998 FORMAT ('                                    ----- PASS -----')$/;"	l	program:ZBLAT1	file:
99998	tools/eigen/blas/testing/zblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY MODE                               ',$/;"	l	subroutine:ITEST1	file:
99998	tools/eigen/blas/testing/zblat1.f	/^99998 FORMAT (\/' CASE  N INCX INCY MODE  I                            ',$/;"	l	subroutine:STEST	file:
99999	tools/eigen/blas/testing/cblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:ITEST1	file:
99999	tools/eigen/blas/testing/cblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:STEST	file:
99999	tools/eigen/blas/testing/cblat1.f	/^99999 FORMAT (' Complex BLAS Test Program Results',\/1X)$/;"	l	program:CBLAT1	file:
99999	tools/eigen/blas/testing/cblat1.f	/^99999 FORMAT (\/' Test of subprogram number',I3,12X,A6)$/;"	l	subroutine:HEADER	file:
99999	tools/eigen/blas/testing/dblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:ITEST1	file:
99999	tools/eigen/blas/testing/dblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:STEST	file:
99999	tools/eigen/blas/testing/dblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:TESTDSDOT	file:
99999	tools/eigen/blas/testing/dblat1.f	/^99999 FORMAT (' Real BLAS Test Program Results',\/1X)$/;"	l	program:DBLAT1	file:
99999	tools/eigen/blas/testing/dblat1.f	/^99999 FORMAT (\/' Test of subprogram number',I3,12X,A6)$/;"	l	subroutine:HEADER	file:
99999	tools/eigen/blas/testing/sblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:ITEST1	file:
99999	tools/eigen/blas/testing/sblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:STEST	file:
99999	tools/eigen/blas/testing/sblat1.f	/^99999 FORMAT (' Real BLAS Test Program Results',\/1X)$/;"	l	program:SBLAT1	file:
99999	tools/eigen/blas/testing/sblat1.f	/^99999 FORMAT (\/' Test of subprogram number',I3,12X,A6)$/;"	l	subroutine:HEADER	file:
99999	tools/eigen/blas/testing/zblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:ITEST1	file:
99999	tools/eigen/blas/testing/zblat1.f	/^99999 FORMAT ('                                       FAIL')$/;"	l	subroutine:STEST	file:
99999	tools/eigen/blas/testing/zblat1.f	/^99999 FORMAT (' Complex BLAS Test Program Results',\/1X)$/;"	l	program:ZBLAT1	file:
99999	tools/eigen/blas/testing/zblat1.f	/^99999 FORMAT (\/' Test of subprogram number',I3,12X,A6)$/;"	l	subroutine:HEADER	file:
A	problem.hh	/^    sp_mat A;                             \/\/ intrinsic graph structure among entities$/;"	m	class:Entity
A	tools/eigen/bench/bench_gemm.cpp	/^typedef Matrix<SCALARA,Dynamic,Dynamic> A;$/;"	t	file:
A	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_aat_product
A	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_ata_product
A	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_atv_product
A	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_ger
A	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_matrix_matrix_product
A	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_matrix_vector_product
A	tools/eigen/bench/btl/actions/action_rot.hh	/^  typename Interface::gene_vector A;$/;"	m	class:Action_rot
A	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_symv
A	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_syr2
A	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_trisolve_matrix
A	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::gene_matrix A;$/;"	m	class:Action_trmm
A	tools/eigen/bench/geometry.cpp	/^typedef Matrix<RealScalar,Dynamic,Dynamic> A;$/;"	t	file:
A	tools/eigen/blas/testing/cblat2.f	/^      COMPLEX            A(/;"	v	program:CBLAT2
A	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   A(/;"	v	program:DBLAT2
A	tools/eigen/blas/testing/sblat2.f	/^      REAL/;"	v	program:SBLAT2
A	tools/eigen/blas/testing/zblat2.f	/^      COMPLEX*16         A(/;"	v	program:ZBLAT2
A	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^MatrixXcf A = MatrixXcf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/ComplexSchur_compute.cpp	/^MatrixXcf A = MatrixXcf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/ComplexSchur_matrixT.cpp	/^MatrixXcf A = MatrixXcf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/ComplexSchur_matrixU.cpp	/^MatrixXcf A = MatrixXcf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^MatrixXd A = MatrixXd::Random(6,6);$/;"	v
A	tools/eigen/doc/snippets/EigenSolver_compute.cpp	/^MatrixXf A = MatrixXf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/EigenSolver_pseudoEigenvectors.cpp	/^MatrixXd A = MatrixXd::Random(6,6);$/;"	v
A	tools/eigen/doc/snippets/GeneralizedEigenSolver.cpp	/^MatrixXf A = MatrixXf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/HessenbergDecomposition_compute.cpp	/^MatrixXcf A = MatrixXcf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/HessenbergDecomposition_matrixH.cpp	/^Matrix4f A = MatrixXf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/HessenbergDecomposition_packedMatrix.cpp	/^Matrix4d A = Matrix4d::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/LeastSquaresNormalEquations.cpp	/^MatrixXf A = MatrixXf::Random(3, 2);$/;"	v
A	tools/eigen/doc/snippets/LeastSquaresQR.cpp	/^MatrixXf A = MatrixXf::Random(3, 2);$/;"	v
A	tools/eigen/doc/snippets/MatrixBase_applyOnTheLeft.cpp	/^Matrix3f A = Matrix3f::Random(3,3), B;$/;"	v
A	tools/eigen/doc/snippets/MatrixBase_applyOnTheRight.cpp	/^Matrix3f A = Matrix3f::Random(3,3), B;$/;"	v
A	tools/eigen/doc/snippets/PartialPivLU_solve.cpp	/^MatrixXd A = MatrixXd::Random(3,3);$/;"	v
A	tools/eigen/doc/snippets/RealQZ_compute.cpp	/^MatrixXf A = MatrixXf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/RealSchur_RealSchur_MatrixType.cpp	/^MatrixXd A = MatrixXd::Random(6,6);$/;"	v
A	tools/eigen/doc/snippets/RealSchur_compute.cpp	/^MatrixXf A = MatrixXf::Random(4,4);$/;"	v
A	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver.cpp	/^Matrix4f A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^MatrixXd A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^MatrixXd A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType.cpp	/^MatrixXf A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType2.cpp	/^MatrixXd A = X * X.transpose();$/;"	v
A	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorInverseSqrt.cpp	/^MatrixXd A = X * X.transpose();$/;"	v
A	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorSqrt.cpp	/^MatrixXd A = X * X.transpose();$/;"	v
A	tools/eigen/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp	/^MatrixXd A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/Tridiagonalization_compute.cpp	/^MatrixXf A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/Tridiagonalization_decomposeInPlace.cpp	/^MatrixXd A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^MatrixXcd A = X + X.adjoint();$/;"	v
A	tools/eigen/doc/snippets/Tridiagonalization_householderCoefficients.cpp	/^Matrix4d A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/Tridiagonalization_packedMatrix.cpp	/^Matrix4d A = X + X.transpose();$/;"	v
A	tools/eigen/doc/snippets/Tutorial_solve_matrix_inverse.cpp	/^Matrix3f A;$/;"	v
A	tools/eigen/doc/snippets/Tutorial_solve_singular.cpp	/^Matrix3f A;$/;"	v
A	tools/eigen/doc/snippets/Tutorial_solve_triangular.cpp	/^Matrix3f A;$/;"	v
A	tools/eigen/doc/snippets/Tutorial_solve_triangular_inplace.cpp	/^Matrix3f A;$/;"	v
A	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols> A;$/;"	t	struct:Eigen::internal::make_coherent_impl
AA	tools/eigen/blas/testing/cblat2.f	/^      COMPLEX            A( NMAX, NMAX ), AA(/;"	v	program:CBLAT2
AA	tools/eigen/blas/testing/cblat3.f	/^      COMPLEX            AA(/;"	v	program:CBLAT3
AA	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   A( NMAX, NMAX ), AA(/;"	v	program:DBLAT2
AA	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   AA(/;"	v	program:DBLAT3
AA	tools/eigen/blas/testing/sblat2.f	/^      REAL               A( NMAX, NMAX ), AA(/;"	v	program:SBLAT2
AA	tools/eigen/blas/testing/sblat3.f	/^      REAL               AA(/;"	v	program:SBLAT3
AA	tools/eigen/blas/testing/zblat2.f	/^      COMPLEX*16         A( NMAX, NMAX ), AA(/;"	v	program:ZBLAT2
AA	tools/eigen/blas/testing/zblat3.f	/^      COMPLEX*16         AA(/;"	v	program:ZBLAT3
AB	tools/eigen/blas/testing/cblat3.f	/^      COMPLEX            AA( NMAX*NMAX ), AB(/;"	v	program:CBLAT3
AB	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   AA( NMAX*NMAX ), AB(/;"	v	program:DBLAT3
AB	tools/eigen/blas/testing/sblat3.f	/^      REAL               AA( NMAX*NMAX ), AB(/;"	v	program:SBLAT3
AB	tools/eigen/blas/testing/zblat3.f	/^      COMPLEX*16         AA( NMAX*NMAX ), AB(/;"	v	program:ZBLAT3
ABx_lx	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ABx_lx              = 0x200,$/;"	e	enum:Eigen::DecompositionOptions
ACTION_AAT_PRODUCT	tools/eigen/bench/btl/actions/action_aat_product.hh	21;"	d
ACTION_ATA_PRODUCT	tools/eigen/bench/btl/actions/action_ata_product.hh	21;"	d
ACTION_ATV_PRODUCT	tools/eigen/bench/btl/actions/action_atv_product.hh	21;"	d
ACTION_AXPBY	tools/eigen/bench/btl/actions/action_axpby.hh	20;"	d
ACTION_AXPY	tools/eigen/bench/btl/actions/action_axpy.hh	21;"	d
ACTION_CHOLESKY	tools/eigen/bench/btl/actions/action_cholesky.hh	20;"	d
ACTION_GER	tools/eigen/bench/btl/actions/action_ger.hh	16;"	d
ACTION_HESSENBERG	tools/eigen/bench/btl/actions/action_hessenberg.hh	20;"	d
ACTION_LU_DECOMP	tools/eigen/bench/btl/actions/action_lu_decomp.hh	20;"	d
ACTION_LU_SOLVE	tools/eigen/bench/btl/actions/action_lu_solve.hh	21;"	d
ACTION_MATRIX_MATRIX_PRODUCT	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	21;"	d
ACTION_MATRIX_MATRIX_PRODUCT_BIS	tools/eigen/bench/btl/actions/action_matrix_matrix_product_bis.hh	21;"	d
ACTION_MATRIX_VECTOR_PRODUCT	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	21;"	d
ACTION_PARTIAL_LU	tools/eigen/bench/btl/actions/action_partial_lu.hh	20;"	d
ACTION_ROT	tools/eigen/bench/btl/actions/action_rot.hh	16;"	d
ACTION_SYMV	tools/eigen/bench/btl/actions/action_symv.hh	21;"	d
ACTION_SYR2	tools/eigen/bench/btl/actions/action_syr2.hh	21;"	d
ACTION_TRISOLVE	tools/eigen/bench/btl/actions/action_trisolve.hh	20;"	d
ACTION_TRISOLVE_MATRIX_PRODUCT	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	21;"	d
ACTION_TRMM	tools/eigen/bench/btl/actions/action_trmm.hh	21;"	d
ADJ	tools/eigen/blas/common.h	27;"	d
ADOLC_numDir	tools/eigen/unsupported/test/forward_adolc.cpp	/^int adtl::ADOLC_numDir;$/;"	m	class:adtl	file:
ALF	tools/eigen/blas/testing/cblat2.f	/^      COMPLEX            A( NMAX, NMAX ), AA( NMAX*NMAX ),$/;"	v	program:CBLAT2
ALF	tools/eigen/blas/testing/cblat3.f	/^      COMPLEX            AA( NMAX*NMAX ), AB( NMAX, 2*NMAX ),$/;"	v	program:CBLAT3
ALF	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   A( NMAX, NMAX ), AA( NMAX*NMAX ),$/;"	v	program:DBLAT2
ALF	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   AA( NMAX*NMAX ), AB( NMAX, 2*NMAX ),$/;"	v	program:DBLAT3
ALF	tools/eigen/blas/testing/sblat2.f	/^      REAL               A( NMAX, NMAX ), AA( NMAX*NMAX ),$/;"	v	program:SBLAT2
ALF	tools/eigen/blas/testing/sblat3.f	/^      REAL               AA( NMAX*NMAX ), AB( NMAX, 2*NMAX ),$/;"	v	program:SBLAT3
ALF	tools/eigen/blas/testing/zblat2.f	/^      COMPLEX*16         A( NMAX, NMAX ), AA( NMAX*NMAX ),$/;"	v	program:ZBLAT2
ALF	tools/eigen/blas/testing/zblat3.f	/^      COMPLEX*16         AA( NMAX*NMAX ), AB( NMAX, 2*NMAX ),$/;"	v	program:ZBLAT3
ALG	Makefile	/^    ALG = Top$/;"	m
ALG	Makefile	/^    ALG = Top-scalable$/;"	m
ALIGNMENT	tools/eigen/test/dynalloc.cpp	13;"	d	file:
ALIGNMENT	tools/eigen/test/dynalloc.cpp	15;"	d	file:
ALIVE	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	115;"	d
AMDOrdering	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^class AMDOrdering$/;"	c	namespace:Eigen
APIBase	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef SparseSolverBase<SparseLU<_MatrixType,_OrderingType> > APIBase;$/;"	t	class:Eigen::SparseLU
AS	tools/eigen/blas/testing/cblat2.f	/^     $                   ALF( NALMAX ), AS(/;"	v	program:CBLAT2
AS	tools/eigen/blas/testing/cblat3.f	/^     $                   ALF( NALMAX ), AS(/;"	v	program:CBLAT3
AS	tools/eigen/blas/testing/dblat2.f	/^     $                   ALF( NALMAX ), AS(/;"	v	program:DBLAT2
AS	tools/eigen/blas/testing/dblat3.f	/^     $                   ALF( NALMAX ), AS(/;"	v	program:DBLAT3
AS	tools/eigen/blas/testing/sblat2.f	/^     $                   ALF( NALMAX ), AS(/;"	v	program:SBLAT2
AS	tools/eigen/blas/testing/sblat3.f	/^     $                   ALF( NALMAX ), AS(/;"	v	program:SBLAT3
AS	tools/eigen/blas/testing/zblat2.f	/^     $                   ALF( NALMAX ), AS(/;"	v	program:ZBLAT2
AS	tools/eigen/blas/testing/zblat3.f	/^     $                   ALF( NALMAX ), AS(/;"	v	program:ZBLAT3
ASSERT	tools/eigen/bench/btl/generic_bench/utils/utilities.h	63;"	d
ASSERT	tools/eigen/bench/btl/generic_bench/utils/utilities.h	80;"	d
A_ref	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_aat_product
A_ref	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_ata_product
A_ref	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_atv_product
A_ref	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_ger
A_ref	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_matrix_matrix_product
A_ref	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_matrix_vector_product
A_ref	tools/eigen/bench/btl/actions/action_rot.hh	/^  typename Interface::gene_vector A_ref;$/;"	m	class:Action_rot
A_ref	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_symv
A_ref	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_syr2
A_ref	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_trisolve_matrix
A_ref	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::gene_matrix A_ref;$/;"	m	class:Action_trmm
A_stl	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_aat_product
A_stl	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_ata_product
A_stl	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_atv_product
A_stl	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_ger
A_stl	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_matrix_matrix_product
A_stl	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_matrix_vector_product
A_stl	tools/eigen/bench/btl/actions/action_rot.hh	/^  typename Interface::stl_vector A_stl;$/;"	m	class:Action_rot
A_stl	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_symv
A_stl	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_syr2
A_stl	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_trisolve_matrix
A_stl	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::stl_matrix A_stl;$/;"	m	class:Action_trmm
Abs2ReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs2_op<Scalar>, const Derived> Abs2ReturnType;$/;"	t
AbsReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs_op<Scalar>, const Derived> AbsReturnType;$/;"	t
AccPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef ResPacket AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::AccPacket AccPacket;$/;"	t	struct:Eigen::internal::PossiblyRotatingKernelHelper
AccPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::AccPacket AccPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
AccPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacketType,Scalar>::type AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccessorLevels	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum AccessorLevels {$/;"	g	namespace:Eigen
Acolmajor	tools/eigen/doc/snippets/TopicStorageOrders_example.cpp	/^Matrix<int, 3, 4, ColMajor> Acolmajor;$/;"	v
AcosReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_acos_op<Scalar>, const Derived> AcosReturnType;$/;"	t
Action	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	g	namespace:Eigen
Action_aat_product	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  Action_aat_product( const  Action_aat_product & )$/;"	f	class:Action_aat_product
Action_aat_product	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  Action_aat_product( int size ):_size(size)$/;"	f	class:Action_aat_product
Action_aat_product	tools/eigen/bench/btl/actions/action_aat_product.hh	/^class Action_aat_product {$/;"	c
Action_ata_product	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  Action_ata_product( const  Action_ata_product & )$/;"	f	class:Action_ata_product
Action_ata_product	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  Action_ata_product( int size ):_size(size)$/;"	f	class:Action_ata_product
Action_ata_product	tools/eigen/bench/btl/actions/action_ata_product.hh	/^class Action_ata_product {$/;"	c
Action_atv_product	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  Action_atv_product( const  Action_atv_product & )$/;"	f	class:Action_atv_product
Action_atv_product	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  Action_atv_product( int size ) : _size(size)$/;"	f	class:Action_atv_product
Action_atv_product	tools/eigen/bench/btl/actions/action_atv_product.hh	/^class Action_atv_product {$/;"	c
Action_axpby	tools/eigen/bench/btl/actions/action_axpby.hh	/^  Action_axpby( const  Action_axpby & )$/;"	f	class:Action_axpby
Action_axpby	tools/eigen/bench/btl/actions/action_axpby.hh	/^  Action_axpby( int size ):_alpha(0.5),_beta(0.95),_size(size)$/;"	f	class:Action_axpby
Action_axpby	tools/eigen/bench/btl/actions/action_axpby.hh	/^class Action_axpby {$/;"	c
Action_axpy	tools/eigen/bench/btl/actions/action_axpy.hh	/^  Action_axpy( const  Action_axpy & )$/;"	f	class:Action_axpy
Action_axpy	tools/eigen/bench/btl/actions/action_axpy.hh	/^  Action_axpy( int size ):_coef(1.0),_size(size)$/;"	f	class:Action_axpy
Action_axpy	tools/eigen/bench/btl/actions/action_axpy.hh	/^class Action_axpy {$/;"	c
Action_cholesky	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  Action_cholesky( const  Action_cholesky & )$/;"	f	class:Action_cholesky
Action_cholesky	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  Action_cholesky( int size ):_size(size)$/;"	f	class:Action_cholesky
Action_cholesky	tools/eigen/bench/btl/actions/action_cholesky.hh	/^class Action_cholesky {$/;"	c
Action_ger	tools/eigen/bench/btl/actions/action_ger.hh	/^  Action_ger( const  Action_ger & )$/;"	f	class:Action_ger
Action_ger	tools/eigen/bench/btl/actions/action_ger.hh	/^  BTL_DONT_INLINE Action_ger( int size ):_size(size)$/;"	f	class:Action_ger
Action_ger	tools/eigen/bench/btl/actions/action_ger.hh	/^class Action_ger {$/;"	c
Action_hessenberg	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  Action_hessenberg( const  Action_hessenberg & )$/;"	f	class:Action_hessenberg
Action_hessenberg	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  Action_hessenberg( int size ):_size(size)$/;"	f	class:Action_hessenberg
Action_hessenberg	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^class Action_hessenberg {$/;"	c
Action_lu_decomp	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  Action_lu_decomp( const  Action_lu_decomp & )$/;"	f	class:Action_lu_decomp
Action_lu_decomp	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  Action_lu_decomp( int size ):_size(size)$/;"	f	class:Action_lu_decomp
Action_lu_decomp	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^class Action_lu_decomp {$/;"	c
Action_lu_solve	tools/eigen/bench/btl/actions/action_lu_solve.hh	/^class Action_lu_solve $/;"	c
Action_matrix_matrix_product	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  Action_matrix_matrix_product( const  Action_matrix_matrix_product & )$/;"	f	class:Action_matrix_matrix_product
Action_matrix_matrix_product	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  Action_matrix_matrix_product( int size ):_size(size)$/;"	f	class:Action_matrix_matrix_product
Action_matrix_matrix_product	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^class Action_matrix_matrix_product {$/;"	c
Action_matrix_matrix_product_bis	tools/eigen/bench/btl/actions/action_matrix_matrix_product_bis.hh	/^class Action_matrix_matrix_product_bis {$/;"	c
Action_matrix_vector_product	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  Action_matrix_vector_product( const  Action_matrix_vector_product & )$/;"	f	class:Action_matrix_vector_product
Action_matrix_vector_product	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  BTL_DONT_INLINE Action_matrix_vector_product( int size ):_size(size)$/;"	f	class:Action_matrix_vector_product
Action_matrix_vector_product	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^class Action_matrix_vector_product {$/;"	c
Action_partial_lu	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  Action_partial_lu( const  Action_partial_lu & )$/;"	f	class:Action_partial_lu
Action_partial_lu	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  Action_partial_lu( int size ):_size(size)$/;"	f	class:Action_partial_lu
Action_partial_lu	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^class Action_partial_lu {$/;"	c
Action_rot	tools/eigen/bench/btl/actions/action_rot.hh	/^  Action_rot( const  Action_rot & )$/;"	f	class:Action_rot
Action_rot	tools/eigen/bench/btl/actions/action_rot.hh	/^  BTL_DONT_INLINE Action_rot( int size ):_size(size)$/;"	f	class:Action_rot
Action_rot	tools/eigen/bench/btl/actions/action_rot.hh	/^class Action_rot {$/;"	c
Action_symv	tools/eigen/bench/btl/actions/action_symv.hh	/^  Action_symv( const  Action_symv & )$/;"	f	class:Action_symv
Action_symv	tools/eigen/bench/btl/actions/action_symv.hh	/^  BTL_DONT_INLINE Action_symv( int size ):_size(size)$/;"	f	class:Action_symv
Action_symv	tools/eigen/bench/btl/actions/action_symv.hh	/^class Action_symv {$/;"	c
Action_syr2	tools/eigen/bench/btl/actions/action_syr2.hh	/^  Action_syr2( const  Action_syr2 & )$/;"	f	class:Action_syr2
Action_syr2	tools/eigen/bench/btl/actions/action_syr2.hh	/^  BTL_DONT_INLINE Action_syr2( int size ):_size(size)$/;"	f	class:Action_syr2
Action_syr2	tools/eigen/bench/btl/actions/action_syr2.hh	/^class Action_syr2 {$/;"	c
Action_tridiagonalization	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  Action_tridiagonalization( const  Action_tridiagonalization & )$/;"	f	class:Action_tridiagonalization
Action_tridiagonalization	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  Action_tridiagonalization( int size ):_size(size)$/;"	f	class:Action_tridiagonalization
Action_tridiagonalization	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^class Action_tridiagonalization {$/;"	c
Action_trisolve	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  Action_trisolve( const  Action_trisolve & )$/;"	f	class:Action_trisolve
Action_trisolve	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  Action_trisolve( int size ):_size(size)$/;"	f	class:Action_trisolve
Action_trisolve	tools/eigen/bench/btl/actions/action_trisolve.hh	/^class Action_trisolve {$/;"	c
Action_trisolve_matrix	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  Action_trisolve_matrix( const  Action_trisolve_matrix & )$/;"	f	class:Action_trisolve_matrix
Action_trisolve_matrix	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  Action_trisolve_matrix( int size ):_size(size)$/;"	f	class:Action_trisolve_matrix
Action_trisolve_matrix	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^class Action_trisolve_matrix {$/;"	c
Action_trmm	tools/eigen/bench/btl/actions/action_trmm.hh	/^  Action_trmm( const  Action_trmm & )$/;"	f	class:Action_trmm
Action_trmm	tools/eigen/bench/btl/actions/action_trmm.hh	/^  Action_trmm( int size ):_size(size)$/;"	f	class:Action_trmm
Action_trmm	tools/eigen/bench/btl/actions/action_trmm.hh	/^class Action_trmm {$/;"	c
ActiveInput	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef Matrix<ActiveScalar, InputsAtCompileTime, 1> ActiveInput;$/;"	t	class:Eigen::AutoDiffJacobian
ActiveScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef AutoDiffScalar<DerivativeType> ActiveScalar;$/;"	t	class:Eigen::AutoDiffJacobian
ActiveScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef AutoDiffScalar<Matrix<BaseScalar,JacobianType::RowsAtCompileTime,1> > ActiveScalar;$/;"	t	class:Eigen::AutoDiffVector
ActiveValue	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef Matrix<ActiveScalar, ValuesAtCompileTime, 1> ActiveValue;$/;"	t	class:Eigen::AutoDiffJacobian
ActualCols	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualCols = Transpose ? MaxRows : MaxCols$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon277
ActualIndex	tools/eigen/Eigen/src/Core/BandMatrix.h	/^        ActualIndex = ReturnOpposite ? -Index : Index,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon622
ActualLhs	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^            Lhs1, SparseView<Lhs1> >::type ActualLhs;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
ActualLhsType	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualLhsType	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::ExtractType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualLhsType	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualLhsType	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualLhsType	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualLhsTypeCleaned	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename internal::remove_all<ActualLhsType>::type ActualLhsTypeCleaned;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualLhsTypeCleaned	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename internal::remove_all<ActualLhsType>::type ActualLhsTypeCleaned;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualMatrixType	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^  typedef typename conditional<(MatrixType::Flags&LinearAccessBit),MatrixType const &,typename MatrixType::PlainObject>::type ActualMatrixType;$/;"	t	struct:Eigen::internal::compute_inverse_size4
ActualPacketAccessBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = 0x0;$/;"	m	namespace:Eigen
ActualPacketAccessBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = PacketAccessBit;$/;"	m	namespace:Eigen
ActualRhs	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename conditional<NeedToTranspose,LhsT,RhsT>::type ActualRhs;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
ActualRhsType	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualRhsType	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRhsType	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRhsTypeCleaned	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename internal::remove_all<ActualRhsType>::type ActualRhsTypeCleaned;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualRhsTypeCleaned	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename internal::remove_all<ActualRhsType>::type ActualRhsTypeCleaned;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRows	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualRows = Transpose ? MaxCols : MaxRows,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon277
AddCost	tools/eigen/Eigen/src/Core/NumTraits.h	/^    AddCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon581
AddEntry	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::AddEntry($/;"	f	class:CSimpleIniTempl
AdditionalProductEvaluationMode	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum AdditionalProductEvaluationMode {SkylineTimeDenseProduct, SkylineTimeSkylineProduct, DenseTimeSkylineProduct};$/;"	g	namespace:Eigen
AdjointReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::MatrixBase
AdjointReturnType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const typename MatrixType::AdjointReturnType,TransposeMode> AdjointReturnType;$/;"	t	class:Eigen::TriangularView
AdjointReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::SparseMatrixBase
Affine	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Affine        = 0x2,$/;"	e	enum:Eigen::TransformTraits
Affine2d	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Affine> Affine2d;$/;"	t	namespace:Eigen
Affine2f	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Affine> Affine2f;$/;"	t	namespace:Eigen
Affine3d	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Affine> Affine3d;$/;"	t	namespace:Eigen
Affine3f	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Affine> Affine3f;$/;"	t	namespace:Eigen
AffineCompact	tools/eigen/Eigen/src/Core/util/Constants.h	/^  AffineCompact = 0x10 | Affine,$/;"	e	enum:Eigen::TransformTraits
AffineCompact2d	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,AffineCompact> AffineCompact2d;$/;"	t	namespace:Eigen
AffineCompact2f	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,AffineCompact> AffineCompact2f;$/;"	t	namespace:Eigen
AffineCompact3d	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,AffineCompact> AffineCompact3d;$/;"	t	namespace:Eigen
AffineCompact3f	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,AffineCompact> AffineCompact3f;$/;"	t	namespace:Eigen
AffinePart	tools/eigen/Eigen/src/Geometry/Transform.h	/^                              Block<MatrixType,Dim,HDim> >::type AffinePart;$/;"	t	class:Eigen::Transform
AffinePart	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::AffinePart AffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
AffineTransformType	tools/eigen/Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Affine> AffineTransformType;$/;"	t	class:Eigen::Translation
AliasFreeProduct	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
Aligned	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Aligned=16,         \/**< \\deprecated Synonym for Aligned16. *\/$/;"	e	enum:Eigen::__anon493
Aligned128	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Aligned128=128,     \/**< Data pointer is aligned on a 128 bytes boundary. *\/$/;"	e	enum:Eigen::__anon493
Aligned16	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Aligned16=16,       \/**< Data pointer is aligned on a 16 bytes boundary. *\/$/;"	e	enum:Eigen::__anon493
Aligned32	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Aligned32=32,       \/**< Data pointer is aligned on a 32 bytes boundary. *\/$/;"	e	enum:Eigen::__anon493
Aligned64	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Aligned64=64,       \/**< Data pointer is aligned on a 64 bytes boundary. *\/$/;"	e	enum:Eigen::__anon493
Aligned8	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Aligned8=8,         \/**< Data pointer is aligned on a 8 bytes boundary. *\/$/;"	e	enum:Eigen::__anon493
AlignedBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int AlignedBit = 0x80;$/;"	m	namespace:Eigen
AlignedBox	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox()$/;"	f	class:Eigen::AlignedBox
AlignedBox	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox(const OtherVectorType1& _min, const OtherVectorType2& _max) : m_min(_min), m_max(_max) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(Index _dim) : m_min(_dim), m_max(_dim)$/;"	f	class:Eigen::AlignedBox
AlignedBox	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const AlignedBox<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::AlignedBox
AlignedBox	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const MatrixBase<Derived>& p) : m_min(p), m_max(m_min)$/;"	f	class:Eigen::AlignedBox
AlignedBox	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^class AlignedBox$/;"	c	namespace:Eigen
AlignedMapType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, AlignedMax> AlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
AlignedMask	tools/eigen/Eigen/src/Core/util/Constants.h	/^  AlignedMask=255,$/;"	e	enum:Eigen::__anon493
AlignedMax	tools/eigen/Eigen/src/Core/util/Constants.h	/^  AlignedMax = Aligned128$/;"	e	enum:Eigen::__anon493
AlignedOnScalar	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon258
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon367
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon325
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon328
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon351
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon352
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon342
AlignedOnScalar	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon343
AlignedScaling2d	tools/eigen/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,2> AlignedScaling2d;$/;"	t	namespace:Eigen
AlignedScaling2f	tools/eigen/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 2> AlignedScaling2f;$/;"	t	namespace:Eigen
AlignedScaling3d	tools/eigen/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,3> AlignedScaling3d;$/;"	t	namespace:Eigen
AlignedScaling3f	tools/eigen/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 3> AlignedScaling3f;$/;"	t	namespace:Eigen
Alignment	tools/eigen/Eigen/src/Core/Block.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::traits::__anon246
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME alignment should not matter here, perhaps we could set it to AlignMax??$/;"	e	enum:Eigen::internal::evaluator::__anon653
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME in some rare cases, Alignment could be preserved, like a Vector4f.$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME it is not very clear why alignment is necessarily lost...$/;"	e	enum:Eigen::internal::unary_evaluator::__anon656
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME this could be improved$/;"	e	enum:Eigen::internal::evaluator::__anon666
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::evaluator::__anon669
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::evaluator_base::__anon650
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<ArgType>::Alignment, Alignment0)$/;"	e	enum:Eigen::internal::evaluator::__anon660
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<Lhs>::Alignment,evaluator<Rhs>::Alignment)$/;"	e	enum:Eigen::internal::binary_evaluator::__anon655
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<ThenMatrixType>::Alignment, evaluator<ElseMatrixType>::Alignment)$/;"	e	enum:Eigen::internal::evaluator::__anon662
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon667
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon652
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon654
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgTypeNestedCleaned>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon664
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<Map<PlainObjectType, RefOptions, StrideType> >::Alignment$/;"	e	enum:Eigen::internal::evaluator::__anon659
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = int(MapOptions)&int(AlignedMask)$/;"	e	enum:Eigen::internal::evaluator::__anon658
Alignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = traits<Derived>::Alignment$/;"	e	enum:Eigen::internal::evaluator::__anon651
Alignment	tools/eigen/Eigen/src/Core/Map.h	/^    Alignment = int(MapOptions)&int(AlignedMask),$/;"	e	enum:Eigen::internal::traits::__anon674
Alignment	tools/eigen/Eigen/src/Core/Matrix.h	/^    Alignment = actual_alignment$/;"	e	enum:Eigen::internal::traits::__anon293
Alignment	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    Alignment = CanVectorizeLhs ? LhsAlignment$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
Alignment	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    Alignment = evaluator<MatrixType>::Alignment$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
Alignment	tools/eigen/Eigen/src/Core/Redux.h	/^    Alignment = evaluator<XprType>::Alignment$/;"	e	enum:Eigen::internal::redux_evaluator::__anon637
Alignment	tools/eigen/Eigen/src/Core/Ref.h	/^    Alignment = traits<Map<_PlainObjectType, _Options, _StrideType> >::Alignment$/;"	e	enum:Eigen::internal::traits::__anon615
Alignment	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    Alignment = internal::traits<Coefficients>::Alignment,$/;"	e	enum:Eigen::internal::traits::__anon714
Alignment	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = Dynamic, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon204
Alignment	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = Dynamic, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon203
Alignment0	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Alignment0 = (InnerPanel && (OuterStrideAtCompileTime!=Dynamic) && (((OuterStrideAtCompileTime * int(sizeof(Scalar))) % int(PacketAlignment)) == 0)) ? int(PacketAlignment) : 0,$/;"	e	enum:Eigen::internal::evaluator::__anon660
AlignmentMask	tools/eigen/Eigen/src/Cholesky/LLT.h	/^      AlignmentMask = int(PacketSize)-1,$/;"	e	enum:Eigen::LLT::__anon245
AlignmentMatch	tools/eigen/Eigen/src/Core/Ref.h	/^      AlignmentMatch = (int(traits<PlainObjectType>::Alignment)==int(Unaligned)) || (int(evaluator<Derived>::Alignment) >= int(Alignment)), \/\/ FIXME the first condition is not very clear, it should be replaced by the required alignment$/;"	e	enum:Eigen::internal::traits::match::__anon616
AllAtOnceTraversal	tools/eigen/Eigen/src/Core/util/Constants.h	/^  AllAtOnceTraversal$/;"	e	enum:Eigen::__anon494
AllReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_all>::Type AllReturnType;$/;"	t	class:Eigen::VectorwiseOp
AltiVec	tools/eigen/Eigen/src/Core/util/Constants.h	/^    AltiVec = 0x2,$/;"	e	enum:Eigen::Architecture::Type
AmbiVector	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    explicit AmbiVector(Index size)$/;"	f	class:Eigen::internal::AmbiVector
AmbiVector	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector$/;"	c	namespace:Eigen::internal
AmbientDimAtCompileTime	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::AlignedBox::__anon702
AmbientDimAtCompileTime	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::Hyperplane::__anon712
AmbientDimAtCompileTime	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::ParametrizedLine::__anon711
Ancestor	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_all<Lhs>::type Ancestor;$/;"	t	struct:Eigen::internal::traits
AngleAxis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  AngleAxis() {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  inline AngleAxis(const Scalar& angle, const MatrixBase<Derived>& axis) : m_axis(axis), m_angle(angle) {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const AngleAxis<OtherScalarType>& other)$/;"	f	class:Eigen::AngleAxis
AngleAxis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const MatrixBase<Derived>& m) { *this = m; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  template<typename QuatDerived> inline explicit AngleAxis(const QuaternionBase<QuatDerived>& q) { *this = q; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^class AngleAxis : public RotationBase<AngleAxis<_Scalar>,3>$/;"	c	namespace:Eigen
AngleAxisType	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef AngleAxis<Scalar> AngleAxisType;$/;"	t	class:Eigen::QuaternionBase
AngleAxisType	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Base::AngleAxisType AngleAxisType;$/;"	t	class:Eigen::Quaternion
AngleAxisd	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<double> AngleAxisd;$/;"	t	namespace:Eigen
AngleAxisf	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<float> AngleAxisf;$/;"	t	namespace:Eigen
AntiHermiticity	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct AntiHermiticity$/;"	s	namespace:Eigen
AntiSymmetry	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct AntiSymmetry$/;"	s	namespace:Eigen
AnyReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_any>::Type AnyReturnType;$/;"	t	class:Eigen::VectorwiseOp
Architecture	tools/eigen/Eigen/src/Core/util/Constants.h	/^namespace Architecture$/;"	n	namespace:Eigen
ArgMaxTupleReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> struct ArgMaxTupleReducer$/;"	s	namespace:Eigen::internal
ArgMinTupleReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> struct ArgMinTupleReducer$/;"	s	namespace:Eigen::internal
ArgReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_arg_op<Scalar>, const Derived> ArgReturnType;$/;"	t
ArgType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename remove_all<typename XprType::NestedExpressionType>::type ArgType;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
ArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef TensorCustomUnaryOp<CustomUnaryFunc, XprType> ArgType;$/;"	t	struct:Eigen::TensorEvaluator
ArgTypeIsRowMajor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    ArgTypeIsRowMajor = (int(evaluator<ArgType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::evaluator::__anon660
ArgTypeNested	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::nested_eval<ArgType,Factor>::type ArgTypeNested;$/;"	t	struct:Eigen::internal::unary_evaluator
ArgTypeNestedCleaned	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::remove_all<ArgTypeNested>::type ArgTypeNestedCleaned;$/;"	t	struct:Eigen::internal::unary_evaluator
Around	tools/eigen/demos/opengl/trackball.h	/^    enum Mode {Around, Local};$/;"	e	enum:Trackball::Mode
Arowmajor	tools/eigen/doc/snippets/TopicStorageOrders_example.cpp	/^Matrix<int, 3, 4, RowMajor> Arowmajor = Acolmajor;$/;"	v
ArpackGeneralizedSelfAdjointEigenSolver	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  ArpackGeneralizedSelfAdjointEigenSolver()$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
ArpackGeneralizedSelfAdjointEigenSolver	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  ArpackGeneralizedSelfAdjointEigenSolver(const MatrixType& A, const MatrixType& B,$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
ArpackGeneralizedSelfAdjointEigenSolver	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  ArpackGeneralizedSelfAdjointEigenSolver(const MatrixType& A,$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
ArpackGeneralizedSelfAdjointEigenSolver	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^class ArpackGeneralizedSelfAdjointEigenSolver$/;"	c	namespace:Eigen
Array	tools/eigen/Eigen/src/Core/Array.h	/^    Array(Array&& other)$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^    Array(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array() : Base()$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Array& other)$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& val0, const Scalar& val1, const Scalar& val2)$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& val0, const Scalar& val1, const Scalar& val2, const Scalar& val3)$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const T0& val0, const T1& val1)$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE explicit Array(const T& x)$/;"	f	class:Eigen::Array
Array	tools/eigen/Eigen/src/Core/Array.h	/^class Array$/;"	c	namespace:Eigen
ArrayApplyAndReduce	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct ArrayApplyAndReduce {$/;"	s	namespace:Eigen::internal
ArrayApplyAndReduce	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct ArrayApplyAndReduce<Reducer, Op, A, 1>  {$/;"	s	namespace:Eigen::internal
ArrayBase	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    ArrayBase() : Base() {}$/;"	f	class:Eigen::ArrayBase
ArrayBase	tools/eigen/Eigen/src/Core/ArrayBase.h	/^template<typename Derived> class ArrayBase$/;"	c	namespace:Eigen
ArrayRef	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef Ref<ArrayXr> ArrayRef;$/;"	t	class:Eigen::BDCSVD
ArrayWrapper	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    explicit EIGEN_STRONG_INLINE ArrayWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ArrayWrapper
ArrayWrapper	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^class ArrayWrapper : public ArrayBase<ArrayWrapper<ExpressionType> >$/;"	c	namespace:Eigen
ArrayXI	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  typedef Array<StorageIndex,Dynamic,1> ArrayXI;$/;"	t	struct:Eigen::internal::Assignment
ArrayXS	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  typedef Array<Scalar,Dynamic,1> ArrayXS;$/;"	t	struct:Eigen::internal::Assignment
ArrayXi	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef Array<Index,1,Dynamic> ArrayXi;$/;"	t	class:Eigen::BDCSVD
ArrayXpr	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct ArrayXpr {};$/;"	s	namespace:Eigen
ArrayXr	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef Array<RealScalar, Dynamic, 1> ArrayXr;$/;"	t	class:Eigen::BDCSVD
ArrayZipAndReduce	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct ArrayZipAndReduce {$/;"	s	namespace:Eigen::internal
ArrayZipAndReduce	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct ArrayZipAndReduce<Reducer, Op, A, B, 1> {$/;"	s	namespace:Eigen::internal
AsinReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_asin_op<Scalar>, const Derived> AsinReturnType;$/;"	t
Assignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct Assignment<DstXprType, SrcXprType, Functor, EigenBase2EigenBase, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Diagonal2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, CwiseUnaryOp<internal::scalar_multiple_op<ScalarBis>,$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::add_assign_op<Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::assign_op<Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::sub_assign_op<Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/Solve.h	/^struct Assignment<DstXprType, Solve<DecType,RhsType>, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::add_assign_op<Scalar>, Dense2Triangular, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::assign_op<Scalar>, Dense2Triangular, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::sub_assign_op<Scalar>, Dense2Triangular, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Dense2Triangular, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Triangular2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Triangular2Triangular, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct Assignment<DstXprType, Homogeneous<ArgType,Horizontal>, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct Assignment<DstXprType, Homogeneous<ArgType,Vertical>, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct Assignment<DstXprType, SolveWithGuess<DecType,RhsType,GuessType>, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/LU/FullPivLU.h	/^struct Assignment<DstXprType, Inverse<FullPivLU<MatrixType> >, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct Assignment<DstXprType, Inverse<XprType>, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^struct Assignment<DstXprType, Inverse<PartialPivLU<MatrixType> >, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^struct Assignment<DstXprType, Inverse<ColPivHouseholderQR<MatrixType> >, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^struct Assignment<DstXprType, Inverse<FullPivHouseholderQR<MatrixType> >, internal::assign_op<Scalar>, Dense2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, Solve<DecType,RhsType>, internal::assign_op<Scalar>, Sparse2Sparse, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Diagonal2Sparse, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Sparse2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Sparse2Sparse, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, internal::assign_op<typename DstXprType::Scalar>, Sparse2Dense, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct Assignment<DstXprType, SparseSymmetricPermutationProduct<MatrixType,Mode>, internal::assign_op<Scalar>, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct Assignment<DstXprType, SrcXprType, Functor, SparseSelfAdjoint2Sparse, Scalar>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^struct Assignment<DstXprType, SparseQRMatrixQReturnType<SparseQRType>, internal::assign_op<typename DstXprType::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^struct Assignment<DstXprType, SparseQRMatrixQReturnType<SparseQRType>, internal::assign_op<typename DstXprType::Scalar>, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^template<> struct AssignmentKind<DenseShape,DenseShape> { typedef Dense2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^template<typename,typename> struct AssignmentKind { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Core/BandMatrix.h	/^template<> struct AssignmentKind<DenseShape,BandShape> { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^template<> struct AssignmentKind<DenseShape,DiagonalShape> { typedef Diagonal2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^template<> struct AssignmentKind<DenseShape,PermutationShape> { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<DenseShape,TriangularShape>      { typedef Triangular2Dense      Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,DenseShape>      { typedef Dense2Triangular      Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,TriangularShape> { typedef Triangular2Triangular Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^template<> struct AssignmentKind<DenseShape,HomogeneousShape> { typedef Dense2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseShape>           { typedef Sparse2Dense  Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseShape>           { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseTriangularShape> { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape,DiagonalShape> { typedef Diagonal2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseSelfAdjointShape,SparseShape> { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseShape,SparseSelfAdjointShape> { typedef SparseSelfAdjoint2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentTraits	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef copy_using_evaluator_traits<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor> AssignmentTraits;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
AssignmentTraits	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::AssignmentTraits AssignmentTraits;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
AssignmentTraits	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::AssignmentTraits AssignmentTraits;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
AssumeAliasing	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  static const int AssumeAliasing = 0;$/;"	m	struct:Eigen::internal::evaluator_traits_base
AssumeAliasing	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  enum { AssumeAliasing = 0 };$/;"	e	enum:Eigen::internal::evaluator_traits::__anon381
AssumeAliasing	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  enum { AssumeAliasing = 1 };$/;"	e	enum:Eigen::internal::evaluator_traits::__anon380
AssumeAliasing	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  static const int AssumeAliasing = 0;$/;"	m	struct:Eigen::internal::evaluator_traits
AssumeAliasing	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  static const int AssumeAliasing = 0;$/;"	m	struct:Eigen::internal::evaluator_traits
AssumeAliasing	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  static const int AssumeAliasing = 0;$/;"	m	struct:Eigen::internal::evaluator_traits
AssumeAliasing	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static const int AssumeAliasing = 0;$/;"	m	struct:Eigen::internal::evaluator_traits
AssumeAliasing	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  static const int AssumeAliasing = 0;$/;"	m	struct:Eigen::internal::evaluator_traits
AtanReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_atan_op<Scalar>, const Derived> AtanReturnType;$/;"	t
AutoAlign	tools/eigen/Eigen/src/Core/util/Constants.h	/^  AutoAlign = 0,$/;"	e	enum:Eigen::__anon497
AutoDiffJacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian() : Functor() {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian(const Functor& f) : Functor(f) {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian(const T0& a0) : Functor(a0) {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian(const T0& a0, const T1& a1) : Functor(a0, a1) {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian(const T0& a0, const T1& a1, const T2& a2) : Functor(a0, a1, a2) {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^template<typename Functor> class AutoDiffJacobian : public Functor$/;"	c	namespace:Eigen
AutoDiffScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar() {}$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar(const AutoDiffScalar& other)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar(const Scalar& value, const DerType& der)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar(const Scalar& value, int nbDer, int derNumber)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    \/*explicit*\/ AutoDiffScalar(const Real& value)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^class AutoDiffScalar$/;"	c	namespace:Eigen
AutoDiffVector	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector() {}$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector(const AutoDiffVector& other)$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector(const AutoDiffVector<OtherValueType, OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector(const ValueType& values)$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector(const ValueType& values, const JacobianType& jac)$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^class AutoDiffVector$/;"	c	namespace:Eigen
Ax_lBx	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Ax_lBx              = 0x100,$/;"	e	enum:Eigen::DecompositionOptions
B	tools/eigen/bench/bench_gemm.cpp	/^typedef Matrix<SCALARB,Dynamic,Dynamic> B;$/;"	t	file:
B	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::gene_vector B;$/;"	m	class:Action_atv_product
B	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::gene_vector B;$/;"	m	class:Action_ger
B	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::gene_matrix B;$/;"	m	class:Action_matrix_matrix_product
B	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::gene_vector B;$/;"	m	class:Action_matrix_vector_product
B	tools/eigen/bench/btl/actions/action_rot.hh	/^  typename Interface::gene_vector B;$/;"	m	class:Action_rot
B	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::gene_vector B;$/;"	m	class:Action_symv
B	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::gene_vector B;$/;"	m	class:Action_syr2
B	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  typename Interface::gene_vector B;$/;"	m	class:Action_trisolve
B	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::gene_matrix B;$/;"	m	class:Action_trisolve_matrix
B	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::gene_matrix B;$/;"	m	class:Action_trmm
B	tools/eigen/bench/geometry.cpp	/^typedef Matrix<\/*Real*\/Scalar,Dynamic,Dynamic> B;$/;"	t	file:
B	tools/eigen/doc/snippets/GeneralizedEigenSolver.cpp	/^MatrixXf B = MatrixXf::Random(4,4);$/;"	v
B	tools/eigen/doc/snippets/MatrixBase_applyOnTheLeft.cpp	/^Matrix3f A = Matrix3f::Random(3,3), B;$/;"	v
B	tools/eigen/doc/snippets/MatrixBase_applyOnTheRight.cpp	/^Matrix3f A = Matrix3f::Random(3,3), B;$/;"	v
B	tools/eigen/doc/snippets/PartialPivLU_solve.cpp	/^MatrixXd B = MatrixXd::Random(3,2);$/;"	v
B	tools/eigen/doc/snippets/RealQZ_compute.cpp	/^MatrixXf B = MatrixXf::Random(4,4);$/;"	v
B	tools/eigen/doc/snippets/RealQZ_compute.cpp	/^cout << "A:\\n" << A << "\\n" << "B:\\n" << B << "\\n";$/;"	v
B	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^MatrixXd B = X * X.transpose();$/;"	v
B	tools/eigen/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType2.cpp	/^MatrixXd B = X * X.transpose();$/;"	v
B	tools/eigen/doc/snippets/Tutorial_solve_multiple_rhs.cpp	/^Matrix<float,3,2> B;$/;"	v
B	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef Matrix<B_Scalar, B_Rows, B_Cols, B_Options, B_MaxRows, B_MaxCols> B;$/;"	t	struct:Eigen::internal::make_coherent_impl
B0	tools/eigen/test/main.h	64;"	d
BAx_lx	tools/eigen/Eigen/src/Core/util/Constants.h	/^  BAx_lx              = 0x400,$/;"	e	enum:Eigen::DecompositionOptions
BB	tools/eigen/blas/testing/cblat3.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ),$/;"	v	program:CBLAT3
BB	tools/eigen/blas/testing/dblat3.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ),$/;"	v	program:DBLAT3
BB	tools/eigen/blas/testing/sblat3.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ),$/;"	v	program:SBLAT3
BB	tools/eigen/blas/testing/zblat3.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ),$/;"	v	program:ZBLAT3
BDCSVD	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  BDCSVD() : m_algoswap(16), m_numIters(0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  BDCSVD(Index rows, Index cols, unsigned int computationOptions = 0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  BDCSVD(const MatrixType& matrix, unsigned int computationOptions = 0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^class BDCSVD : public SVDBase<BDCSVD<_MatrixType> >$/;"	c	namespace:Eigen
BEGIN_OF	tools/eigen/bench/btl/generic_bench/utils/utilities.h	67;"	d
BEGIN_OF	tools/eigen/bench/btl/generic_bench/utils/utilities.h	84;"	d
BENCH	tools/eigen/bench/BenchTimer.h	163;"	d
BENCH	tools/eigen/bench/quat_slerp.cpp	228;"	d	file:
BENCH	tools/eigen/bench/sparse_cholesky.cpp	33;"	d	file:
BENCH	tools/eigen/bench/sparse_dense_product.cpp	28;"	d	file:
BENCH	tools/eigen/bench/sparse_lu.cpp	33;"	d	file:
BENCH	tools/eigen/bench/sparse_product.cpp	30;"	d	file:
BENCH	tools/eigen/bench/sparse_randomsetter.cpp	32;"	d	file:
BENCH	tools/eigen/bench/sparse_setter.cpp	36;"	d	file:
BENCH	tools/eigen/bench/sparse_transpose.cpp	28;"	d	file:
BENCH	tools/eigen/bench/sparse_trisolver.cpp	29;"	d	file:
BENCH_HH	tools/eigen/bench/btl/generic_bench/bench.hh	21;"	d
BENCH_PARAMETER_HH	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	21;"	d
BENCH_PERF	tools/eigen/bench/bench_norm.cpp	225;"	d	file:
BENCH_STATIC_HH	tools/eigen/bench/btl/generic_bench/static/bench_static.hh	21;"	d
BET	tools/eigen/blas/testing/cblat2.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ), BET(/;"	v	program:CBLAT2
BET	tools/eigen/blas/testing/cblat3.f	/^     $                   BB( NMAX*NMAX ), BET(/;"	v	program:CBLAT3
BET	tools/eigen/blas/testing/dblat2.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ), BET(/;"	v	program:DBLAT2
BET	tools/eigen/blas/testing/dblat3.f	/^     $                   BB( NMAX*NMAX ), BET(/;"	v	program:DBLAT3
BET	tools/eigen/blas/testing/sblat2.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ), BET(/;"	v	program:SBLAT2
BET	tools/eigen/blas/testing/sblat3.f	/^     $                   BB( NMAX*NMAX ), BET(/;"	v	program:SBLAT3
BET	tools/eigen/blas/testing/zblat2.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ), BET(/;"	v	program:ZBLAT2
BET	tools/eigen/blas/testing/zblat3.f	/^     $                   BB( NMAX*NMAX ), BET(/;"	v	program:ZBLAT3
BLASFUNC	tools/eigen/Eigen/src/misc/blas.h	9;"	d
BLASFUNC	tools/eigen/bench/btl/libs/BLAS/blas.h	4;"	d
BLASLONG	tools/eigen/Eigen/src/misc/blas.h	/^typedef long BLASLONG;$/;"	t
BLASLONG	tools/eigen/Eigen/src/misc/blas.h	/^typedef long long BLASLONG;$/;"	t
BLASLONG	tools/eigen/bench/btl/libs/BLAS/blas.h	/^typedef long BLASLONG;$/;"	t
BLASLONG	tools/eigen/bench/btl/libs/BLAS/blas.h	/^typedef long long BLASLONG;$/;"	t
BLASULONG	tools/eigen/Eigen/src/misc/blas.h	/^typedef unsigned long BLASULONG;$/;"	t
BLASULONG	tools/eigen/Eigen/src/misc/blas.h	/^typedef unsigned long long BLASULONG;$/;"	t
BLASULONG	tools/eigen/bench/btl/libs/BLAS/blas.h	/^typedef unsigned long BLASULONG;$/;"	t
BLASULONG	tools/eigen/bench/btl/libs/BLAS/blas.h	/^typedef unsigned long long BLASULONG;$/;"	t
BLAS_FUNC	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	2;"	d
BLAS_H	tools/eigen/Eigen/src/misc/blas.h	2;"	d
BLAS_H	tools/eigen/bench/btl/libs/BLAS/blas.h	2;"	d
BLAZE_INTERFACE_HH	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	19;"	d
BLITZ_INTERFACE_HH	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	22;"	d
BLITZ_LU_SOLVE_INTERFACE_HH	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	21;"	d
BLITZ_LU_SOLVE_INTERFACE_HH	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	21;"	d
BLITZ_LU_SOLVE_INTERFACE_HH	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	21;"	d
BM_FuncCPU	tools/eigen/bench/tensors/tensor_benchmarks_cpu.cc	19;"	d	file:
BM_FuncGPU	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	12;"	d	file:
BM_FuncWithInputDimsCPU	tools/eigen/bench/tensors/tensor_benchmarks_cpu.cc	75;"	d	file:
BM_FuncWithInputDimsGPU	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	37;"	d	file:
BM_FuncWithKernelDimsCPU	tools/eigen/bench/tensors/tensor_benchmarks_cpu.cc	124;"	d	file:
BM_FuncWithKernelDimsGPU	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	57;"	d	file:
BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
BS	tools/eigen/blas/testing/cblat3.f	/^     $                   BB( NMAX*NMAX ), BET( NBEMAX ),$/;"	v	program:CBLAT3
BS	tools/eigen/blas/testing/dblat3.f	/^     $                   BB( NMAX*NMAX ), BET( NBEMAX ),$/;"	v	program:DBLAT3
BS	tools/eigen/blas/testing/sblat3.f	/^     $                   BB( NMAX*NMAX ), BET( NBEMAX ),$/;"	v	program:SBLAT3
BS	tools/eigen/blas/testing/zblat3.f	/^     $                   BB( NMAX*NMAX ), BET( NBEMAX ),$/;"	v	program:ZBLAT3
BTL_ALWAYS_INLINE	tools/eigen/bench/btl/generic_bench/btl.hh	30;"	d
BTL_ALWAYS_INLINE	tools/eigen/bench/btl/generic_bench/btl.hh	32;"	d
BTL_ASM_COMMENT	tools/eigen/bench/btl/generic_bench/btl.hh	42;"	d
BTL_ASM_COMMENT	tools/eigen/bench/btl/generic_bench/btl.hh	44;"	d
BTL_C_INTERFACE_BASE_H	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	3;"	d
BTL_DISABLE_SSE_EXCEPTIONS	tools/eigen/bench/btl/generic_bench/btl.hh	48;"	d
BTL_DISABLE_SSE_EXCEPTIONS	tools/eigen/bench/btl/generic_bench/btl.hh	57;"	d
BTL_DONT_INLINE	tools/eigen/bench/btl/generic_bench/btl.hh	36;"	d
BTL_DONT_INLINE	tools/eigen/bench/btl/generic_bench/btl.hh	38;"	d
BTL_HH	tools/eigen/bench/btl/generic_bench/btl.hh	20;"	d
BTL_MAIN	tools/eigen/bench/btl/generic_bench/btl.hh	244;"	d
BVIntersect	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^void BVIntersect(const BVH &tree, Intersector &intersector)$/;"	f	namespace:Eigen
BVIntersect	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^void BVIntersect(const BVH1 &tree1, const BVH2 &tree2, Intersector &intersector) \/\/TODO: tandem descent when it makes sense$/;"	f	namespace:Eigen
BVMinimize	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^typename Minimizer::Scalar BVMinimize(const BVH &tree, Minimizer &minimizer)$/;"	f	namespace:Eigen
BVMinimize	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^typename Minimizer::Scalar BVMinimize(const BVH1 &tree1, const BVH2 &tree2, Minimizer &minimizer)$/;"	f	namespace:Eigen
B_ref	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::gene_vector B_ref;$/;"	m	class:Action_atv_product
B_ref	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::gene_vector B_ref;$/;"	m	class:Action_ger
B_ref	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::gene_matrix B_ref;$/;"	m	class:Action_matrix_matrix_product
B_ref	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::gene_vector B_ref;$/;"	m	class:Action_matrix_vector_product
B_ref	tools/eigen/bench/btl/actions/action_rot.hh	/^  typename Interface::gene_vector B_ref;$/;"	m	class:Action_rot
B_ref	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::gene_vector B_ref;$/;"	m	class:Action_symv
B_ref	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::gene_vector B_ref;$/;"	m	class:Action_syr2
B_ref	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::gene_matrix B_ref;$/;"	m	class:Action_trisolve_matrix
B_ref	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::gene_matrix B_ref;$/;"	m	class:Action_trmm
B_stl	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::stl_vector B_stl;$/;"	m	class:Action_atv_product
B_stl	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::stl_vector B_stl;$/;"	m	class:Action_ger
B_stl	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::stl_matrix B_stl;$/;"	m	class:Action_matrix_matrix_product
B_stl	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::stl_vector B_stl;$/;"	m	class:Action_matrix_vector_product
B_stl	tools/eigen/bench/btl/actions/action_rot.hh	/^  typename Interface::stl_vector B_stl;$/;"	m	class:Action_rot
B_stl	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::stl_vector B_stl;$/;"	m	class:Action_symv
B_stl	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::stl_vector B_stl;$/;"	m	class:Action_syr2
B_stl	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  typename Interface::stl_vector B_stl;$/;"	m	class:Action_trisolve
B_stl	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::stl_matrix B_stl;$/;"	m	class:Action_trisolve_matrix
B_stl	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::stl_matrix B_stl;$/;"	m	class:Action_trmm
Ball	tools/eigen/unsupported/test/BVH.cpp	/^  Ball() {}$/;"	f	struct:Ball
Ball	tools/eigen/unsupported/test/BVH.cpp	/^  Ball(const VectorType &c, double r) : center(c), radius(r) {}$/;"	f	struct:Ball
Ball	tools/eigen/unsupported/test/BVH.cpp	/^struct Ball$/;"	s	file:
BallPointStuff	tools/eigen/unsupported/test/BVH.cpp	/^  BallPointStuff() : calls(0), count(0) {}$/;"	f	struct:BallPointStuff
BallPointStuff	tools/eigen/unsupported/test/BVH.cpp	/^  BallPointStuff(const VectorType &inP) : p(inP), calls(0), count(0) {}$/;"	f	struct:BallPointStuff
BallPointStuff	tools/eigen/unsupported/test/BVH.cpp	/^struct BallPointStuff \/\/this class provides functions to be both an intersector and a minimizer, both for a ball and a point and for two trees$/;"	s	file:
BallType	tools/eigen/unsupported/test/BVH.cpp	/^  typedef Ball<Dim> BallType;$/;"	t	struct:BallPointStuff	file:
BallType	tools/eigen/unsupported/test/BVH.cpp	/^  typedef Ball<Dim> BallType;$/;"	t	struct:TreeTest	file:
BallTypeList	tools/eigen/unsupported/test/BVH.cpp	/^  typedef std::vector<BallType, aligned_allocator<BallType> > BallTypeList;$/;"	t	struct:TreeTest	file:
BandMatrix	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    explicit inline BandMatrix(Index rows=Rows, Index cols=Cols, Index supers=Supers, Index subs=Subs)$/;"	f	class:Eigen::internal::BandMatrix
BandMatrix	tools/eigen/Eigen/src/Core/BandMatrix.h	/^class BandMatrix : public BandMatrixBase<BandMatrix<_Scalar,Rows,Cols,Supers,Subs,Options> >$/;"	c	namespace:Eigen::internal
BandMatrixBase	tools/eigen/Eigen/src/Core/BandMatrix.h	/^class BandMatrixBase : public EigenBase<Derived>$/;"	c	namespace:Eigen::internal
BandMatrixWrapper	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    explicit inline BandMatrixWrapper(const CoefficientsType& coeffs, Index rows=_Rows, Index cols=_Cols, Index supers=_Supers, Index subs=_Subs)$/;"	f	class:Eigen::internal::BandMatrixWrapper
BandMatrixWrapper	tools/eigen/Eigen/src/Core/BandMatrix.h	/^class BandMatrixWrapper : public BandMatrixBase<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	c	namespace:Eigen::internal
BandShape	tools/eigen/Eigen/src/Core/BandMatrix.h	/^struct BandShape {};$/;"	s	namespace:Eigen::internal
BandShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct BandShape              { static std::string debugName() { return "BandShape"; } };$/;"	s	namespace:Eigen
Base	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodDecomposition> Base;$/;"	t	class:Eigen::CholmodDecomposition
Base	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLDLT
Base	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLLT
Base	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT> Base;$/;"	t	class:Eigen::CholmodSupernodalLLT
Base	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::CholmodBase
Base	tools/eigen/Eigen/src/Core/Array.h	/^    typedef PlainObjectBase<Array> Base;$/;"	t	class:Eigen::Array
Base	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::ArrayBase
Base	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    typedef ArrayBase<ArrayWrapper> Base;$/;"	t	class:Eigen::ArrayWrapper
Base	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    typedef MatrixBase<MatrixWrapper<ExpressionType> > Base;$/;"	t	class:Eigen::MatrixWrapper
Base	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor> Base;$/;"	t	class:Eigen::internal::TridiagonalMatrix
Base	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::internal::BandMatrixBase
Base	tools/eigen/Eigen/src/Core/Block.h	/^    typedef Impl Base;$/;"	t	class:Eigen::Block
Base	tools/eigen/Eigen/src/Core/Block.h	/^    typedef Impl Base;$/;"	t	class:Eigen::BlockImpl
Base	tools/eigen/Eigen/src/Core/Block.h	/^    typedef MapBase<BlockType> Base;$/;"	t	class:Eigen::internal::BlockImpl_dense
Base	tools/eigen/Eigen/src/Core/Block.h	/^    typedef typename internal::dense_xpr_base<BlockType>::type Base;$/;"	t	class:Eigen::internal::BlockImpl_dense
Base	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename dense_xpr_base<EvalToTemp>::type Base;$/;"	t	class:Eigen::internal::EvalToTemp
Base	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef unary_evaluator<T> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  typedef typename evaluator<XprType>::InnerIterator Base;$/;"	t	class:Eigen::internal::inner_iterator_selector
Base	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^                                                      BinaryOp>::ret>::Base Base;$/;"	t	class:Eigen::CwiseBinaryOp
Base	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename internal::generic_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Base	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseNullaryOp>::type Base;$/;"	t	class:Eigen::CwiseNullaryOp
Base	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp, XprType,typename internal::traits<XprType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryOp
Base	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename internal::generic_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Base	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp, MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryView
Base	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::dense_xpr_base< CwiseUnaryView<ViewOp, MatrixType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Base	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename internal::generic_xpr_base<CwiseUnaryView<ViewOp, XprType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Base	tools/eigen/Eigen/src/Core/DenseBase.h	/^                      typename NumTraits<typename internal::traits<Derived>::Scalar>::Real> Base;$/;"	t	class:Eigen::DenseBase
Base	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, WriteAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	tools/eigen/Eigen/src/Core/Diagonal.h	/^    typedef typename internal::dense_xpr_base<Diagonal>::type Base;$/;"	t	class:Eigen::Diagonal
Base	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    typedef typename internal::dense_xpr_base<ForceAlignedAccess>::type Base;$/;"	t	class:Eigen::ForceAlignedAccess
Base	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef MatrixBase<Derived> Base;$/;"	t	class:Eigen::InverseImpl
Base	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	tools/eigen/Eigen/src/Core/Map.h	/^    typedef MapBase<Map> Base;$/;"	t	class:Eigen::Map
Base	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::MapBase
Base	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::MapBase
Base	tools/eigen/Eigen/src/Core/Matrix.h	/^    typedef PlainObjectBase<Matrix> Base;$/;"	t	class:Eigen::Matrix
Base	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::MatrixBase
Base	tools/eigen/Eigen/src/Core/NestByValue.h	/^    typedef typename internal::dense_xpr_base<NestByValue>::type Base;$/;"	t	class:Eigen::NestByValue
Base	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::PermutationBase
Base	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<Map> Base;$/;"	t	class:Eigen::Map
Base	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationMatrix> Base;$/;"	t	class:Eigen::PermutationMatrix
Base	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationWrapper> Base;$/;"	t	class:Eigen::PermutationWrapper
Base	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::PlainObjectBase
Base	tools/eigen/Eigen/src/Core/Product.h	/^                                                        internal::product_type<Lhs,Rhs>::ret>::ret>::Base Base;$/;"	t	class:Eigen::Product
Base	tools/eigen/Eigen/src/Core/Product.h	/^    typedef typename internal::dense_product_base<Lhs, Rhs, Option> Base;$/;"	t	class:Eigen::ProductImpl
Base	tools/eigen/Eigen/src/Core/Product.h	/^    typedef typename internal::generic_xpr_base<Product<Lhs,Rhs,Option>, MatrixXpr, StorageKind>::type Base;$/;"	t	class:Eigen::ProductImpl
Base	tools/eigen/Eigen/src/Core/Product.h	/^  typedef typename internal::dense_xpr_base<ProductXpr>::type Base;$/;"	t	class:Eigen::internal::dense_product_base
Base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef diagonal_product_evaluator_base<Lhs, typename Rhs::DiagonalVectorType, Product<Lhs, Rhs, LazyProduct>, OnTheRight> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef diagonal_product_evaluator_base<Rhs, typename Lhs::DiagonalVectorType, Product<Lhs, Rhs, LazyProduct>, OnTheLeft> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<Diagonal<const Product<Lhs, Rhs, LazyProduct>, DiagIndex> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<Product<CwiseUnaryOp<internal::scalar_multiple_op<Scalar>,const Lhs>, Rhs, DefaultProduct> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef product_evaluator<BaseProduct, CoeffBasedProductMode, DenseShape, DenseShape, typename Lhs::Scalar, typename Rhs::Scalar > Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef product_evaluator<XprType> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/Core/Ref.h	/^    typedef RefBase<Ref> Base;$/;"	t	class:Eigen::Ref
Base	tools/eigen/Eigen/src/Core/Ref.h	/^  typedef MapBase<Derived> Base;$/;"	t	class:Eigen::RefBase
Base	tools/eigen/Eigen/src/Core/Replicate.h	/^    typedef typename internal::dense_xpr_base<Replicate>::type Base;$/;"	t	class:Eigen::Replicate
Base	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::dense_xpr_base<ReturnByValue>::type Base;$/;"	t	class:Eigen::ReturnByValue
Base	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/Core/Reverse.h	/^    typedef typename internal::dense_xpr_base<Reverse>::type Base;$/;"	t	class:Eigen::Reverse
Base	tools/eigen/Eigen/src/Core/Select.h	/^    typedef typename internal::dense_xpr_base<Select>::type Base;$/;"	t	class:Eigen::Select
Base	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef TriangularBase<SelfAdjointView> Base;$/;"	t	class:Eigen::SelfAdjointView
Base	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version> Base;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Base	tools/eigen/Eigen/src/Core/Solve.h	/^    typedef typename internal::generic_xpr_base<Solve<Decomposition,RhsType>, MatrixXpr, StorageKind>::type Base;$/;"	t	class:Eigen::SolveImpl
Base	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef MatrixBase<Solve<Decomposition,RhsType> > Base;$/;"	t	class:Eigen::SolveImpl
Base	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef ReturnByValue<triangular_solve_retval> Base;$/;"	t	struct:Eigen::internal::triangular_solve_retval
Base	tools/eigen/Eigen/src/Core/Stride.h	/^    typedef Stride<0, Value> Base;$/;"	t	class:Eigen::InnerStride
Base	tools/eigen/Eigen/src/Core/Stride.h	/^    typedef Stride<Value, 0> Base;$/;"	t	class:Eigen::OuterStride
Base	tools/eigen/Eigen/src/Core/Swap.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, swap_assign_op<typename DstEvaluatorTypeT::Scalar>, BuiltIn> Base;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Base	tools/eigen/Eigen/src/Core/Transpose.h	/^    typedef typename TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::Transpose
Base	tools/eigen/Eigen/src/Core/Transpose.h	/^    typedef typename internal::TransposeImpl_base<MatrixType>::type Base;$/;"	t	class:Eigen::TransposeImpl
Base	tools/eigen/Eigen/src/Core/Transpose.h	/^  typedef typename internal::generic_xpr_base<Transpose<XprType> >::type Base;$/;"	t	class:Eigen::TransposeImpl
Base	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Map> Base;$/;"	t	class:Eigen::Map
Base	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Transpositions> Base;$/;"	t	class:Eigen::Transpositions
Base	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<TranspositionsWrapper> Base;$/;"	t	class:Eigen::TranspositionsWrapper
Base	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularBase<TriangularViewType> Base;$/;"	t	class:Eigen::TriangularViewImpl
Base	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularViewImpl<_MatrixType, _Mode, typename internal::traits<_MatrixType>::StorageKind > Base;$/;"	t	class:Eigen::TriangularView
Base	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef evaluator<typename internal::remove_all<MatrixType>::type> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version> Base;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Base	tools/eigen/Eigen/src/Core/VectorBlock.h	/^                     internal::traits<VectorType>::Flags & RowMajorBit ? Size : 1> Base;$/;"	t	class:Eigen::VectorBlock
Base	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::dense_xpr_base<PartialReduxExpr>::type Base;$/;"	t	class:Eigen::PartialReduxExpr
Base	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef blas_traits<NestedXpr> Base;$/;"	t	struct:Eigen::internal::blas_traits
Base	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef SelfAdjointEigenSolver<_MatrixType> Base;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
Base	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  typedef RotationBase<AngleAxis<_Scalar>,3> Base;$/;"	t	class:Eigen::AngleAxis
Base	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    typedef MatrixBase<Homogeneous> Base;$/;"	t	class:Eigen::Homogeneous
Base	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef evaluator<RefactoredXpr> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<const Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef QuaternionBase<Quaternion<_Scalar,_Options> > Base;$/;"	t	class:Eigen::Quaternion
Base	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef RotationBase<Derived, 3> Base;$/;"	t	class:Eigen::QuaternionBase
Base	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  typedef RotationBase<Rotation2D<_Scalar>,2> Base;$/;"	t	class:Eigen::Rotation2D
Base	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef DiagonalPreconditioner<_Scalar> Base;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
Base	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef IterativeSolverBase<BiCGSTAB> Base;$/;"	t	class:Eigen::BiCGSTAB
Base	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef IterativeSolverBase<ConjugateGradient> Base;$/;"	t	class:Eigen::ConjugateGradient
Base	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseSolverBase<IncompleteLUT> Base;$/;"	t	class:Eigen::IncompleteLUT
Base	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::IterativeSolverBase
Base	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef IterativeSolverBase<LeastSquaresConjugateGradient> Base;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Base	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::generic_xpr_base<SolveWithGuess<Decomposition,RhsType,GuessType>, MatrixXpr, typename internal::traits<RhsType>::StorageKind>::type Base;$/;"	t	class:Eigen::SolveWithGuess
Base	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLDLT<MatrixType, _UpLo> > Base; $/;"	t	class:Eigen::PastixLDLT
Base	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLLT<MatrixType, _UpLo> > Base;$/;"	t	class:Eigen::PastixLLT
Base	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLU<MatrixType> > Base;$/;"	t	class:Eigen::PastixLU
Base	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::PastixBase
Base	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLDLT<MatrixType,Options> > Base;$/;"	t	class:Eigen::PardisoLDLT
Base	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLLT<MatrixType,_UpLo> > Base;$/;"	t	class:Eigen::PardisoLLT
Base	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl<PardisoLU> Base;$/;"	t	class:Eigen::PardisoLU
Base	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::PardisoImpl
Base	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SparseSolverBase<SPQR<_MatrixType> > Base;$/;"	t	class:Eigen::SPQR
Base	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef SVDBase<BDCSVD> Base;$/;"	t	class:Eigen::BDCSVD
Base	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef SVDBase<JacobiSVD> Base;$/;"	t	class:Eigen::JacobiSVD
Base	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialCholesky> Base;$/;"	t	class:Eigen::SimplicialCholesky
Base	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLDLT> Base;$/;"	t	class:Eigen::SimplicialLDLT
Base	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLLT> Base;$/;"	t	class:Eigen::SimplicialLLT
Base	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::SimplicialCholeskyBase
Base	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef Map<SparseMatrix<_Scalar, _Flags, _StorageIndex> > Base;$/;"	t	class:Eigen::MappedSparseMatrix
Base	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^  typedef evaluator<SparseCompressedBase<XprType> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef SparseCompressedBase<Block<SparseMatrixType,BlockRows,BlockCols,true> > Base;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
Base	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  typedef evaluator<SparseCompressedBase<XprType> > Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  typedef internal::sparse_matrix_block_impl<SparseMatrixType,BlockRows,BlockCols> Base;$/;"	t	class:Eigen::BlockImpl
Base	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef SparseMatrixBase<Derived> Base;$/;"	t	class:Eigen::SparseCompressedBase
Base	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>::EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>::EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef sparse_dense_outer_product_evaluator<Lhs,Rhs, Lhs::IsRowMajor> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef sparse_dense_outer_product_evaluator<Lhs,Rhs, Rhs::IsRowMajor> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef sparse_diagonal_product_evaluator<Lhs, Transpose<const typename Rhs::DiagonalVectorType>, Lhs::Flags&RowMajorBit?SDP_AsCwiseProduct:SDP_AsScalarProduct> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef sparse_diagonal_product_evaluator<Rhs, typename Lhs::DiagonalVectorType, Rhs::Flags&RowMajorBit?SDP_AsScalarProduct:SDP_AsCwiseProduct> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseCompressedBase<Derived> Base;$/;"	t	class:Eigen::SparseMapBase
Base	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseMapBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::SparseMapBase
Base	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseMapBase<Map> Base;$/;"	t	class:Eigen::Map
Base	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^  typedef evaluator<SparseCompressedBase<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^  typedef evaluator<SparseCompressedBase<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef SparseCompressedBase<SparseMatrix> Base;$/;"	t	class:Eigen::SparseMatrix
Base	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef evaluator<SparseCompressedBase<SparseMatrix<_Scalar,_Options,_Index> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::SparseMatrixBase
Base	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    typedef internal::SparseRefBase<Ref> Base;$/;"	t	class:Eigen::Ref
Base	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  typedef SparseMapBase<Derived> Base;$/;"	t	class:Eigen::internal::SparseRefBase
Base	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef EigenBase<SparseSelfAdjointView> Base;$/;"	t	class:Eigen::SparseSelfAdjointView
Base	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef SparseCompressedBase<Transpose<MatrixType> > Base;$/;"	t	class:Eigen::internal::SparseTransposeImpl
Base	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef internal::SparseTransposeImpl<MatrixType> Base;$/;"	t	class:Eigen::TransposeImpl
Base	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^      typedef EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixTypeNestedCleaned::InnerIterator Base;$/;"	t	class:Eigen::TriangularViewImpl::InnerIterator
Base	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixTypeNestedCleaned::ReverseInnerIterator Base;$/;"	t	class:Eigen::TriangularViewImpl::ReverseInnerIterator
Base	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef internal::SparseLUImpl<Scalar, StorageIndex> Base;$/;"	t	class:Eigen::SparseLU
Base	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef SparseSolverBase<SparseQR<_MatrixType,_OrderingType> > Base;$/;"	t	class:Eigen::SparseQR
Base	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::SuperLUBase
Base	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperILU> Base;$/;"	t	class:Eigen::SuperILU
Base	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperLU> Base;$/;"	t	class:Eigen::SuperLU
Base	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseSolverBase<UmfPackLU<_MatrixType> > Base;$/;"	t	class:Eigen::UmfPackLU
Base	tools/eigen/Eigen/src/misc/Image.h	/^  typedef ReturnByValue<image_retval_base> Base;$/;"	t	struct:Eigen::internal::image_retval_base
Base	tools/eigen/Eigen/src/misc/Kernel.h	/^  typedef ReturnByValue<kernel_retval_base> Base;$/;"	t	struct:Eigen::internal::kernel_retval_base
Base	tools/eigen/test/denseLM.cpp	/^  typedef DenseFunctor<Scalar> Base;$/;"	t	struct:DenseLM	file:
Base	tools/eigen/test/sparseLM.cpp	/^  typedef SparseFunctor<Scalar,int> Base;$/;"	t	struct:sparseGaussianTest	file:
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef TensorBase<Tensor<Scalar_, NumIndices_, Options_, IndexType_> > Base;$/;"	t	class:Eigen::Tensor
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef TensorEvaluator<const TensorChippingOp<DimId, ArgType>, Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef TensorEvaluator<const TensorConcatenationOp<Axis, LeftArgType, RightArgType>, Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef BaseTensorContractionMapper<Scalar, Index, side, Tensor, nocontract_t, contract_t, 1, inner_dim_contiguous> Base;$/;"	t	class:Eigen::internal::TensorContractionInputMapper
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef BaseTensorContractionMapper<Scalar, Index, side, Tensor, nocontract_t, contract_t, packet_size, inner_dim_contiguous> Base;$/;"	t	class:Eigen::internal::TensorContractionInputMapper
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorContractionEvaluatorBase<Self> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef TensorContractionEvaluatorBase<Self> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef TensorContractionEvaluatorBase<Self> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  typedef array<DenseIndex, NumDims> Base;$/;"	t	struct:Eigen::DSizes
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  typedef internal::numeric_list<std::ptrdiff_t, Indices...> Base;$/;"	t	struct:Eigen::Sizes
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef TensorBase<TensorFixedSize<Scalar_, Dimensions_, Options_, IndexType> > Base;$/;"	t	class:Eigen::TensorFixedSize
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef TensorEvaluator<const TensorLayoutSwapOp<ArgType>, Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename PlainObjectType::Base Base;$/;"	t	class:Eigen::TensorMap
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef TensorEvaluator<const TensorReshapingOp<NewDimensions, ArgType>, Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef TensorEvaluator<const TensorSlicingOp<StartIndices, Sizes, ArgType>, Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^                                         TensorLazyEvaluatorReadOnly<Dimensions, const Expr, Device> >::type Base;$/;"	t	class:Eigen::internal::TensorLazyEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename PlainObjectType::Base Base;$/;"	t	class:Eigen::TensorRef
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef TensorEvaluator<const TensorRef<Derived>, Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef TensorLazyEvaluatorReadOnly<Dimensions, Expr, Device> Base;$/;"	t	class:Eigen::internal::TensorLazyEvaluatorWritable
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^                          Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef TensorEvaluator<const TensorShufflingOp<Shuffle, ArgType>, Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef TensorEvaluator<const XprType, Device> Base;$/;"	t	struct:Eigen::TensorEvaluator
Base	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    typedef typename internal::tensor_symmetry_pre_analysis<NumIndices, Gen...>::root_type Base;$/;"	t	class:Eigen::SGroup
Base	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^                       typename NumTraits<typename internal::traits<typename internal::remove_all<_DerType>::type>::Scalar>::Real>::value> Base;$/;"	t	class:Eigen::AutoDiffScalar
Base	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef IterativeSolverBase<DGMRES> Base;$/;"	t	class:Eigen::DGMRES
Base	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef IterativeSolverBase<GMRES> Base;$/;"	t	class:Eigen::GMRES
Base	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef SparseSolverBase<IncompleteCholesky<Scalar,_UpLo,_OrderingType> > Base;$/;"	t	class:Eigen::IncompleteCholesky
Base	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef SparseSolverBase<IncompleteLU<_Scalar> > Base;$/;"	t	class:Eigen::IncompleteLU
Base	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        typedef IterativeSolverBase<MINRES> Base;$/;"	t	class:Eigen::MINRES
Base	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    typedef KroneckerProductBase<KroneckerProduct> Base;$/;"	t	class:Eigen::KroneckerProduct
Base	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    typedef KroneckerProductBase<KroneckerProductSparse> Base;$/;"	t	class:Eigen::KroneckerProductSparse
Base	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^            MatrixBase<SkylineProduct<LhsNested, RhsNested, ProductMode> > >::type Base;$/;"	t	struct:Eigen::internal::traits
Base	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    typedef typename SparseVector<Scalar,_Options,_StorageIndex>::InnerIterator Base;$/;"	t	class:Eigen::DynamicSparseMatrix::InnerIterator
Base	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    typedef typename SparseVector<Scalar,_Options,_StorageIndex>::ReverseInnerIterator Base;$/;"	t	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
BaseProduct	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, LazyProduct> BaseProduct;$/;"	t	struct:Eigen::internal::product_evaluator
BaseScalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef typename internal::traits<ValueType>::Scalar BaseScalar;$/;"	t	class:Eigen::AutoDiffVector
BaseTensorContractionMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  BaseTensorContractionMapper(const Tensor& tensor,$/;"	f	class:Eigen::internal::BaseTensorContractionMapper
BaseTensorContractionMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^class BaseTensorContractionMapper {$/;"	c	namespace:Eigen::internal
BaseTraits	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef traits<PlainObject> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BaseTraits	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef traits<PlainObject> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BaseTraits	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  typedef traits<_MatrixType> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BaseTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef traits<PlainObjectType> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BasisDerivativeType	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::BasisDerivativeType BasisDerivativeType;$/;"	t	class:Eigen::Spline
BasisDerivativeType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,Dynamic,Dynamic,RowMajor,NumOfDerivativesAtCompileTime,OrderAtCompileTime> BasisDerivativeType;$/;"	t	struct:Eigen::SplineTraits
BasisDerivativeType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<_Scalar,Dynamic,Dynamic,RowMajor,NumOfDerivativesAtCompileTime,OrderAtCompileTime> BasisDerivativeType;$/;"	t	struct:Eigen::SplineTraits
BasisFunctionDerivatives	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^  Spline<_Scalar, _Dim, _Degree>::BasisFunctionDerivatives($/;"	f	class:Eigen::Spline
BasisFunctionDerivativesImpl	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^  void Spline<_Scalar, _Dim, _Degree>::BasisFunctionDerivativesImpl($/;"	f	class:Eigen::Spline
BasisFunctions	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    Spline<_Scalar, _Dim, _Degree>::BasisFunctions($/;"	f	class:Eigen::Spline
BasisReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime> BasisReturnType;$/;"	t	class:Eigen::MatrixBase
BasisVectorType	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::BasisVectorType BasisVectorType;$/;"	t	class:Eigen::Spline
BasisVectorType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,1,OrderAtCompileTime> BasisVectorType;$/;"	t	struct:Eigen::SplineTraits
BatchMatMul	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^struct BatchMatMul {$/;"	s	file:
BenchTimer	tools/eigen/bench/BenchTimer.h	/^  BenchTimer()$/;"	f	class:Eigen::BenchTimer
BenchTimer	tools/eigen/bench/BenchTimer.h	/^class BenchTimer$/;"	c	namespace:Eigen
BenchmarkSuite	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  BenchmarkSuite(const Device& device, size_t m)$/;"	f	class:BenchmarkSuite
BenchmarkSuite	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  BenchmarkSuite(const Device& device, size_t m, size_t k, size_t n)$/;"	f	class:BenchmarkSuite
BenchmarkSuite	tools/eigen/bench/tensors/tensor_benchmarks.h	/^template <typename Device> class BenchmarkSuite {$/;"	c
Bennett5_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    Bennett5_functor(void) : Functor<double>(3,154) {}$/;"	f	struct:Bennett5_functor
Bennett5_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct Bennett5_functor : Functor<double>$/;"	s	file:
Bennett5_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    Bennett5_functor(void) : DenseFunctor<double>(3,154) {}$/;"	f	struct:Bennett5_functor
Bennett5_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct Bennett5_functor : DenseFunctor<double>$/;"	s	file:
BiCGSTAB	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  BiCGSTAB() : Base() {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  explicit BiCGSTAB(const MatrixType& A) : Base(A) {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^class BiCGSTAB : public IterativeSolverBase<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
BidiagonalType	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef BandMatrix<RealScalar, ColsAtCompileTime, ColsAtCompileTime, 1, 0, RowMajor> BidiagonalType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
BinaryOp	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef scalar_product_op<T> BinaryOp;$/;"	t	struct:Eigen::internal::binary_evaluator
BlasLinearMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE BlasLinearMapper(Scalar *data) : m_data(data) {}$/;"	f	class:Eigen::internal::BlasLinearMapper
BlasLinearMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^class BlasLinearMapper {$/;"	c	namespace:Eigen::internal
BlasVectorMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE BlasVectorMapper(Scalar *data) : m_data(data) {}$/;"	f	class:Eigen::internal::BlasVectorMapper
BlasVectorMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^class BlasVectorMapper {$/;"	c	namespace:Eigen::internal
Block	tools/eigen/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index i) : Impl(xpr,i)$/;"	f	class:Eigen::Block
Block	tools/eigen/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index startRow, Index startCol)$/;"	f	class:Eigen::Block
Block	tools/eigen/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr,$/;"	f	class:Eigen::Block
Block	tools/eigen/Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel> class Block$/;"	c	namespace:Eigen
BlockAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    BlockAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon51
BlockAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    BlockAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon52
BlockAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    BlockAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon100
BlockAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    BlockAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon101
BlockAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    BlockAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon71
BlockAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    BlockAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon106
BlockAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    BlockAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon85
BlockImpl	tools/eigen/Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline BlockImpl(XprType& xpr, Index i) : Impl(xpr,i) {}$/;"	f	class:Eigen::BlockImpl
BlockImpl	tools/eigen/Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline BlockImpl(XprType& xpr, Index startRow, Index startCol) : Impl(xpr, startRow, startCol) {}$/;"	f	class:Eigen::BlockImpl
BlockImpl	tools/eigen/Eigen/src/Core/Block.h	/^    inline BlockImpl(XprType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	tools/eigen/Eigen/src/Core/Block.h	/^class BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Dense>$/;"	c	namespace:Eigen
BlockImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(const XprType& xpr, Index i)$/;"	f	class:Eigen::BlockImpl
BlockImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(const XprType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline BlockImpl(SparseMatrixType& xpr, Index i)$/;"	f	class:Eigen::BlockImpl
BlockImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline BlockImpl(SparseMatrixType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<XprType,BlockRows,BlockCols,InnerPanel,Sparse>$/;"	c	namespace:Eigen
BlockImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<XprType,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl_dense	tools/eigen/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index i)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	tools/eigen/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index startRow, Index startCol)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	tools/eigen/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, const Scalar* data, Index blockRows, Index blockCols)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	tools/eigen/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr,$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	tools/eigen/Eigen/src/Core/Block.h	/^class BlockImpl_dense<XprType,BlockRows,BlockCols, InnerPanel,true>$/;"	c	namespace:Eigen::internal
BlockImpl_dense	tools/eigen/Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, bool HasDirectAccess> class BlockImpl_dense$/;"	c	namespace:Eigen::internal
BlockIndexVector	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Ref<Matrix<StorageIndex,Dynamic,1> > BlockIndexVector;$/;"	t	class:Eigen::internal::SparseLUImpl
BlockInnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockInnerIterator(const BlockSparseMatrix& mat, const Index outer)$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
BlockInnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^class BlockSparseMatrix<_Scalar, _BlockAtCompileTime, _Options, _StorageIndex>::BlockInnerIterator$/;"	c	class:Eigen::BlockSparseMatrix
BlockRealScalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef Matrix<RealScalar, _BlockAtCompileTime, _BlockAtCompileTime,IsColMajor ? ColMajor : RowMajor> BlockRealScalar;$/;"	t	class:Eigen::BlockSparseMatrix
BlockReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  explicit BlockReducer(const Op& reducer) : op_(reducer) {$/;"	f	class:Eigen::internal::BlockReducer
BlockReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^class BlockReducer {$/;"	c	namespace:Eigen::internal
BlockReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^class BlockReducer<Self, Op, true> {$/;"	c	namespace:Eigen::internal
BlockScalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef Matrix<Scalar, _BlockAtCompileTime, _BlockAtCompileTime,IsColMajor ? ColMajor : RowMajor> BlockScalar;$/;"	t	class:Eigen::BlockSparseMatrix
BlockScalarReturnType	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef typename internal::conditional<_BlockAtCompileTime==Dynamic, Scalar, BlockScalar>::type BlockScalarReturnType;$/;"	t	class:Eigen::BlockSparseMatrix
BlockScalarVector	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Ref<Matrix<Scalar,Dynamic,1> > BlockScalarVector;$/;"	t	class:Eigen::internal::SparseLUImpl
BlockSize	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^    BlockSize  = EIGEN_PLAIN_ENUM_MAX(mr,nr)$/;"	e	enum:Eigen::internal::tribb_kernel::__anon265
BlockSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      BlockSize = BlockSparseMatrixT::BlockSize,$/;"	e	enum:Eigen::BlockVectorView::__anon25
BlockSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      BlockSize=_BlockAtCompileTime,$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
BlockSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockSize = _BlockAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon23
BlockSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockSparseMatrix()$/;"	f	class:Eigen::BlockSparseMatrix
BlockSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockSparseMatrix(Index brow, Index bcol)$/;"	f	class:Eigen::BlockSparseMatrix
BlockSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockSparseMatrix(const BlockSparseMatrix& other)$/;"	f	class:Eigen::BlockSparseMatrix
BlockSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline BlockSparseMatrix(const MatrixType& spmat) : m_blockSize(BlockSize)$/;"	f	class:Eigen::BlockSparseMatrix
BlockSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^class BlockSparseMatrix : public SparseMatrixBase<BlockSparseMatrix<_Scalar,_BlockAtCompileTime, _Options,_StorageIndex> >$/;"	c	namespace:Eigen
BlockSparseMatrixView	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockSparseMatrixView(const BlockSparseMatrixT& spblockmat)$/;"	f	class:Eigen::BlockSparseMatrixView
BlockSparseMatrixView	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^class BlockSparseMatrixView : public SparseMatrixBase<BlockSparseMatrixT>$/;"	c	namespace:Eigen
BlockSparseTimeDenseProduct	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockSparseTimeDenseProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::BlockSparseTimeDenseProduct
BlockSparseTimeDenseProduct	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^class BlockSparseTimeDenseProduct$/;"	c	namespace:Eigen
BlockType	tools/eigen/Eigen/src/Core/Block.h	/^    typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;$/;"	t	class:Eigen::internal::BlockImpl_dense
BlockType	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MatrixType,Dynamic,Dynamic> BlockType;$/;"	t	struct:Eigen::internal::partial_lu_impl
BlockType	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<SparseMatrixType, BlockRows, BlockCols, true> BlockType;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
BlockType	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<XprType, BlockRows, BlockCols, true> BlockType;$/;"	t	class:Eigen::BlockImpl
BlockType	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;$/;"	t	class:Eigen::BlockImpl
BlockVectorReturn	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockVectorReturn(const BlockSparseMatrixT& spblockmat, VectorType& vec)$/;"	f	class:Eigen::BlockVectorReturn
BlockVectorReturn	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^class BlockVectorReturn$/;"	c	namespace:Eigen
BlockVectorView	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockVectorView(const BlockSparseMatrixT& spblockmat, const VectorType& vec)$/;"	f	class:Eigen::BlockVectorView
BlockVectorView	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^class BlockVectorView$/;"	c	namespace:Eigen
BlueNormReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_blueNorm,RealScalar>::Type BlueNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
Boolean	tools/ConvertUTF.h	/^typedef unsigned char	Boolean; \/* 0 or 1 *\/$/;"	t
BooleanNotReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_boolean_not_op<Scalar>, const Derived> BooleanNotReturnType;$/;"	t
BothDirections	tools/eigen/Eigen/src/Core/util/Constants.h	/^  BothDirections $/;"	e	enum:Eigen::DirectionType
BottomLeft	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomLeft	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftBlock	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix< Scalar, Deg_1, Deg_1 >         BottomLeftBlock;$/;"	t	class:Eigen::internal::companion
BottomLeftCeil	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftDiagonal	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix<Scalar, Deg_1, 1>               BottomLeftDiagonal;$/;"	t	class:Eigen::internal::companion
BottomLeftFloor	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRight	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomRight	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightCeil	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightFloor	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
Box2d	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^typedef AlignedBox<double, 2> Box2d;$/;"	t	file:
BoxBOD_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    BoxBOD_functor(void) : Functor<double>(2,6) {}$/;"	f	struct:BoxBOD_functor
BoxBOD_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct BoxBOD_functor : Functor<double>$/;"	s	file:
BoxBOD_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    BoxBOD_functor(void) : DenseFunctor<double>(2,6) {}$/;"	f	struct:BoxBOD_functor
BoxBOD_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct BoxBOD_functor : DenseFunctor<double>$/;"	s	file:
BoxType	tools/eigen/unsupported/test/BVH.cpp	/^  typedef AlignedBox<double, Dim> BoxType;$/;"	t	struct:BallPointStuff	file:
BoxType	tools/eigen/unsupported/test/BVH.cpp	/^  typedef AlignedBox<double, Dim> BoxType;$/;"	t	struct:TreeTest	file:
Browse_Matrices	tools/eigen/bench/spbench/spbenchsolver.h	/^void Browse_Matrices(const string folder, bool statFileExists, std::string& statFile, int maxiters, double tol)$/;"	f
BtlConfig	tools/eigen/bench/btl/generic_bench/btl.hh	/^  BtlConfig()$/;"	f	class:BtlConfig
BtlConfig	tools/eigen/bench/btl/generic_bench/btl.hh	/^class BtlConfig$/;"	c
BtlString	tools/eigen/bench/btl/generic_bench/btl.hh	/^    BtlString() : std::string() {}$/;"	f	class:BtlString
BtlString	tools/eigen/bench/btl/generic_bench/btl.hh	/^    BtlString(const BtlString& str) : std::string(static_cast<const std::string&>(str)) {}$/;"	f	class:BtlString
BtlString	tools/eigen/bench/btl/generic_bench/btl.hh	/^    BtlString(const char* str) : std::string(str) {}$/;"	f	class:BtlString
BtlString	tools/eigen/bench/btl/generic_bench/btl.hh	/^    BtlString(const std::string& str) : std::string(str) {}$/;"	f	class:BtlString
BtlString	tools/eigen/bench/btl/generic_bench/btl.hh	/^class BtlString : public std::string$/;"	c
BuildType	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      typedef Block<CoefficientsType,1, DiagonalSize> BuildType;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
BuiltIn	tools/eigen/Eigen/src/Core/util/Constants.h	/^  BuiltIn$/;"	e	enum:Eigen::__anon496
C	Top.hh	/^    val C;$/;"	m	class:Top
C	tools/eigen/bench/bench_gemm.cpp	/^typedef Matrix<Scalar,Dynamic,Dynamic> C;$/;"	t	file:
C	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  typename Interface::gene_matrix C;$/;"	m	class:Action_cholesky
C	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::gene_matrix C;$/;"	m	class:Action_hessenberg
C	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::gene_matrix C;$/;"	m	class:Action_tridiagonalization
C	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  typename Interface::gene_matrix C;$/;"	m	class:Action_lu_decomp
C	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  typename Interface::gene_matrix C;$/;"	m	class:Action_partial_lu
C	tools/eigen/bench/geometry.cpp	/^typedef Matrix<Scalar,Dynamic,Dynamic> C;$/;"	t	file:
C	tools/eigen/blas/testing/cblat3.f	/^     $                   BS( NMAX*NMAX ), C(/;"	v	program:CBLAT3
C	tools/eigen/blas/testing/dblat3.f	/^     $                   BS( NMAX*NMAX ), C(/;"	v	program:DBLAT3
C	tools/eigen/blas/testing/sblat3.f	/^     $                   BS( NMAX*NMAX ), C(/;"	v	program:SBLAT3
C	tools/eigen/blas/testing/zblat3.f	/^     $                   BS( NMAX*NMAX ), C(/;"	v	program:ZBLAT3
CALL_ALL	tools/eigen/test/product_trmm.cpp	89;"	d	file:
CALL_ALL_ORDERS	tools/eigen/test/product_trmm.cpp	75;"	d	file:
CALL_SUBTEST	tools/eigen/test/main.h	285;"	d
CAT	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	51;"	d
CAT2	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	50;"	d
CBEG	tools/eigen/blas/testing/cblat2.f	/^      COMPLEX FUNCTION CBEG(/;"	f
CBEG	tools/eigen/blas/testing/cblat3.f	/^      COMPLEX FUNCTION CBEG(/;"	f
CBLAS_GEMM	tools/eigen/bench/benchBlasGemm.cpp	22;"	d	file:
CBLAS_GEMM	tools/eigen/bench/benchBlasGemm.cpp	25;"	d	file:
CBLAT1	tools/eigen/blas/testing/cblat1.f	/^      PROGRAM CBLAT1$/;"	p
CBLAT2	tools/eigen/blas/testing/cblat2.f	/^      PROGRAM CBLAT2$/;"	p
CBLAT3	tools/eigen/blas/testing/cblat3.f	/^      PROGRAM CBLAT3$/;"	p
CC	Makefile	/^CC = g++ #alternative: nvcc for cuda$/;"	m
CC	tools/eigen/blas/testing/cblat3.f	/^     $                   BS( NMAX*NMAX ), C( NMAX, NMAX ),$/;"	v	program:CBLAT3
CC	tools/eigen/blas/testing/dblat3.f	/^     $                   BS( NMAX*NMAX ), C( NMAX, NMAX ),$/;"	v	program:DBLAT3
CC	tools/eigen/blas/testing/sblat3.f	/^     $                   BS( NMAX*NMAX ), C( NMAX, NMAX ),$/;"	v	program:SBLAT3
CC	tools/eigen/blas/testing/zblat3.f	/^     $                   BS( NMAX*NMAX ), C( NMAX, NMAX ),$/;"	v	program:ZBLAT3
CCHK1	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CCHK1(/;"	s
CCHK1	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CCHK1(/;"	s
CCHK2	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CCHK2(/;"	s
CCHK2	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CCHK2(/;"	s
CCHK3	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CCHK3(/;"	s
CCHK3	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CCHK3(/;"	s
CCHK4	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CCHK4(/;"	s
CCHK4	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CCHK4(/;"	s
CCHK5	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CCHK5(/;"	s
CCHK5	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CCHK5(/;"	s
CCHK6	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CCHK6(/;"	s
CCHKE	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CCHKE(/;"	s
CCHKE	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CCHKE(/;"	s
CDOTC	tools/eigen/blas/fortran/complexdots.f	/^      COMPLEX FUNCTION CDOTC(/;"	f
CDOTU	tools/eigen/blas/fortran/complexdots.f	/^      COMPLEX FUNCTION CDOTU(/;"	f
CEIL_DIV	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	187;"	d
CEIL_DIV	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	342;"	d
CHECK0	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE CHECK0(/;"	s
CHECK0	tools/eigen/blas/testing/sblat1.f	/^      SUBROUTINE CHECK0(/;"	s
CHECK1	tools/eigen/blas/testing/cblat1.f	/^      SUBROUTINE CHECK1(/;"	s
CHECK1	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE CHECK1(/;"	s
CHECK1	tools/eigen/blas/testing/sblat1.f	/^      SUBROUTINE CHECK1(/;"	s
CHECK1	tools/eigen/blas/testing/zblat1.f	/^      SUBROUTINE CHECK1(/;"	s
CHECK2	tools/eigen/blas/testing/cblat1.f	/^      SUBROUTINE CHECK2(/;"	s
CHECK2	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE CHECK2(/;"	s
CHECK2	tools/eigen/blas/testing/sblat1.f	/^      SUBROUTINE CHECK2(/;"	s
CHECK2	tools/eigen/blas/testing/zblat1.f	/^      SUBROUTINE CHECK2(/;"	s
CHECK3	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE CHECK3(/;"	s
CHECK3	tools/eigen/blas/testing/sblat1.f	/^      SUBROUTINE CHECK3(/;"	s
CHECK_CWISE1	tools/eigen/test/packetmath.cpp	60;"	d	file:
CHECK_CWISE1_IF	tools/eigen/test/packetmath.cpp	87;"	d	file:
CHECK_CWISE2	tools/eigen/test/packetmath.cpp	53;"	d	file:
CHECK_MEM	tools/eigen/bench/sparse_setter.cpp	33;"	d	file:
CHECK_MEMLEAK	tools/eigen/test/exceptions.cpp	80;"	d	file:
CHECK_MMTR	tools/eigen/test/product_mmtr.cpp	12;"	d	file:
CHKXER	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CHKXER(/;"	s
CHKXER	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CHKXER(/;"	s
CHKXER	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE CHKXER(/;"	s
CHKXER	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE CHKXER(/;"	s
CHKXER	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE CHKXER(/;"	s
CHKXER	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE CHKXER(/;"	s
CHKXER	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE CHKXER(/;"	s
CHKXER	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE CHKXER(/;"	s
CJMADD	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1771;"	d
CJMADD	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	323;"	d
CJMADD	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	348;"	d
CLACGV	tools/eigen/lapack/clacgv.f	/^      SUBROUTINE CLACGV(/;"	s
CLADIV	tools/eigen/lapack/cladiv.f	/^      COMPLEX FUNCTION CLADIV(/;"	f
CLARF	tools/eigen/lapack/clarf.f	/^      SUBROUTINE CLARF(/;"	s
CLARFB	tools/eigen/lapack/clarfb.f	/^      SUBROUTINE CLARFB(/;"	s
CLARFG	tools/eigen/lapack/clarfg.f	/^      SUBROUTINE CLARFG(/;"	s
CLARFT	tools/eigen/lapack/clarft.f	/^      SUBROUTINE CLARFT(/;"	s
CMAKE	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CMAKE(/;"	s
CMAKE	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CMAKE(/;"	s
CMMCH	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE CMMCH(/;"	s
CMVCH	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE CMVCH(/;"	s
COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
COLAMDOrdering	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^class COLAMDOrdering$/;"	c	namespace:Eigen
COLAMD_ASSERT	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	246;"	d
COLAMD_DEBUG0	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	240;"	d
COLAMD_DEBUG1	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	241;"	d
COLAMD_DEBUG2	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	242;"	d
COLAMD_DEBUG3	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	243;"	d
COLAMD_DEBUG4	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	244;"	d
COLAMD_DEFRAG_COUNT	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	76;"	d
COLAMD_DENSE_COL	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	73;"	d
COLAMD_DENSE_ROW	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	70;"	d
COLAMD_EMPTY	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	112;"	d
COLAMD_ERROR_A_not_present	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	89;"	d
COLAMD_ERROR_A_too_small	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	95;"	d
COLAMD_ERROR_col_length_negative	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	96;"	d
COLAMD_ERROR_internal_error	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	99;"	d
COLAMD_ERROR_ncol_negative	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	92;"	d
COLAMD_ERROR_nnz_negative	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	93;"	d
COLAMD_ERROR_nrow_negative	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	91;"	d
COLAMD_ERROR_out_of_memory	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	98;"	d
COLAMD_ERROR_p0_nonzero	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	94;"	d
COLAMD_ERROR_p_not_present	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	90;"	d
COLAMD_ERROR_row_index_out_of_bounds	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	97;"	d
COLAMD_INFO1	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	82;"	d
COLAMD_INFO2	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	83;"	d
COLAMD_INFO3	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	84;"	d
COLAMD_KNOBS	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	64;"	d
COLAMD_MAX	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	105;"	d
COLAMD_MIN	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	106;"	d
COLAMD_NDEBUG	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	57;"	d
COLAMD_OK	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	87;"	d
COLAMD_OK_BUT_JUMBLED	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	88;"	d
COLAMD_STATS	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	67;"	d
COLAMD_STATUS	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	79;"	d
COL_IS_ALIVE	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	127;"	d
COL_IS_DEAD	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	126;"	d
COL_IS_DEAD_PRINCIPAL	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	128;"	d
COMBLA	tools/eigen/blas/testing/cblat1.f	103;"	c	subroutine:CHECK1
COMBLA	tools/eigen/blas/testing/cblat1.f	17;"	c	program:CBLAT1
COMBLA	tools/eigen/blas/testing/cblat1.f	302;"	c	subroutine:CHECK2
COMBLA	tools/eigen/blas/testing/cblat1.f	550;"	c	subroutine:STEST
COMBLA	tools/eigen/blas/testing/cblat1.f	58;"	c	subroutine:HEADER
COMBLA	tools/eigen/blas/testing/cblat1.f	660;"	c	subroutine:ITEST1
COMBLA	tools/eigen/blas/testing/dblat1.f	1043;"	c	subroutine:ITEST1
COMBLA	tools/eigen/blas/testing/dblat1.f	105;"	c	subroutine:HEADER
COMBLA	tools/eigen/blas/testing/dblat1.f	144;"	c	subroutine:CHECK0
COMBLA	tools/eigen/blas/testing/dblat1.f	266;"	c	subroutine:CHECK1
COMBLA	tools/eigen/blas/testing/dblat1.f	367;"	c	subroutine:CHECK2
COMBLA	tools/eigen/blas/testing/dblat1.f	59;"	c	program:DBLAT1
COMBLA	tools/eigen/blas/testing/dblat1.f	705;"	c	subroutine:CHECK3
COMBLA	tools/eigen/blas/testing/dblat1.f	916;"	c	subroutine:STEST
COMBLA	tools/eigen/blas/testing/dblat1.f	965;"	c	subroutine:TESTDSDOT
COMBLA	tools/eigen/blas/testing/sblat1.f	105;"	c	subroutine:HEADER
COMBLA	tools/eigen/blas/testing/sblat1.f	144;"	c	subroutine:CHECK0
COMBLA	tools/eigen/blas/testing/sblat1.f	266;"	c	subroutine:CHECK1
COMBLA	tools/eigen/blas/testing/sblat1.f	368;"	c	subroutine:CHECK2
COMBLA	tools/eigen/blas/testing/sblat1.f	59;"	c	program:SBLAT1
COMBLA	tools/eigen/blas/testing/sblat1.f	709;"	c	subroutine:CHECK3
COMBLA	tools/eigen/blas/testing/sblat1.f	920;"	c	subroutine:STEST
COMBLA	tools/eigen/blas/testing/sblat1.f	999;"	c	subroutine:ITEST1
COMBLA	tools/eigen/blas/testing/zblat1.f	103;"	c	subroutine:CHECK1
COMBLA	tools/eigen/blas/testing/zblat1.f	17;"	c	program:ZBLAT1
COMBLA	tools/eigen/blas/testing/zblat1.f	302;"	c	subroutine:CHECK2
COMBLA	tools/eigen/blas/testing/zblat1.f	550;"	c	subroutine:STEST
COMBLA	tools/eigen/blas/testing/zblat1.f	58;"	c	subroutine:HEADER
COMBLA	tools/eigen/blas/testing/zblat1.f	660;"	c	subroutine:ITEST1
COMPARE_CORNER	tools/eigen/test/corners.cpp	12;"	d	file:
COMPILER	tools/eigen/bench/btl/generic_bench/utils/utilities.h	28;"	d
COMPILER	tools/eigen/bench/btl/generic_bench/utils/utilities.h	30;"	d
COMPILER	tools/eigen/bench/btl/generic_bench/utils/utilities.h	32;"	d
COMPILER	tools/eigen/bench/btl/generic_bench/utils/utilities.h	34;"	d
COMPILER	tools/eigen/bench/btl/generic_bench/utils/utilities.h	36;"	d
CPUContext	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  CPUContext(const Eigen::Tensor<float, 3>& in1, Eigen::Tensor<float, 3>& in2, Eigen::Tensor<float, 3>& out) : in1_(in1), in2_(in2), out_(out), kernel_1d_(2), kernel_2d_(2,2), kernel_3d_(2,2,2) {$/;"	f	struct:CPUContext
CPUContext	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^struct CPUContext {$/;"	s	file:
CPU_TIMER	tools/eigen/bench/BenchTimer.h	/^  CPU_TIMER = 0,$/;"	e	enum:Eigen::__anon733
CREATE_THREAD_POOL	tools/eigen/bench/tensors/tensor_benchmarks_cpu.cc	12;"	d	file:
CREATE_THREAD_POOL	tools/eigen/bench/tensors/tensor_benchmarks_cpu.cc	9;"	d	file:
CS	tools/eigen/blas/testing/cblat3.f	/^     $                   CC( NMAX*NMAX ), CS(/;"	v	program:CBLAT3
CS	tools/eigen/blas/testing/dblat3.f	/^     $                   CC( NMAX*NMAX ), CS(/;"	v	program:DBLAT3
CS	tools/eigen/blas/testing/sblat3.f	/^     $                   CC( NMAX*NMAX ), CS(/;"	v	program:SBLAT3
CS	tools/eigen/blas/testing/zblat3.f	/^     $                   CC( NMAX*NMAX ), CS(/;"	v	program:ZBLAT3
CSimpleIni	tools/SimpleIni.h	3423;"	d
CSimpleIni	tools/SimpleIni.h	3427;"	d
CSimpleIniA	tools/SimpleIni.h	/^    SI_NoCase<char>,SI_ConvertA<char> >                 CSimpleIniA;$/;"	t
CSimpleIniCase	tools/SimpleIni.h	3424;"	d
CSimpleIniCase	tools/SimpleIni.h	3428;"	d
CSimpleIniCaseA	tools/SimpleIni.h	/^    SI_Case<char>,SI_ConvertA<char> >                   CSimpleIniCaseA;$/;"	t
CSimpleIniCaseW	tools/SimpleIni.h	/^    SI_Case<UChar>,SI_ConvertW<UChar> >                 CSimpleIniCaseW;$/;"	t
CSimpleIniCaseW	tools/SimpleIni.h	/^    SI_Case<wchar_t>,SI_ConvertW<wchar_t> >             CSimpleIniCaseW;$/;"	t
CSimpleIniTempl	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::CSimpleIniTempl($/;"	f	class:CSimpleIniTempl
CSimpleIniTempl	tools/SimpleIni.h	/^class CSimpleIniTempl$/;"	c
CSimpleIniW	tools/SimpleIni.h	/^    SI_NoCase<UChar>,SI_ConvertW<UChar> >               CSimpleIniW;$/;"	t
CSimpleIniW	tools/SimpleIni.h	/^    SI_NoCase<wchar_t>,SI_ConvertW<wchar_t> >           CSimpleIniW;$/;"	t
CT	tools/eigen/blas/testing/cblat3.f	/^     $                   CC( NMAX*NMAX ), CS( NMAX*NMAX ), CT(/;"	v	program:CBLAT3
CT	tools/eigen/blas/testing/dblat3.f	/^     $                   CC( NMAX*NMAX ), CS( NMAX*NMAX ), CT(/;"	v	program:DBLAT3
CT	tools/eigen/blas/testing/sblat3.f	/^     $                   CC( NMAX*NMAX ), CS( NMAX*NMAX ), CT(/;"	v	program:SBLAT3
CT	tools/eigen/blas/testing/zblat3.f	/^     $                   CC( NMAX*NMAX ), CS( NMAX*NMAX ), CT(/;"	v	program:ZBLAT3
CTEST	tools/eigen/blas/testing/cblat1.f	/^      SUBROUTINE CTEST(/;"	s
CTEST	tools/eigen/blas/testing/zblat1.f	/^      SUBROUTINE CTEST(/;"	s
CV_QUALIFIER	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_0.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_0.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_1.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_1.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_2.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_2.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_on_const_type_actually_const_0.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_on_const_type_actually_const_0.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_on_const_type_actually_const_1.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/block_on_const_type_actually_const_1.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/const_qualified_block_method_retval_0.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/const_qualified_block_method_retval_0.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/const_qualified_block_method_retval_1.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/const_qualified_block_method_retval_1.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/const_qualified_diagonal_method_retval.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/const_qualified_diagonal_method_retval.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/const_qualified_transpose_method_retval.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/const_qualified_transpose_method_retval.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/cwiseunaryview_nonconst_ctor_on_const_xpr.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/cwiseunaryview_nonconst_ctor_on_const_xpr.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/cwiseunaryview_on_const_type_actually_const.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/cwiseunaryview_on_const_type_actually_const.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/diagonal_nonconst_ctor_on_const_xpr.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/diagonal_nonconst_ctor_on_const_xpr.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/diagonal_on_const_type_actually_const.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/diagonal_on_const_type_actually_const.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_0.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_0.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_1.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_1.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_2.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_2.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_3.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_3.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_4.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_4.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_on_const_type_actually_const_0.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_on_const_type_actually_const_0.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_on_const_type_actually_const_1.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/map_on_const_type_actually_const_1.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/ref_1.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/ref_1.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/selfadjointview_nonconst_ctor_on_const_xpr.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/selfadjointview_nonconst_ctor_on_const_xpr.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/selfadjointview_on_const_type_actually_const.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/selfadjointview_on_const_type_actually_const.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/sparse_ref_1.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/sparse_ref_1.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/transpose_nonconst_ctor_on_const_xpr.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/transpose_nonconst_ctor_on_const_xpr.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/transpose_on_const_type_actually_const.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/transpose_on_const_type_actually_const.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/triangularview_nonconst_ctor_on_const_xpr.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/triangularview_nonconst_ctor_on_const_xpr.cpp	6;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/triangularview_on_const_type_actually_const.cpp	4;"	d	file:
CV_QUALIFIER	tools/eigen/failtest/triangularview_on_const_type_actually_const.cpp	6;"	d	file:
C_Map_MatrixXd	tools/eigen/demos/mix_eigen_and_c/binary_library.h	/^  struct C_Map_MatrixXd {};$/;"	s
C_MatrixXd	tools/eigen/demos/mix_eigen_and_c/binary_library.h	/^  struct C_MatrixXd {};$/;"	s
C_stl	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  typename Interface::stl_matrix C_stl;$/;"	m	class:Action_cholesky
C_stl	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::stl_matrix C_stl;$/;"	m	class:Action_hessenberg
C_stl	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::stl_matrix C_stl;$/;"	m	class:Action_tridiagonalization
C_stl	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  typename Interface::stl_matrix C_stl;$/;"	m	class:Action_lu_decomp
C_stl	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  typename Interface::stl_matrix C_stl;$/;"	m	class:Action_partial_lu
Camera	tools/eigen/demos/opengl/camera.cpp	/^Camera::Camera()$/;"	f	class:Camera
Camera	tools/eigen/demos/opengl/camera.cpp	/^Camera::Camera(const Camera& other)$/;"	f	class:Camera
Camera	tools/eigen/demos/opengl/camera.h	/^class Camera$/;"	c
CanVectorizeInner	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeInner =    SameType$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
CanVectorizeLhs	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeLhs = (!LhsRowMajor) && (LhsFlags & PacketAccessBit)$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
CanVectorizeRhs	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeRhs = RhsRowMajor && (RhsFlags & PacketAccessBit)$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
CastXpr	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^template<class NewType> struct CastXpr { typedef typename internal::cast_return_type<Derived,const CwiseUnaryOp<internal::scalar_cast_op<Scalar, NewType>, const Derived> >::type Type; };$/;"	s
CauchyBounds	tools/eigen/unsupported/test/polynomialutils.cpp	/^void CauchyBounds(int deg)$/;"	f
CauchyBounds_scalar	tools/eigen/unsupported/test/polynomialutils.cpp	/^template<typename _Scalar> void CauchyBounds_scalar()$/;"	f
CeilReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_ceil_op<Scalar>, const Derived> CeilReturnType;$/;"	t
Central	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    Central$/;"	e	enum:Eigen::NumericalDiffMode
CholMatrixType	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef MatrixType CholMatrixType;$/;"	t	class:Eigen::CholmodBase
CholMatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialLLT
CholMatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholesky
CholMatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
CholMatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialLDLT
CholMatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, StorageIndex>            CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholMatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, StorageIndex>        CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholmodAuto	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodBase	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodBase()$/;"	f	class:Eigen::CholmodBase
CholmodBase	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    explicit CholmodBase(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
CholmodBase	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
CholmodDecomposition	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition() : Base() { init(); }$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodDecomposition : public CholmodBase<_MatrixType, _UpLo, CholmodDecomposition<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodLDLt	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodMode	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^enum CholmodMode {$/;"	g	namespace:Eigen
CholmodSimplicialLDLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLDLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLt	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodSupernodalLLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSupernodalLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSupernodalLLt	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
ChordLengths	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^  void ChordLengths(const PointArrayType& pts, KnotVectorType& chord_lengths)$/;"	f	namespace:Eigen
CoeffBasedProductMode	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
CoeffReadCost	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
CoeffReadCost	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon623
CoeffReadCost	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = internal::traits<_CoefficientsType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon624
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon657
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon651
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = TraversalSize==Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::evaluator::__anon666
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon654
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon656
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,    $/;"	e	enum:Eigen::internal::unary_evaluator::__anon652
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon660
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon669
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon667
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgTypeNestedCleaned>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon664
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ConditionMatrixType>::CoeffReadCost$/;"	e	enum:Eigen::internal::evaluator::__anon662
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon655
CoeffReadCost	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = internal::functor_traits<NullaryOp>::Cost,$/;"	e	enum:Eigen::internal::evaluator::__anon653
CoeffReadCost	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    CoeffReadCost = InnerSize==0 ? NumTraits<Scalar>::ReadCost$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
CoeffReadCost	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::MulCost + evaluator<MatrixType>::CoeffReadCost + evaluator<DiagonalType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
CoeffReadCost	tools/eigen/Eigen/src/Core/Redux.h	/^    CoeffReadCost = evaluator<XprType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon637
CoeffReadCost	tools/eigen/Eigen/src/Core/Solve.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon254
CoeffReadCost	tools/eigen/Eigen/src/Core/Visitor.h	/^    CoeffReadCost = internal::evaluator<XprType>::CoeffReadCost$/;"	e	enum:Eigen::internal::visitor_evaluator::__anon311
CoeffReadCost	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    CoeffReadCost = evaluator<T>::CoeffReadCost,  \/\/ TODO What if an evaluator evaluate itself into a tempory?$/;"	e	enum:Eigen::internal::promote_index_type::nested_eval::__anon571
CoeffReadCost	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon165
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon214
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon208
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon215
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon216
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon218
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon220
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon239
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<ViewOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon240
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::sparse_dense_outer_product_evaluator::__anon191
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = Dynamic, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon204
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = Dynamic, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon203
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon242
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon207
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon226
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    CoeffReadCost = NumTraits<_Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon230
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon195
CoeffReadCost	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon197
CoeffReadCost	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon12
CoeffReadCost	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon35
CoeffReadCost	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
CoeffReadCost	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon34
CoeffReadCost	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon23
CoeffReadCost	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    CoeffReadCost = internal::traits<BlockSparseMatrixT>::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon27
CoeffReadCost	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon15
CoeffReadCost	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    CoeffReadCost = NumTraits<_Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon17
CoeffReadCostAsInteger	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    CoeffReadCostAsInteger = CoeffReadCost == Dynamic ? int(DynamicAsInteger) : int(CoeffReadCost),$/;"	e	enum:Eigen::internal::promote_index_type::nested_eval::__anon571
CoeffReturnType	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::ArrayBase
CoeffReturnType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^                                         typename XprType::CoeffReturnType,Scalar>::type CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
CoeffReturnType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename PlainObjectType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::binary_evaluator
CoeffReturnType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
CoeffReturnType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::unary_evaluator
CoeffReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::DenseBase
CoeffReturnType	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type CoeffReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
CoeffReturnType	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MapBase
CoeffReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MatrixBase
CoeffReturnType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::product_evaluator
CoeffReturnType	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::internal::redux_evaluator
CoeffReturnType	tools/eigen/Eigen/src/Core/Visitor.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::internal::visitor_evaluator
CoeffReturnType	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename DenseCoeffsBase<Derived,ReadOnlyAccessors>::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::conditional<_HasDirectAccess, const Scalar&, Scalar>::type CoeffReturnType;$/;"	t	class:Eigen::SparseMatrixBase
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::Tensor
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef Index CoeffReturnType;$/;"	t	class:Eigen::TensorTupleReducerOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef Tuple<Index, typename XprType::CoeffReturnType> CoeffReturnType;$/;"	t	class:Eigen::TensorIndexTupleOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename LhsXprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorAssignOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    typedef Scalar CoeffReturnType;$/;"	t	class:Eigen::TensorBase
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    typedef typename internal::remove_const<Scalar>::type CoeffReturnType;$/;"	t	class:Eigen::TensorBase
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorBroadcastingOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorChippingOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^                                                    typename RhsXprType::CoeffReturnType>::ret CoeffReturnType;$/;"	t	class:Eigen::TensorConcatenationOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^                                                  typename RhsXprType::CoeffReturnType>::ret CoeffReturnType;$/;"	t	class:Eigen::TensorContractionOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorConversionOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef TargetType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^                                                  typename KernelXprType::CoeffReturnType>::ret CoeffReturnType;$/;"	t	class:Eigen::TensorConvolutionOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^                                                  typename RhsXprType::CoeffReturnType>::ret CoeffReturnType;$/;"	t	struct:Eigen::internal::traits
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorCustomUnaryOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::remove_const<typename XprType::CoeffReturnType>::type CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomBinaryOp>::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorCustomBinaryOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename internal::remove_const<typename XprType::CoeffReturnType>::type CoeffReturnType;$/;"	t	class:Eigen::TensorEvalToOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename internal::remove_const<typename XprType::CoeffReturnType>::type CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename Derived::Scalar CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename internal::traits<XprType>::Scalar CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^                                                    typename ElseXprType::CoeffReturnType>::ret CoeffReturnType;$/;"	t	class:Eigen::TensorSelectOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef Scalar CoeffReturnType;$/;"	t	class:Eigen::TensorCwiseBinaryOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef Scalar CoeffReturnType;$/;"	t	class:Eigen::TensorCwiseUnaryOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorCwiseNullaryOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorFixedSize
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename internal::remove_const<typename XprType::CoeffReturnType>::type CoeffReturnType;$/;"	t	class:Eigen::TensorForcedEvalOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorGeneratorOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorImagePatchOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorInflationOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename internal::remove_const<typename XprType::CoeffReturnType>::type CoeffReturnType;$/;"	t	class:Eigen::TensorLayoutSwapOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorMap
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorSlicingOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename internal::remove_const<typename XprType::CoeffReturnType>::type CoeffReturnType;$/;"	t	class:Eigen::TensorReshapingOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorPaddingOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorPatchOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typedef typename internal::remove_const<typename XprType::CoeffReturnType>::type CoeffReturnType;$/;"	t	class:Eigen::TensorReductionOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename Self::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::internal::BlockReducer
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename internal::remove_const<typename XprType::CoeffReturnType>::type CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorRef
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename Derived::Scalar CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorReverseOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorShufflingOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorStridingOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::TensorVolumePatchOp
CoeffReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::TensorEvaluator
CoeffType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef AutoDiffScalar<typename JacobianType::ColXpr> CoeffType;$/;"	t	class:Eigen::AutoDiffVector
CoeffVectorType	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::HessenbergDecomposition
CoeffVectorType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::Tridiagonalization
CoeffVectorType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::CoeffVectorType CoeffVectorType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Coefficients	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^                        : Index(AmbientDimAtCompileTime)+1,1,Options> Coefficients;$/;"	t	class:Eigen::Hyperplane
Coefficients	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    typedef Map<Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    typedef Map<const Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    typedef typename internal::traits<Map>::Coefficients Coefficients;$/;"	t	class:Eigen::Map
Coefficients	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<_Scalar,4,1,_Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Coefficients Coefficients;$/;"	t	class:Eigen::QuaternionBase
Coefficients	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Quaternion>::Coefficients Coefficients;$/;"	t	class:Eigen::Quaternion
CoefficientsType	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrix
CoefficientsType	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixWrapper
CoefficientsType	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixBase
CoefficientsType	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef Matrix<Scalar,DataRowsAtCompileTime,ColsAtCompileTime,Options&RowMajor?RowMajor:ColMajor> CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoefficientsType	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef _CoefficientsType CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoherentAccessPattern	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^const int CoherentAccessPattern     = 0x1;$/;"	m	namespace:Eigen
ColMajor	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ColMajor = 0,$/;"	e	enum:Eigen::__anon497
ColPivHouseholderQR	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR()$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    explicit ColPivHouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^template<typename _MatrixType> class ColPivHouseholderQR$/;"	c	namespace:Eigen
ColPivHouseholderQRPreconditioner	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ColPivHouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
ColSpMatrix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor> ColSpMatrix;$/;"	t	class:Eigen::PastixBase
ColSpMatrix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLDLT
ColSpMatrix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLLT
ColSpMatrix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLU
ColType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColType;$/;"	t	class:Eigen::JacobiSVD
ColVectorType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
ColVectorType	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1> ColVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
ColXpr	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ColXpr ColXpr;$/;"	t	class:Eigen::MatrixBase
ColXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ColXpr;$/;"	t
Colamd_Row	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^struct Colamd_Row$/;"	s	namespace:internal
Color	tools/eigen/demos/opengl/gpuhelper.h	/^typedef Vector4f Color;$/;"	t
Cols	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    Cols    = traits<_Rhs>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon590
Cols	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^         Cols = traits<T>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::promote_index_type::plain_matrix_type_column_major::__anon569
Cols	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^         Cols = traits<T>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::promote_index_type::plain_matrix_type_row_major::__anon570
Cols	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    Cols = Rhs::ColsAtCompileTime$/;"	e	enum:Eigen::internal::homogeneous_left_product_refactoring_helper::__anon694
Cols	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    Cols = size_at_compile_time<traits<Lhs>::ColsAtCompileTime, traits<Rhs>::ColsAtCompileTime>::ret,$/;"	e	enum:Eigen::internal::traits::__anon11
ColsAtCompileTime	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon243
ColsAtCompileTime	tools/eigen/Eigen/src/Cholesky/LLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon244
ColsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
ColsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon623
ColsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon624
ColsAtCompileTime	tools/eigen/Eigen/src/Core/Block.h	/^    ColsAtCompileTime = MatrixCols == 0 ? 0 : BlockCols,$/;"	e	enum:Eigen::internal::traits::__anon246
ColsAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = PlainObjectType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon651
ColsAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = XprType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon657
ColsAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = traits<XprType>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon660
ColsAtCompileTime	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    ColsAtCompileTime = traits<Ancestor>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon617
ColsAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon582
ColsAtCompileTime	tools/eigen/Eigen/src/Core/Diagonal.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon389
ColsAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^      ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon250
ColsAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon252
ColsAtCompileTime	tools/eigen/Eigen/src/Core/MapBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon587
ColsAtCompileTime	tools/eigen/Eigen/src/Core/Matrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon293
ColsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = Traits::ColsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon670
ColsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = Traits::ColsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon672
ColsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    ColsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon671
ColsAtCompileTime	tools/eigen/Eigen/src/Core/Product.h	/^    ColsAtCompileTime    = RhsTraits::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon391
ColsAtCompileTime	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    ColsAtCompileTime = RhsNestedCleaned::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
ColsAtCompileTime	tools/eigen/Eigen/src/Core/Replicate.h	/^    ColsAtCompileTime = ColFactor==Dynamic || int(MatrixType::ColsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon261
ColsAtCompileTime	tools/eigen/Eigen/src/Core/Reverse.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon255
ColsAtCompileTime	tools/eigen/Eigen/src/Core/Select.h	/^    ColsAtCompileTime = ConditionMatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon373
ColsAtCompileTime	tools/eigen/Eigen/src/Core/Transpose.h	/^    ColsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon374
ColsAtCompileTime	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon297
ColsAtCompileTime	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    ColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon577
ColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon685
ColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon684
ColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon686
ColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon683
ColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^        ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon682
ColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon681
ColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon690
ColsAtCompileTime	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    ColsAtCompileTime = Direction==Horizontal ? ColsPlusOne : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon691
ColsAtCompileTime	tools/eigen/Eigen/src/Geometry/Transform.h	/^    ColsAtCompileTime = Dim1,$/;"	e	enum:Eigen::internal::traits::__anon704
ColsAtCompileTime	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^      ColsAtCompileTime = internal::traits<HouseholderSequence>::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon183
ColsAtCompileTime	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    ColsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
ColsAtCompileTime	tools/eigen/Eigen/src/LU/FullPivLU.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon168
ColsAtCompileTime	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon166
ColsAtCompileTime	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon680
ColsAtCompileTime	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon678
ColsAtCompileTime	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon676
ColsAtCompileTime	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon164
ColsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon161
ColsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon158
ColsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon159
ColsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon160
ColsAtCompileTime	tools/eigen/Eigen/src/SVD/SVDBase.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon162
ColsAtCompileTime	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon163
ColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon223
ColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon222
ColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
ColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      ColsAtCompileTime = internal::traits<SparseSelfAdjointView>::ColsAtCompileTime$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon192
ColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      ColsAtCompileTime = internal::traits<SparseSymmetricPermutationProduct>::ColsAtCompileTime$/;"	e	enum:Eigen::SparseSymmetricPermutationProduct::__anon193
ColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    ColsAtCompileTime = IsColVector ? 1 : Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon226
ColsAtCompileTime	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^      ColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon143
ColsAtCompileTime	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    ColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::SparseQRMatrixQReturnType::__anon144
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    ColsAtCompileTime = size_at_compile_time<traits<Lhs>::ColsAtCompileTime, traits<Rhs>::ColsAtCompileTime>::ret,$/;"	e	enum:Eigen::internal::traits::__anon12
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon35
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        ColsAtCompileTime = _RhsNested::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon34
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      ColsAtCompileTime = BlockSparseMatrixT::ColsAtCompileTime,$/;"	e	enum:Eigen::BlockSparseMatrixView::__anon24
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      ColsAtCompileTime = VectorType::ColsAtCompileTime,$/;"	e	enum:Eigen::BlockVectorReturn::__anon26
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      ColsAtCompileTime = VectorType::ColsAtCompileTime,$/;"	e	enum:Eigen::BlockVectorView::__anon25
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon23
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon27
ColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon15
ColsAtCompileTimeMinusOne	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTimeMinusOne = internal::decrement_size<ColsAtCompileTime>::ret$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon163
ColsBlockXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ColsBlockXpr;$/;"	t
ColsPlusOne	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    ColsPlusOne = (MatrixType::ColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon691
ColumnVectorType	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::EigenSolver
ColumnVectorType	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
ColumnVectorType	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealQZ
ColumnVectorType	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealSchur
ColwiseReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Vertical> ColwiseReturnType;$/;"	t	class:Eigen::DenseBase
CommaInitializer	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(const CommaInitializer& o)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^struct CommaInitializer$/;"	s	namespace:Eigen
CompactVectorType	tools/eigen/blas/common.h	/^typedef Map<Matrix<Scalar,Dynamic,1> > CompactVectorType;$/;"	t
CompanionMatrixType	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef Matrix<Scalar,_Deg,_Deg>                 CompanionMatrixType;$/;"	t	class:Eigen::PolynomialSolver
ComparisonName	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum ComparisonName {$/;"	g	namespace:Eigen::internal
CompleteUnrolling	tools/eigen/Eigen/src/Core/util/Constants.h	/^  CompleteUnrolling$/;"	e	enum:Eigen::__anon495
Complex	tools/eigen/blas/common.h	/^typedef std::complex<RealScalar> Complex;$/;"	t
Complex	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef std::complex<Scalar> Complex;$/;"	t	struct:Eigen::internal::fftw_impl
Complex	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef std::complex<Scalar> Complex;$/;"	t	struct:Eigen::internal::kiss_cpx_fft
Complex	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef std::complex<Scalar> Complex;$/;"	t	struct:Eigen::internal::kissfft_impl
ComplexEigenSolver	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver()$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    explicit ComplexEigenSolver(Index size)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    explicit ComplexEigenSolver(const MatrixType& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^template<typename _MatrixType> class ComplexEigenSolver$/;"	c	namespace:Eigen
ComplexMatrix	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^              MatrixType::RowsAtCompileTime, MatrixType::ColsAtCompileTime> ComplexMatrix;$/;"	t	class:Eigen::MatrixPower
ComplexMatrixType	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> ComplexMatrixType;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	struct:Eigen::internal::stem_function
ComplexScalar	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexEigenSolver
ComplexScalar	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::EigenSolver
ComplexScalar	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
ComplexScalar	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealQZ
ComplexScalar	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealSchur
ComplexScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^  typedef std::complex<RealScalar> ComplexScalar;$/;"	t	struct:Eigen::internal::MatrixExponentialScalingOp
ComplexScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::MatrixPower
ComplexScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::MatrixPowerAtomic
ComplexScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename std::complex<typename Derived::RealScalar> ComplexScalar;$/;"	t	class:Eigen::MatrixComplexPowerReturnValue
ComplexSchur	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    explicit ComplexSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    explicit ComplexSchur(const MatrixType& matrix, bool computeU = true)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^template<typename _MatrixType> class ComplexSchur$/;"	c	namespace:Eigen
ComplexVector	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef Matrix<std::complex<RealScalar>, Dynamic, 1> ComplexVector;$/;"	t	class:Eigen::DGMRES
ComplexVectorType	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ComplexVectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
CompressedAccessBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int CompressedAccessBit = 0x400;$/;"	m	namespace:Eigen
CompressedStorage	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    explicit CompressedStorage(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^class CompressedStorage$/;"	c	namespace:Eigen::internal
ComputationInfo	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum ComputationInfo {$/;"	g	namespace:Eigen
ComputeEigenvectors	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ComputeEigenvectors = 0x80,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullU	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ComputeFullU        = 0x04,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullV	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ComputeFullV        = 0x10,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinU	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ComputeThinU        = 0x08,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinV	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ComputeThinV        = 0x20,$/;"	e	enum:Eigen::DecompositionOptions
Cond	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^template<bool cond> struct Cond {};$/;"	s	namespace:Eigen
ConditionMatrixNested	tools/eigen/Eigen/src/Core/Select.h	/^  typedef typename ConditionMatrixType::Nested ConditionMatrixNested;$/;"	t	struct:Eigen::internal::traits
Conj	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Conj = NumTraits<LhsScalar>::IsComplex$/;"	e	enum:Eigen::internal::scalar_conj_product_op::__anon403
Conj	tools/eigen/blas/common.h	/^  Conj = IsComplex$/;"	e	enum:__anon137
ConjLhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
ConjLhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
ConjLhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
ConjLhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
ConjRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
ConjRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
ConjRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
ConjRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
Conjugate	tools/eigen/Eigen/src/Core/BandMatrix.h	/^        Conjugate = ReturnOpposite && NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon622
ConjugateGradient	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ConjugateGradient() : Base() {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  explicit ConjugateGradient(const MatrixType& A) : Base(A) {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^class ConjugateGradient : public IterativeSolverBase<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	c	namespace:Eigen
ConjugateReturnType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const MatrixConjugateReturnType,Mode> ConjugateReturnType;$/;"	t	class:Eigen::TriangularView
ConjugateReturnType	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    > ConjugateReturnType;$/;"	t	class:Eigen::HouseholderSequence
ConjugateReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type ConjugateReturnType;$/;"	t
ConjugationFlag	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  ConjugationFlag        = 0x02$/;"	e	enum:Eigen::__anon49
ConstAffinePart	tools/eigen/Eigen/src/Geometry/Transform.h	/^                              const Block<const MatrixType,Dim,HDim> >::type ConstAffinePart;$/;"	t	class:Eigen::Transform
ConstAffinePart	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::ConstAffinePart ConstAffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
ConstAlignedMapType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, AlignedMax> ConstAlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstCholMatrixPtr	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef CholMatrixType const * ConstCholMatrixPtr;$/;"	t	class:Eigen::SimplicialCholeskyBase
ConstCholMatrixPtr	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef CholMatrixType const * ConstCholMatrixPtr;$/;"	t	struct:Eigen::internal::simplicial_cholesky_grab_input
ConstColXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ConstColXpr;$/;"	t
ConstColsBlockXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ConstColsBlockXpr;$/;"	t
ConstColwiseReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Vertical> ConstColwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstDiagonalDynamicIndexReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::add_const<Diagonal<const Derived,DynamicIndex> >::type ConstDiagonalDynamicIndexReturnType;$/;"	t	class:Eigen::MatrixBase
ConstDiagonalIndexReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
ConstDiagonalReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::add_const<Diagonal<const Derived> >::type ConstDiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
ConstDiagonalReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef Diagonal<const SparseMatrix> ConstDiagonalReturnType;$/;"	t	class:Eigen::SparseMatrix
ConstFixedSegmentReturnType	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	s
ConstInnerVectorReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<const Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true> ConstInnerVectorReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConstInnerVectorsReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<const Derived,Dynamic,Dynamic,true> ConstInnerVectorsReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConstLinearPart	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,Dim,int(Mode)==(AffineCompact) && (Options&RowMajor)==0> ConstLinearPart;$/;"	t	class:Eigen::Transform
ConstMapType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, Unaligned> ConstMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstMatrixPtr	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef MatrixType const * ConstMatrixPtr;$/;"	t	struct:Eigen::internal::simplicial_cholesky_grab_input
ConstMatrixType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef const MatrixType ConstMatrixType;$/;"	t	class:Eigen::Transform
ConstNColsBlockXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
ConstNRowsBlockXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
ConstNormalReturnType	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  typedef const Block<const Coefficients,AmbientDimAtCompileTime,1> ConstNormalReturnType;$/;"	t	class:Eigen::Hyperplane
ConstReverseReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef const Reverse<const Derived, BothDirections> ConstReverseReturnType;$/;"	t	class:Eigen::DenseBase
ConstRowXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowXpr;$/;"	t
ConstRowsBlockXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowsBlockXpr;$/;"	t
ConstRowwiseReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Horizontal> ConstRowwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstSegmentReturnType	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef const VectorBlock<const Derived> ConstSegmentReturnType;$/;"	t
ConstSelfAdjointViewReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
ConstSelfAdjointViewReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SparseSelfAdjointView<const Derived, UpLo> Type; };$/;"	s	class:Eigen::SparseMatrixBase
ConstStartMinusOne	tools/eigen/Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime==1 ? 1 : SizeMinusOne> ConstStartMinusOne;$/;"	t	class:Eigen::MatrixBase
ConstTranslationPart	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,1,!(internal::traits<MatrixType>::Flags & RowMajorBit)> ConstTranslationPart;$/;"	t	class:Eigen::Transform
ConstTransposeReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::DenseBase
ConstTransposeReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ConstTransposeReturnType ConstTransposeReturnType;$/;"	t	class:Eigen::MatrixBase
ConstTransposeReturnType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const typename MatrixType::ConstTransposeReturnType,TransposeMode> ConstTransposeReturnType;$/;"	t	class:Eigen::TriangularView
ConstTransposeReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConstTriangularViewReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
Constant	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index rows, Index cols, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index size, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(const Scalar& value)$/;"	f	class:Eigen::DenseBase
ConstantBlock	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Replicate<const ConstantColumn,1,Cols>                        ConstantBlock;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
ConstantBlock	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Replicate<const ConstantColumn,Rows,1>                        ConstantBlock;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
ConstantBlock	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename helper::ConstantBlock ConstantBlock;$/;"	t	struct:Eigen::internal::product_evaluator
ConstantColumn	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Lhs::ConstColXpr                                     ConstantColumn;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
ConstantColumn	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Rhs::ConstRowXpr                                     ConstantColumn;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
ConstantReturnType	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::ArrayBase
ConstantReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::DenseBase
ConstantReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::MatrixBase
ConstantReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Matrix<Scalar,Dynamic,Dynamic> > ConstantReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ContractDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int ContractDims = internal::array_size<Indices>::value;$/;"	m	struct:Eigen::TensorEvaluator
ContractDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const unsigned int ContractDims = internal::array_size<Indices>::value;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
ContractDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  static const int ContractDims = internal::array_size<Indices>::value;$/;"	m	struct:Eigen::TensorEvaluator
ContractDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  static const int ContractDims = internal::array_size<Indices>::value;$/;"	m	struct:Eigen::TensorEvaluator
ControlPointVectorType	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::ControlPointVectorType ControlPointVectorType;$/;"	t	class:Eigen::Spline
ControlPointVectorType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,Dimension,Dynamic> ControlPointVectorType;$/;"	t	struct:Eigen::SplineTraits
ConversionFlags	tools/ConvertUTF.h	/^} ConversionFlags;$/;"	t	typeref:enum:__anon740
ConversionResult	tools/ConvertUTF.h	/^} ConversionResult;$/;"	t	typeref:enum:__anon739
ConvertFromStore	tools/SimpleIni.h	/^    bool ConvertFromStore($/;"	f	class:SI_ConvertA
ConvertFromStore	tools/SimpleIni.h	/^    bool ConvertFromStore($/;"	f	class:SI_ConvertW
ConvertToPacket2l	tools/eigen/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^static inline Packet2l ConvertToPacket2l(const Packet2d& x) {$/;"	f	namespace:Eigen::internal
ConvertToStore	tools/SimpleIni.h	/^        bool ConvertToStore(const SI_CHAR * a_pszString) {$/;"	f	class:CSimpleIniTempl::Converter
ConvertToStore	tools/SimpleIni.h	/^    bool ConvertToStore($/;"	f	class:SI_ConvertA
ConvertToStore	tools/SimpleIni.h	/^    bool ConvertToStore($/;"	f	class:SI_ConvertW
Converter	tools/SimpleIni.h	/^        Converter(bool a_bStoreIsUtf8) : SI_CONVERTER(a_bStoreIsUtf8) {$/;"	f	class:CSimpleIniTempl::Converter
Converter	tools/SimpleIni.h	/^        Converter(const Converter & rhs) { operator=(rhs); }$/;"	f	class:CSimpleIniTempl::Converter
Converter	tools/SimpleIni.h	/^    class Converter : private SI_CONVERTER {$/;"	c	class:CSimpleIniTempl
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^      CoordAccess = true,$/;"	e	enum:Eigen::Tensor::__anon55
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon51
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon52
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon61
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorContractionEvaluatorBase::__anon96
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon104
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon105
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon100
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon101
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon89
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    CoordAccess = NumCoords > 0,$/;"	e	enum:Eigen::TensorEvaluator::__anon75
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    CoordAccess = NumCoords > 0,$/;"	e	enum:Eigen::TensorEvaluator::__anon77
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon78
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon79
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon80
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon81
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^      CoordAccess = true,$/;"	e	enum:Eigen::TensorFixedSize::__anon87
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon71
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    CoordAccess = NumDims == 5,$/;"	e	enum:Eigen::TensorEvaluator::__anon86
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon106
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon58
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon59
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^      CoordAccess = true,$/;"	e	enum:Eigen::TensorMap::__anon60
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    CoordAccess = TensorEvaluator<ArgType, Device>::CoordAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon118
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    CoordAccess = TensorEvaluator<ArgType, Device>::CoordAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon119
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon115
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon116
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^    CoordAccess = true,$/;"	e	enum:Eigen::TensorEvaluator::__anon68
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^    CoordAccess = true,$/;"	e	enum:Eigen::TensorEvaluator::__anon102
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon67
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^      CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorRef::__anon120
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon121
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon63
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon64
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon92
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon53
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    CoordAccess = false,  \/\/ to be implemented$/;"	e	enum:Eigen::TensorEvaluator::__anon54
CoordAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    CoordAccess = NumDims == 6,$/;"	e	enum:Eigen::TensorEvaluator::__anon85
Coordinates	tools/eigen/bench/sparse_setter.cpp	/^typedef std::vector<Vector2i> Coordinates;$/;"	t	file:
CopyString	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::CopyString($/;"	f	class:CSimpleIniTempl
CornerType	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	g	namespace:Eigen
CornerType	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  enum CornerType$/;"	g	class:Eigen::AlignedBox
CosReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cos_op<Scalar>, const Derived> CosReturnType;$/;"	t
CoshReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cosh_op<Scalar>, const Derived> CoshReturnType;$/;"	t
CosinusTooSmall	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        CosinusTooSmall = 4,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
CosinusTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        CosinusTooSmall = 4,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
Cost	tools/eigen/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon619
Cost	tools/eigen/Eigen/src/Core/Redux.h	/^    Cost = (  Derived::SizeAtCompileTime == Dynamic$/;"	e	enum:Eigen::internal::redux_traits::__anon630
Cost	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  template<typename _Scalar, int Size> struct Cost$/;"	s	struct:Eigen::internal::member_redux
Cost	tools/eigen/Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon312
Cost	tools/eigen/Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon313
Cost	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = 3 * NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon399
Cost	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon396
Cost	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<Scalar>::ReadCost + NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon394
Cost	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<Scalar>::ReadCost + NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon395
Cost	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<Scalar>::ReadCost + NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon398
Cost	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon393
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost), \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon412
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost)\/2, \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon402
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<LhsScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon404
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon400
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon405
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon406
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon407
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon410
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon413
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon414
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon409
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess=0 };$/;"	e	enum:Eigen::internal::functor_traits::__anon408
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = 2 * NumTraits<Scalar1>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon418
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon417
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon426
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar1>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon416
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon423
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon424
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon425
Cost	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon415
Cost	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon453
Cost	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon451
Cost	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon452
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon445
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon446
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon447
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon448
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon443
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon444
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon432
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon433
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon434
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon435
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon436
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon437
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon438
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon439
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon440
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon429
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon430
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon431
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon427
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon428
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon450
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon449
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon441
Cost	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon442
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon469
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon470
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon471
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon472
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon473
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon474
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon475
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon476
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon477
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon478
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon479
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon456
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon457
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::IsComplex ? 5 * NumTraits<Scalar>::MulCost : NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon460
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::IsComplex ? NumTraits<Scalar>::AddCost : 0,$/;"	e	enum:Eigen::internal::functor_traits::__anon459
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon483
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon484
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon485
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon486
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon487
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon488
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon489
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon462
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon463
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon464
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon465
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon482
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasExp }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon466
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon467
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog10 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon468
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon458
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon480
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon481
Cost	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon461
Cost	tools/eigen/blas/level1_cplx_impl.h	/^      enum { Cost = 3 * NumTraits<Scalar>::AddCost, PacketAccess = 0 };$/;"	e	enum:Eigen::internal::functor_traits::__anon130
Cost	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^    Cost = NumTraits<T>::AddCost * 2 + NumTraits<T>::MulCost * 6,$/;"	e	enum:Eigen::internal::functor_traits::__anon69
CostEvalAsInteger	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    CostEvalAsInteger   = (NAsInteger+1) * ScalarReadCostAsInteger + CoeffReadCostAsInteger,$/;"	e	enum:Eigen::internal::promote_index_type::nested_eval::__anon571
CostNoEvalAsInteger	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    CostNoEvalAsInteger = NAsInteger * CoeffReadCostAsInteger$/;"	e	enum:Eigen::internal::promote_index_type::nested_eval::__anon571
CostOpType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename MemberOp::template Cost<InputScalar,int(TraversalSize)> CostOpType;$/;"	t	struct:Eigen::internal::evaluator
CountReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef PartialReduxExpr<ExpressionType, internal::member_count<Index>, Direction> CountReturnType;$/;"	t	class:Eigen::VectorwiseOp
CrossReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::PlainObject CrossReturnType;$/;"	t	class:Eigen::VectorwiseOp
CubeReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cube_op<Scalar>, const Derived> CubeReturnType;$/;"	t
CudaStreamDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  CudaStreamDevice() : stream_(&default_stream) {$/;"	f	class:Eigen::CudaStreamDevice
CudaStreamDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  CudaStreamDevice(const cudaStream_t* stream, int device = -1)$/;"	f	class:Eigen::CudaStreamDevice
CudaStreamDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  CudaStreamDevice(int device) : stream_(&default_stream), device_(device) {$/;"	f	class:Eigen::CudaStreamDevice
CudaStreamDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^class CudaStreamDevice : public StreamInterface {$/;"	c	namespace:Eigen
CwiseAbs2ReturnType	tools/eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs2_op<Scalar>, const Derived> CwiseAbs2ReturnType;$/;"	t
CwiseAbsReturnType	tools/eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs_op<Scalar>, const Derived> CwiseAbsReturnType;$/;"	t
CwiseBinaryOp	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE CwiseBinaryOp(const Lhs& aLhs, const Rhs& aRhs, const BinaryOp& func = BinaryOp())$/;"	f	class:Eigen::CwiseBinaryOp
CwiseBinaryOp	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOp : $/;"	c	namespace:Eigen
CwiseBinaryOpImpl	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOpImpl$/;"	c	namespace:Eigen
CwiseBinaryOpImpl	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CwiseBinaryOpImpl()$/;"	f	class:Eigen::CwiseBinaryOpImpl
CwiseBinaryOpImpl	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Sparse>$/;"	c	namespace:Eigen
CwiseClampOp	tools/eigen/doc/examples/class_CwiseUnaryOp.cpp	/^  CwiseClampOp(const Scalar& inf, const Scalar& sup) : m_inf(inf), m_sup(sup) {}$/;"	f	struct:CwiseClampOp
CwiseClampOp	tools/eigen/doc/examples/class_CwiseUnaryOp.cpp	/^struct CwiseClampOp {$/;"	s	file:
CwiseInverseReturnType	tools/eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const Derived> CwiseInverseReturnType;$/;"	t
CwiseNullaryOp	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    CwiseNullaryOp(Index rows, Index cols, const NullaryOp& func = NullaryOp())$/;"	f	class:Eigen::CwiseNullaryOp
CwiseNullaryOp	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^class CwiseNullaryOp : public internal::dense_xpr_base< CwiseNullaryOp<NullaryOp, PlainObjectType> >::type, internal::no_assignment_operator$/;"	c	namespace:Eigen
CwiseScalarEqualReturnType	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^typedef CwiseBinaryOp<internal::scalar_cmp_op<Scalar,internal::cmp_EQ>, const Derived, const ConstantReturnType> CwiseScalarEqualReturnType;$/;"	t
CwiseSqrtReturnType	tools/eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sqrt_op<Scalar>, const Derived> CwiseSqrtReturnType;$/;"	t
CwiseUnaryOp	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    explicit inline CwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp())$/;"	f	class:Eigen::CwiseUnaryOp
CwiseUnaryOp	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOp : public CwiseUnaryOpImpl<UnaryOp, XprType, typename internal::traits<XprType>::StorageKind>, internal::no_assignment_operator$/;"	c	namespace:Eigen
CwiseUnaryOpImpl	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOpImpl$/;"	c	namespace:Eigen
CwiseUnaryView	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    explicit inline CwiseUnaryView(MatrixType& mat, const ViewOp& func = ViewOp())$/;"	f	class:Eigen::CwiseUnaryView
CwiseUnaryView	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryView : public CwiseUnaryViewImpl<ViewOp, MatrixType, typename internal::traits<MatrixType>::StorageKind>$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryViewImpl$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Dense>$/;"	c	namespace:Eigen
D	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^MatrixXcd D = es.eigenvalues().asDiagonal();$/;"	v
D	tools/eigen/doc/snippets/EigenSolver_pseudoEigenvectors.cpp	/^MatrixXd D = es.pseudoEigenvalueMatrix();$/;"	v
D	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^MatrixXd D = es.eigenvalues().asDiagonal();$/;"	v
DBEG	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION FUNCTION DBEG(/;"	f
DBEG	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION FUNCTION DBEG(/;"	f
DBLAT1	tools/eigen/blas/testing/dblat1.f	/^      PROGRAM DBLAT1$/;"	p
DBLAT2	tools/eigen/blas/testing/dblat2.f	/^      PROGRAM DBLAT2$/;"	p
DBLAT3	tools/eigen/blas/testing/dblat3.f	/^      PROGRAM DBLAT3$/;"	p
DCHK1	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DCHK1(/;"	s
DCHK1	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE DCHK1(/;"	s
DCHK2	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DCHK2(/;"	s
DCHK2	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE DCHK2(/;"	s
DCHK3	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DCHK3(/;"	s
DCHK3	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE DCHK3(/;"	s
DCHK4	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DCHK4(/;"	s
DCHK4	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE DCHK4(/;"	s
DCHK5	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DCHK5(/;"	s
DCHK5	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE DCHK5(/;"	s
DCHK6	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DCHK6(/;"	s
DCHKE	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DCHKE(/;"	s
DCHKE	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE DCHKE(/;"	s
DDIFF	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   DDIFF$/;"	v	program:DBLAT2
DDIFF	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION FUNCTION DDIFF(/;"	f
DDIFF	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   DDIFF$/;"	v	program:DBLAT3
DDIFF	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION FUNCTION DDIFF(/;"	f
DDIFF	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION   DDIFF$/;"	v	program:ZBLAT2
DDIFF	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION FUNCTION DDIFF(/;"	f
DDIFF	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION   DDIFF$/;"	v	program:ZBLAT3
DDIFF	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION FUNCTION DDIFF(/;"	f
DEAD	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	116;"	d
DEAD_NON_PRINCIPAL	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	120;"	d
DEAD_PRINCIPAL	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	119;"	d
DEBUG	tools/eigen/test/main.h	104;"	d
DECL_GSISX	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	51;"	d
DECL_GSSVX	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	15;"	d
DEFAULT_NB_SAMPLE	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	48;"	d
DEFAULT_NB_TRIES	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	51;"	d
DEFAULT_REPEAT	tools/eigen/test/main.h	116;"	d
DENSITY	tools/eigen/bench/BenchSparseUtil.h	15;"	d
DENSITY	tools/eigen/bench/sparse_cholesky.cpp	16;"	d	file:
DENSITY	tools/eigen/bench/sparse_dense_product.cpp	11;"	d	file:
DENSITY	tools/eigen/bench/sparse_lu.cpp	16;"	d	file:
DENSITY	tools/eigen/bench/sparse_randomsetter.cpp	15;"	d	file:
DENSITY	tools/eigen/bench/sparse_transpose.cpp	11;"	d	file:
DENSITY	tools/eigen/bench/sparse_trisolver.cpp	12;"	d	file:
DGMRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  DGMRES() : Base(),m_restart(30),m_neig(0),m_r(0),m_maxNeig(5),m_isDeflAllocated(false),m_isDeflInitialized(false) {}$/;"	f	class:Eigen::DGMRES
DGMRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  DGMRES(const MatrixType& A) : Base(A),m_restart(30),m_neig(0),m_r(0),m_maxNeig(5),m_isDeflAllocated(false),m_isDeflInitialized(false)$/;"	f	class:Eigen::DGMRES
DGMRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^class DGMRES : public IterativeSolverBase<DGMRES<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
DIAG	tools/eigen/blas/common.h	53;"	d
DISABLE_SSE_EXCEPTIONS	tools/eigen/bench/BenchUtil.h	34;"	d
DISABLE_SSE_EXCEPTIONS	tools/eigen/bench/BenchUtil.h	43;"	d
DLADIV	tools/eigen/lapack/dladiv.f	/^      SUBROUTINE DLADIV(/;"	s
DLAMC3	tools/eigen/lapack/dlamch.f	/^      DOUBLE PRECISION FUNCTION DLAMC3(/;"	f
DLAMCH	tools/eigen/lapack/dlamch.f	/^      DOUBLE PRECISION FUNCTION DLAMCH(/;"	f
DLAPY2	tools/eigen/lapack/dlapy2.f	/^      DOUBLE PRECISION FUNCTION DLAPY2(/;"	f
DLAPY3	tools/eigen/lapack/dlapy3.f	/^      DOUBLE PRECISION FUNCTION DLAPY3(/;"	f
DLARF	tools/eigen/lapack/dlarf.f	/^      SUBROUTINE DLARF(/;"	s
DLARFB	tools/eigen/lapack/dlarfb.f	/^      SUBROUTINE DLARFB(/;"	s
DLARFG	tools/eigen/lapack/dlarfg.f	/^      SUBROUTINE DLARFG(/;"	s
DLARFT	tools/eigen/lapack/dlarft.f	/^      SUBROUTINE DLARFT(/;"	s
DMAKE	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DMAKE(/;"	s
DMAKE	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE DMAKE(/;"	s
DMMCH	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE DMMCH(/;"	s
DMVCH	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE DMVCH(/;"	s
DSECND	tools/eigen/lapack/dsecnd_NONE.f	/^      DOUBLE PRECISION FUNCTION DSECND(/;"	f
DST_CHAN	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	65;"	d
DST_CTRL	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	66;"	d
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC DSizes() {$/;"	f	struct:Eigen::DSizes
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC explicit DSizes(const DenseIndex i0) {$/;"	f	struct:Eigen::DSizes
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC explicit DSizes(const DenseIndex i0, const DenseIndex i1) {$/;"	f	struct:Eigen::DSizes
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC explicit DSizes(const DenseIndex i0, const DenseIndex i1, const DenseIndex i2) {$/;"	f	struct:Eigen::DSizes
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC explicit DSizes(const DenseIndex i0, const DenseIndex i1, const DenseIndex i2, const DenseIndex i3) {$/;"	f	struct:Eigen::DSizes
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC explicit DSizes(const DenseIndex i0, const DenseIndex i1, const DenseIndex i2, const DenseIndex i3, const DenseIndex i4) {$/;"	f	struct:Eigen::DSizes
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC explicit DSizes(const array<DenseIndex, NumDims>& a) : Base(a) { }$/;"	f	struct:Eigen::DSizes
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_STRONG_INLINE explicit DSizes(DenseIndex firstDimension, IndexTypes... otherDimensions) {$/;"	f	struct:Eigen::DSizes
DSizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct DSizes : array<DenseIndex, NumDims> {$/;"	s	namespace:Eigen
DUMP_CPUID	tools/eigen/bench/check_cache_queries.cpp	9;"	d	file:
Data	tools/SimpleIni.h	/^        const char * Data() { return m_scratch.data(); }$/;"	f	class:CSimpleIniTempl::Converter
DataMatrix	tools/eigen/doc/snippets/LLT_solve.cpp	/^typedef Matrix<float,Dynamic,2> DataMatrix;$/;"	t	file:
DataRowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic))$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon621
DataRowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon623
DataRowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon624
DecompositionOptions	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum DecompositionOptions {$/;"	g	namespace:Eigen
DecompositionType	tools/eigen/Eigen/src/misc/Image.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::image_retval_base
DecompositionType	tools/eigen/Eigen/src/misc/Kernel.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::kernel_retval_base
Default	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	e	enum:Eigen::Default_t
DefaultDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^struct DefaultDevice {$/;"	s	namespace:Eigen
DefaultProduct	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
DefaultTraversal	tools/eigen/Eigen/src/Core/util/Constants.h	/^  DefaultTraversal,$/;"	e	enum:Eigen::__anon494
Default_t	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	g	namespace:Eigen
Defined	tools/eigen/Eigen/src/Core/util/Meta.h	/^    Defined = 1$/;"	e	enum:Eigen::scalar_product_traits::__anon552
Defined	tools/eigen/Eigen/src/Core/util/Meta.h	/^    Defined = 1$/;"	e	enum:Eigen::scalar_product_traits::__anon553
Defined	tools/eigen/Eigen/src/Core/util/Meta.h	/^    Defined = 1$/;"	e	enum:Eigen::scalar_product_traits::__anon554
Defined	tools/eigen/Eigen/src/Core/util/Meta.h	/^  enum { Defined = 0 };$/;"	e	enum:Eigen::scalar_product_traits::__anon551
Defined	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Defined = 1$/;"	e	enum:Eigen::internal::scalar_product_traits::__anon190
Defined	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  enum { Defined = 1 };$/;"	e	enum:Eigen::internal::scalar_product_traits::__anon5
Defined	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  enum { Defined = 1 };$/;"	e	enum:Eigen::internal::scalar_product_traits::__anon6
Defined	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  enum { Defined = 1 };$/;"	e	enum:Eigen::internal::scalar_product_traits::__anon7
Defined	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  enum { Defined = 1 };$/;"	e	enum:Eigen::internal::scalar_product_traits::__anon8
Deg	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^      Deg = _Deg,$/;"	e	enum:Eigen::internal::companion::__anon32
Deg_1	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^      Deg_1=decrement_if_fixed_size<Deg>::ret$/;"	e	enum:Eigen::internal::companion::__anon32
Degree	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    enum { Degree = _Degree \/*!< The spline curve's degree. *\/ };$/;"	e	enum:Eigen::Spline::__anon48
Degree	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { Degree = _Degree \/*!< The spline curve's degree. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon40
Delete	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::Delete($/;"	f	class:CSimpleIniTempl
DeleteString	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::DeleteString($/;"	f	class:CSimpleIniTempl
DeleteValue	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::DeleteValue($/;"	f	class:CSimpleIniTempl
Dense	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct Dense {};$/;"	s	namespace:Eigen
Dense2Dense	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct Dense2Dense {};$/;"	s	namespace:Eigen::internal
Dense2Triangular	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Dense2Triangular         {};$/;"	s	namespace:Eigen::internal
DenseBase	tools/eigen/Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC DenseBase()$/;"	f	class:Eigen::DenseBase
DenseBase	tools/eigen/Eigen/src/Core/DenseBase.h	/^template<typename Derived> class DenseBase$/;"	c	namespace:Eigen
DenseCoeffsBase	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectWriteAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, WriteAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived>$/;"	c	namespace:Eigen
DenseCompanionMatrixType	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix<Scalar, Deg, Deg>               DenseCompanionMatrixType;$/;"	t	class:Eigen::internal::companion
DenseFunctor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  DenseFunctor() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:Eigen::DenseFunctor
DenseFunctor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  DenseFunctor(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:Eigen::DenseFunctor
DenseFunctor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^struct DenseFunctor$/;"	s	namespace:Eigen
DenseIndex	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE DenseIndex;$/;"	t	namespace:Eigen
DenseLM	tools/eigen/test/denseLM.cpp	/^  DenseLM(int n, int m) : DenseFunctor<Scalar>(n,m) $/;"	f	struct:DenseLM
DenseLM	tools/eigen/test/denseLM.cpp	/^struct DenseLM : DenseFunctor<Scalar>$/;"	s	file:
DenseMatrix	tools/RedSVD.hh	/^		typedef typename Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic> DenseMatrix;$/;"	t	class:RedSVD::RedPCA
DenseMatrix	tools/RedSVD.hh	/^		typedef typename Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic> DenseMatrix;$/;"	t	class:RedSVD::RedSVD
DenseMatrix	tools/RedSVD.hh	/^		typedef typename Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic> DenseMatrix;$/;"	t	class:RedSVD::RedSymEigen
DenseMatrix	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef Matrix<Scalar,Dynamic,Dynamic> DenseMatrix;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
DenseMatrix	tools/eigen/bench/BenchSparseUtil.h	/^typedef Matrix<Scalar,Dynamic,Dynamic> DenseMatrix;$/;"	t
DenseMatrix	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> DenseMatrix; $/;"	t	class:Eigen::DGMRES
DenseMatrixType	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::internal::BandMatrixBase
DenseMatrixType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, ColsAtCompileTime, 0, MaxRowsAtCompileTime, MaxColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::DiagonalBase
DenseMatrixType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^            DenseMatrixType;$/;"	t	class:Eigen::PermutationBase
DenseMatrixType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Derived::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::Transpose
DenseMatrixType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename MatrixType::PlainObject DenseMatrixType;$/;"	t	class:Eigen::TriangularViewImpl
DenseMatrixType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::FullMatrixType DenseMatrixType;$/;"	t	class:Eigen::TriangularBase
DenseMatrixType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::SparseMatrixBase
DenseRealMatrix	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef Matrix<RealScalar,Dynamic,Dynamic> DenseRealMatrix; $/;"	t	class:Eigen::DGMRES
DenseRealVector	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef Matrix<RealScalar,Dynamic,1> DenseRealVector; $/;"	t	class:Eigen::DGMRES
DenseShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct DenseShape             { static std::string debugName() { return "DenseShape"; } };$/;"	s	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    DenseStorage(DenseStorage&& other)$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    DenseStorage(const DenseStorage& other) : m_data(other.m_data) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_cols(cols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(rows)$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) {$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index rows, Index cols) : m_rows(rows), m_cols(cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index rows, Index) : m_rows(rows) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index, Index cols) : m_cols(cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_cols(other.m_cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_rows(other.m_rows) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_rows(other.m_rows), m_cols(other.m_cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage&) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC explicit DenseStorage(internal::constructor_without_unaligned_array_assert) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC explicit DenseStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::DenseStorage
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Cols, int _Options> class DenseStorage<T, Size, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Options> class DenseStorage<T, Size, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Options> class DenseStorage<T, Size, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, 0, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, Dynamic, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, 0, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, Dynamic, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Cols, int _Options> class DenseStorage<T, 0, _Rows, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, 0, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, Dynamic, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseTimeSkylineProduct	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum AdditionalProductEvaluationMode {SkylineTimeDenseProduct, SkylineTimeSkylineProduct, DenseTimeSkylineProduct};$/;"	e	enum:Eigen::AdditionalProductEvaluationMode
DenseType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::DiagonalBase
DenseType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef Derived DenseType;$/;"	t	class:Eigen::PlainObjectBase
DenseType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::TriangularBase
DenseVector	tools/eigen/bench/BenchSparseUtil.h	/^typedef Matrix<Scalar,Dynamic,1> DenseVector;$/;"	t
DenseVector	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef Matrix<Scalar,Dynamic,1> DenseVector;$/;"	t	class:Eigen::DGMRES
Depends	tools/eigen/test/unalignedassert.cpp	/^template<bool Align> struct Depends$/;"	s	file:
Depth	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    Depth = EIGEN_SIZE_MIN_PREFER_FIXED(traits<_Lhs>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon590
DerType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    typedef typename internal::remove_all<_DerType>::type DerType;$/;"	t	class:Eigen::AutoDiffScalar
DerType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef typename remove_all<_DerType>::type DerType;$/;"	t	struct:Eigen::internal::auto_diff_special_op
DerivativeMemoryLayout	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { DerivativeMemoryLayout = Dimension==1 ? RowMajor : ColMajor \/*!< The derivative type's memory layout. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon43
DerivativeMemoryLayout	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { DerivativeMemoryLayout = _Dim==1 ? RowMajor : ColMajor \/*!< The derivative type's memory layout. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon46
DerivativeType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> DerivativeType;$/;"	t	class:Eigen::AutoDiffJacobian
DerivativeType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,Dimension,Dynamic,DerivativeMemoryLayout,Dimension,NumOfDerivativesAtCompileTime> DerivativeType;$/;"	t	struct:Eigen::SplineTraits
DerivativeType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<_Scalar,_Dim,Dynamic,DerivativeMemoryLayout,_Dim,NumOfDerivativesAtCompileTime> DerivativeType;$/;"	t	struct:Eigen::SplineTraits
Derived	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    typedef CwiseUnaryView<ViewOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Derived	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef Inverse<XprType> Derived;$/;"	t	class:Eigen::InverseImpl
Derived	tools/eigen/Eigen/src/Core/Product.h	/^    typedef Product<Lhs, Rhs, Option> Derived;$/;"	t	class:Eigen::ProductImpl
Derived	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef Solve<Decomposition,RhsType> Derived;$/;"	t	class:Eigen::SolveImpl
Derived	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;$/;"	t	class:Eigen::CwiseBinaryOpImpl
DerivedNested	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename internal::ref_selector<Derived>::type DerivedNested;$/;"	t	class:Eigen::MatrixFunctionReturnValue
DerivedNested	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typedef typename internal::ref_selector<Derived>::type DerivedNested;$/;"	t	class:Eigen::MatrixLogarithmReturnValue
DerivedNested	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    typedef typename internal::ref_selector<Derived>::type DerivedNested;$/;"	t	class:Eigen::MatrixSquareRootReturnValue
DerivedTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    typedef internal::traits<Derived> DerivedTraits;$/;"	t	class:Eigen::TensorBase
Device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef Device_ Device;$/;"	t	struct:Eigen::internal::traits
Device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename internal::traits<Derived>::Device Device;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
Device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef GpuDevice Device;$/;"	t	struct:Eigen::TensorEvaluator
Device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef ThreadPoolDevice Device;$/;"	t	struct:Eigen::TensorEvaluator
DiagCoeffNested	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^                                                                       : SparseXprType::ColsAtCompileTime>::type DiagCoeffNested;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
DiagFlags	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    DiagFlags = evaluator<DiagonalType>::Flags,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
DiagIndex	tools/eigen/Eigen/src/Core/Diagonal.h	/^    enum { DiagIndex = _DiagIndex };$/;"	e	enum:Eigen::Diagonal::__anon390
DiagSizeAtCompileTime	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^    DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime, ColsAtCompileTime), $/;"	e	enum:Eigen::BDCSVD::__anon164
DiagSizeAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^      DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon161
DiagSizeAtCompileTime	tools/eigen/Eigen/src/SVD/SVDBase.h	/^    DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime),$/;"	e	enum:Eigen::SVDBase::__anon162
DiagVectorType	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1> DiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Diagonal	tools/eigen/Eigen/src/Core/Diagonal.h	/^    explicit inline Diagonal(MatrixType& matrix, Index a_index = DiagIndex) : m_matrix(matrix), m_index(a_index) {}$/;"	f	class:Eigen::Diagonal
Diagonal	tools/eigen/Eigen/src/Core/Diagonal.h	/^template<typename MatrixType, int _DiagIndex> class Diagonal$/;"	c	namespace:Eigen
Diagonal2Dense	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^struct Diagonal2Dense {};$/;"	s	namespace:Eigen::internal
Diagonal2Sparse	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct Diagonal2Sparse {};$/;"	s	namespace:Eigen::internal
DiagonalBase	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
DiagonalDynamicIndexReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef Diagonal<Derived,DynamicIndex> DiagonalDynamicIndexReturnType;$/;"	t	class:Eigen::MatrixBase
DiagonalIndexReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
DiagonalIntReturnType	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    template<int Index> struct DiagonalIntReturnType {$/;"	s	class:Eigen::internal::BandMatrixBase
DiagonalMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalMatrix(Index dim) : m_diagonal(dim) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalMatrix(const MatrixBase<OtherDerived>& other) : m_diagonal(other)$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix() {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalBase<OtherDerived>& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalMatrix& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y) : m_diagonal(x,y) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y, const Scalar& z) : m_diagonal(x,y,z) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalMatrix$/;"	c	namespace:Eigen
DiagonalPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner() : m_isInitialized(false) {}$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit DiagonalPreconditioner(const MatType& mat) : m_invdiag(mat.cols())$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class DiagonalPreconditioner$/;"	c	namespace:Eigen
DiagonalReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef Diagonal<Derived> DiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
DiagonalReturnType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type DiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef Diagonal<SparseMatrix> DiagonalReturnType;$/;"	t	class:Eigen::SparseMatrix
DiagonalShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct DiagonalShape          { static std::string debugName() { return "DiagonalShape"; } };$/;"	s	namespace:Eigen
DiagonalSize	tools/eigen/Eigen/src/Core/BandMatrix.h	/^        DiagonalSize = (RowsAtCompileTime==Dynamic || ColsAtCompileTime==Dynamic)$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon622
DiagonalType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type DiagonalType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalVectorType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalWrapper
DiagonalVectorType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalBase
DiagonalVectorType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalMatrix
DiagonalVectorType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  typedef Matrix<_Scalar,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1> DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalVectorType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalWrapper	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalWrapper(DiagonalVectorType& a_diagonal) : m_diagonal(a_diagonal) {}$/;"	f	class:Eigen::DiagonalWrapper
DiagonalWrapper	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalWrapper$/;"	c	namespace:Eigen
Dim	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  enum { Dim = 3 };$/;"	e	enum:Eigen::AngleAxis::__anon695
Dim	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    Dim  = Lhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::homogeneous_right_product_refactoring_helper::__anon693
Dim	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    Dim = Rhs::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::homogeneous_left_product_refactoring_helper::__anon694
Dim	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  enum { Dim = 2 };$/;"	e	enum:Eigen::Rotation2D::__anon701
Dim	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    enum { Dim = _Dim };$/;"	e	enum:Eigen::RotationBase::__anon697
Dim	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon698
Dim	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon699
Dim	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Dim = Transform::Dim,$/;"	e	enum:Eigen::internal::transform_traits::__anon703
Dim	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon708
Dim	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon709
Dim	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Dim = _Dim,     \/\/\/< space dimension in which the transformation holds$/;"	e	enum:Eigen::Transform::__anon705
Dim	tools/eigen/Eigen/src/Geometry/Translation.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Translation::__anon700
Dim	tools/eigen/bench/geometry.cpp	/^  enum {Dim = T::Dim};$/;"	e	enum:ToRotationMatrixWrapper::__anon730	file:
Dim	tools/eigen/bench/geometry.cpp	/^struct get_dim<Matrix<S,R,C,O,MR,MC> > { enum { Dim = R }; };$/;"	e	enum:get_dim::__anon732	file:
Dim	tools/eigen/bench/geometry.cpp	/^template<typename T> struct get_dim { enum { Dim = T::Dim }; };$/;"	e	enum:get_dim::__anon731	file:
Dim	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  enum { Dim = 3 };$/;"	e	enum:EulerAngles::__anon140	file:
Dim	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::KdBVH::__anon33
Dim1	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Dim1 = _Dim==Dynamic ? _Dim : _Dim + 1,$/;"	e	enum:Eigen::internal::traits::__anon704
DimInitializer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^template <> struct DimInitializer<Sizes<1> > {$/;"	s	namespace:Eigen::internal
DimInitializer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^template <typename OutputDims> struct DimInitializer {$/;"	s	namespace:Eigen::internal
DimPair	tools/eigen/unsupported/test/cxx11_tensor_contract_cuda.cpp	/^typedef Tensor<float, 1>::DimensionPair DimPair;$/;"	t	file:
DimPair	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^typedef Tensor<float, 1>::DimensionPair DimPair;$/;"	t	file:
Dimension	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    enum { Dimension = _Dim \/*!< The spline curve's dimension. *\/ };$/;"	e	enum:Eigen::Spline::__anon47
Dimension	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { Dimension = _Dim \/*!< The spline curve's dimension. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon39
DimensionId	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  DimensionId(DenseIndex dim) : actual_dim(dim) {$/;"	f	struct:Eigen::internal::DimensionId
DimensionId	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  DimensionId(DenseIndex dim) {$/;"	f	struct:Eigen::internal::DimensionId
DimensionId	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^struct DimensionId$/;"	s	namespace:Eigen::internal
DimensionId	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^struct DimensionId<Dynamic>$/;"	s	namespace:Eigen::internal
DimensionList	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^template <typename Index, std::size_t Rank> struct DimensionList {$/;"	s	namespace:Eigen
DimensionPair	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    typedef Eigen::IndexPair<Index> DimensionPair;$/;"	t	class:Eigen::TensorBase
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef DSizes<Index, NumIndices_> Dimensions;$/;"	t	class:Eigen::Tensor
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename TensorEvaluator<ArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename TensorEvaluator<const TensorReductionOp<ReduceOp, Dims, const TensorIndexTupleOp<ArgType> >, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename TensorEvaluator<RightArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename Base::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename TensorEvaluator<ArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename TensorEvaluator<ArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename Derived::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename TensorEvaluator<ArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename TensorEvaluator<IfArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename TensorEvaluator<LeftArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^  typedef Dimensions_ Dimensions;$/;"	t	class:Eigen::TensorFixedSize
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename TensorEvaluator<ArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename TensorEvaluator<ArgType, Device>::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename PlainObjectType::Dimensions Dimensions;$/;"	t	class:Eigen::TensorMap
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef NewDimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef Sizes Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename internal::conditional<NumInputDims==NumReducedDims, Sizes<1>, DSizes<Index, NumOutputDims> >::type Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename PlainObjectType::Dimensions Dimensions;$/;"	t	class:Eigen::TensorRef
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename Derived::Dimensions Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    typedef DSizes<IndexType, NumIndices_> Dimensions;$/;"	t	class:Eigen::TensorStorage
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
Dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef DSizes<Index, NumDims> Dimensions;$/;"	t	struct:Eigen::TensorEvaluator
DirectAccessBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int DirectAccessBit = 0x40;$/;"	m	namespace:Eigen
DirectAccessors	tools/eigen/Eigen/src/Core/util/Constants.h	/^  DirectAccessors, $/;"	e	enum:Eigen::AccessorLevels
DirectLinearAccessType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^    >::type DirectLinearAccessType;$/;"	t	struct:Eigen::internal::blas_traits
DirectWriteAccessors	tools/eigen/Eigen/src/Core/util/Constants.h	/^  DirectWriteAccessors$/;"	e	enum:Eigen::AccessorLevels
Direction	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    enum { Direction = _Direction };$/;"	e	enum:Eigen::Homogeneous::__anon692
DirectionType	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum DirectionType { $/;"	g	namespace:Eigen
DividerHelper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  struct DividerHelper {$/;"	s	namespace:Eigen::internal::__anon66
DividerHelper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  struct DividerHelper<64, T> {$/;"	s	namespace:Eigen::internal::__anon66
DividerTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  struct DividerTraits {$/;"	s	namespace:Eigen::internal::__anon66
DontAlign	tools/eigen/Eigen/src/Core/util/Constants.h	/^  DontAlign = 0x2$/;"	e	enum:Eigen::__anon497
DontAlignCols	tools/eigen/Eigen/src/Core/IO.h	/^enum { DontAlignCols = 1 };$/;"	e	enum:Eigen::__anon377
DoublePacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct DoublePacket$/;"	s	namespace:Eigen::internal
DoublePacketType	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef DoublePacket<RealPacket> DoublePacketType;$/;"	t	class:Eigen::internal::gebp_traits
Dst	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluator::XprType Dst;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
DstAlignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    DstAlignment = DstEvaluator::Alignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon639
DstEvaluatorType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef DstEvaluatorTypeT DstEvaluatorType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstEvaluatorType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
DstEvaluatorType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
DstEvaluatorType	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::DstEvaluatorType DstEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstEvaluatorType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::DstEvaluatorType DstEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstEvaluatorType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
DstFlags	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    DstFlags = DstEvaluator::Flags,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon638
DstHasDirectAccess	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    DstHasDirectAccess = DstFlags & DirectAccessBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon639
DstHasDirectAccess	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      DstHasDirectAccess = Dst::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
DstIndex	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename DstXprType::StorageIndex DstIndex;$/;"	t	struct:Eigen::internal::Assignment
DstIsRowMajor	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    DstIsRowMajor = DstFlags&RowMajorBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon641
DstScalar	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Dst::Scalar DstScalar;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
DstXprType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
DstXprType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
DstXprType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorTypeT::XprType DstXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstXprType	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstXprType	tools/eigen/Eigen/src/Core/Swap.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstXprType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstXprType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
Dynamic	tools/eigen/Eigen/src/Core/util/Constants.h	/^const int Dynamic = -1;$/;"	m	namespace:Eigen
DynamicAsInteger	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    DynamicAsInteger = 10000,$/;"	e	enum:Eigen::internal::promote_index_type::nested_eval::__anon571
DynamicIndex	tools/eigen/Eigen/src/Core/util/Constants.h	/^const int DynamicIndex = 0xffffff;$/;"	m	namespace:Eigen
DynamicSGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroup(DynamicSGroup&& o) : m_numIndices(o.m_numIndices), m_elements(), m_generators(o.m_generators), m_globalFlags(o.m_globalFlags) { std::swap(m_elements, o.m_elements); }$/;"	f	class:Eigen::DynamicSGroup
DynamicSGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroup(const DynamicSGroup& o) : m_numIndices(o.m_numIndices), m_elements(o.m_elements), m_generators(o.m_generators), m_globalFlags(o.m_globalFlags) { }$/;"	f	class:Eigen::DynamicSGroup
DynamicSGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline explicit DynamicSGroup() : m_numIndices(1), m_elements(), m_generators(), m_globalFlags(0) { m_elements.push_back(ge(Generator(0, 0, 0))); }$/;"	f	class:Eigen::DynamicSGroup
DynamicSGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^class DynamicSGroup$/;"	c	namespace:Eigen
DynamicSGroupFromTemplateArgs	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroupFromTemplateArgs() : DynamicSGroup()$/;"	f	class:Eigen::DynamicSGroupFromTemplateArgs
DynamicSGroupFromTemplateArgs	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroupFromTemplateArgs(DynamicSGroupFromTemplateArgs const& other) : DynamicSGroup(other) { }$/;"	f	class:Eigen::DynamicSGroupFromTemplateArgs
DynamicSGroupFromTemplateArgs	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroupFromTemplateArgs(DynamicSGroupFromTemplateArgs&& other) : DynamicSGroup(other) { }$/;"	f	class:Eigen::DynamicSGroupFromTemplateArgs
DynamicSGroupFromTemplateArgs	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^class DynamicSGroupFromTemplateArgs : public DynamicSGroup$/;"	c	namespace:Eigen
DynamicSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED explicit inline DynamicSparseMatrix(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::DynamicSparseMatrix
DynamicSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED inline DynamicSparseMatrix()$/;"	f	class:Eigen::DynamicSparseMatrix
DynamicSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED inline DynamicSparseMatrix(Index rows, Index cols)$/;"	f	class:Eigen::DynamicSparseMatrix
DynamicSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline DynamicSparseMatrix(const DynamicSparseMatrix& other)$/;"	f	class:Eigen::DynamicSparseMatrix
DynamicSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^ class  DynamicSparseMatrix$/;"	c	namespace:Eigen
EIGEN2_INTERFACE_HH	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	19;"	d
EIGEN2_SUPPORT	tools/eigen/test/eigen2support.cpp	10;"	d	file:
EIGEN3_INTERFACE_HH	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	19;"	d
EIGEN_ALIGN16	tools/eigen/Eigen/src/Core/util/Macros.h	657;"	d
EIGEN_ALIGN32	tools/eigen/Eigen/src/Core/util/Macros.h	658;"	d
EIGEN_ALIGN64	tools/eigen/Eigen/src/Core/util/Macros.h	659;"	d
EIGEN_ALIGN8	tools/eigen/Eigen/src/Core/util/Macros.h	656;"	d
EIGEN_ALIGNEDBOX_H	tools/eigen/Eigen/src/Geometry/AlignedBox.h	11;"	d
EIGEN_ALIGNED_ALLOCA	tools/eigen/Eigen/src/Core/util/Memory.h	706;"	d
EIGEN_ALIGNED_ALLOCATOR	tools/eigen/Eigen/src/StlSupport/details.h	15;"	d
EIGEN_ALIGN_MAX	tools/eigen/Eigen/src/Core/util/Macros.h	661;"	d
EIGEN_ALIGN_TO_BOUNDARY	tools/eigen/Eigen/src/Core/util/Macros.h	561;"	d
EIGEN_ALLANDANY_H	tools/eigen/Eigen/src/Core/BooleanRedux.h	11;"	d
EIGEN_ALLOCA	tools/eigen/Eigen/src/Core/util/Memory.h	624;"	d
EIGEN_ALLOCA	tools/eigen/Eigen/src/Core/util/Memory.h	626;"	d
EIGEN_ALWAYS_INLINE	tools/eigen/Eigen/src/Core/util/Macros.h	418;"	d
EIGEN_ALWAYS_INLINE	tools/eigen/Eigen/src/Core/util/Macros.h	420;"	d
EIGEN_AMBIVECTOR_H	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	11;"	d
EIGEN_ANGLEAXIS_H	tools/eigen/Eigen/src/Geometry/AngleAxis.h	11;"	d
EIGEN_APPLE_DOUBLE_NEON_BUG	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	528;"	d
EIGEN_APPLE_DOUBLE_NEON_BUG	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	530;"	d
EIGEN_ARCH_ARM	tools/eigen/Eigen/src/Core/util/Macros.h	151;"	d
EIGEN_ARCH_ARM	tools/eigen/Eigen/src/Core/util/Macros.h	153;"	d
EIGEN_ARCH_ARM64	tools/eigen/Eigen/src/Core/util/Macros.h	158;"	d
EIGEN_ARCH_ARM64	tools/eigen/Eigen/src/Core/util/Macros.h	160;"	d
EIGEN_ARCH_ARM_OR_ARM64	tools/eigen/Eigen/src/Core/util/Macros.h	164;"	d
EIGEN_ARCH_ARM_OR_ARM64	tools/eigen/Eigen/src/Core/util/Macros.h	166;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	22;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	31;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	tools/eigen/Eigen/src/Core/arch/Default/Settings.h	46;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	34;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	22;"	d
EIGEN_ARCH_IA64	tools/eigen/Eigen/src/Core/util/Macros.h	185;"	d
EIGEN_ARCH_IA64	tools/eigen/Eigen/src/Core/util/Macros.h	187;"	d
EIGEN_ARCH_MIPS	tools/eigen/Eigen/src/Core/util/Macros.h	171;"	d
EIGEN_ARCH_MIPS	tools/eigen/Eigen/src/Core/util/Macros.h	173;"	d
EIGEN_ARCH_PPC	tools/eigen/Eigen/src/Core/util/Macros.h	192;"	d
EIGEN_ARCH_PPC	tools/eigen/Eigen/src/Core/util/Macros.h	194;"	d
EIGEN_ARCH_SPARC	tools/eigen/Eigen/src/Core/util/Macros.h	178;"	d
EIGEN_ARCH_SPARC	tools/eigen/Eigen/src/Core/util/Macros.h	180;"	d
EIGEN_ARCH_WANTS_STACK_ALIGNMENT	tools/eigen/Eigen/src/Core/util/Macros.h	626;"	d
EIGEN_ARCH_i386	tools/eigen/Eigen/src/Core/util/Macros.h	138;"	d
EIGEN_ARCH_i386	tools/eigen/Eigen/src/Core/util/Macros.h	140;"	d
EIGEN_ARCH_i386_OR_x86_64	tools/eigen/Eigen/src/Core/util/Macros.h	144;"	d
EIGEN_ARCH_i386_OR_x86_64	tools/eigen/Eigen/src/Core/util/Macros.h	146;"	d
EIGEN_ARCH_x86_64	tools/eigen/Eigen/src/Core/util/Macros.h	132;"	d
EIGEN_ARCH_x86_64	tools/eigen/Eigen/src/Core/util/Macros.h	134;"	d
EIGEN_ARM_PREFETCH	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	66;"	d
EIGEN_ARM_PREFETCH	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	68;"	d
EIGEN_ARM_PREFETCH	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	70;"	d
EIGEN_ARM_PREFETCH	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	73;"	d
EIGEN_ARPACKGENERALIZEDSELFADJOINTEIGENSOLVER_H	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	26;"	d
EIGEN_ARRAYBASE_H	tools/eigen/Eigen/src/Core/ArrayBase.h	11;"	d
EIGEN_ARRAYWRAPPER_H	tools/eigen/Eigen/src/Core/ArrayWrapper.h	11;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_EIGEN_UNARY	tools/eigen/Eigen/src/Core/GlobalFunctions.h	21;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_UNARY	tools/eigen/Eigen/src/Core/GlobalFunctions.h	14;"	d
EIGEN_ARRAY_H	tools/eigen/Eigen/src/Core/Array.h	11;"	d
EIGEN_ASM_COMMENT	tools/eigen/Eigen/src/Core/util/Macros.h	533;"	d
EIGEN_ASSIGNMENT_FUNCTORS_H	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	11;"	d
EIGEN_ASSIGN_EVALUATOR_H	tools/eigen/Eigen/src/Core/AssignEvaluator.h	13;"	d
EIGEN_ASSIGN_H	tools/eigen/Eigen/src/Core/Assign.h	13;"	d
EIGEN_ASSIGN_VML_H	tools/eigen/Eigen/src/Core/Assign_MKL.h	35;"	d
EIGEN_AUTODIFF_DECLARE_GLOBAL_UNARY	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	522;"	d
EIGEN_AUTODIFF_DECLARE_GLOBAL_UNARY	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	624;"	d
EIGEN_AUTODIFF_JACOBIAN_H	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	11;"	d
EIGEN_AUTODIFF_SCALAR_H	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	11;"	d
EIGEN_AUTODIFF_VECTOR_H	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	11;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	311;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	315;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	318;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_STORES	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	312;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_STORES	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	316;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_STORES	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	319;"	d
EIGEN_BANDMATRIX_H	tools/eigen/Eigen/src/Core/BandMatrix.h	11;"	d
EIGEN_BAND_TRIANGULARSOLVER_H	tools/eigen/blas/BandTriangularSolver.h	11;"	d
EIGEN_BASIC_PRECONDITIONERS_H	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	11;"	d
EIGEN_BDCSVD_H	tools/eigen/Eigen/src/SVD/BDCSVD.h	21;"	d
EIGEN_BENCH_BASICBENCH_H	tools/eigen/bench/basicbenchmark.h	3;"	d
EIGEN_BENCH_TIMERR_H	tools/eigen/bench/BenchTimer.h	12;"	d
EIGEN_BENCH_UTIL_H	tools/eigen/bench/BenchUtil.h	3;"	d
EIGEN_BICGSTAB	tools/eigen/bench/spbench/spbenchsolver.h	59;"	d
EIGEN_BICGSTAB_H	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	12;"	d
EIGEN_BICGSTAB_ILUT	tools/eigen/bench/spbench/spbenchsolver.h	60;"	d
EIGEN_BIDIAGONALIZATION_H	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	12;"	d
EIGEN_BINARY_FUNCTORS_H	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	11;"	d
EIGEN_BLASUTIL_H	tools/eigen/Eigen/src/Core/util/BlasUtil.h	11;"	d
EIGEN_BLAS_COMMON_H	tools/eigen/blas/common.h	11;"	d
EIGEN_BLAS_FUNC	tools/eigen/blas/common.h	142;"	d
EIGEN_BLOCK_H	tools/eigen/Eigen/src/Core/Block.h	12;"	d
EIGEN_BLOCK_HOUSEHOLDER_H	tools/eigen/Eigen/src/Householder/BlockHouseholder.h	12;"	d
EIGEN_BROWSE_MATRICES_H	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	12;"	d
EIGEN_BT_UNDEF_NOMINMAX	tools/eigen/bench/BenchTimer.h	178;"	d
EIGEN_BT_UNDEF_NOMINMAX	tools/eigen/bench/BenchTimer.h	17;"	d
EIGEN_BT_UNDEF_WIN32_LEAN_AND_MEAN	tools/eigen/bench/BenchTimer.h	183;"	d
EIGEN_BT_UNDEF_WIN32_LEAN_AND_MEAN	tools/eigen/bench/BenchTimer.h	21;"	d
EIGEN_BVALGORITHMS_H	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	11;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	tools/eigen/Eigen/src/Core/arch/Default/Settings.h	31;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	20;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	18;"	d
EIGEN_CAMERA_H	tools/eigen/demos/opengl/camera.h	11;"	d
EIGEN_CAT	tools/eigen/Eigen/src/Core/util/Macros.h	395;"	d
EIGEN_CAT2	tools/eigen/Eigen/src/Core/util/Macros.h	394;"	d
EIGEN_CATCH	tools/eigen/Eigen/src/Core/util/Macros.h	827;"	d
EIGEN_CG	tools/eigen/bench/spbench/spbenchsolver.h	72;"	d
EIGEN_CG_PRECOND	tools/eigen/bench/spbench/spbenchsolver.h	73;"	d
EIGEN_CHECK_BINARY_COMPATIBILIY	tools/eigen/Eigen/src/Core/util/XprHelper.h	666;"	d
EIGEN_CHOLMODSUPPORT_H	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	11;"	d
EIGEN_CHOLMOD_LDLT	tools/eigen/bench/spbench/spbenchsolver.h	64;"	d
EIGEN_CHOLMOD_SIMPLICIAL_LLT	tools/eigen/bench/spbench/spbenchsolver.h	69;"	d
EIGEN_CHOLMOD_SUPERNODAL_LLT	tools/eigen/bench/spbench/spbenchsolver.h	68;"	d
EIGEN_COLAMD_H	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	52;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_H	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	12;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_MKL_H	tools/eigen/Eigen/src/QR/ColPivHouseholderQR_MKL.h	35;"	d
EIGEN_COMMAINITIALIZER_H	tools/eigen/Eigen/src/Core/CommaInitializer.h	12;"	d
EIGEN_COMPANION_H	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	11;"	d
EIGEN_COMPLEX32_ALTIVEC_H	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	11;"	d
EIGEN_COMPLEX_AVX_H	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	11;"	d
EIGEN_COMPLEX_EIGEN_SOLVER_H	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	13;"	d
EIGEN_COMPLEX_NEON_H	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	11;"	d
EIGEN_COMPLEX_SCHUR_H	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	13;"	d
EIGEN_COMPLEX_SCHUR_MKL_H	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	34;"	d
EIGEN_COMPLEX_SSE_H	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	11;"	d
EIGEN_COMPRESSED_STORAGE_H	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	11;"	d
EIGEN_COMP_ARM	tools/eigen/Eigen/src/Core/util/Macros.h	97;"	d
EIGEN_COMP_ARM	tools/eigen/Eigen/src/Core/util/Macros.h	99;"	d
EIGEN_COMP_CLANG	tools/eigen/Eigen/src/Core/util/Macros.h	33;"	d
EIGEN_COMP_CLANG	tools/eigen/Eigen/src/Core/util/Macros.h	35;"	d
EIGEN_COMP_GNUC	tools/eigen/Eigen/src/Core/util/Macros.h	26;"	d
EIGEN_COMP_GNUC	tools/eigen/Eigen/src/Core/util/Macros.h	28;"	d
EIGEN_COMP_GNUC_STRICT	tools/eigen/Eigen/src/Core/util/Macros.h	105;"	d
EIGEN_COMP_GNUC_STRICT	tools/eigen/Eigen/src/Core/util/Macros.h	107;"	d
EIGEN_COMP_IBM	tools/eigen/Eigen/src/Core/util/Macros.h	83;"	d
EIGEN_COMP_IBM	tools/eigen/Eigen/src/Core/util/Macros.h	85;"	d
EIGEN_COMP_ICC	tools/eigen/Eigen/src/Core/util/Macros.h	48;"	d
EIGEN_COMP_ICC	tools/eigen/Eigen/src/Core/util/Macros.h	50;"	d
EIGEN_COMP_LLVM	tools/eigen/Eigen/src/Core/util/Macros.h	41;"	d
EIGEN_COMP_LLVM	tools/eigen/Eigen/src/Core/util/Macros.h	43;"	d
EIGEN_COMP_MINGW	tools/eigen/Eigen/src/Core/util/Macros.h	55;"	d
EIGEN_COMP_MINGW	tools/eigen/Eigen/src/Core/util/Macros.h	57;"	d
EIGEN_COMP_MSVC	tools/eigen/Eigen/src/Core/util/Macros.h	69;"	d
EIGEN_COMP_MSVC	tools/eigen/Eigen/src/Core/util/Macros.h	71;"	d
EIGEN_COMP_MSVC_STRICT	tools/eigen/Eigen/src/Core/util/Macros.h	76;"	d
EIGEN_COMP_MSVC_STRICT	tools/eigen/Eigen/src/Core/util/Macros.h	78;"	d
EIGEN_COMP_PGI	tools/eigen/Eigen/src/Core/util/Macros.h	90;"	d
EIGEN_COMP_PGI	tools/eigen/Eigen/src/Core/util/Macros.h	92;"	d
EIGEN_COMP_SUNCC	tools/eigen/Eigen/src/Core/util/Macros.h	62;"	d
EIGEN_COMP_SUNCC	tools/eigen/Eigen/src/Core/util/Macros.h	64;"	d
EIGEN_CONJUGATE_GRADIENT_H	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	11;"	d
EIGEN_CONSERVATIVESPARSESPARSEPRODUCT_H	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	11;"	d
EIGEN_CONSTANTS_H	tools/eigen/Eigen/src/Core/util/Constants.h	12;"	d
EIGEN_CONSTEXPR	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	38;"	d
EIGEN_CONSTEXPR	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	40;"	d
EIGEN_CONSTEXPR	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	86;"	d
EIGEN_CONSTRAINEDCG_H	tools/eigen/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	32;"	d
EIGEN_COREEVALUATORS_H	tools/eigen/Eigen/src/Core/CoreEvaluators.h	14;"	d
EIGEN_COREITERATORS_H	tools/eigen/Eigen/src/Core/CoreIterators.h	11;"	d
EIGEN_CPUID	tools/eigen/Eigen/src/Core/util/Memory.h	834;"	d
EIGEN_CPUID	tools/eigen/Eigen/src/Core/util/Memory.h	839;"	d
EIGEN_CPUID	tools/eigen/Eigen/src/Core/util/Memory.h	843;"	d
EIGEN_CPUID	tools/eigen/Eigen/src/Core/util/Memory.h	848;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/Core/ArrayBase.h	102;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/Core/ArrayBase.h	92;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/Core/DenseBase.h	571;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/Core/DenseBase.h	576;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/Core/MatrixBase.h	125;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/Core/MatrixBase.h	133;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	139;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	148;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	149;"	d
EIGEN_CWISE_BINARY_OP_H	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	12;"	d
EIGEN_CWISE_NULLARY_OP_H	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	11;"	d
EIGEN_CWISE_PRODUCT_RETURN_TYPE	tools/eigen/Eigen/src/Core/util/Macros.h	813;"	d
EIGEN_CWISE_UNARY_OP_H	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	12;"	d
EIGEN_CWISE_UNARY_VIEW_H	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	11;"	d
EIGEN_CXX11META_H	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	11;"	d
EIGEN_CXX11WORKAROUNDS_H	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	11;"	d
EIGEN_CXX11_TENSORSYMMETRY_DYNAMICSYMMETRY_H	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	11;"	d
EIGEN_CXX11_TENSORSYMMETRY_STATICSYMMETRY_H	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	11;"	d
EIGEN_CXX11_TENSORSYMMETRY_SYMMETRY_H	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	11;"	d
EIGEN_CXX11_TENSORSYMMETRY_TEMPLATEGROUPTHEORY_H	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	11;"	d
EIGEN_CXX11_TENSOR_TENSORSTORAGE_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	12;"	d
EIGEN_CXX11_TENSOR_TENSOR_ARG_MAX_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	12;"	d
EIGEN_CXX11_TENSOR_TENSOR_ASSIGN_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_BASE_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_BROADCASTING_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_CHIPPING_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_CONCATENATION_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_CONTRACTION_CUDA_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	13;"	d
EIGEN_CXX11_TENSOR_TENSOR_CONTRACTION_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_CONTRACTION_THREAD_POOL_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_CONVERSION_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_CONVOLUTION_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_CUSTOM_OP_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_DEVICE_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_DEVICE_TYPE_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_DIMENSIONS_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_DIMENSION_LIST_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_EVALUATOR_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_EVAL_TO_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_EXECUTOR_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_EXPR_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_FIXED_SIZE_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_FORCED_EVAL_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_FORWARD_DECLARATIONS_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_FUNCTORS_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_GENERATOR_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	12;"	d
EIGEN_CXX11_TENSOR_TENSOR_IMAGE_PATCH_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_INDEX_LIST_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_INFLATION_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_INITIALIZER_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_INTDIV_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_IO_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIO.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_LAYOUT_SWAP_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_MAP_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_META_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_MORPHING_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_PADDING_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_PATCH_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_REDUCTION_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_REF_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_REVERSE_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	12;"	d
EIGEN_CXX11_TENSOR_TENSOR_SHUFFLING_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_STRIDING_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_TRAITS_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	11;"	d
EIGEN_CXX11_TENSOR_TENSOR_VOLUME_PATCH_H	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	5;"	d
EIGEN_DBG_SKYLINE	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	16;"	d
EIGEN_DBG_SPARSE	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	16;"	d
EIGEN_DEBUG_ALIGNED_LOAD	tools/eigen/Eigen/src/Core/GenericPacketMath.h	27;"	d
EIGEN_DEBUG_ALIGNED_LOAD	tools/eigen/test/unalignedcount.cpp	15;"	d	file:
EIGEN_DEBUG_ALIGNED_STORE	tools/eigen/Eigen/src/Core/GenericPacketMath.h	35;"	d
EIGEN_DEBUG_ALIGNED_STORE	tools/eigen/test/unalignedcount.cpp	17;"	d	file:
EIGEN_DEBUG_ASSIGN	tools/eigen/test/vectorization_logic.cpp	10;"	d	file:
EIGEN_DEBUG_SMALL_PRODUCT_BLOCKS	tools/eigen/test/main.h	69;"	d
EIGEN_DEBUG_UNALIGNED_LOAD	tools/eigen/Eigen/src/Core/GenericPacketMath.h	31;"	d
EIGEN_DEBUG_UNALIGNED_LOAD	tools/eigen/test/unalignedcount.cpp	16;"	d	file:
EIGEN_DEBUG_UNALIGNED_STORE	tools/eigen/Eigen/src/Core/GenericPacketMath.h	39;"	d
EIGEN_DEBUG_UNALIGNED_STORE	tools/eigen/test/unalignedcount.cpp	18;"	d	file:
EIGEN_DEBUG_VAR	tools/eigen/Eigen/src/Core/util/Macros.h	391;"	d
EIGEN_DECLARE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	tools/eigen/Eigen/src/Core/util/Macros.h	441;"	d
EIGEN_DEFAULT_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	683;"	d
EIGEN_DEFAULT_DENSE_INDEX_TYPE	tools/eigen/Eigen/src/Core/util/Macros.h	320;"	d
EIGEN_DEFAULT_DENSE_INDEX_TYPE	tools/eigen/bench/tensors/tensor_benchmarks.h	5;"	d
EIGEN_DEFAULT_DENSE_INDEX_TYPE	tools/eigen/unsupported/test/cxx11_tensor_contract_cuda.cpp	14;"	d	file:
EIGEN_DEFAULT_DENSE_INDEX_TYPE	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	15;"	d	file:
EIGEN_DEFAULT_DENSE_INDEX_TYPE	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	13;"	d	file:
EIGEN_DEFAULT_DENSE_INDEX_TYPE	tools/eigen/unsupported/test/cxx11_tensor_random_cuda.cpp	13;"	d	file:
EIGEN_DEFAULT_IO_FORMAT	tools/eigen/Eigen/src/Core/util/Macros.h	707;"	d
EIGEN_DEFAULT_IO_FORMAT	tools/eigen/test/main.h	135;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	tools/eigen/Eigen/src/Core/util/Macros.h	314;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	tools/eigen/Eigen/src/Core/util/Macros.h	316;"	d
EIGEN_DEFAULT_SETTINGS_H	tools/eigen/Eigen/src/Core/arch/Default/Settings.h	17;"	d
EIGEN_DEFAULT_TO_ROW_MAJOR	tools/eigen/test/ref.cpp	12;"	d	file:
EIGEN_DEFAULT_TO_ROW_MAJOR	tools/eigen/test/sparse_ref.cpp	12;"	d	file:
EIGEN_DEFAULT_TO_ROW_MAJOR	tools/eigen/test/sparselu.cpp	31;"	d	file:
EIGEN_DEFINE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	tools/eigen/Eigen/src/Core/util/Macros.h	442;"	d
EIGEN_DEFINE_STL_DEQUE_SPECIALIZATION	tools/eigen/Eigen/src/StlSupport/StdDeque.h	28;"	d
EIGEN_DEFINE_STL_LIST_SPECIALIZATION	tools/eigen/Eigen/src/StlSupport/StdList.h	27;"	d
EIGEN_DEFINE_STL_VECTOR_SPECIALIZATION	tools/eigen/Eigen/src/StlSupport/StdVector.h	21;"	d
EIGEN_DENSEBASE_H	tools/eigen/Eigen/src/Core/DenseBase.h	12;"	d
EIGEN_DENSECOEFFSBASE_H	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	11;"	d
EIGEN_DENSESTORAGEBASE_H	tools/eigen/Eigen/src/Core/PlainObjectBase.h	12;"	d
EIGEN_DENSE_PUBLIC_INTERFACE	tools/eigen/Eigen/src/Core/util/Macros.h	767;"	d
EIGEN_DENSE_STORAGE_CTOR_PLUGIN	tools/eigen/test/main.h	84;"	d
EIGEN_DEPRECATED	tools/eigen/Eigen/src/Core/util/Macros.h	507;"	d
EIGEN_DETERMINANT_H	tools/eigen/Eigen/src/LU/Determinant.h	11;"	d
EIGEN_DGMRES_H	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	11;"	d
EIGEN_DIAGONALMATRIX_H	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	12;"	d
EIGEN_DIAGONALPRODUCT_H	tools/eigen/Eigen/src/Core/DiagonalProduct.h	12;"	d
EIGEN_DIAGONAL_H	tools/eigen/Eigen/src/Core/Diagonal.h	12;"	d
EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT	tools/eigen/Eigen/src/Core/util/Macros.h	646;"	d
EIGEN_DONT_ALIGN	tools/eigen/test/dontalign.cpp	11;"	d	file:
EIGEN_DONT_ALIGN_STATICALLY	tools/eigen/test/dontalign.cpp	13;"	d	file:
EIGEN_DONT_INLINE	tools/eigen/Eigen/src/Core/util/Macros.h	424;"	d
EIGEN_DONT_INLINE	tools/eigen/Eigen/src/Core/util/Macros.h	426;"	d
EIGEN_DONT_INLINE	tools/eigen/Eigen/src/Core/util/Macros.h	428;"	d
EIGEN_DOT_H	tools/eigen/Eigen/src/Core/Dot.h	11;"	d
EIGEN_DYNAMIC_SPARSEMATRIX_H	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	11;"	d
EIGEN_EIGENBASE_H	tools/eigen/Eigen/src/Core/EigenBase.h	12;"	d
EIGEN_EIGENSOLVER_H	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	12;"	d
EIGEN_EMPTY	tools/eigen/Eigen/src/Core/util/Macros.h	714;"	d
EIGEN_EMPTY_STRUCT_CTOR	tools/eigen/Eigen/src/Core/util/XprHelper.h	18;"	d
EIGEN_EMPTY_STRUCT_CTOR	tools/eigen/Eigen/src/Core/util/XprHelper.h	22;"	d
EIGEN_EMULATE_CXX11_META_H	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	11;"	d
EIGEN_EULERANGLES_H	tools/eigen/Eigen/src/Geometry/EulerAngles.h	11;"	d
EIGEN_EXCEPTIONS	tools/eigen/test/main.h	138;"	d
EIGEN_EXPLICIT_STL_DEQUE_INSTANTIATION	tools/eigen/Eigen/src/StlSupport/StdDeque.h	18;"	d
EIGEN_EXPLICIT_STL_DEQUE_INSTANTIATION	tools/eigen/Eigen/src/StlSupport/StdDeque.h	20;"	d
EIGEN_EXPLICIT_STL_LIST_INSTANTIATION	tools/eigen/Eigen/src/StlSupport/StdList.h	17;"	d
EIGEN_EXPLICIT_STL_LIST_INSTANTIATION	tools/eigen/Eigen/src/StlSupport/StdList.h	19;"	d
EIGEN_FAST_MATH	tools/eigen/Eigen/src/Core/util/Macros.h	388;"	d
EIGEN_FORCEALIGNEDACCESS_H	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	11;"	d
EIGEN_FORWARDDECLARATIONS_H	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	12;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	tools/eigen/Eigen/src/Core/util/Memory.h	46;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	tools/eigen/Eigen/src/Core/util/Memory.h	48;"	d
EIGEN_FULLPIVOTINGHOUSEHOLDERQR_H	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	12;"	d
EIGEN_FUZZY_H	tools/eigen/Eigen/src/Core/Fuzzy.h	12;"	d
EIGEN_GCC3_OR_OLDER	tools/eigen/Eigen/src/Core/util/Macros.h	123;"	d
EIGEN_GCC3_OR_OLDER	tools/eigen/Eigen/src/Core/util/Macros.h	125;"	d
EIGEN_GCC_AND_ARCH_DOESNT_WANT_STACK_ALIGNMENT	tools/eigen/Eigen/src/Core/util/Macros.h	616;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1200;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1237;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1304;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1346;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1405;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1440;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1496;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1533;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1575;"	d
EIGEN_GEBGP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1608;"	d
EIGEN_GEBP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1070;"	d
EIGEN_GEBP_ONESTEP	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1123;"	d
EIGEN_GENERALIZEDEIGENSOLVER_H	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	12;"	d
EIGEN_GENERALIZEDSELFADJOINTEIGENSOLVER_H	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	12;"	d
EIGEN_GENERAL_BLOCK_PANEL_H	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_H	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_MKL_H	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	34;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_H	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_MKL_H	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	34;"	d
EIGEN_GENERAL_MATRIX_VECTOR_H	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	11;"	d
EIGEN_GENERAL_MATRIX_VECTOR_MKL_H	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	34;"	d
EIGEN_GENERAL_PRODUCT_H	tools/eigen/Eigen/src/Core/GeneralProduct.h	12;"	d
EIGEN_GENERAL_RANK1UPDATE_H	tools/eigen/blas/GeneralRank1Update.h	11;"	d
EIGEN_GENERIC_PACKET_MATH_H	tools/eigen/Eigen/src/Core/GenericPacketMath.h	12;"	d
EIGEN_GENERIC_PUBLIC_INTERFACE	tools/eigen/Eigen/src/Core/util/Macros.h	752;"	d
EIGEN_GEOMETRY_SSE_H	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	12;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	tools/eigen/Eigen/src/Core/util/Memory.h	36;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	tools/eigen/Eigen/src/Core/util/Memory.h	38;"	d
EIGEN_GLOBAL_FUNCTIONS_H	tools/eigen/Eigen/src/Core/GlobalFunctions.h	12;"	d
EIGEN_GMRES	tools/eigen/bench/spbench/spbenchsolver.h	61;"	d
EIGEN_GMRES_H	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	12;"	d
EIGEN_GMRES_ILUT	tools/eigen/bench/spbench/spbenchsolver.h	62;"	d
EIGEN_GNUC_AT	tools/eigen/Eigen/src/Core/util/Macros.h	114;"	d
EIGEN_GNUC_AT	tools/eigen/Eigen/src/Core/util/Macros.h	118;"	d
EIGEN_GNUC_AT_LEAST	tools/eigen/Eigen/src/Core/util/Macros.h	112;"	d
EIGEN_GNUC_AT_LEAST	tools/eigen/Eigen/src/Core/util/Macros.h	116;"	d
EIGEN_GNUC_AT_MOST	tools/eigen/Eigen/src/Core/util/Macros.h	113;"	d
EIGEN_GNUC_AT_MOST	tools/eigen/Eigen/src/Core/util/Macros.h	117;"	d
EIGEN_GOOGLEHASH_SUPPORT	tools/eigen/bench/sparse_setter.cpp	27;"	d	file:
EIGEN_GPUHELPER_H	tools/eigen/demos/opengl/gpuhelper.h	11;"	d
EIGEN_HAS_BUILTIN	tools/eigen/Eigen/src/Core/util/Macros.h	325;"	d
EIGEN_HAS_BUILTIN	tools/eigen/Eigen/src/Core/util/Macros.h	327;"	d
EIGEN_HAS_CONSTEXPR	tools/eigen/Eigen/src/Core/util/Macros.h	359;"	d
EIGEN_HAS_CXX11_CONTAINERS	tools/eigen/Eigen/src/Core/util/Macros.h	376;"	d
EIGEN_HAS_CXX11_CONTAINERS	tools/eigen/Eigen/src/Core/util/Macros.h	378;"	d
EIGEN_HAS_CXX11_MATH	tools/eigen/Eigen/src/Core/util/Macros.h	367;"	d
EIGEN_HAS_CXX11_MATH	tools/eigen/Eigen/src/Core/util/Macros.h	369;"	d
EIGEN_HAS_INDEX_LIST	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	15;"	d
EIGEN_HAS_MM_MALLOC	tools/eigen/Eigen/src/Core/util/Memory.h	79;"	d
EIGEN_HAS_MM_MALLOC	tools/eigen/Eigen/src/Core/util/Memory.h	81;"	d
EIGEN_HAS_POSIX_MEMALIGN	tools/eigen/Eigen/src/Core/util/Memory.h	69;"	d
EIGEN_HAS_POSIX_MEMALIGN	tools/eigen/Eigen/src/Core/util/Memory.h	74;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_CJMADD	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	26;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_CJMADD	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	28;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	27;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	22;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	24;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	27;"	d
EIGEN_HAS_STD_RESULT_OF	tools/eigen/Eigen/src/Core/util/Macros.h	346;"	d
EIGEN_HAS_VARIADIC_TEMPLATES	tools/eigen/Eigen/src/Core/util/Macros.h	351;"	d
EIGEN_HAVE_RVALUE_REFERENCES	tools/eigen/Eigen/src/Core/util/Macros.h	341;"	d
EIGEN_HESSENBERGDECOMPOSITION_H	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	12;"	d
EIGEN_HOMOGENEOUS_H	tools/eigen/Eigen/src/Geometry/Homogeneous.h	11;"	d
EIGEN_HOUSEHOLDER_H	tools/eigen/Eigen/src/Householder/Householder.h	12;"	d
EIGEN_HOUSEHOLDER_SEQUENCE_H	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	12;"	d
EIGEN_HYBRIDNONLINEARSOLVER_H	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	14;"	d
EIGEN_HYPERPLANE_H	tools/eigen/Eigen/src/Geometry/Hyperplane.h	12;"	d
EIGEN_ICOSPHERE_H	tools/eigen/demos/opengl/icosphere.h	11;"	d
EIGEN_IDEAL_MAX_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	575;"	d
EIGEN_IMPLIES	tools/eigen/Eigen/src/Core/util/Macros.h	802;"	d
EIGEN_INCOMPLETE_CHOlESKY_H	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	11;"	d
EIGEN_INCOMPLETE_LUT_H	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	12;"	d
EIGEN_INCOMPLETE_LU_H	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	11;"	d
EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR	tools/eigen/Eigen/src/Core/util/Macros.h	717;"	d
EIGEN_INHERIT_ASSIGNMENT_OPERATORS	tools/eigen/Eigen/src/Core/util/Macros.h	740;"	d
EIGEN_INITIALIZE_COEFFS	tools/eigen/Eigen/src/Core/PlainObjectBase.h	15;"	d
EIGEN_INITIALIZE_COEFFS	tools/eigen/Eigen/src/Core/PlainObjectBase.h	18;"	d
EIGEN_INITIALIZE_COEFFS	tools/eigen/Eigen/src/Core/PlainObjectBase.h	21;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	tools/eigen/Eigen/src/Core/PlainObjectBase.h	16;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	tools/eigen/Eigen/src/Core/PlainObjectBase.h	19;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	tools/eigen/Eigen/src/Core/PlainObjectBase.h	22;"	d
EIGEN_INITIALIZE_MATRICES_BY_ZERO	tools/eigen/test/mixingtypes.cpp	12;"	d	file:
EIGEN_INIT_NEON_PACKET2	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	54;"	d
EIGEN_INIT_NEON_PACKET2	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	58;"	d
EIGEN_INIT_NEON_PACKET4	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	55;"	d
EIGEN_INIT_NEON_PACKET4	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	59;"	d
EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
EIGEN_INTERNAL_DEBUGGING	tools/eigen/test/main.h	251;"	d
EIGEN_INTERNAL_DEBUG_CACHE_QUERY	tools/eigen/bench/check_cache_queries.cpp	2;"	d	file:
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	tools/eigen/Eigen/src/Core/DenseStorage.h	16;"	d
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	tools/eigen/Eigen/src/Core/DenseStorage.h	18;"	d
EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
EIGEN_INTERNAL_TENSOR_STORAGE_CTOR_PLUGIN	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	15;"	d
EIGEN_INTERNAL_TENSOR_STORAGE_CTOR_PLUGIN	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	17;"	d
EIGEN_INVERSE_H	tools/eigen/Eigen/src/Core/Inverse.h	11;"	d
EIGEN_INVERSE_IMPL_H	tools/eigen/Eigen/src/LU/InverseImpl.h	12;"	d
EIGEN_INVERSE_SSE_H	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	28;"	d
EIGEN_IO_H	tools/eigen/Eigen/src/Core/IO.h	12;"	d
EIGEN_ITERATION_CONTROLLER_H	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	59;"	d
EIGEN_ITERATIVE_SOLVER_BASE_H	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	11;"	d
EIGEN_ITERSCALING_H	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	11;"	d
EIGEN_JACOBISVD_H	tools/eigen/Eigen/src/SVD/JacobiSVD.h	12;"	d
EIGEN_JACOBISVD_MKL_H	tools/eigen/Eigen/src/SVD/JacobiSVD_MKL.h	34;"	d
EIGEN_JACOBI_H	tools/eigen/Eigen/src/Jacobi/Jacobi.h	12;"	d
EIGEN_LAPACK_ARG_IF_COMPLEX	tools/eigen/lapack/lapack_common.h	22;"	d
EIGEN_LAPACK_ARG_IF_COMPLEX	tools/eigen/lapack/lapack_common.h	24;"	d
EIGEN_LAPACK_COMMON_H	tools/eigen/lapack/lapack_common.h	11;"	d
EIGEN_LAPACK_FUNC	tools/eigen/lapack/cholesky.cpp	/^EIGEN_LAPACK_FUNC(potrf,(char* uplo, int *n, RealScalar *pa, int *lda, int *info))$/;"	f
EIGEN_LAPACK_FUNC	tools/eigen/lapack/cholesky.cpp	/^EIGEN_LAPACK_FUNC(potrs,(char* uplo, int *n, int *nrhs, RealScalar *pa, int *lda, RealScalar *pb, int *ldb, int *info))$/;"	f
EIGEN_LAPACK_FUNC	tools/eigen/lapack/eigenvalues.cpp	/^EIGEN_LAPACK_FUNC(syev,(char *jobz, char *uplo, int* n, Scalar* a, int *lda, Scalar* w, Scalar* \/*work*\/, int* lwork, int *info))$/;"	f
EIGEN_LAPACK_FUNC	tools/eigen/lapack/lapack_common.h	15;"	d
EIGEN_LAPACK_FUNC	tools/eigen/lapack/lu.cpp	/^EIGEN_LAPACK_FUNC(getrf,(int *m, int *n, RealScalar *pa, int *lda, int *ipiv, int *info))$/;"	f
EIGEN_LAPACK_FUNC	tools/eigen/lapack/lu.cpp	/^EIGEN_LAPACK_FUNC(getrs,(char *trans, int *n, int *nrhs, RealScalar *pa, int *lda, int *ipiv, RealScalar *pb, int *ldb, int *info))$/;"	f
EIGEN_LAPACK_FUNC	tools/eigen/lapack/svd.cpp	/^EIGEN_LAPACK_FUNC(gesdd,(char *jobz, int *m, int* n, Scalar* a, int *lda, RealScalar *s, Scalar *u, int *ldu, Scalar *vt, int *ldvt, Scalar* \/*work*\/, int* lwork,$/;"	f
EIGEN_LAPACK_FUNC	tools/eigen/lapack/svd.cpp	/^EIGEN_LAPACK_FUNC(gesvd,(char *jobu, char *jobv, int *m, int* n, Scalar* a, int *lda, RealScalar *s, Scalar *u, int *ldu, Scalar *vt, int *ldvt, Scalar* \/*work*\/, int* lwork,$/;"	f
EIGEN_LDLT_H	tools/eigen/Eigen/src/Cholesky/LDLT.h	14;"	d
EIGEN_LEAST_SQUARE_CONJUGATE_GRADIENT_H	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	11;"	d
EIGEN_LEVENBERGMARQUARDT_H	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	20;"	d
EIGEN_LEVENBERGMARQUARDT__H	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	14;"	d
EIGEN_LLT_H	tools/eigen/Eigen/src/Cholesky/LLT.h	11;"	d
EIGEN_LLT_MKL_H	tools/eigen/Eigen/src/Cholesky/LLT_MKL.h	34;"	d
EIGEN_LMCOVAR_H	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMcovar.h	13;"	d
EIGEN_LMONESTEP_H	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMonestep.h	15;"	d
EIGEN_LMPAR_H	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMpar.h	13;"	d
EIGEN_LMQRSOLV_H	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMqrsolv.h	16;"	d
EIGEN_LOGICAL_XOR	tools/eigen/Eigen/src/Core/util/Macros.h	800;"	d
EIGEN_LU_H	tools/eigen/Eigen/src/LU/FullPivLU.h	11;"	d
EIGEN_LU_STRUCTS	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	70;"	d
EIGEN_MACROS_H	tools/eigen/Eigen/src/Core/util/Macros.h	12;"	d
EIGEN_MAJOR_VERSION	tools/eigen/Eigen/src/Core/util/Macros.h	15;"	d
EIGEN_MAKESTRING	tools/eigen/Eigen/src/Core/util/Macros.h	399;"	d
EIGEN_MAKESTRING2	tools/eigen/Eigen/src/Core/util/Macros.h	398;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	tools/eigen/Eigen/src/Core/util/Memory.h	767;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF	tools/eigen/Eigen/src/Core/util/Memory.h	739;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF_VECTORIZABLE_FIXED_SIZE	tools/eigen/Eigen/src/Core/util/Memory.h	768;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_NOTHROW	tools/eigen/Eigen/src/Core/util/Memory.h	734;"	d
EIGEN_MAKE_ARRAY_FIXED_TYPEDEFS	tools/eigen/Eigen/src/Core/Array.h	279;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	tools/eigen/Eigen/src/Core/Array.h	273;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	tools/eigen/Eigen/src/Core/Array.h	301;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	tools/eigen/Eigen/src/Core/Array.h	285;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	tools/eigen/Eigen/src/Core/Array.h	300;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_LARGE	tools/eigen/Eigen/src/Core/Array.h	303;"	d
EIGEN_MAKE_CWISE_BINARY_OP	tools/eigen/Eigen/src/Core/util/Macros.h	804;"	d
EIGEN_MAKE_CWISE_COMP_OP	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	198;"	d
EIGEN_MAKE_CWISE_COMP_OP	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	96;"	d
EIGEN_MAKE_CWISE_COMP_R_OP	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	114;"	d
EIGEN_MAKE_CWISE_COMP_R_OP	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	199;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	tools/eigen/Eigen/src/Core/Matrix.h	434;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	tools/eigen/Eigen/src/Core/Matrix.h	457;"	d
EIGEN_MAKE_IMAGE_HELPERS	tools/eigen/Eigen/src/misc/Image.h	67;"	d
EIGEN_MAKE_KERNEL_HELPERS	tools/eigen/Eigen/src/misc/Kernel.h	66;"	d
EIGEN_MAKE_TYPEDEFS	tools/eigen/Eigen/src/Core/Matrix.h	426;"	d
EIGEN_MAKE_TYPEDEFS	tools/eigen/Eigen/src/Core/Matrix.h	456;"	d
EIGEN_MAKE_TYPEDEFS	tools/eigen/Eigen/src/Geometry/AlignedBox.h	372;"	d
EIGEN_MAKE_TYPEDEFS	tools/eigen/Eigen/src/Geometry/AlignedBox.h	388;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	tools/eigen/Eigen/src/Core/Matrix.h	440;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	tools/eigen/Eigen/src/Core/Matrix.h	455;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	tools/eigen/Eigen/src/Geometry/AlignedBox.h	376;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	tools/eigen/Eigen/src/Geometry/AlignedBox.h	387;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	tools/eigen/Eigen/src/Core/DenseStorage.h	62;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	tools/eigen/Eigen/src/Core/DenseStorage.h	69;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	tools/eigen/Eigen/src/Core/DenseStorage.h	75;"	d
EIGEN_MAKING_DOCS	tools/eigen/test/main.h	109;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	tools/eigen/Eigen/src/Core/util/Memory.h	55;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	tools/eigen/Eigen/src/Core/util/Memory.h	57;"	d
EIGEN_MAPBASE_H	tools/eigen/Eigen/src/Core/MapBase.h	12;"	d
EIGEN_MAPPED_SPARSEMATRIX_H	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	11;"	d
EIGEN_MAP_H	tools/eigen/Eigen/src/Core/Map.h	12;"	d
EIGEN_MATHFUNCTIONS_H	tools/eigen/Eigen/src/Core/MathFunctions.h	11;"	d
EIGEN_MATHFUNC_IMPL	tools/eigen/Eigen/src/Core/MathFunctions.h	66;"	d
EIGEN_MATHFUNC_RETVAL	tools/eigen/Eigen/src/Core/MathFunctions.h	67;"	d
EIGEN_MATH_FUNCTIONS_ALTIVEC_H	tools/eigen/Eigen/src/Core/arch/AltiVec/MathFunctions.h	16;"	d
EIGEN_MATH_FUNCTIONS_AVX_H	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	11;"	d
EIGEN_MATH_FUNCTIONS_CUDA_H	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	11;"	d
EIGEN_MATH_FUNCTIONS_NEON_H	tools/eigen/Eigen/src/Core/arch/NEON/MathFunctions.h	13;"	d
EIGEN_MATH_FUNCTIONS_SSE_H	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	16;"	d
EIGEN_MATRIXBASEEIGENVALUES_H	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	12;"	d
EIGEN_MATRIXBASE_H	tools/eigen/Eigen/src/Core/MatrixBase.h	12;"	d
EIGEN_MATRIXSTORAGE_H	tools/eigen/Eigen/src/Core/DenseStorage.h	13;"	d
EIGEN_MATRIX_EXPONENTIAL	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	12;"	d
EIGEN_MATRIX_FUNCTION	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	11;"	d
EIGEN_MATRIX_H	tools/eigen/Eigen/src/Core/Matrix.h	12;"	d
EIGEN_MATRIX_LOGARITHM	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	12;"	d
EIGEN_MATRIX_POWER	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	11;"	d
EIGEN_MATRIX_SQUARE_ROOT	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	11;"	d
EIGEN_MAX_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	675;"	d
EIGEN_MAX_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	677;"	d
EIGEN_MAX_ALIGN_BYTES	tools/eigen/test/unalignedassert.cpp	15;"	d	file:
EIGEN_MAX_ALIGN_BYTES	tools/eigen/test/unalignedassert.cpp	18;"	d	file:
EIGEN_MAX_ALIGN_BYTES	tools/eigen/test/unalignedassert.cpp	21;"	d	file:
EIGEN_MAX_STATIC_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	599;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	601;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	632;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	641;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	642;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	tools/eigen/test/unalignedassert.cpp	14;"	d	file:
EIGEN_MAX_STATIC_ALIGN_BYTES	tools/eigen/test/unalignedassert.cpp	17;"	d	file:
EIGEN_MAX_STATIC_ALIGN_BYTES	tools/eigen/test/unalignedassert.cpp	20;"	d	file:
EIGEN_MEMBER_FUNCTOR	tools/eigen/Eigen/src/Core/VectorwiseOp.h	98;"	d
EIGEN_MEMORY_H	tools/eigen/Eigen/src/Core/util/Memory.h	21;"	d
EIGEN_META_H	tools/eigen/Eigen/src/Core/util/Meta.h	12;"	d
EIGEN_MINOR_VERSION	tools/eigen/Eigen/src/Core/util/Macros.h	16;"	d
EIGEN_MINRES_H_	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	13;"	d
EIGEN_MIN_ALIGN_BYTES	tools/eigen/Eigen/src/Core/util/Macros.h	585;"	d
EIGEN_MISC_IMAGE_H	tools/eigen/Eigen/src/misc/Image.h	11;"	d
EIGEN_MISC_KERNEL_H	tools/eigen/Eigen/src/misc/Kernel.h	11;"	d
EIGEN_MKL_DOMAIN_ALL	tools/eigen/Eigen/src/Core/util/MKL_support.h	82;"	d
EIGEN_MKL_DOMAIN_ALL	tools/eigen/Eigen/src/Core/util/MKL_support.h	84;"	d
EIGEN_MKL_DOMAIN_BLAS	tools/eigen/Eigen/src/Core/util/MKL_support.h	88;"	d
EIGEN_MKL_DOMAIN_BLAS	tools/eigen/Eigen/src/Core/util/MKL_support.h	90;"	d
EIGEN_MKL_DOMAIN_FFT	tools/eigen/Eigen/src/Core/util/MKL_support.h	94;"	d
EIGEN_MKL_DOMAIN_FFT	tools/eigen/Eigen/src/Core/util/MKL_support.h	96;"	d
EIGEN_MKL_DOMAIN_PARDISO	tools/eigen/Eigen/src/Core/util/MKL_support.h	106;"	d
EIGEN_MKL_DOMAIN_PARDISO	tools/eigen/Eigen/src/Core/util/MKL_support.h	108;"	d
EIGEN_MKL_DOMAIN_VML	tools/eigen/Eigen/src/Core/util/MKL_support.h	100;"	d
EIGEN_MKL_DOMAIN_VML	tools/eigen/Eigen/src/Core/util/MKL_support.h	102;"	d
EIGEN_MKL_EIG_SELFADJ	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	42;"	d
EIGEN_MKL_GEMV_SPECIALIZATION	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	88;"	d
EIGEN_MKL_GEMV_SPECIALIZE	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	52;"	d
EIGEN_MKL_HEMM_L	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	95;"	d
EIGEN_MKL_HEMM_R	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	221;"	d
EIGEN_MKL_LLT	tools/eigen/Eigen/src/Cholesky/LLT_MKL.h	45;"	d
EIGEN_MKL_LU_PARTPIV	tools/eigen/Eigen/src/LU/PartialPivLU_MKL.h	44;"	d
EIGEN_MKL_QR_COLPIV	tools/eigen/Eigen/src/QR/ColPivHouseholderQR_MKL.h	43;"	d
EIGEN_MKL_QR_NOPIV	tools/eigen/Eigen/src/QR/HouseholderQR_MKL.h	45;"	d
EIGEN_MKL_RANKUPDATE_C	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	99;"	d
EIGEN_MKL_RANKUPDATE_R	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	74;"	d
EIGEN_MKL_RANKUPDATE_SPECIALIZE	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	47;"	d
EIGEN_MKL_SCHUR_COMPLEX	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	42;"	d
EIGEN_MKL_SCHUR_REAL	tools/eigen/Eigen/src/Eigenvalues/RealSchur_MKL.h	42;"	d
EIGEN_MKL_SUPPORT_H	tools/eigen/Eigen/src/Core/util/MKL_support.h	34;"	d
EIGEN_MKL_SVD	tools/eigen/Eigen/src/SVD/JacobiSVD_MKL.h	42;"	d
EIGEN_MKL_SYMM_L	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	43;"	d
EIGEN_MKL_SYMM_R	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	170;"	d
EIGEN_MKL_SYMV_SPECIALIZATION	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	74;"	d
EIGEN_MKL_SYMV_SPECIALIZE	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	50;"	d
EIGEN_MKL_TRMM_L	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	78;"	d
EIGEN_MKL_TRMM_R	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	192;"	d
EIGEN_MKL_TRMM_SPECIALIZE	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	53;"	d
EIGEN_MKL_TRMV_CM	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	74;"	d
EIGEN_MKL_TRMV_RM	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	158;"	d
EIGEN_MKL_TRMV_SPECIALIZE	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	50;"	d
EIGEN_MKL_TRSM_L	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	41;"	d
EIGEN_MKL_TRSM_R	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	96;"	d
EIGEN_MKL_VML_DECLARE_POW_CALL	tools/eigen/Eigen/src/Core/Assign_MKL.h	140;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALL	tools/eigen/Eigen/src/Core/Assign_MKL.h	82;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS	tools/eigen/Eigen/src/Core/Assign_MKL.h	114;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_CPLX	tools/eigen/Eigen/src/Core/Assign_MKL.h	110;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_REAL	tools/eigen/Eigen/src/Core/Assign_MKL.h	106;"	d
EIGEN_MKL_VML_THRESHOLD	tools/eigen/Eigen/src/Core/util/MKL_support.h	77;"	d
EIGEN_MOREVECTORIZATION_MATHFUNCTIONS_H	tools/eigen/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	12;"	d
EIGEN_NESTBYVALUE_H	tools/eigen/Eigen/src/Core/NestByValue.h	12;"	d
EIGEN_NOALIAS_H	tools/eigen/Eigen/src/Core/NoAlias.h	11;"	d
EIGEN_NOT_A_MACRO	tools/eigen/Eigen/src/Core/util/Macros.h	311;"	d
EIGEN_NO_ASSERTION_CHECKING	tools/eigen/test/cholesky.cpp	11;"	d	file:
EIGEN_NO_DEBUG	tools/eigen/Eigen/src/Core/util/Macros.h	446;"	d
EIGEN_NO_DEBUG_SMALL_PRODUCT_BLOCKS	tools/eigen/test/cholmod_support.cpp	10;"	d	file:
EIGEN_NO_DEBUG_SMALL_PRODUCT_BLOCKS	tools/eigen/test/pastix_support.cpp	11;"	d	file:
EIGEN_NO_DEBUG_SMALL_PRODUCT_BLOCKS	tools/eigen/test/spqr_support.cpp	9;"	d	file:
EIGEN_NO_DEBUG_SMALL_PRODUCT_BLOCKS	tools/eigen/test/superlu_support.cpp	10;"	d	file:
EIGEN_NO_DEBUG_SMALL_PRODUCT_BLOCKS	tools/eigen/test/umfpack_support.cpp	10;"	d	file:
EIGEN_NO_DEPRECATED_WARNING	tools/eigen/unsupported/test/sparse_extra.cpp	12;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/adjoint.cpp	10;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/basicstuff.cpp	10;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/block.cpp	10;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/integer_types.cpp	10;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/mapped_matrix.cpp	11;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/mixingtypes.cpp	15;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/product_small.cpp	10;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/smallvectors.cpp	10;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/swap.cpp	10;"	d	file:
EIGEN_NO_STATIC_ASSERT	tools/eigen/test/vectorwiseop.cpp	10;"	d	file:
EIGEN_NULLARY_FUNCTORS_H	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	11;"	d
EIGEN_NUMERICAL_DIFF_H	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	14;"	d
EIGEN_NUMTRAITS_H	tools/eigen/Eigen/src/Core/NumTraits.h	11;"	d
EIGEN_ONLY_USED_FOR_DEBUG	tools/eigen/Eigen/src/Core/util/Macros.h	500;"	d
EIGEN_ORDERING_H	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	12;"	d
EIGEN_ORTHOMETHODS_H	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	12;"	d
EIGEN_OS_ANDROID	tools/eigen/Eigen/src/Core/util/Macros.h	218;"	d
EIGEN_OS_ANDROID	tools/eigen/Eigen/src/Core/util/Macros.h	220;"	d
EIGEN_OS_BSD	tools/eigen/Eigen/src/Core/util/Macros.h	232;"	d
EIGEN_OS_BSD	tools/eigen/Eigen/src/Core/util/Macros.h	234;"	d
EIGEN_OS_CYGWIN	tools/eigen/Eigen/src/Core/util/Macros.h	274;"	d
EIGEN_OS_CYGWIN	tools/eigen/Eigen/src/Core/util/Macros.h	276;"	d
EIGEN_OS_GNULINUX	tools/eigen/Eigen/src/Core/util/Macros.h	225;"	d
EIGEN_OS_GNULINUX	tools/eigen/Eigen/src/Core/util/Macros.h	227;"	d
EIGEN_OS_LINUX	tools/eigen/Eigen/src/Core/util/Macros.h	210;"	d
EIGEN_OS_LINUX	tools/eigen/Eigen/src/Core/util/Macros.h	212;"	d
EIGEN_OS_MAC	tools/eigen/Eigen/src/Core/util/Macros.h	239;"	d
EIGEN_OS_MAC	tools/eigen/Eigen/src/Core/util/Macros.h	241;"	d
EIGEN_OS_QNX	tools/eigen/Eigen/src/Core/util/Macros.h	246;"	d
EIGEN_OS_QNX	tools/eigen/Eigen/src/Core/util/Macros.h	248;"	d
EIGEN_OS_SOLARIS	tools/eigen/Eigen/src/Core/util/Macros.h	295;"	d
EIGEN_OS_SOLARIS	tools/eigen/Eigen/src/Core/util/Macros.h	297;"	d
EIGEN_OS_SUN	tools/eigen/Eigen/src/Core/util/Macros.h	288;"	d
EIGEN_OS_SUN	tools/eigen/Eigen/src/Core/util/Macros.h	290;"	d
EIGEN_OS_UNIX	tools/eigen/Eigen/src/Core/util/Macros.h	203;"	d
EIGEN_OS_UNIX	tools/eigen/Eigen/src/Core/util/Macros.h	205;"	d
EIGEN_OS_WIN	tools/eigen/Eigen/src/Core/util/Macros.h	253;"	d
EIGEN_OS_WIN	tools/eigen/Eigen/src/Core/util/Macros.h	255;"	d
EIGEN_OS_WIN64	tools/eigen/Eigen/src/Core/util/Macros.h	260;"	d
EIGEN_OS_WIN64	tools/eigen/Eigen/src/Core/util/Macros.h	262;"	d
EIGEN_OS_WINCE	tools/eigen/Eigen/src/Core/util/Macros.h	267;"	d
EIGEN_OS_WINCE	tools/eigen/Eigen/src/Core/util/Macros.h	269;"	d
EIGEN_OS_WIN_STRICT	tools/eigen/Eigen/src/Core/util/Macros.h	281;"	d
EIGEN_OS_WIN_STRICT	tools/eigen/Eigen/src/Core/util/Macros.h	283;"	d
EIGEN_PACKED_TRIANGULAR_MATRIX_VECTOR_H	tools/eigen/blas/PackedTriangularMatrixVector.h	11;"	d
EIGEN_PACKED_TRIANGULAR_SOLVER_VECTOR_H	tools/eigen/blas/PackedTriangularSolverVector.h	11;"	d
EIGEN_PACKET_MATH_ALTIVEC_H	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_AVX_H	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_CUDA_H	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_NEON_H	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	13;"	d
EIGEN_PACKET_MATH_SSE_H	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	11;"	d
EIGEN_PARALLELIZER_H	tools/eigen/Eigen/src/Core/products/Parallelizer.h	11;"	d
EIGEN_PARAMETRIZEDLINE_H	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	12;"	d
EIGEN_PARDISO	tools/eigen/bench/spbench/spbenchsolver.h	56;"	d
EIGEN_PARDISOSUPPORT_H	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	33;"	d
EIGEN_PARDISO_LDLT	tools/eigen/bench/spbench/spbenchsolver.h	66;"	d
EIGEN_PARDISO_LLT	tools/eigen/bench/spbench/spbenchsolver.h	71;"	d
EIGEN_PARTIALLU_H	tools/eigen/Eigen/src/LU/PartialPivLU.h	12;"	d
EIGEN_PARTIALLU_LAPACK_H	tools/eigen/Eigen/src/LU/PartialPivLU_MKL.h	34;"	d
EIGEN_PARTIAL_REDUX_H	tools/eigen/Eigen/src/Core/VectorwiseOp.h	12;"	d
EIGEN_PASTIX	tools/eigen/bench/spbench/spbenchsolver.h	55;"	d
EIGEN_PASTIXSUPPORT_H	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	11;"	d
EIGEN_PASTIX_LDLT	tools/eigen/bench/spbench/spbenchsolver.h	65;"	d
EIGEN_PASTIX_LLT	tools/eigen/bench/spbench/spbenchsolver.h	70;"	d
EIGEN_PERMISSIVE_EXPR	tools/eigen/Eigen/src/Core/util/Macros.h	432;"	d
EIGEN_PERMISSIVE_EXPR	tools/eigen/Eigen/src/Core/util/Macros.h	434;"	d
EIGEN_PERMUTATIONMATRIX_H	tools/eigen/Eigen/src/Core/PermutationMatrix.h	12;"	d
EIGEN_PI	tools/eigen/Eigen/src/Core/MathFunctions.h	14;"	d
EIGEN_PLAIN_ENUM_MAX	tools/eigen/Eigen/src/Core/util/Macros.h	776;"	d
EIGEN_PLAIN_ENUM_MIN	tools/eigen/Eigen/src/Core/util/Macros.h	775;"	d
EIGEN_POLYNOMIAL_SOLVER_BASE_INHERITED_TYPES	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	293;"	d
EIGEN_POLYNOMIAL_SOLVER_H	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	11;"	d
EIGEN_POLYNOMIAL_UTILS_H	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	11;"	d
EIGEN_PP_EXPAND	tools/eigen/Eigen/src/Core/Assign_MKL.h	69;"	d
EIGEN_PREDICATE_SAME_MATRIX_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	161;"	d
EIGEN_PRODUCTEVALUATORS_H	tools/eigen/Eigen/src/Core/ProductEvaluators.h	14;"	d
EIGEN_PRODUCT_H	tools/eigen/Eigen/src/Core/Product.h	11;"	d
EIGEN_QR_H	tools/eigen/Eigen/src/QR/HouseholderQR.h	13;"	d
EIGEN_QR_MKL_H	tools/eigen/Eigen/src/QR/HouseholderQR_MKL.h	35;"	d
EIGEN_QUATERNION_DEMO_H	tools/eigen/demos/opengl/quaternion_demo.h	11;"	d
EIGEN_QUATERNION_H	tools/eigen/Eigen/src/Geometry/Quaternion.h	12;"	d
EIGEN_RANDOMSETTER_H	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	11;"	d
EIGEN_RANDOM_H	tools/eigen/Eigen/src/Core/Random.h	11;"	d
EIGEN_RANK2UPDATE_H	tools/eigen/blas/Rank2Update.h	11;"	d
EIGEN_REAL_QZ_H	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	11;"	d
EIGEN_REAL_SCHUR_H	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	12;"	d
EIGEN_REAL_SCHUR_MKL_H	tools/eigen/Eigen/src/Eigenvalues/RealSchur_MKL.h	34;"	d
EIGEN_REDUX_H	tools/eigen/Eigen/src/Core/Redux.h	12;"	d
EIGEN_REF_H	tools/eigen/Eigen/src/Core/Ref.h	11;"	d
EIGEN_REPLICATE_H	tools/eigen/Eigen/src/Core/Replicate.h	11;"	d
EIGEN_RESTRICT	tools/eigen/Eigen/src/Core/util/Macros.h	692;"	d
EIGEN_RESTRICT	tools/eigen/Eigen/src/Core/util/Macros.h	695;"	d
EIGEN_RETURNBYVALUE_H	tools/eigen/Eigen/src/Core/ReturnByValue.h	12;"	d
EIGEN_REVERSE_H	tools/eigen/Eigen/src/Core/Reverse.h	13;"	d
EIGEN_ROTATION2D_H	tools/eigen/Eigen/src/Geometry/Rotation2D.h	11;"	d
EIGEN_ROTATIONBASE_H	tools/eigen/Eigen/src/Geometry/RotationBase.h	11;"	d
EIGEN_RUNTIME_NO_MALLOC	tools/eigen/test/bdcsvd.cpp	15;"	d	file:
EIGEN_RUNTIME_NO_MALLOC	tools/eigen/test/jacobisvd.cpp	13;"	d	file:
EIGEN_RUNTIME_NO_MALLOC	tools/eigen/test/nomalloc.cpp	14;"	d	file:
EIGEN_SAEIGENSOLVER_MKL_H	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	34;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	tools/eigen/Eigen/src/Core/util/Macros.h	304;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	tools/eigen/Eigen/src/Core/util/Macros.h	306;"	d
EIGEN_SCALING_H	tools/eigen/Eigen/src/Geometry/Scaling.h	11;"	d
EIGEN_SELECT_H	tools/eigen/Eigen/src/Core/Select.h	11;"	d
EIGEN_SELFADJOINTEIGENSOLVER_H	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	12;"	d
EIGEN_SELFADJOINTMATRIX_H	tools/eigen/Eigen/src/Core/SelfAdjointView.h	11;"	d
EIGEN_SELFADJOINTRANK2UPTADE_H	tools/eigen/Eigen/src/Core/products/SelfadjointRank2Update.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_H	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_MKL_H	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	34;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_H	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_MKL_H	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	34;"	d
EIGEN_SELFADJOINT_PACKED_PRODUCT_H	tools/eigen/blas/PackedSelfadjointProduct.h	11;"	d
EIGEN_SELFADJOINT_PRODUCT_H	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	11;"	d
EIGEN_SELFCWISEBINARYOP_H	tools/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_H	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_IMPL_H	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	46;"	d
EIGEN_SIMPLICIAL_LDLT	tools/eigen/bench/spbench/spbenchsolver.h	63;"	d
EIGEN_SIMPLICIAL_LLT	tools/eigen/bench/spbench/spbenchsolver.h	67;"	d
EIGEN_SIZE_MAX	tools/eigen/Eigen/src/Core/util/Macros.h	797;"	d
EIGEN_SIZE_MIN_PREFER_DYNAMIC	tools/eigen/Eigen/src/Core/util/Macros.h	781;"	d
EIGEN_SIZE_MIN_PREFER_FIXED	tools/eigen/Eigen/src/Core/util/Macros.h	789;"	d
EIGEN_SKYLINEINPLACELU_H	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	11;"	d
EIGEN_SKYLINEMATRIXBASE_H	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	11;"	d
EIGEN_SKYLINEMATRIX_H	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	11;"	d
EIGEN_SKYLINEPRODUCT_H	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	11;"	d
EIGEN_SKYLINEUTIL_H	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	11;"	d
EIGEN_SKYLINE_GENERIC_PUBLIC_INTERFACE	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	60;"	d
EIGEN_SKYLINE_INHERIT_ASSIGNMENT_OPERATOR	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	27;"	d
EIGEN_SKYLINE_INHERIT_ASSIGNMENT_OPERATORS	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	45;"	d
EIGEN_SKYLINE_INHERIT_SCALAR_ASSIGNMENT_OPERATOR	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	38;"	d
EIGEN_SKYLINE_STORAGE_H	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	11;"	d
EIGEN_SOLVETRIANGULAR_H	tools/eigen/Eigen/src/Core/SolveTriangular.h	11;"	d
EIGEN_SOLVEWITHGUESS_H	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	11;"	d
EIGEN_SOLVE_H	tools/eigen/Eigen/src/Core/Solve.h	11;"	d
EIGEN_SPARSEASSIGN_H	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	11;"	d
EIGEN_SPARSEBLOCKMATRIX_H	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	12;"	d
EIGEN_SPARSEDENSEPRODUCT_H	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	11;"	d
EIGEN_SPARSELU_COLAMD	tools/eigen/bench/spbench/spbenchsolver.h	57;"	d
EIGEN_SPARSELU_GEMM_KERNEL_H	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	11;"	d
EIGEN_SPARSELU_MEMORY	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	32;"	d
EIGEN_SPARSELU_METIS	tools/eigen/bench/spbench/spbenchsolver.h	58;"	d
EIGEN_SPARSELU_SUPERNODAL_MATRIX_H	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	12;"	d
EIGEN_SPARSELU_UTILS_H	tools/eigen/Eigen/src/SparseLU/SparseLU_Utils.h	12;"	d
EIGEN_SPARSEMATRIXBASE_H	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	11;"	d
EIGEN_SPARSEMATRIX_H	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	11;"	d
EIGEN_SPARSEPRODUCT_H	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	11;"	d
EIGEN_SPARSEREDUX_H	tools/eigen/Eigen/src/SparseCore/SparseRedux.h	11;"	d
EIGEN_SPARSESOLVERBASE_H	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	11;"	d
EIGEN_SPARSESPARSEPRODUCTWITHPRUNING_H	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	11;"	d
EIGEN_SPARSETRANSPOSE_H	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	11;"	d
EIGEN_SPARSETRIANGULARSOLVER_H	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	11;"	d
EIGEN_SPARSEUTIL_H	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	11;"	d
EIGEN_SPARSEVECTOR_H	tools/eigen/Eigen/src/SparseCore/SparseVector.h	11;"	d
EIGEN_SPARSEVIEW_H	tools/eigen/Eigen/src/SparseCore/SparseView.h	12;"	d
EIGEN_SPARSE_AMD_H	tools/eigen/Eigen/src/OrderingMethods/Amd.h	32;"	d
EIGEN_SPARSE_BLOCKFORDYNAMICMATRIX_H	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	11;"	d
EIGEN_SPARSE_BLOCK_H	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	11;"	d
EIGEN_SPARSE_COMPRESSED_BASE_H	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	11;"	d
EIGEN_SPARSE_COMPRESSED_STORAGE_REALLOCATE_PLUGIN	tools/eigen/test/sparse_basic.cpp	13;"	d	file:
EIGEN_SPARSE_CREATE_TEMPORARY_PLUGIN	tools/eigen/test/sparse_ref.cpp	22;"	d	file:
EIGEN_SPARSE_CWISE_BINARY_OP_H	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	11;"	d
EIGEN_SPARSE_CWISE_PRODUCT_RETURN_TYPE	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	254;"	d
EIGEN_SPARSE_CWISE_UNARY_OP_H	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	11;"	d
EIGEN_SPARSE_DIAGONAL_PRODUCT_H	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	11;"	d
EIGEN_SPARSE_DOT_H	tools/eigen/Eigen/src/SparseCore/SparseDot.h	11;"	d
EIGEN_SPARSE_FUZZY_H	tools/eigen/Eigen/src/SparseCore/SparseFuzzy.h	11;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATOR	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	21;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATORS	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	39;"	d
EIGEN_SPARSE_INHERIT_SCALAR_ASSIGNMENT_OPERATOR	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	32;"	d
EIGEN_SPARSE_LU_H	tools/eigen/Eigen/src/SparseLU/SparseLU.h	13;"	d
EIGEN_SPARSE_MAP_H	tools/eigen/Eigen/src/SparseCore/SparseMap.h	11;"	d
EIGEN_SPARSE_MARKET_IO_H	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	12;"	d
EIGEN_SPARSE_PERMUTATION_H	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	11;"	d
EIGEN_SPARSE_PUBLIC_INTERFACE	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	58;"	d
EIGEN_SPARSE_QR_H	tools/eigen/Eigen/src/SparseQR/SparseQR.h	12;"	d
EIGEN_SPARSE_REF_H	tools/eigen/Eigen/src/SparseCore/SparseRef.h	11;"	d
EIGEN_SPARSE_SELFADJOINTVIEW_H	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	11;"	d
EIGEN_SPARSE_TRIANGULARVIEW_H	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	12;"	d
EIGEN_SPECIAL_SCALAR_MULTIPLE_PLUGIN	tools/eigen/test/linearstructure.cpp	12;"	d	file:
EIGEN_SPLINES_FWD_H	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	11;"	d
EIGEN_SPLINE_FITTING_H	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	11;"	d
EIGEN_SPLINE_H	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	11;"	d
EIGEN_STABLENORM_H	tools/eigen/Eigen/src/Core/StableNorm.h	11;"	d
EIGEN_STACK_ALLOCATION_LIMIT	tools/eigen/Eigen/src/Core/util/Macros.h	700;"	d
EIGEN_STACK_ALLOCATION_LIMIT	tools/eigen/test/bdcsvd.cpp	14;"	d	file:
EIGEN_STACK_ALLOCATION_LIMIT	tools/eigen/test/exceptions.cpp	15;"	d	file:
EIGEN_STACK_ALLOCATION_LIMIT	tools/eigen/test/jacobisvd.cpp	12;"	d	file:
EIGEN_STACK_ALLOCATION_LIMIT	tools/eigen/test/nomalloc.cpp	12;"	d	file:
EIGEN_STATIC_ASSERT	tools/eigen/Eigen/src/Core/util/StaticAssert.h	109;"	d
EIGEN_STATIC_ASSERT	tools/eigen/Eigen/src/Core/util/StaticAssert.h	32;"	d
EIGEN_STATIC_ASSERT_ARRAYXPR	tools/eigen/Eigen/src/Core/util/StaticAssert.h	193;"	d
EIGEN_STATIC_ASSERT_DYNAMIC_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	139;"	d
EIGEN_STATIC_ASSERT_FIXED_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	134;"	d
EIGEN_STATIC_ASSERT_H	tools/eigen/Eigen/src/Core/util/StaticAssert.h	12;"	d
EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS	tools/eigen/Eigen/src/Core/MapBase.h	14;"	d
EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS	tools/eigen/Eigen/src/Core/MapBase.h	253;"	d
EIGEN_STATIC_ASSERT_LVALUE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	189;"	d
EIGEN_STATIC_ASSERT_MATRIX_SPECIFIC_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	149;"	d
EIGEN_STATIC_ASSERT_NON_INTEGER	tools/eigen/Eigen/src/Core/util/StaticAssert.h	174;"	d
EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	179;"	d
EIGEN_STATIC_ASSERT_SAME_VECTOR_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	154;"	d
EIGEN_STATIC_ASSERT_SAME_XPR_KIND	tools/eigen/Eigen/src/Core/util/StaticAssert.h	197;"	d
EIGEN_STATIC_ASSERT_SIZE_1x1	tools/eigen/Eigen/src/Core/util/StaticAssert.h	184;"	d
EIGEN_STATIC_ASSERT_VECTOR_ONLY	tools/eigen/Eigen/src/Core/util/StaticAssert.h	129;"	d
EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	144;"	d
EIGEN_STDDEQUE_H	tools/eigen/Eigen/src/StlSupport/StdDeque.h	12;"	d
EIGEN_STDLIST_H	tools/eigen/Eigen/src/StlSupport/StdList.h	11;"	d
EIGEN_STDVECTOR_H	tools/eigen/Eigen/src/StlSupport/StdVector.h	12;"	d
EIGEN_STD_DEQUE_SPECIALIZATION_BODY	tools/eigen/Eigen/src/StlSupport/StdDeque.h	60;"	d
EIGEN_STD_LIST_SPECIALIZATION_BODY	tools/eigen/Eigen/src/StlSupport/StdList.h	60;"	d
EIGEN_STD_VECTOR_SPECIALIZATION_BODY	tools/eigen/Eigen/src/StlSupport/StdVector.h	52;"	d
EIGEN_STEM_FUNCTION	tools/eigen/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	11;"	d
EIGEN_STL_DETAILS_H	tools/eigen/Eigen/src/StlSupport/details.h	12;"	d
EIGEN_STL_FUNCTORS_H	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	11;"	d
EIGEN_STRIDE_H	tools/eigen/Eigen/src/Core/Stride.h	11;"	d
EIGEN_STRONG_INLINE	tools/eigen/Eigen/src/Core/util/Macros.h	405;"	d
EIGEN_STRONG_INLINE	tools/eigen/Eigen/src/Core/util/Macros.h	407;"	d
EIGEN_SUITESPARSEQRSUPPORT_H	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	12;"	d
EIGEN_SUPERLU	tools/eigen/bench/spbench/spbenchsolver.h	54;"	d
EIGEN_SUPERLUSUPPORT_H	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	11;"	d
EIGEN_SUPERLU_HAS_ILU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	45;"	d
EIGEN_SUPERLU_HAS_ILU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	787;"	d
EIGEN_SUPERLU_SUPPORT	tools/eigen/bench/sparse_lu.cpp	4;"	d	file:
EIGEN_SVDBASE_H	tools/eigen/Eigen/src/SVD/SVDBase.h	17;"	d
EIGEN_SWAP_H	tools/eigen/Eigen/src/Core/Swap.h	11;"	d
EIGEN_TESTMAP_MAX_SIZE	tools/eigen/test/mapped_matrix.cpp	16;"	d	file:
EIGEN_TESTSPARSE_H	tools/eigen/test/sparse.h	11;"	d
EIGEN_TEST_CUDA_COMMON_H	tools/eigen/test/cuda_common.h	3;"	d
EIGEN_TEST_FUNC	tools/eigen/unsupported/test/cxx11_tensor_argmax_cuda.cpp	12;"	d	file:
EIGEN_TEST_FUNC	tools/eigen/unsupported/test/cxx11_tensor_contract_cuda.cpp	13;"	d	file:
EIGEN_TEST_FUNC	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	14;"	d	file:
EIGEN_TEST_FUNC	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	12;"	d	file:
EIGEN_TEST_FUNC	tools/eigen/unsupported/test/cxx11_tensor_random_cuda.cpp	12;"	d	file:
EIGEN_TEST_FUNC	tools/eigen/unsupported/test/cxx11_tensor_reduction_cuda.cpp	12;"	d	file:
EIGEN_TEST_MAX_SIZE	tools/eigen/test/ctorleak.cpp	33;"	d	file:
EIGEN_TEST_MAX_SIZE	tools/eigen/test/ctorleak.cpp	34;"	d	file:
EIGEN_TEST_NO_COMPLEX	tools/eigen/unsupported/test/cxx11_tensor_contract_cuda.cpp	12;"	d	file:
EIGEN_TEST_NO_COMPLEX	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	13;"	d	file:
EIGEN_TEST_NO_COMPLEX	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	11;"	d	file:
EIGEN_TEST_NO_COMPLEX	tools/eigen/unsupported/test/cxx11_tensor_random_cuda.cpp	11;"	d	file:
EIGEN_TEST_NO_COMPLEX	tools/eigen/unsupported/test/cxx11_tensor_reduction_cuda.cpp	11;"	d	file:
EIGEN_TEST_NO_LONGDOUBLE	tools/eigen/unsupported/test/cxx11_tensor_contract_cuda.cpp	11;"	d	file:
EIGEN_TEST_NO_LONGDOUBLE	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	12;"	d	file:
EIGEN_TEST_NO_LONGDOUBLE	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	10;"	d	file:
EIGEN_TEST_NO_LONGDOUBLE	tools/eigen/unsupported/test/cxx11_tensor_random_cuda.cpp	10;"	d	file:
EIGEN_TEST_NO_LONGDOUBLE	tools/eigen/unsupported/test/cxx11_tensor_reduction_cuda.cpp	10;"	d	file:
EIGEN_TEST_SPECIFIC_BLOCKING_SIZES	tools/eigen/bench/benchmark-blocking-sizes.cpp	20;"	d	file:
EIGEN_TEST_SPECIFIC_BLOCKING_SIZE_K	tools/eigen/bench/benchmark-blocking-sizes.cpp	21;"	d	file:
EIGEN_TEST_SPECIFIC_BLOCKING_SIZE_M	tools/eigen/bench/benchmark-blocking-sizes.cpp	22;"	d	file:
EIGEN_TEST_SPECIFIC_BLOCKING_SIZE_N	tools/eigen/bench/benchmark-blocking-sizes.cpp	23;"	d	file:
EIGEN_THROW	tools/eigen/Eigen/src/Core/util/Macros.h	825;"	d
EIGEN_THROW_X	tools/eigen/Eigen/src/Core/util/Macros.h	824;"	d
EIGEN_TPL_PP_SPEC_HACK_DEF	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	102;"	d
EIGEN_TPL_PP_SPEC_HACK_DEF	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	97;"	d
EIGEN_TPL_PP_SPEC_HACK_DEFC	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	103;"	d
EIGEN_TPL_PP_SPEC_HACK_DEFC	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	98;"	d
EIGEN_TPL_PP_SPEC_HACK_USE	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	104;"	d
EIGEN_TPL_PP_SPEC_HACK_USE	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	99;"	d
EIGEN_TPL_PP_SPEC_HACK_USEC	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	100;"	d
EIGEN_TPL_PP_SPEC_HACK_USEC	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	105;"	d
EIGEN_TRACKBALL_H	tools/eigen/demos/opengl/trackball.h	11;"	d
EIGEN_TRANSFORM_H	tools/eigen/Eigen/src/Geometry/Transform.h	13;"	d
EIGEN_TRANSLATION_H	tools/eigen/Eigen/src/Geometry/Translation.h	11;"	d
EIGEN_TRANSPOSE_H	tools/eigen/Eigen/src/Core/Transpose.h	12;"	d
EIGEN_TRANSPOSITIONS_H	tools/eigen/Eigen/src/Core/Transpositions.h	11;"	d
EIGEN_TRIANGULARMATRIXVECTOR_H	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	11;"	d
EIGEN_TRIANGULARMATRIX_H	tools/eigen/Eigen/src/Core/TriangularMatrix.h	12;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_H	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	11;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_MKL_H	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	34;"	d
EIGEN_TRIANGULAR_MATRIX_VECTOR_MKL_H	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	34;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_H	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	11;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_MKL_H	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	34;"	d
EIGEN_TRIANGULAR_SOLVER_VECTOR_H	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	11;"	d
EIGEN_TRIDIAGONALIZATION_H	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	12;"	d
EIGEN_TRY	tools/eigen/Eigen/src/Core/util/Macros.h	826;"	d
EIGEN_TUNE_TRIANGULAR_PANEL_WIDTH	tools/eigen/Eigen/src/Core/arch/Default/Settings.h	38;"	d
EIGEN_TYPE_CASTING_AVX_H	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	11;"	d
EIGEN_TYPE_CASTING_SSE_H	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	11;"	d
EIGEN_UMEYAMA_H	tools/eigen/Eigen/src/Geometry/Umeyama.h	11;"	d
EIGEN_UMFPACK	tools/eigen/bench/spbench/spbenchsolver.h	53;"	d
EIGEN_UMFPACKSUPPORT_H	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	11;"	d
EIGEN_UMFPACK_SUPPORT	tools/eigen/bench/sparse_lu.cpp	5;"	d	file:
EIGEN_UNARY_FUNCTORS_H	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	11;"	d
EIGEN_UNORDERED_MAP_SUPPORT	tools/eigen/test/sparse.h	28;"	d
EIGEN_UNROLLING_LIMIT	tools/eigen/Eigen/src/Core/arch/Default/Settings.h	24;"	d
EIGEN_UNUSED	tools/eigen/Eigen/src/Core/util/Macros.h	518;"	d
EIGEN_UNUSED_VARIABLE	tools/eigen/Eigen/src/Core/util/Macros.h	529;"	d
EIGEN_USE_BLAS	tools/eigen/Eigen/src/Core/util/MKL_support.h	38;"	d
EIGEN_USE_BLAS	tools/eigen/Eigen/src/Core/util/MKL_support.h	67;"	d
EIGEN_USE_CUSTOM_ASSERT	tools/eigen/test/main.h	241;"	d
EIGEN_USE_GPU	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	1;"	d	file:
EIGEN_USE_GPU	tools/eigen/unsupported/test/cxx11_tensor_argmax_cuda.cpp	13;"	d	file:
EIGEN_USE_GPU	tools/eigen/unsupported/test/cxx11_tensor_contract_cuda.cpp	15;"	d	file:
EIGEN_USE_GPU	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	16;"	d	file:
EIGEN_USE_GPU	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	14;"	d	file:
EIGEN_USE_GPU	tools/eigen/unsupported/test/cxx11_tensor_random_cuda.cpp	14;"	d	file:
EIGEN_USE_GPU	tools/eigen/unsupported/test/cxx11_tensor_reduction_cuda.cpp	13;"	d	file:
EIGEN_USE_LAPACKE	tools/eigen/Eigen/src/Core/util/MKL_support.h	41;"	d
EIGEN_USE_LAPACKE	tools/eigen/Eigen/src/Core/util/MKL_support.h	49;"	d
EIGEN_USE_LAPACKE	tools/eigen/Eigen/src/Core/util/MKL_support.h	68;"	d
EIGEN_USE_LAPACKE	tools/eigen/Eigen/src/Core/util/MKL_support.h	71;"	d
EIGEN_USE_LAPACKE_STRICT	tools/eigen/Eigen/src/Core/util/MKL_support.h	70;"	d
EIGEN_USE_MKL	tools/eigen/Eigen/src/Core/util/MKL_support.h	53;"	d
EIGEN_USE_MKL	tools/eigen/Eigen/src/Core/util/MKL_support.h	60;"	d
EIGEN_USE_MKL	tools/eigen/Eigen/src/Core/util/MKL_support.h	62;"	d
EIGEN_USE_MKL_ALL	tools/eigen/Eigen/src/Core/util/MKL_support.h	66;"	d
EIGEN_USE_MKL_VML	tools/eigen/Eigen/src/Core/util/MKL_support.h	44;"	d
EIGEN_USE_MKL_VML	tools/eigen/Eigen/src/Core/util/MKL_support.h	69;"	d
EIGEN_USE_THREADS	tools/eigen/bench/tensors/tensor_benchmarks_cpu.cc	1;"	d	file:
EIGEN_USE_THREADS	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	10;"	d	file:
EIGEN_USING_ARRAY_TYPEDEFS	tools/eigen/Eigen/src/Core/Array.h	316;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE	tools/eigen/Eigen/src/Core/Array.h	310;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE_AND_SIZE	tools/eigen/Eigen/src/Core/Array.h	305;"	d
EIGEN_VECTORBLOCK_H	tools/eigen/Eigen/src/Core/VectorBlock.h	12;"	d
EIGEN_VERSION_AT_LEAST	tools/eigen/Eigen/src/Core/util/Macros.h	18;"	d
EIGEN_VISITOR_H	tools/eigen/Eigen/src/Core/Visitor.h	11;"	d
EIGEN_VMLMODE_EXPAND_LA	tools/eigen/Eigen/src/Core/Assign_MKL.h	71;"	d
EIGEN_VMLMODE_EXPAND_LA	tools/eigen/Eigen/src/Core/Assign_MKL.h	73;"	d
EIGEN_VMLMODE_EXPAND__	tools/eigen/Eigen/src/Core/Assign_MKL.h	76;"	d
EIGEN_VMLMODE_PREFIX	tools/eigen/Eigen/src/Core/Assign_MKL.h	80;"	d
EIGEN_VMLMODE_PREFIX_LA	tools/eigen/Eigen/src/Core/Assign_MKL.h	78;"	d
EIGEN_VMLMODE_PREFIX__	tools/eigen/Eigen/src/Core/Assign_MKL.h	79;"	d
EIGEN_WARNINGS_DISABLED	tools/eigen/Eigen/src/Core/util/DisableStupidWarnings.h	2;"	d
EIGEN_WARNINGS_DISABLED	tools/eigen/Eigen/src/Core/util/ReenableStupidWarnings.h	2;"	d
EIGEN_WEAK_LINKING	tools/eigen/blas/xerbla.cpp	5;"	d	file:
EIGEN_WEAK_LINKING	tools/eigen/blas/xerbla.cpp	7;"	d	file:
EIGEN_WORKAROUND_MSVC_STL_SUPPORT	tools/eigen/Eigen/src/StlSupport/details.h	54;"	d
EIGEN_WORK_AROUND_QT_BUG_CALLING_WRONG_OPERATOR_NEW_FIXED_IN_QT_4_5	tools/eigen/test/qtvector.cpp	11;"	d	file:
EIGEN_WORLD_VERSION	tools/eigen/Eigen/src/Core/util/Macros.h	14;"	d
EIGEN_XPRHELPER_H	tools/eigen/Eigen/src/Core/util/XprHelper.h	12;"	d
EIGEN_YES_I_KNOW_SPARSE_MODULE_IS_NOT_STABLE_YET	tools/eigen/test/sparse.h	13;"	d
EI_PP_MAKE_STRING	tools/eigen/test/main.h	133;"	d
EI_PP_MAKE_STRING2	tools/eigen/test/main.h	132;"	d
END	tools/eigen/bench/product_threshold.cpp	9;"	d	file:
END_OF	tools/eigen/bench/btl/generic_bench/utils/utilities.h	68;"	d
END_OF	tools/eigen/bench/btl/generic_bench/utils/utilities.h	85;"	d
EPS	tools/eigen/blas/testing/cblat2.f	/^      REAL               EPS,/;"	v	program:CBLAT2
EPS	tools/eigen/blas/testing/cblat3.f	/^      REAL               EPS,/;"	v	program:CBLAT3
EPS	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   EPS,/;"	v	program:DBLAT2
EPS	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   EPS,/;"	v	program:DBLAT3
EPS	tools/eigen/blas/testing/sblat2.f	/^      REAL               EPS,/;"	v	program:SBLAT2
EPS	tools/eigen/blas/testing/sblat3.f	/^      REAL               EPS,/;"	v	program:SBLAT3
EPS	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION   EPS,/;"	v	program:ZBLAT2
EPS	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION   EPS,/;"	v	program:ZBLAT3
ERR	tools/eigen/blas/testing/cblat2.f	/^      REAL               EPS, ERR,/;"	v	program:CBLAT2
ERR	tools/eigen/blas/testing/cblat3.f	/^      REAL               EPS, ERR,/;"	v	program:CBLAT3
ERR	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   EPS, ERR,/;"	v	program:DBLAT2
ERR	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   EPS, ERR,/;"	v	program:DBLAT3
ERR	tools/eigen/blas/testing/sblat2.f	/^      REAL               EPS, ERR,/;"	v	program:SBLAT2
ERR	tools/eigen/blas/testing/sblat3.f	/^      REAL               EPS, ERR,/;"	v	program:SBLAT3
ERR	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION   EPS, ERR,/;"	v	program:ZBLAT2
ERR	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION   EPS, ERR,/;"	v	program:ZBLAT3
E_VDW	tools/eigen/bench/vdw_new.cpp	/^SCALAR E_VDW(const Vec &interactions1, const Vec &interactions2)$/;"	f
EarlyEval	tools/eigen/bench/basicbenchmark.h	/^enum {LazyEval, EarlyEval, OmpEval};$/;"	e	enum:__anon729
EigVecMask	tools/eigen/Eigen/src/Core/util/Constants.h	/^  EigVecMask = EigenvaluesOnly | ComputeEigenvectors,$/;"	e	enum:Eigen::DecompositionOptions
Eigen	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Cholesky/LLT.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Cholesky/LLT_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Array.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/ArrayBase.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Assign.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/BandMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Block.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/CoreIterators.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/DenseBase.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/DenseStorage.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/Diagonal.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/DiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Dot.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/EigenBase.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/Fuzzy.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/GlobalFunctions.h	/^namespace Eigen$/;"	n
Eigen	tools/eigen/Eigen/src/Core/IO.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Inverse.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Map.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/MapBase.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/Matrix.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/MatrixBase.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/NestByValue.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/NoAlias.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/NumTraits.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/Product.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/Random.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Redux.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Ref.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Replicate.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/Reverse.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Select.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Solve.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/StableNorm.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Stride.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Swap.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Transpose.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Transpositions.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/VectorBlock.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/Visitor.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/NEON/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/Constants.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/Macros.h	/^    namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/Macros.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/Memory.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/Meta.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^    namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/RealSchur_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/EulerAngles.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/Scaling.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/Transform.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/Translation.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/Umeyama.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Householder/BlockHouseholder.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Householder/Householder.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/LU/Determinant.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/LU/FullPivLU.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/LU/InverseImpl.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/LU/PartialPivLU_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/QR/ColPivHouseholderQR_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/QR/HouseholderQR_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SVD/JacobiSVD_MKL.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SVD/SVDBase.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseColEtree.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseDot.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseFuzzy.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseRedux.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_Utils.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_pivotL.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_pruneL.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/StlSupport/details.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/misc/Image.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/Eigen/src/misc/Kernel.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/bench/BenchTimer.h	/^namespace Eigen$/;"	n
Eigen	tools/eigen/bench/bench_norm.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	tools/eigen/blas/common.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/blas/level1_cplx_impl.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/test/evaluators.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	tools/eigen/test/main.h	/^    namespace Eigen$/;"	n
Eigen	tools/eigen/test/main.h	/^  namespace Eigen$/;"	n
Eigen	tools/eigen/test/main.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/test/main.h	/^namespace Eigen$/;"	n
Eigen	tools/eigen/test/packetmath.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIO.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^namespace Eigen$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^namespace Eigen {  $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMcovar.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMonestep.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMpar.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMqrsolv.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/chkder.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/covar.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/dogleg.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/lmpar.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/r1updt.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^namespace Eigen {$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^namespace Eigen { $/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^namespace Eigen$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^namespace Eigen$/;"	n
Eigen	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^namespace Eigen$/;"	n
Eigen	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	tools/eigen/unsupported/test/BVH.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	tools/eigen/unsupported/test/alignedvector3.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	tools/eigen/unsupported/test/polynomialsolver.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	tools/eigen/unsupported/test/polynomialutils.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	tools/eigen/unsupported/test/splines.cpp	/^namespace Eigen {$/;"	n	file:
EigenBase	tools/eigen/Eigen/src/Core/EigenBase.h	/^template<typename Derived> struct EigenBase$/;"	s	namespace:Eigen
EigenBase2EigenBase	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct EigenBase2EigenBase {};$/;"	s	namespace:Eigen::internal
EigenContractionKernel	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^EigenContractionKernel(const LhsMapper lhs, const RhsMapper rhs,$/;"	f	namespace:Eigen
EigenContractionKernelInternal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^EigenContractionKernelInternal(const LhsMapper lhs, const RhsMapper rhs,$/;"	f	namespace:Eigen
EigenConvolutionKernel1D	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^__global__ void EigenConvolutionKernel1D($/;"	f	namespace:Eigen
EigenConvolutionKernel2D	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^__global__ void EigenConvolutionKernel2D($/;"	f	namespace:Eigen
EigenConvolutionKernel3D	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^__global__ void EigenConvolutionKernel3D($/;"	f	namespace:Eigen
EigenFloatContractionKernel	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^EigenFloatContractionKernel(const LhsMapper lhs, const RhsMapper rhs,$/;"	f	namespace:Eigen
EigenFloatContractionKernel16x16	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^EigenFloatContractionKernel16x16(const LhsMapper lhs, const RhsMapper rhs,$/;"	f	namespace:Eigen
EigenFloatContractionKernelInternal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^EigenFloatContractionKernelInternal(const LhsMapper lhs, const RhsMapper rhs,$/;"	f	namespace:Eigen
EigenFloatContractionKernelInternal16x16	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^EigenFloatContractionKernelInternal16x16(const LhsMapper lhs, const RhsMapper rhs,$/;"	f	namespace:Eigen
EigenMatrixPrinter	tools/eigen/debug/gdb/printers.py	/^class EigenMatrixPrinter:$/;"	c
EigenMetaKernel_NonVectorizable	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^EigenMetaKernel_NonVectorizable(Evaluator memcopied_eval, Index size) {$/;"	f	namespace:Eigen::internal
EigenMetaKernel_Vectorizable	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^EigenMetaKernel_Vectorizable(Evaluator memcopied_eval, Index size) {$/;"	f	namespace:Eigen::internal
EigenQuaternionPrinter	tools/eigen/debug/gdb/printers.py	/^class EigenQuaternionPrinter:$/;"	c
EigenSolver	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    explicit EigenSolver(Index size)$/;"	f	class:Eigen::EigenSolver
EigenSolver	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    explicit EigenSolver(const MatrixType& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::EigenSolver
EigenSolver	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^ EigenSolver() : m_eivec(), m_eivalues(), m_isInitialized(false), m_realSchur(), m_matT(), m_tmp() {}$/;"	f	class:Eigen::EigenSolver
EigenSolver	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^template<typename _MatrixType> class EigenSolver$/;"	c	namespace:Eigen
EigenSolverType	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef EigenSolver<CompanionMatrixType>         EigenSolverType;$/;"	t	class:Eigen::PolynomialSolver
EigenSparseMatrix	tools/eigen/bench/BenchSparseUtil.h	/^typedef SparseMatrix<Scalar> EigenSparseMatrix;$/;"	t
EigenSparseSelfAdjointMatrix	tools/eigen/bench/sparse_cholesky.cpp	/^typedef SparseMatrix<Scalar,SelfAdjoint|LowerTriangular> EigenSparseSelfAdjointMatrix;$/;"	t	file:
EigenSparseTriMatrix	tools/eigen/bench/sparse_trisolver.cpp	/^typedef SparseMatrix<Scalar,UpperTriangular> EigenSparseTriMatrix;$/;"	t	file:
EigenSparseTriMatrixRow	tools/eigen/bench/sparse_trisolver.cpp	/^typedef SparseMatrix<Scalar,RowMajorBit|UpperTriangular> EigenSparseTriMatrixRow;$/;"	t	file:
EigenVectorContainer	tools/eigen/unsupported/test/FFTW.cpp	/^enum { StdVectorContainer, EigenVectorContainer };$/;"	e	enum:__anon126	file:
Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl;$/;"	t	class:Eigen::ArrayBase
EigenvalueType	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options&(~RowMajor), MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvalueType	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::EigenSolver
EigenvalueType	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef CwiseBinaryOp<internal::scalar_quotient_op<ComplexScalar,Scalar>,ComplexVectorType,VectorType> EigenvalueType;$/;"	t	class:Eigen::GeneralizedEigenSolver
EigenvalueType	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealQZ
EigenvalueType	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealSchur
EigenvaluesOnly	tools/eigen/Eigen/src/Core/util/Constants.h	/^  EigenvaluesOnly     = 0x40,$/;"	e	enum:Eigen::DecompositionOptions
EigenvaluesReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef Matrix<typename NumTraits<typename internal::traits<Derived>::Scalar>::Real, internal::traits<Derived>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::DenseBase
EigenvaluesReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef Matrix<std::complex<RealScalar>, internal::traits<Derived>::ColsAtCompileTime, 1, ColMajor> EigenvaluesReturnType;$/;"	t	class:Eigen::MatrixBase
EigenvaluesReturnType	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef Matrix<RealScalar, internal::traits<MatrixType>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::SelfAdjointView
EigenvectorType	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvectorsType	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::EigenSolver
EigenvectorsType	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::GeneralizedEigenSolver
EigenvectorsType	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Matrix<Scalar,Size,Size,ColMajor,MaxColsAtCompileTime,MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
EigenvectorsType	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::EigenvectorsType EigenvectorsType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
ElseMatrixNested	tools/eigen/Eigen/src/Core/Select.h	/^  typedef typename ElseMatrixType::Nested ElseMatrixNested;$/;"	t	struct:Eigen::internal::traits
ElseNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename ElseXprType::Nested ElseNested;$/;"	t	struct:Eigen::internal::traits
EnableCoeff	tools/eigen/Eigen/src/Core/Product.h	/^      EnableCoeff = IsOneByOne || Option==LazyProduct$/;"	e	enum:Eigen::ProductImpl::__anon392
EnableVml	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      EnableVml = MightEnableVml && LargeEnough,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon585
Entity	problem.hh	/^    Entity(const char* filename) {$/;"	f	class:Entity
Entity	problem.hh	/^    Entity(const char* filename, int k) {$/;"	f	class:Entity
Entity	problem.hh	/^class Entity {$/;"	c
Entry	tools/SimpleIni.h	/^        Entry(const Entry & rhs) { operator=(rhs); }$/;"	f	struct:CSimpleIniTempl::Entry
Entry	tools/SimpleIni.h	/^        Entry(const SI_CHAR * a_pszItem = NULL, int a_nOrder = 0)$/;"	f	struct:CSimpleIniTempl::Entry
Entry	tools/SimpleIni.h	/^        Entry(const SI_CHAR * a_pszItem, const SI_CHAR * a_pszComment, int a_nOrder)$/;"	f	struct:CSimpleIniTempl::Entry
Entry	tools/SimpleIni.h	/^    struct Entry {$/;"	s	class:CSimpleIniTempl
EssentialVectorType	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::hseq_side_dependent_impl<VectorsType,CoeffsType,Side>::EssentialVectorType EssentialVectorType;$/;"	t	class:Eigen::HouseholderSequence
EssentialVectorType	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  typedef Block<const VectorsType, Dynamic, 1> EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EssentialVectorType	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  typedef Transpose<Block<const VectorsType, 1, Dynamic> > EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EulerAngles	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  EulerAngles() {}$/;"	f	class:EulerAngles
EulerAngles	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  inline EulerAngles(Scalar a0, Scalar a1, Scalar a2) : m_angles(a0, a1, a2) {}$/;"	f	class:EulerAngles
EulerAngles	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  inline EulerAngles(const QuaternionType& q) { *this = q; }$/;"	f	class:EulerAngles
EulerAngles	tools/eigen/demos/opengl/quaternion_demo.cpp	/^template<typename _Scalar> class EulerAngles$/;"	c	file:
EvalBeforeAssigningBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeAssigningBit = 0x4; \/\/ FIXME deprecated$/;"	m	namespace:Eigen
EvalBeforeNestingBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeNestingBit = 0x2;$/;"	m	namespace:Eigen
EvalIterator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename evaluator<ArgType>::InnerIterator        EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename evaluator<ArgType>::InnerIterator        EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalLeftArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    static_cast<int>(Layout) == static_cast<int>(ColMajor), LeftArgType, RightArgType>::type EvalLeftArgType;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
EvalLeftArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    static_cast<int>(Layout) == static_cast<int>(ColMajor), LeftArgType, RightArgType>::type EvalLeftArgType;$/;"	t	struct:Eigen::TensorEvaluator
EvalLeftArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^    Layout == ColMajor, LeftArgType, RightArgType>::type EvalLeftArgType;$/;"	t	struct:Eigen::TensorEvaluator
EvalLeftArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^    static_cast<int>(Layout) == static_cast<int>(ColMajor), LeftArgType, RightArgType>::type EvalLeftArgType;$/;"	t	struct:Eigen::TensorEvaluator
EvalRange	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^struct EvalRange {$/;"	s	namespace:Eigen::internal
EvalRange	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^struct EvalRange<Evaluator, Index, true> {$/;"	s	namespace:Eigen::internal
EvalReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::add_const_on_value_type<typename internal::eval<Derived>::type>::type EvalReturnType;$/;"	t	class:Eigen::DenseBase
EvalReverseIterator	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename evaluator<ArgType>::ReverseInnerIterator EvalReverseIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalRightArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    static_cast<int>(Layout) == static_cast<int>(ColMajor), RightArgType, LeftArgType>::type EvalRightArgType;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
EvalRightArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    static_cast<int>(Layout) == static_cast<int>(ColMajor), RightArgType, LeftArgType>::type EvalRightArgType;$/;"	t	struct:Eigen::TensorEvaluator
EvalRightArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^    Layout == ColMajor, RightArgType, LeftArgType>::type EvalRightArgType;$/;"	t	struct:Eigen::TensorEvaluator
EvalRightArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^    static_cast<int>(Layout) == static_cast<int>(ColMajor), RightArgType, LeftArgType>::type EvalRightArgType;$/;"	t	struct:Eigen::TensorEvaluator
EvalToRowMajor	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    EvalToRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
EvalToRowMajor	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    EvalToRowMajor = (LhsFlags & RhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon12
EvalToRowMajor	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        EvalToRowMajor = (RhsFlags & LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon34
EvalToTemp	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  explicit EvalToTemp(const ArgType& arg)$/;"	f	class:Eigen::internal::EvalToTemp
EvalToTemp	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^class EvalToTemp$/;"	c	namespace:Eigen::internal
EvaluatorFlags	tools/eigen/Eigen/src/Core/Matrix.h	/^    EvaluatorFlags = LinearAccessBit | DirectAccessBit | packet_access_bit | row_major_bit,$/;"	e	enum:Eigen::internal::traits::__anon293
EvaluatorType	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  typedef evaluator<XprType> EvaluatorType;$/;"	t	class:Eigen::internal::inner_iterator_selector
EvaluatorType	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  typedef internal::evaluator<XprType> EvaluatorType;$/;"	t	class:Eigen::InnerIterator
ExpReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_exp_op<Scalar>, const Derived> ExpReturnType;$/;"	t
ExpandMem	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  enum { ExpandMem = true };$/;"	e	enum:Eigen::internal::column_dfs_traits::__anon176
ExpandMem	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  enum { ExpandMem = false };$/;"	e	enum:Eigen::internal::panel_dfs_traits::__anon177
ExpressionTraits	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef traits<ExpressionType> ExpressionTraits;$/;"	t	struct:Eigen::internal::evaluator_base
ExpressionType	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionTypeNested	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::ref_selector<ExpressionType>::non_const_type ExpressionTypeNested;$/;"	t	class:Eigen::VectorwiseOp
ExpressionTypeNestedCleaned	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::remove_all<ExpressionTypeNested>::type ExpressionTypeNestedCleaned;$/;"	t	class:Eigen::VectorwiseOp
ExtendedType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct ExtendedType {$/;"	s	class:Eigen::VectorwiseOp
ExtractType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType>  ExtractType; \/\/ const to get rid of a compile error; anyway blas traits are only used on the RHS$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef const XprType& ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename Base::ExtractType ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
FATAL	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            FATAL,/;"	v	program:CBLAT2
FATAL	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            FATAL,/;"	v	program:CBLAT3
FATAL	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            FATAL,/;"	v	program:DBLAT2
FATAL	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            FATAL,/;"	v	program:DBLAT3
FATAL	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            FATAL,/;"	v	program:SBLAT2
FATAL	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            FATAL,/;"	v	program:SBLAT3
FATAL	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            FATAL,/;"	v	program:ZBLAT2
FATAL	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            FATAL,/;"	v	program:ZBLAT3
FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
FORBIDDEN_IDENTIFIER	tools/eigen/test/main.h	62;"	d
FREQUENCY	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	39;"	d
FVectorType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    typedef Matrix<Scalar,Dynamic,1> FVectorType;$/;"	t	class:Eigen::LevenbergMarquardt
FVectorType	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    typedef Matrix< Scalar, Dynamic, 1 > FVectorType;$/;"	t	class:Eigen::HybridNonLinearSolver
FVectorType	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    typedef Matrix< Scalar, Dynamic, 1 > FVectorType;$/;"	t	class:Eigen::LevenbergMarquardt
Factor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Factor = (RowFactor==Dynamic || ColFactor==Dynamic) ? Dynamic : RowFactor*ColFactor$/;"	e	enum:Eigen::internal::unary_evaluator::__anon663
FactorType	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseMatrix<Scalar,RowMajor,StorageIndex> FactorType;$/;"	t	class:Eigen::IncompleteLUT
FactorType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> FactorType;$/;"	t	class:Eigen::IncompleteCholesky
FactorType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef SparseMatrix<Scalar,RowMajor> FactorType;$/;"	t	class:Eigen::IncompleteLU
Fail	tools/eigen/test/ctorleak.cpp	/^  class Fail : public std::exception {};$/;"	c	struct:Foo	file:
FancySpheres	tools/eigen/demos/opengl/quaternion_demo.cpp	/^    FancySpheres()$/;"	f	class:FancySpheres
FancySpheres	tools/eigen/demos/opengl/quaternion_demo.cpp	/^class FancySpheres$/;"	c	file:
FileWriter	tools/SimpleIni.h	/^        FileWriter(FILE * a_file) : m_file(a_file) { }$/;"	f	class:CSimpleIniTempl::FileWriter
FileWriter	tools/SimpleIni.h	/^    class FileWriter : public OutputWriter {$/;"	c	class:CSimpleIniTempl
Fileexists	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline bool Fileexists(std::string file)$/;"	f	class:Eigen::MatrixMarketIterator
Finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  CoeffReturnType Finalize() {$/;"	f	class:Eigen::internal::BlockReducer
Finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typename Self::CoeffReturnType Finalize() {$/;"	f	class:Eigen::internal::BlockReducer
FindEntry	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::FindEntry($/;"	f	class:CSimpleIniTempl
FindFileComment	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::FindFileComment($/;"	f	class:CSimpleIniTempl
FixedSegmentReturnType	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	s
Flags	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    Flags = Flags0 & ~NestByRefBit$/;"	e	enum:Eigen::internal::traits::__anon295
Flags	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    Flags = Flags0 & ~NestByRefBit$/;"	e	enum:Eigen::internal::traits::__anon296
Flags	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
Flags	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon623
Flags	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon624
Flags	tools/eigen/Eigen/src/Core/Block.h	/^    Flags = (traits<XprType>::Flags & (DirectAccessBit | (InnerPanel?CompressedAccessBit:0))) | FlagsLvalueBit | FlagsRowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon246
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (Flags0 & ~RowMajorBit) | (LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::binary_evaluator::__anon655
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<ArgType>::Flags & (HereditaryBits | LinearAccessBit | DirectAccessBit)),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon656
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<ArgTypeNestedCleaned>::Flags & HereditaryBits & ~RowMajorBit) | (traits<XprType>::Flags & RowMajorBit),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon664
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<PlainObjectTypeCleaned>::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon653
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (traits<XprType>::Flags&RowMajorBit) | (evaluator<ArgType>::Flags&HereditaryBits),$/;"	e	enum:Eigen::internal::evaluator::__anon666
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (unsigned int)evaluator<ArgType>::Flags & (HereditaryBits | LinearAccessBit | DirectAccessBit) & ~RowMajorBit,$/;"	e	enum:Eigen::internal::evaluator::__anon669
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (unsigned int)evaluator<ThenMatrixType>::Flags & evaluator<ElseMatrixType>::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::evaluator::__anon662
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = Flags0 | FlagsLinearAccessBit | FlagsRowMajorBit,$/;"	e	enum:Eigen::internal::evaluator::__anon660
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = KeepsPacketAccess ? int(Flags1) : (int(Flags1) & ~PacketAccessBit),$/;"	e	enum:Eigen::internal::evaluator::__anon658
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags ^ RowMajorBit,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon652
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon654
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags,$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon667
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<Map<PlainObjectType, RefOptions, StrideType> >::Flags,$/;"	e	enum:Eigen::internal::evaluator::__anon659
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = int(Flags0) & (HereditaryBits | PacketAccessBit | LinearAccess),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
Flags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags = traits<Derived>::EvaluatorFlags,$/;"	e	enum:Eigen::internal::evaluator::__anon651
Flags	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    Flags = _LhsNested::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon618
Flags	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    Flags = traits<PlainObjectType>::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon673
Flags	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    Flags = _XprTypeNested::Flags & RowMajorBit $/;"	e	enum:Eigen::internal::traits::__anon248
Flags	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    Flags = traits<_MatrixTypeNested>::Flags & (RowMajorBit | FlagsLvalueBit | DirectAccessBit), \/\/ FIXME DirectAccessBit should not be handled by expressions$/;"	e	enum:Eigen::internal::traits::__anon379
Flags	tools/eigen/Eigen/src/Core/DenseBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::DenseBase::__anon582
Flags	tools/eigen/Eigen/src/Core/Diagonal.h	/^    Flags = (unsigned int)_MatrixTypeNested::Flags & (RowMajorBit | MaskLvalueBit | DirectAccessBit) & ~RowMajorBit, \/\/ FIXME DirectAccessBit should not be handled by expressions$/;"	e	enum:Eigen::internal::traits::__anon389
Flags	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^      Flags = NoPreferredStorageOrderBit$/;"	e	enum:Eigen::DiagonalBase::__anon250
Flags	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    Flags =  (traits<DiagonalVectorType>::Flags & LvalueBit) | NoPreferredStorageOrderBit$/;"	e	enum:Eigen::internal::traits::__anon252
Flags	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    Flags = LvalueBit | NoPreferredStorageOrderBit$/;"	e	enum:Eigen::internal::traits::__anon251
Flags	tools/eigen/Eigen/src/Core/Inverse.h	/^    Flags = BaseTraits::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon573
Flags	tools/eigen/Eigen/src/Core/Inverse.h	/^  enum { Flags = Base::Flags | EvalBeforeNestingBit };$/;"	e	enum:Eigen::internal::unary_evaluator::__anon574
Flags	tools/eigen/Eigen/src/Core/Map.h	/^    Flags = is_lvalue<PlainObjectType>::value ? int(Flags0) : (int(Flags0) & ~LvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon674
Flags	tools/eigen/Eigen/src/Core/Matrix.h	/^    Flags = compute_matrix_flags<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::ret,$/;"	e	enum:Eigen::internal::traits::__anon293
Flags	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      Flags = Traits::Flags,$/;"	e	enum:Eigen::PermutationBase::__anon670
Flags	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      Flags = Traits::Flags,$/;"	e	enum:Eigen::Transpose::__anon672
Flags	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon671
Flags	tools/eigen/Eigen/src/Core/Product.h	/^    Flags = (MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1) ? RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon391
Flags	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    Flags = ((HereditaryBits|_LinearAccessMask) & (unsigned int)(MatrixFlags)) | (_Vectorizable ? PacketAccessBit : 0),$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
Flags	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    Flags = ((unsigned int)(LhsFlags | RhsFlags) & HereditaryBits & ~RowMajorBit)$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
Flags	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon382
Flags	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon385
Flags	tools/eigen/Eigen/src/Core/Redux.h	/^    Flags = evaluator<XprType>::Flags & ~DirectAccessBit,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon637
Flags	tools/eigen/Eigen/src/Core/Ref.h	/^    Flags = traits<Map<_PlainObjectType, _Options, _StrideType> >::Flags | NestByRefBit,$/;"	e	enum:Eigen::internal::traits::__anon615
Flags	tools/eigen/Eigen/src/Core/Replicate.h	/^    Flags = IsRowMajor ? RowMajorBit : 0$/;"	e	enum:Eigen::internal::traits::__anon261
Flags	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    Flags = (traits<typename traits<Derived>::ReturnType>::Flags$/;"	e	enum:Eigen::internal::traits::__anon262
Flags	tools/eigen/Eigen/src/Core/Reverse.h	/^    Flags = _MatrixTypeNested::Flags & (RowMajorBit | LvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon255
Flags	tools/eigen/Eigen/src/Core/Select.h	/^    Flags = (unsigned int)ThenMatrixType::Flags & ElseMatrixType::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon373
Flags	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^      Flags = internal::traits<SelfAdjointView>::Flags$/;"	e	enum:Eigen::SelfAdjointView::__anon576
Flags	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    Flags =  MatrixTypeNestedCleaned::Flags & (HereditaryBits|FlagsLvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon575
Flags	tools/eigen/Eigen/src/Core/Solve.h	/^    Flags = BaseTraits::Flags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon254
Flags	tools/eigen/Eigen/src/Core/Transpose.h	/^    Flags = Flags1 ^ RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon374
Flags	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      Flags = internal::traits<TriangularView>::Flags,$/;"	e	enum:Eigen::TriangularView::__anon299
Flags	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      Flags = internal::traits<TriangularViewType>::Flags$/;"	e	enum:Eigen::TriangularViewImpl::__anon300
Flags	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    Flags = (MatrixTypeNestedCleaned::Flags & (HereditaryBits | FlagsLvalueBit) & (~(PacketAccessBit | DirectAccessBit | LinearAccessBit)))$/;"	e	enum:Eigen::internal::traits::__anon298
Flags	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    Flags = RowsAtCompileTime == 1 ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon577
Flags	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon688
Flags	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    Flags = ColsAtCompileTime==1 ? (TmpFlags & ~RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon691
Flags	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^      Flags = TraitsBase::Flags & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon716
Flags	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    Flags = Eigen::internal::traits<Derived>::Flags$/;"	e	enum:Eigen::QuaternionBase::__anon713
Flags	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    Flags = LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon714
Flags	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon704
Flags	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon182
Flags	tools/eigen/Eigen/src/LU/FullPivLU.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon167
Flags	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    Flags = BaseTraits::Flags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon165
Flags	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon679
Flags	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon677
Flags	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon214
Flags	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Flags = Derived::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon208
Flags	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::binary_evaluator::__anon215
Flags	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::binary_evaluator::__anon216
Flags	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::binary_evaluator::__anon218
Flags	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::binary_evaluator::__anon220
Flags	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon239
Flags	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon240
Flags	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Flags = NeedToTranspose ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::sparse_dense_outer_product_evaluator::__anon191
Flags	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = Dynamic, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon204
Flags	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = Dynamic, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon203
Flags	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    Flags = TraitsBase::Flags & (~ (NestByRefBit | LvalueBit))$/;"	e	enum:Eigen::internal::traits::__anon234
Flags	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    Flags = TraitsBase::Flags & (~NestByRefBit)$/;"	e	enum:Eigen::internal::traits::__anon233
Flags	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon224
Flags	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon223
Flags	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = _Options | NestByRefBit | LvalueBit | CompressedAccessBit,$/;"	e	enum:Eigen::internal::traits::__anon222
Flags	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
Flags	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    Flags = (traits<SparseMatrix<MatScalar,MatOptions,MatIndex> >::Flags | CompressedAccessBit | NestByRefBit) & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon201
Flags	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    Flags = traits<SparseMatrix<MatScalar,MatOptions,MatIndex> >::Flags | CompressedAccessBit | NestByRefBit$/;"	e	enum:Eigen::internal::traits::__anon199
Flags	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon242
Flags	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon207
Flags	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    Flags = SparseVectorType::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon230
Flags	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    Flags = _Options | NestByRefBit | LvalueBit | (IsColVector ? 0 : RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon226
Flags	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon195
Flags	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon197
Flags	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    Flags = int(traits<MatrixType>::Flags) & (RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon194
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon90
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon82
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon95
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon98
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon103
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon88
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon72
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon73
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon56
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    Flags = (BaseTraits::Flags & ~AlignedBit) | (Options&Aligned ? AlignedBit : 0),$/;"	e	enum:Eigen::internal::traits::__anon111
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    Flags = (BaseTraits::Flags & ~AlignedBit) | (Options&Aligned ? AlignedBit : 0),$/;"	e	enum:Eigen::internal::traits::__anon112
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    Flags = compute_tensor_flags<Scalar_, Options_>::ret | (is_const<Scalar_>::value ? 0 : LvalueBit),$/;"	e	enum:Eigen::internal::traits::__anon109
Flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    Flags = compute_tensor_flags<Scalar_, Options_>::ret | (is_const<Scalar_>::value ? 0: LvalueBit),$/;"	e	enum:Eigen::internal::traits::__anon110
Flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int Flags = 0;$/;"	m	struct:Eigen::Symmetry
Flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int Flags = ConjugationFlag | NegationFlag;$/;"	m	struct:Eigen::AntiHermiticity
Flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int Flags = ConjugationFlag;$/;"	m	struct:Eigen::Hermiticity
Flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int Flags = NegationFlag;$/;"	m	struct:Eigen::AntiSymmetry
Flags	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    Flags = ((LhsFlags | RhsFlags) & HereditaryBits & RemovedBits)$/;"	e	enum:Eigen::internal::traits::__anon12
Flags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        Flags = SkylineBit | _Options,$/;"	e	enum:Eigen::internal::traits::__anon35
Flags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
Flags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        Flags = (int(LhsFlags | RhsFlags) & HereditaryBits & RemovedBits)$/;"	e	enum:Eigen::internal::traits::__anon34
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      Flags = BlockSparseMatrixT::Options,$/;"	e	enum:Eigen::BlockSparseMatrixView::__anon24
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      Flags = Options,$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      Flags = VectorType::Flags$/;"	e	enum:Eigen::BlockVectorReturn::__anon26
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      Flags = VectorType::Flags$/;"	e	enum:Eigen::BlockVectorView::__anon25
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      Flags = _Options$/;"	e	enum:Eigen::BlockSparseMatrix::BlockInnerIterator::__anon29
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon27
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Flags = _Options | NestByRefBit | LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon23
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    Flags = SparseMatrixType::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon17
Flags	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    Flags = _Options | NestByRefBit | LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon15
Flags0	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    Flags0 = traits<typename remove_all<typename ExpressionType::Nested>::type >::Flags,$/;"	e	enum:Eigen::internal::traits::__anon295
Flags0	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    Flags0 = traits<typename remove_all<typename ExpressionType::Nested>::type >::Flags,$/;"	e	enum:Eigen::internal::traits::__anon296
Flags0	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = (int(LhsFlags) | int(RhsFlags)) & ($/;"	e	enum:Eigen::internal::binary_evaluator::__anon655
Flags0	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = evaluator<ArgType>::Flags & ( (HereditaryBits & ~RowMajorBit) |$/;"	e	enum:Eigen::internal::evaluator::__anon660
Flags0	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = evaluator<ArgType>::Flags,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
Flags0	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = evaluator<PlainObjectType>::Flags,$/;"	e	enum:Eigen::internal::evaluator::__anon658
Flags0	tools/eigen/Eigen/src/Core/Map.h	/^    Flags0 = TraitsBase::Flags & (~NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon674
Flags0	tools/eigen/Eigen/src/Core/Transpose.h	/^    Flags0 = MatrixTypeNestedPlain::Flags & ~(LvalueBit | NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon374
Flags1	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    Flags1 = (bool(HasNoStride) || bool(PlainObjectType::IsVectorAtCompileTime))$/;"	e	enum:Eigen::internal::evaluator::__anon658
Flags1	tools/eigen/Eigen/src/Core/Transpose.h	/^    Flags1 = Flags0 | FlagsLvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon374
FlagsLinearAccessBit	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    FlagsLinearAccessBit = (RowsAtCompileTime == 1 || ColsAtCompileTime == 1 || (InnerPanel && (evaluator<ArgType>::Flags&LinearAccessBit))) ? LinearAccessBit : 0,    $/;"	e	enum:Eigen::internal::evaluator::__anon660
FlagsLvalueBit	tools/eigen/Eigen/src/Core/Block.h	/^    FlagsLvalueBit = is_lvalue<XprType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon246
FlagsLvalueBit	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon379
FlagsLvalueBit	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon575
FlagsLvalueBit	tools/eigen/Eigen/src/Core/Transpose.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon374
FlagsLvalueBit	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon298
FlagsRowMajorBit	tools/eigen/Eigen/src/Core/Block.h	/^    FlagsRowMajorBit = IsRowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon246
FlagsRowMajorBit	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    FlagsRowMajorBit = XprType::Flags&RowMajorBit,$/;"	e	enum:Eigen::internal::evaluator::__anon660
FloorReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_floor_op<Scalar>, const Derived> FloorReturnType;$/;"	t
Foo	tools/eigen/test/ctorleak.cpp	/^  Foo()$/;"	f	struct:Foo
Foo	tools/eigen/test/ctorleak.cpp	/^struct Foo$/;"	s	file:
ForceAlignedAccess	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC explicit inline ForceAlignedAccess(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ForceAlignedAccess
ForceAlignedAccess	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^template<typename ExpressionType> class ForceAlignedAccess$/;"	c	namespace:Eigen
ForceNonZeroDiag	tools/eigen/test/sparse.h	/^  ForceNonZeroDiag = 1,$/;"	e	enum:__anon722
ForceRealDiag	tools/eigen/test/sparse.h	/^  ForceRealDiag = 8$/;"	e	enum:__anon722
Forward	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    Forward,$/;"	e	enum:Eigen::NumericalDiffMode
Frame	tools/eigen/demos/opengl/camera.h	/^    inline Frame(const Eigen::Vector3f& pos = Eigen::Vector3f::Zero(),$/;"	f	class:Frame
Frame	tools/eigen/demos/opengl/camera.h	/^class Frame$/;"	c
FromTwoVectors	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^Quaternion<Scalar,Options> Quaternion<Scalar,Options>::FromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::Quaternion
FtolTooSmall	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        FtolTooSmall = 6,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
FtolTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        FtolTooSmall = 6,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
FullMatrixType	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename MatrixType::PlainObject FullMatrixType;$/;"	t	struct:Eigen::internal::traits
FullMatrixType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename MatrixType::PlainObject FullMatrixType;$/;"	t	struct:Eigen::internal::traits
FullPivHouseholderQR	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR()$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    explicit FullPivHouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename _MatrixType> class FullPivHouseholderQR$/;"	c	namespace:Eigen
FullPivHouseholderQRMatrixQReturnType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  FullPivHouseholderQRMatrixQReturnType(const MatrixType&       qr,$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
FullPivHouseholderQRMatrixQReturnType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename MatrixType> struct FullPivHouseholderQRMatrixQReturnType$/;"	s	namespace:Eigen::internal
FullPivHouseholderQRPreconditioner	tools/eigen/Eigen/src/Core/util/Constants.h	/^  FullPivHouseholderQRPreconditioner$/;"	e	enum:Eigen::QRPreconditioners
FullPivLU	tools/eigen/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU()$/;"	f	class:Eigen::FullPivLU
FullPivLU	tools/eigen/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(Index rows, Index cols)$/;"	f	class:Eigen::FullPivLU
FullPivLU	tools/eigen/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivLU
FullPivLU	tools/eigen/Eigen/src/LU/FullPivLU.h	/^template<typename _MatrixType> class FullPivLU$/;"	c	namespace:Eigen
FullPrecision	tools/eigen/Eigen/src/Core/IO.h	/^       FullPrecision = -2 };$/;"	e	enum:Eigen::__anon378
FullReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct FullReducer {$/;"	s	namespace:Eigen::internal
FullReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct FullReducer<Self, Op, GpuDevice, Vectorizable> {$/;"	s	namespace:Eigen::internal
FullReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct FullReducer<Self, Op, ThreadPoolDevice, false> {$/;"	s	namespace:Eigen::internal
FullReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct FullReducer<Self, Op, ThreadPoolDevice, true> {$/;"	s	namespace:Eigen::internal
FullReducerShard	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct FullReducerShard {$/;"	s	namespace:Eigen::internal
FullReducerShard	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct FullReducerShard<Eval, Op, true> {$/;"	s	namespace:Eigen::internal
FullReductionKernel	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^__global__ void FullReductionKernel(Reducer reducer, const Self input, Index num_coeffs,$/;"	f	namespace:Eigen::internal
FunctionWrapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^template <typename Function, typename... Args> struct FunctionWrapper$/;"	s	namespace:Eigen
Functor	tools/eigen/Eigen/src/Core/Swap.h	/^  typedef swap_assign_op<Scalar> Functor;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Functor	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef _Functor Functor;$/;"	t	class:Eigen::NumericalDiff
Functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  Functor() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:Functor
Functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  Functor(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:Functor
Functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct Functor$/;"	s	file:
Functor	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  Functor() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:Functor
Functor	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  Functor(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:Functor
Functor	tools/eigen/unsupported/test/NumericalDiff.cpp	/^struct Functor$/;"	s	file:
FunctorType	tools/eigen/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon547
FunctorType	tools/eigen/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon548
FunctorType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    typedef _FunctorType FunctorType;$/;"	t	class:Eigen::LevenbergMarquardt
G	tools/eigen/blas/testing/cblat2.f	/^      REAL               G(/;"	v	program:CBLAT2
G	tools/eigen/blas/testing/cblat3.f	/^      REAL               G(/;"	v	program:CBLAT3
G	tools/eigen/blas/testing/dblat2.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ), BET( NBEMAX ),$/;"	v	program:DBLAT2
G	tools/eigen/blas/testing/dblat3.f	/^     $                   CC( NMAX*NMAX ), CS( NMAX*NMAX ), CT( NMAX ),$/;"	v	program:DBLAT3
G	tools/eigen/blas/testing/sblat2.f	/^     $                   ALF( NALMAX ), AS( NMAX*NMAX ), BET( NBEMAX ),$/;"	v	program:SBLAT2
G	tools/eigen/blas/testing/sblat3.f	/^     $                   CC( NMAX*NMAX ), CS( NMAX*NMAX ), CT( NMAX ),$/;"	v	program:SBLAT3
G	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION   G(/;"	v	program:ZBLAT2
G	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION   G(/;"	v	program:ZBLAT3
G	tools/eigen/doc/snippets/Jacobi_makeGivens.cpp	/^JacobiRotation<float> G;$/;"	v
GEMM_SPECIALIZATION	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	49;"	d
GMM_INTERFACE_HH	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	19;"	d
GMRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  GMRES() : Base(), m_restart(30) {}$/;"	f	class:Eigen::GMRES
GMRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  GMRES(const MatrixType& A) : Base(A), m_restart(30) {}$/;"	f	class:Eigen::GMRES
GMRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^class GMRES : public IterativeSolverBase<GMRES<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
GPUContext	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  GPUContext(const Eigen::TensorMap<Eigen::Tensor<float, 3> >& in1, Eigen::TensorMap<Eigen::Tensor<float, 3> >& in2, Eigen::TensorMap<Eigen::Tensor<float, 3> >& out) : in1_(in1), in2_(in2), out_(out), gpu_device_(&stream_) {$/;"	f	struct:GPUContext
GPUContext	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^struct GPUContext {$/;"	s	file:
GaussianGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC GaussianGenerator(const array<T, NumDims>& means,$/;"	f	class:Eigen::internal::GaussianGenerator
GaussianGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^class GaussianGenerator {$/;"	c	namespace:Eigen::internal
GemmParallelInfo	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^  GemmParallelInfo() : sync(-1), users(0), lhs_start(0), lhs_length(0) {}$/;"	f	struct:Eigen::internal::GemmParallelInfo
GemmParallelInfo	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^template<typename Index> struct GemmParallelInfo$/;"	s	namespace:Eigen::internal
GemmProduct	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
GemvProduct	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
GenEigMask	tools/eigen/Eigen/src/Core/util/Constants.h	/^  GenEigMask = Ax_lBx | ABx_lx | BAx_lx$/;"	e	enum:Eigen::DecompositionOptions
GeneralizedEigenSolver	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver() : m_eivec(), m_alphas(), m_betas(), m_isInitialized(false), m_realQZ(), m_matS(), m_tmp() {}$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    explicit GeneralizedEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    explicit GeneralizedEigenSolver(const MatrixType& A, const MatrixType& B, bool computeEigenvectors = true)$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^template<typename _MatrixType> class GeneralizedEigenSolver$/;"	c	namespace:Eigen
GeneralizedSelfAdjointEigenSolver	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver() : Base() {}$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver(const MatrixType& matA, const MatrixType& matB,$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    explicit GeneralizedSelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^class GeneralizedSelfAdjointEigenSolver : public SelfAdjointEigenSolver<_MatrixType>$/;"	c	namespace:Eigen
Generator	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^      constexpr inline Generator(int one_, int two_, int flags_) : one(one_), two(two_), flags(flags_) {}$/;"	f	struct:Eigen::DynamicSGroup::Generator
Generator	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    struct Generator {$/;"	s	class:Eigen::DynamicSGroup
Generator1D	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^  Generator1D() { }$/;"	f	struct:Generator1D
Generator1D	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^struct Generator1D {$/;"	s	file:
Generator2D	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^  Generator2D() { }$/;"	f	struct:Generator2D
Generator2D	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^struct Generator2D {$/;"	s	file:
Generic	tools/eigen/Eigen/src/Core/util/Constants.h	/^    Generic = 0x0,$/;"	e	enum:Eigen::Architecture::Type
GenericDimReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct GenericDimReducer {$/;"	s	namespace:Eigen::internal
GenericDimReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct GenericDimReducer<0, Self, Op> {$/;"	s	namespace:Eigen::internal
GenericNumTraits	tools/eigen/Eigen/src/Core/NumTraits.h	/^template<typename T> struct GenericNumTraits$/;"	s	namespace:Eigen
GetAction	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
GetAllKeys	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetAllKeys($/;"	f	class:CSimpleIniTempl
GetAllSections	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetAllSections($/;"	f	class:CSimpleIniTempl
GetAllValues	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetAllValues($/;"	f	class:CSimpleIniTempl
GetBoolValue	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetBoolValue($/;"	f	class:CSimpleIniTempl
GetConverter	tools/SimpleIni.h	/^    Converter GetConverter() const {$/;"	f	class:CSimpleIniTempl
GetDifferentType	tools/eigen/test/main.h	/^template<> struct GetDifferentType<double> { typedef float type; };$/;"	s
GetDifferentType	tools/eigen/test/main.h	/^template<> struct GetDifferentType<float> { typedef double type; };$/;"	s
GetDifferentType	tools/eigen/test/main.h	/^template<typename T> struct GetDifferentType<std::complex<T> >$/;"	s
GetDoubleValue	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetDoubleValue($/;"	f	class:CSimpleIniTempl
GetKernelSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^struct GetKernelSize {$/;"	s	namespace:Eigen
GetKernelSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^struct GetKernelSize<Dynamic> {$/;"	s	namespace:Eigen
GetLongValue	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetLongValue($/;"	f	class:CSimpleIniTempl
GetMarketLine	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline bool GetMarketLine (std::stringstream& line, Index& M, Index& N, Index& i, Index& j, Scalar& value)$/;"	f	namespace:Eigen::internal
GetMarketLine	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline bool GetMarketLine (std::stringstream& line, Index& M, Index& N, Index& i, Index& j, std::complex<Scalar>& value)$/;"	f	namespace:Eigen::internal
GetSection	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetSection($/;"	f	class:CSimpleIniTempl
GetSectionSize	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetSectionSize($/;"	f	class:CSimpleIniTempl
GetValue	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::GetValue($/;"	f	class:CSimpleIniTempl
GetVectorElt	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void  GetVectorElt (const std::string& line, RealScalar& val)$/;"	f	namespace:Eigen::internal
GetVectorElt	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void GetVectorElt (const std::string& line, std::complex<RealScalar>& val)$/;"	f	namespace:Eigen::internal
Getnextvalidmatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    void Getnextvalidmatrix( )$/;"	f	class:Eigen::MatrixMarketIterator
GlMatrixHelper	tools/eigen/demos/opengl/gpuhelper.h	/^template<int _Flags> struct GlMatrixHelper<false,_Flags>$/;"	s
GlMatrixHelper	tools/eigen/demos/opengl/gpuhelper.h	/^template<int _Flags> struct GlMatrixHelper<true,_Flags>$/;"	s
GlobalImagFlag	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  GlobalImagFlag         = 0x02,$/;"	e	enum:Eigen::__anon50
GlobalLU_t	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef LU_GlobalLU_t<IndexVector, ScalarVector> GlobalLU_t; $/;"	t	class:Eigen::internal::SparseLUImpl
GlobalRealFlag	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  GlobalRealFlag         = 0x01,$/;"	e	enum:Eigen::__anon50
GlobalZeroFlag	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  GlobalZeroFlag         = 0x03$/;"	e	enum:Eigen::__anon50
GmmDynSparse	tools/eigen/bench/BenchSparseUtil.h	/^typedef gmm::col_matrix< gmm::wsvector<Scalar> > GmmDynSparse;$/;"	t
GmmSparse	tools/eigen/bench/BenchSparseUtil.h	/^typedef gmm::csc_matrix<Scalar> GmmSparse;$/;"	t
GoogleDenseHashMapTraits	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^template<typename Scalar> struct GoogleDenseHashMapTraits$/;"	s	namespace:Eigen
GoogleSparseHashMapTraits	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^template<typename Scalar> struct GoogleSparseHashMapTraits$/;"	s	namespace:Eigen
GpuDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  explicit GpuDevice(const StreamInterface* stream) : stream_(stream) {$/;"	f	struct:Eigen::GpuDevice
GpuDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^struct GpuDevice {$/;"	s	namespace:Eigen
GpuHelper	tools/eigen/demos/opengl/gpuhelper.cpp	/^GpuHelper::GpuHelper()$/;"	f	class:GpuHelper
GpuHelper	tools/eigen/demos/opengl/gpuhelper.h	/^class GpuHelper$/;"	c
GroupElement	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    struct GroupElement {$/;"	s	class:Eigen::DynamicSGroup
GtolTooSmall	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        GtolTooSmall = 8,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
GtolTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        GtolTooSmall = 8,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
H	tools/eigen/doc/snippets/HessenbergDecomposition_matrixH.cpp	/^MatrixXf H = hessOfA.matrixH();$/;"	v
H0	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^Matrix3d H0 = Matrix3d::Identity() - h(0) * v0 * v0.adjoint();$/;"	v
H1	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^Matrix3d H1 = Matrix3d::Identity() - h(1) * v1 * v1.adjoint();$/;"	v
H2	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^Matrix3d H2 = Matrix3d::Identity() - h(2) * v2 * v2.adjoint();$/;"	v
HALF	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   ZERO, HALF,/;"	v	program:DBLAT2
HALF	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   ZERO, HALF,/;"	v	program:DBLAT3
HALF	tools/eigen/blas/testing/sblat2.f	/^      REAL               ZERO, HALF,/;"	v	program:SBLAT2
HALF	tools/eigen/blas/testing/sblat3.f	/^      REAL               ZERO, HALF,/;"	v	program:SBLAT3
HCoeffsType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::ColPivHouseholderQR
HCoeffsType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::FullPivHouseholderQR
HCoeffsType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
HCoeffsType	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::HouseholderQR
HDim	tools/eigen/Eigen/src/Geometry/Transform.h	/^    HDim = Transform::HDim,$/;"	e	enum:Eigen::internal::transform_traits::__anon703
HDim	tools/eigen/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon708
HDim	tools/eigen/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon709
HDim	tools/eigen/Eigen/src/Geometry/Transform.h	/^    HDim = _Dim+1,  \/\/\/< size of a respective homogeneous vector$/;"	e	enum:Eigen::Transform::__anon705
HEADER	tools/eigen/blas/testing/cblat1.f	/^      SUBROUTINE HEADER$/;"	s
HEADER	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE HEADER$/;"	s
HEADER	tools/eigen/blas/testing/sblat1.f	/^      SUBROUTINE HEADER$/;"	s
HEADER	tools/eigen/blas/testing/zblat1.f	/^      SUBROUTINE HEADER$/;"	s
HERE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	57;"	d
HERE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	74;"	d
HEREWEARE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	21;"	d
HNormalizedReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^                const ConstStartMinusOne > HNormalizedReturnType;$/;"	t	class:Eigen::MatrixBase
HNormalizedReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^            HNormalizedReturnType;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Block	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Block;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Factors	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Factors;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Size	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_Size = Direction==Vertical ? internal::traits<ExpressionType>::RowsAtCompileTime$/;"	e	enum:Eigen::VectorwiseOp::__anon580
HNormalized_SizeMinusOne	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_SizeMinusOne = HNormalized_Size==Dynamic ? Dynamic : HNormalized_Size-1$/;"	e	enum:Eigen::VectorwiseOp::__anon580
HalfLength	tools/eigen/Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon632
HalfLength	tools/eigen/Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon634
HalfPacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::half HalfPacket;$/;"	t	class:Eigen::internal::BlasLinearMapper
HalfPacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::half HalfPacket;$/;"	t	class:Eigen::internal::blas_data_mapper
HalfPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename packet_traits<Scalar>::half HalfPacket;$/;"	t	class:Eigen::internal::TensorContractionInputMapper
HalfPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename packet_traits<Scalar>::half HalfPacket;$/;"	t	class:Eigen::internal::TensorContractionSubMapper
HalfPacketSize	tools/eigen/test/vectorization_logic.cpp	/^    HalfPacketSize = internal::unpacket_traits<HalfPacketType>::size$/;"	e	enum:vectorization_logic::__anon720	file:
HalfPacketType	tools/eigen/test/vectorization_logic.cpp	/^  typedef typename internal::unpacket_traits<PacketType>::half HalfPacketType;$/;"	t	struct:vectorization_logic	file:
HasACos	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasACos   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasASin	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasASin   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasATan	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasATan   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasAbs	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasAbs	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasAbs	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasAbs	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasAbs	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasAbs	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasAbs	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasAbs	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasAbs	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasAbs	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasAbs2	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasAbs2	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasAbs2	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasAbs2	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasAbs2	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasAbs2	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasAbs2	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasAbs2	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasAbs2	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasAbs2	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasAdd	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasAdd	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasAdd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasAdd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasAdd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasAdd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasAdd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasAdd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasAdd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasAdd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasArg	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasArg    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasBlend	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasBlend  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasBlend	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasBlend	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon367
HasBlend	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBlend = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasBlend	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBlend = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
HasBlend	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasBlend	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasBlend	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon342
HasBlend	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon343
HasCeil	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasCeil   = 0$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasConj	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasConj	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasCos	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasCos    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasCos	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasCos	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
HasCos	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasCos	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon351
HasCos	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
HasCos	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCos  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasCosh	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasCosh    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasDirectAccess	tools/eigen/Eigen/src/Core/Ref.h	/^      HasDirectAccess = internal::has_direct_access<Derived>::ret,$/;"	e	enum:Eigen::internal::traits::match::__anon616
HasDiv	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasDiv    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasDiv	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasDiv	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasDiv	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasDiv	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon367
HasDiv	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasDiv	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasDiv	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
HasDiv	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon328
HasDiv	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasDiv	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
HasDiv	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasDiv	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasDiv	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon351
HasDiv	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
HasDiv	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasDiv	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasDiv	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasDiv	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon342
HasExp	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasExp    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasExp	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasExp	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon367
HasExp	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
HasExp	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon328
HasExp	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasExp	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
HasExp	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasExp  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
HasExp	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon351
HasExp	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasExp	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon342
HasFloor	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasFloor  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasHalfPacket	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasHalfPacket = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon258
HasHalfPacket	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon367
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon328
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasHalfPacket=0,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0 \/\/ Packet2i intrinsics not implemented yet$/;"	e	enum:Eigen::internal::packet_traits::__anon352
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0, \/\/ Packet2f intrinsics not implemented yet$/;"	e	enum:Eigen::internal::packet_traits::__anon351
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasHalfPacket	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon342
HasLog	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasLog    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasLog	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasLog	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
HasLog	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasLog	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
HasLog	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon351
HasLog	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
HasLog	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasLog10	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasLog10    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasMax	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasMax	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasMax	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasMax	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasMax	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasMax	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasMax	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasMax	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasMax	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasMax	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasMin	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasMin	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasMin	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasMin	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasMin	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasMin	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasMin	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasMin	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasMin	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasMin	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasMul	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasMul	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasMul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasMul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasMul	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasMul	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasMul	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasMul	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasMul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasMul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasNegate	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasNegate	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasNegate	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasNegate	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasNegate	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasNegate	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasNegate	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasNegate	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasNegate	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasNegate	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasNoInnerStride	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    HasNoInnerStride = InnerStrideAtCompileTime == 1,$/;"	e	enum:Eigen::internal::evaluator::__anon658
HasNoOuterStride	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    HasNoOuterStride = StrideType::OuterStrideAtCompileTime == 0,$/;"	e	enum:Eigen::internal::evaluator::__anon658
HasNoStride	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    HasNoStride = HasNoInnerStride && HasNoOuterStride,$/;"	e	enum:Eigen::internal::evaluator::__anon658
HasOptimizedImplementation	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool HasOptimizedImplementation = !Op::IsStateful &&$/;"	m	struct:Eigen::internal::FullReducer
HasOptimizedImplementation	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool HasOptimizedImplementation = !Op::IsStateful;$/;"	m	struct:Eigen::internal::FullReducer
HasOptimizedImplementation	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool HasOptimizedImplementation = false;$/;"	m	struct:Eigen::internal::FullReducer
HasPow	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasPow    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasRound	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasRound  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasRsqrt	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasRsqrt  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasRsqrt	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasRsqrt	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon367
HasRsqrt	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasRsqrt	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
HasRsqrt	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasRsqrt	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon342
HasSameStorageOrderAsArgType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    HasSameStorageOrderAsArgType = (IsRowMajor == ArgTypeIsRowMajor),$/;"	e	enum:Eigen::internal::evaluator::__anon660
HasSameStorageOrderAsXprType	tools/eigen/Eigen/src/Core/Block.h	/^    HasSameStorageOrderAsXprType = (IsRowMajor == XprTypeIsRowMajor),$/;"	e	enum:Eigen::internal::traits::__anon246
HasSetLinear	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasSetLinear	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasSetLinear	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasSetLinear	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasSetLinear	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasSetLinear	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasSetLinear	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasSetLinear	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasSetLinear	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasSetLinear	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasSin	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasSin    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasSin	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSin  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasSin	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
HasSin	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasSin	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon351
HasSin	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
HasSin	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSin  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasSinh	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasSinh    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasSqrt	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasSqrt   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasSqrt	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
HasSqrt	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon367
HasSqrt	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon324
HasSqrt	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon328
HasSqrt	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
HasSqrt	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
HasSqrt	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon351
HasSqrt	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon355
HasSqrt	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
HasSqrt	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon342
HasSub	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon259
HasSub	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasSub	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
HasSub	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
HasSub	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
HasSub	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
HasSub	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
HasSub	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
HasSub	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
HasSub	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
HasTan	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasTan    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasTanh	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    HasTanh    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon257
HasUnitDiag	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon263
HasUnitDiag	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon264
HasUnitDiag	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^           HasUnitDiag = (Mode&UnitDiag) ? 1 : 0$/;"	e	enum:Eigen::TriangularViewImpl::__anon205
HasUnitDiag	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^         HasUnitDiag = (Mode&UnitDiag) ? 1 : 0$/;"	e	enum:Eigen::internal::unary_evaluator::__anon206
HasUnitDiag	tools/eigen/blas/PackedTriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:internal::packed_triangular_matrix_vector_product::__anon138
HasUnitDiag	tools/eigen/blas/PackedTriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:internal::packed_triangular_matrix_vector_product::__anon139
HasUsableDirectAccess	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^    HasUsableDirectAccess = (    (int(XprType::Flags)&DirectAccessBit)$/;"	e	enum:Eigen::internal::blas_traits::__anon555
HasZeroDiag	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon263
HasZeroDiag	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon264
HasZeroDiag	tools/eigen/blas/PackedTriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:internal::packed_triangular_matrix_vector_product::__anon138
HasZeroDiag	tools/eigen/blas/PackedTriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:internal::packed_triangular_matrix_vector_product::__anon139
HashMapType	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    typedef typename MapTraits<ScalarWrapper>::Type HashMapType;$/;"	t	class:Eigen::RandomSetter
HeadType	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef T HeadType;$/;"	t	struct:Eigen::internal::type_list
HereditaryBits	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int HereditaryBits = RowMajorBit$/;"	m	namespace:Eigen
Hermiticity	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct Hermiticity$/;"	s	namespace:Eigen
HessenbergDecomposition	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    explicit HessenbergDecomposition(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    explicit HessenbergDecomposition(const MatrixType& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename _MatrixType> class HessenbergDecomposition$/;"	c	namespace:Eigen
HessenbergDecompositionMatrixHReturnType	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecompositionMatrixHReturnType(const HessenbergDecomposition<MatrixType>& hess) : m_hess(hess) { }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
HessenbergDecompositionMatrixHReturnType	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename MatrixType> struct HessenbergDecompositionMatrixHReturnType$/;"	s	namespace:Eigen::internal
Homogeneous	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    explicit inline Homogeneous(const MatrixType& matrix)$/;"	f	class:Eigen::Homogeneous
Homogeneous	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^template<typename MatrixType,int _Direction> class Homogeneous$/;"	c	namespace:Eigen
HomogeneousDimension	tools/eigen/Eigen/src/Geometry/Umeyama.h	/^    HomogeneousDimension = int(MinRowsAtCompileTime) == Dynamic ? Dynamic : int(MinRowsAtCompileTime)+1$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon696
HomogeneousReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef Homogeneous<Derived, HomogeneousReturnTypeDirection> HomogeneousReturnType;$/;"	t	class:Eigen::MatrixBase
HomogeneousReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef Homogeneous<ExpressionType,Direction> HomogeneousReturnType;$/;"	t	class:Eigen::VectorwiseOp
HomogeneousReturnTypeDirection	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    enum { HomogeneousReturnTypeDirection = ColsAtCompileTime==1&&RowsAtCompileTime==1 ? ((internal::traits<Derived>::Flags&RowMajorBit)==RowMajorBit ? Horizontal : Vertical)$/;"	e	enum:Eigen::MatrixBase::__anon371
HomogeneousShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct HomogeneousShape       { static std::string debugName() { return "HomogeneousShape"; } };$/;"	s	namespace:Eigen
Horizontal	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Horizontal, $/;"	e	enum:Eigen::DirectionType
HouseholderQR	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR() : m_qr(), m_hCoeffs(), m_temp(), m_isInitialized(false) {}$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    explicit HouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^template<typename _MatrixType> class HouseholderQR$/;"	c	namespace:Eigen
HouseholderQRPreconditioner	tools/eigen/Eigen/src/Core/util/Constants.h	/^  HouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
HouseholderSequence	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const HouseholderSequence& other)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^template<typename VectorsType, typename CoeffsType, int Side> class HouseholderSequence$/;"	c	namespace:Eigen
HouseholderSequenceShape	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^struct HouseholderSequenceShape {};$/;"	s	namespace:Eigen::internal
HouseholderSequenceType	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename CoeffVectorType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::HessenbergDecomposition
HouseholderSequenceType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename CoeffVectorType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::Tridiagonalization
HouseholderSequenceType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::HouseholderSequenceType HouseholderSequenceType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
HouseholderSequenceType	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheLeft> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheRight> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename HCoeffsType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::ColPivHouseholderQR
HouseholderSequenceType	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename HCoeffsType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::HouseholderQR
HouseholderUSequenceType	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderUSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HouseholderVSequenceType	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderVSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HybridNonLinearSolver	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    HybridNonLinearSolver(FunctorType &_functor)$/;"	f	class:Eigen::HybridNonLinearSolver
HybridNonLinearSolver	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^class HybridNonLinearSolver$/;"	c	namespace:Eigen
HybridNonLinearSolverSpace	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^namespace HybridNonLinearSolverSpace { $/;"	n	namespace:Eigen
Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  Hyperplane(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  explicit Hyperplane(const ParametrizedLine<Scalar, AmbientDimAtCompileTime>& parametrized)$/;"	f	class:Eigen::Hyperplane
Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, const Scalar& d)$/;"	f	class:Eigen::Hyperplane
Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, const VectorType& e)$/;"	f	class:Eigen::Hyperplane
Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(Index _dim) : m_coeffs(_dim+1) {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(const Hyperplane<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^class Hyperplane$/;"	c	namespace:Eigen
HypotNormReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_hypotNorm,RealScalar>::Type HypotNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
I	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^    I = IsLower ? Index : Size - Index - 1,$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon649
I	tools/eigen/blas/testing/cblat2.f	/^      IN/;"	v	program:CBLAT2
I	tools/eigen/blas/testing/cblat3.f	/^      IN/;"	v	program:CBLAT3
I	tools/eigen/blas/testing/dblat2.f	/^      IN/;"	v	program:DBLAT2
I	tools/eigen/blas/testing/dblat3.f	/^      IN/;"	v	program:DBLAT3
I	tools/eigen/blas/testing/sblat2.f	/^      IN/;"	v	program:SBLAT2
I	tools/eigen/blas/testing/sblat3.f	/^      IN/;"	v	program:SBLAT3
I	tools/eigen/blas/testing/zblat2.f	/^      IN/;"	v	program:ZBLAT2
I	tools/eigen/blas/testing/zblat3.f	/^      IN/;"	v	program:ZBLAT3
IC	tools/eigen/blas/testing/cblat1.f	/^      INTEGER          IC$/;"	v	program:CBLAT1
IC	tools/eigen/blas/testing/dblat1.f	/^      INTEGER          IC$/;"	v	program:DBLAT1
IC	tools/eigen/blas/testing/sblat1.f	/^      INTEGER          IC$/;"	v	program:SBLAT1
IC	tools/eigen/blas/testing/zblat1.f	/^      INTEGER          IC$/;"	v	program:ZBLAT1
ICASE	tools/eigen/blas/testing/cblat1.f	/^      INTEGER          ICASE,/;"	v	program:CBLAT1
ICASE	tools/eigen/blas/testing/dblat1.f	/^      INTEGER          ICASE,/;"	v	program:DBLAT1
ICASE	tools/eigen/blas/testing/sblat1.f	/^      INTEGER          ICASE,/;"	v	program:SBLAT1
ICASE	tools/eigen/blas/testing/zblat1.f	/^      INTEGER          ICASE,/;"	v	program:ZBLAT1
IDIM	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            IDIM(/;"	v	program:CBLAT2
IDIM	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            IDIM(/;"	v	program:CBLAT3
IDIM	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            IDIM(/;"	v	program:DBLAT2
IDIM	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            IDIM(/;"	v	program:DBLAT3
IDIM	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            IDIM(/;"	v	program:SBLAT2
IDIM	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            IDIM(/;"	v	program:SBLAT3
IDIM	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            IDIM(/;"	v	program:ZBLAT2
IDIM	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            IDIM(/;"	v	program:ZBLAT3
ILACLC	tools/eigen/lapack/ilaclc.f	/^      INTEGER FUNCTION ILACLC(/;"	f
ILACLR	tools/eigen/lapack/ilaclr.f	/^      INTEGER FUNCTION ILACLR(/;"	f
ILADLC	tools/eigen/lapack/iladlc.f	/^      INTEGER FUNCTION ILADLC(/;"	f
ILADLR	tools/eigen/lapack/iladlr.f	/^      INTEGER FUNCTION ILADLR(/;"	f
ILASLC	tools/eigen/lapack/ilaslc.f	/^      INTEGER FUNCTION ILASLC(/;"	f
ILASLR	tools/eigen/lapack/ilaslr.f	/^      INTEGER FUNCTION ILASLR(/;"	f
ILAZLC	tools/eigen/lapack/ilazlc.f	/^      INTEGER FUNCTION ILAZLC(/;"	f
ILAZLR	tools/eigen/lapack/ilazlr.f	/^      INTEGER FUNCTION ILAZLR(/;"	f
IMPLICIT_CONVERSION_TO_SCALAR_IS_FOR_INNER_PRODUCT_ONLY	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        IMPLICIT_CONVERSION_TO_SCALAR_IS_FOR_INNER_PRODUCT_ONLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
INC	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            IDIM( NIDMAX ), INC(/;"	v	program:CBLAT2
INC	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            IDIM( NIDMAX ), INC(/;"	v	program:DBLAT2
INC	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            IDIM( NIDMAX ), INC(/;"	v	program:SBLAT2
INC	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            IDIM( NIDMAX ), INC(/;"	v	program:ZBLAT2
INCLUDED_SimpleIni_h	tools/SimpleIni.h	196;"	d
INCMAX	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NMAX, INCMAX$/;"	v	program:CBLAT2
INCMAX	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NMAX, INCMAX$/;"	v	program:DBLAT2
INCMAX	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NMAX, INCMAX$/;"	v	program:SBLAT2
INCMAX	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NMAX, INCMAX$/;"	v	program:ZBLAT2
INCX	tools/eigen/blas/testing/cblat1.f	/^      INTEGER          ICASE, INCX,/;"	v	program:CBLAT1
INCX	tools/eigen/blas/testing/dblat1.f	/^      INTEGER          ICASE, INCX,/;"	v	program:DBLAT1
INCX	tools/eigen/blas/testing/sblat1.f	/^      INTEGER          ICASE, INCX,/;"	v	program:SBLAT1
INCX	tools/eigen/blas/testing/zblat1.f	/^      INTEGER          ICASE, INCX,/;"	v	program:ZBLAT1
INCY	tools/eigen/blas/testing/cblat1.f	/^      INTEGER          ICASE, INCX, INCY,/;"	v	program:CBLAT1
INCY	tools/eigen/blas/testing/dblat1.f	/^      INTEGER          ICASE, INCX, INCY,/;"	v	program:DBLAT1
INCY	tools/eigen/blas/testing/sblat1.f	/^      INTEGER          ICASE, INCX, INCY,/;"	v	program:SBLAT1
INCY	tools/eigen/blas/testing/zblat1.f	/^      INTEGER          ICASE, INCX, INCY,/;"	v	program:ZBLAT1
INFOC	tools/eigen/blas/testing/cblat2.f	1143;"	c	subroutine:CCHK3
INFOC	tools/eigen/blas/testing/cblat2.f	115;"	c	program:CBLAT2
INFOC	tools/eigen/blas/testing/cblat2.f	1505;"	c	subroutine:CCHK4
INFOC	tools/eigen/blas/testing/cblat2.f	1783;"	c	subroutine:CCHK5
INFOC	tools/eigen/blas/testing/cblat2.f	2068;"	c	subroutine:CCHK6
INFOC	tools/eigen/blas/testing/cblat2.f	2363;"	c	subroutine:CCHKE
INFOC	tools/eigen/blas/testing/cblat2.f	3213;"	c	subroutine:XERBLA
INFOC	tools/eigen/blas/testing/cblat2.f	453;"	c	subroutine:CCHK1
INFOC	tools/eigen/blas/testing/cblat2.f	797;"	c	subroutine:CCHK2
INFOC	tools/eigen/blas/testing/cblat3.f	1294;"	c	subroutine:CCHK4
INFOC	tools/eigen/blas/testing/cblat3.f	1626;"	c	subroutine:CCHK5
INFOC	tools/eigen/blas/testing/cblat3.f	1974;"	c	subroutine:CCHKE
INFOC	tools/eigen/blas/testing/cblat3.f	3411;"	c	subroutine:XERBLA
INFOC	tools/eigen/blas/testing/cblat3.f	420;"	c	subroutine:CCHK1
INFOC	tools/eigen/blas/testing/cblat3.f	705;"	c	subroutine:CCHK2
INFOC	tools/eigen/blas/testing/cblat3.f	94;"	c	program:CBLAT3
INFOC	tools/eigen/blas/testing/cblat3.f	985;"	c	subroutine:CCHK3
INFOC	tools/eigen/blas/testing/dblat2.f	111;"	c	program:DBLAT2
INFOC	tools/eigen/blas/testing/dblat2.f	1123;"	c	subroutine:DCHK3
INFOC	tools/eigen/blas/testing/dblat2.f	1480;"	c	subroutine:DCHK4
INFOC	tools/eigen/blas/testing/dblat2.f	1742;"	c	subroutine:DCHK5
INFOC	tools/eigen/blas/testing/dblat2.f	2021;"	c	subroutine:DCHK6
INFOC	tools/eigen/blas/testing/dblat2.f	2313;"	c	subroutine:DCHKE
INFOC	tools/eigen/blas/testing/dblat2.f	3110;"	c	subroutine:XERBLA
INFOC	tools/eigen/blas/testing/dblat2.f	443;"	c	subroutine:DCHK1
INFOC	tools/eigen/blas/testing/dblat2.f	783;"	c	subroutine:DCHK2
INFOC	tools/eigen/blas/testing/dblat3.f	1263;"	c	subroutine:DCHK4
INFOC	tools/eigen/blas/testing/dblat3.f	1538;"	c	subroutine:DCHK5
INFOC	tools/eigen/blas/testing/dblat3.f	1829;"	c	subroutine:DCHKE
INFOC	tools/eigen/blas/testing/dblat3.f	2795;"	c	subroutine:XERBLA
INFOC	tools/eigen/blas/testing/dblat3.f	406;"	c	subroutine:DCHK1
INFOC	tools/eigen/blas/testing/dblat3.f	687;"	c	subroutine:DCHK2
INFOC	tools/eigen/blas/testing/dblat3.f	88;"	c	program:DBLAT3
INFOC	tools/eigen/blas/testing/dblat3.f	958;"	c	subroutine:DCHK3
INFOC	tools/eigen/blas/testing/sblat2.f	111;"	c	program:SBLAT2
INFOC	tools/eigen/blas/testing/sblat2.f	1123;"	c	subroutine:SCHK3
INFOC	tools/eigen/blas/testing/sblat2.f	1480;"	c	subroutine:SCHK4
INFOC	tools/eigen/blas/testing/sblat2.f	1742;"	c	subroutine:SCHK5
INFOC	tools/eigen/blas/testing/sblat2.f	2021;"	c	subroutine:SCHK6
INFOC	tools/eigen/blas/testing/sblat2.f	2313;"	c	subroutine:SCHKE
INFOC	tools/eigen/blas/testing/sblat2.f	3110;"	c	subroutine:XERBLA
INFOC	tools/eigen/blas/testing/sblat2.f	443;"	c	subroutine:SCHK1
INFOC	tools/eigen/blas/testing/sblat2.f	783;"	c	subroutine:SCHK2
INFOC	tools/eigen/blas/testing/sblat3.f	1263;"	c	subroutine:SCHK4
INFOC	tools/eigen/blas/testing/sblat3.f	1538;"	c	subroutine:SCHK5
INFOC	tools/eigen/blas/testing/sblat3.f	1829;"	c	subroutine:SCHKE
INFOC	tools/eigen/blas/testing/sblat3.f	2795;"	c	subroutine:XERBLA
INFOC	tools/eigen/blas/testing/sblat3.f	406;"	c	subroutine:SCHK1
INFOC	tools/eigen/blas/testing/sblat3.f	687;"	c	subroutine:SCHK2
INFOC	tools/eigen/blas/testing/sblat3.f	88;"	c	program:SBLAT3
INFOC	tools/eigen/blas/testing/sblat3.f	958;"	c	subroutine:SCHK3
INFOC	tools/eigen/blas/testing/zblat2.f	1147;"	c	subroutine:ZCHK3
INFOC	tools/eigen/blas/testing/zblat2.f	116;"	c	program:ZBLAT2
INFOC	tools/eigen/blas/testing/zblat2.f	1510;"	c	subroutine:ZCHK4
INFOC	tools/eigen/blas/testing/zblat2.f	1789;"	c	subroutine:ZCHK5
INFOC	tools/eigen/blas/testing/zblat2.f	2075;"	c	subroutine:ZCHK6
INFOC	tools/eigen/blas/testing/zblat2.f	2370;"	c	subroutine:ZCHKE
INFOC	tools/eigen/blas/testing/zblat2.f	3221;"	c	subroutine:XERBLA
INFOC	tools/eigen/blas/testing/zblat2.f	455;"	c	subroutine:ZCHK1
INFOC	tools/eigen/blas/testing/zblat2.f	800;"	c	subroutine:ZCHK2
INFOC	tools/eigen/blas/testing/zblat3.f	1296;"	c	subroutine:ZCHK4
INFOC	tools/eigen/blas/testing/zblat3.f	1629;"	c	subroutine:ZCHK5
INFOC	tools/eigen/blas/testing/zblat3.f	1977;"	c	subroutine:ZCHKE
INFOC	tools/eigen/blas/testing/zblat3.f	3417;"	c	subroutine:XERBLA
INFOC	tools/eigen/blas/testing/zblat3.f	421;"	c	subroutine:ZCHK1
INFOC	tools/eigen/blas/testing/zblat3.f	706;"	c	subroutine:ZCHK2
INFOC	tools/eigen/blas/testing/zblat3.f	95;"	c	program:ZBLAT3
INFOC	tools/eigen/blas/testing/zblat3.f	987;"	c	subroutine:ZCHK3
INFOS	tools/eigen/bench/btl/generic_bench/utils/utilities.h	22;"	d
INFOS_COMPILATION	tools/eigen/bench/btl/generic_bench/utils/utilities.h	42;"	d
INFOT	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            INFOT,/;"	v	program:CBLAT2
INFOT	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            INFOT,/;"	v	program:CBLAT3
INFOT	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            INFOT,/;"	v	program:DBLAT2
INFOT	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            INFOT,/;"	v	program:DBLAT3
INFOT	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            INFOT,/;"	v	program:SBLAT2
INFOT	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            INFOT,/;"	v	program:SBLAT3
INFOT	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            INFOT,/;"	v	program:ZBLAT2
INFOT	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            INFOT,/;"	v	program:ZBLAT3
INIT_FUNCTION_HH	tools/eigen/bench/btl/generic_bench/init/init_function.hh	21;"	d
INIT_MATRIX_HH	tools/eigen/bench/btl/generic_bench/init/init_matrix.hh	21;"	d
INIT_VECTOR_HH	tools/eigen/bench/btl/generic_bench/init/init_vector.hh	21;"	d
INTERRUPTION	tools/eigen/bench/btl/generic_bench/utils/utilities.h	60;"	d
INTERRUPTION	tools/eigen/bench/btl/generic_bench/utils/utilities.h	77;"	d
INVALID	tools/eigen/blas/common.h	38;"	d
INVALID_MATRIXBASE_TEMPLATE_PARAMETERS	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIXBASE_TEMPLATE_PARAMETERS,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
INVALID_MATRIX_PRODUCT	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
INVALID_MATRIX_TEMPLATE_PARAMETERS	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_TEMPLATE_PARAMETERS,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
IOFormat	tools/eigen/Eigen/src/Core/IO.h	/^  IOFormat(int _precision = StreamPrecision, int _flags = 0,$/;"	f	struct:Eigen::IOFormat
IOFormat	tools/eigen/Eigen/src/Core/IO.h	/^struct IOFormat$/;"	s	namespace:Eigen
ISCOMPLEX	tools/eigen/blas/complex_double.cpp	14;"	d	file:
ISCOMPLEX	tools/eigen/blas/complex_single.cpp	14;"	d	file:
ISCOMPLEX	tools/eigen/blas/double.cpp	14;"	d	file:
ISCOMPLEX	tools/eigen/blas/single.cpp	13;"	d	file:
ISCOMPLEX	tools/eigen/lapack/complex_double.cpp	14;"	d	file:
ISCOMPLEX	tools/eigen/lapack/complex_single.cpp	14;"	d	file:
ISCOMPLEX	tools/eigen/lapack/double.cpp	13;"	d	file:
ISCOMPLEX	tools/eigen/lapack/single.cpp	13;"	d	file:
ISNUM	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            I, ISNUM,/;"	v	program:CBLAT2
ISNUM	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            I, ISNUM,/;"	v	program:CBLAT3
ISNUM	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            I, ISNUM,/;"	v	program:DBLAT2
ISNUM	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            I, ISNUM,/;"	v	program:DBLAT3
ISNUM	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            I, ISNUM,/;"	v	program:SBLAT2
ISNUM	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            I, ISNUM,/;"	v	program:SBLAT3
ISNUM	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            I, ISNUM,/;"	v	program:ZBLAT2
ISNUM	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            I, ISNUM,/;"	v	program:ZBLAT3
ITERATE	tools/eigen/demos/mandelbrot/mandelbrot.cpp	74;"	d	file:
ITEST1	tools/eigen/blas/testing/cblat1.f	/^      SUBROUTINE ITEST1(/;"	s
ITEST1	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE ITEST1(/;"	s
ITEST1	tools/eigen/blas/testing/sblat1.f	/^      SUBROUTINE ITEST1(/;"	s
ITEST1	tools/eigen/blas/testing/zblat1.f	/^      SUBROUTINE ITEST1(/;"	s
IcoSphere	tools/eigen/demos/opengl/icosphere.cpp	/^IcoSphere::IcoSphere(unsigned int levels)$/;"	f	class:IcoSphere
IcoSphere	tools/eigen/demos/opengl/icosphere.h	/^class IcoSphere$/;"	c
Identity	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity()$/;"	f	class:Eigen::MatrixBase
Identity	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity(Index rows, Index cols)$/;"	f	class:Eigen::MatrixBase
Identity	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  static inline const AngleAxis Identity() { return AngleAxis(0, Vector3::UnitX()); }$/;"	f	class:Eigen::AngleAxis
Identity	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  static inline Quaternion<Scalar> Identity() { return Quaternion<Scalar>(Scalar(1), Scalar(0), Scalar(0), Scalar(0)); }$/;"	f	class:Eigen::QuaternionBase
Identity	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  static inline Rotation2D Identity() { return Rotation2D(0); }$/;"	f	class:Eigen::Rotation2D
Identity	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static const Transform Identity()$/;"	f	class:Eigen::Transform
Identity	tools/eigen/Eigen/src/Geometry/Translation.h	/^  static const Translation Identity() { return Translation(VectorType::Zero()); }$/;"	f	class:Eigen::Translation
IdentityPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner() {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit IdentityPreconditioner(const MatrixType& ) {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class IdentityPreconditioner$/;"	c	namespace:Eigen
IdentityReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_identity_op<Scalar>,PlainObject> IdentityReturnType;$/;"	t	class:Eigen::MatrixBase
IfNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename IfXprType::Nested IfNested;$/;"	t	struct:Eigen::internal::traits
ImagReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_imag_op<Scalar>, const Derived> ImagReturnType;$/;"	t
Impl	tools/eigen/Eigen/src/Core/Block.h	/^    typedef BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, typename internal::traits<XprType>::StorageKind> Impl;$/;"	t	class:Eigen::Block
Impl	tools/eigen/Eigen/src/Core/Block.h	/^    typedef internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel> Impl;$/;"	t	class:Eigen::BlockImpl
Impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef TensorEvaluator<ArgType, Device> Impl;$/;"	t	struct:Eigen::TensorEvaluator
ImproperInputParameters	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        ImproperInputParameters = 0,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
ImproperInputParameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        ImproperInputParameters = 0,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
ImproperInputParameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        ImproperInputParameters = 0,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
IncompleteCholesky	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    IncompleteCholesky() : m_initialShift(1e-3),m_factorizationIsOk(false) {}$/;"	f	class:Eigen::IncompleteCholesky
IncompleteCholesky	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    IncompleteCholesky(const MatrixType& matrix) : m_initialShift(1e-3),m_factorizationIsOk(false)$/;"	f	class:Eigen::IncompleteCholesky
IncompleteCholesky	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^class IncompleteCholesky : public SparseSolverBase<IncompleteCholesky<Scalar,_UpLo,_OrderingType> >$/;"	c	namespace:Eigen
IncompleteLU	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    IncompleteLU() {}$/;"	f	class:Eigen::IncompleteLU
IncompleteLU	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    IncompleteLU(const MatrixType& mat)$/;"	f	class:Eigen::IncompleteLU
IncompleteLU	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^class IncompleteLU : public SparseSolverBase<IncompleteLU<_Scalar> >$/;"	c	namespace:Eigen
IncompleteLUT	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT()$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    explicit IncompleteLUT(const MatrixType& mat, const RealScalar& droptol=NumTraits<Scalar>::dummy_precision(), int fillfactor = 10)$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^class IncompleteLUT : public SparseSolverBase<IncompleteLUT<_Scalar, _StorageIndex> >$/;"	c	namespace:Eigen
Indefinite	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
Index	tools/RedSVD.hh	/^		typedef typename MatrixType::Index Index;$/;"	t	class:RedSVD::RedPCA
Index	tools/RedSVD.hh	/^		typedef typename MatrixType::Index Index;$/;"	t	class:RedSVD::RedSVD
Index	tools/RedSVD.hh	/^		typedef typename MatrixType::Index Index;$/;"	t	class:RedSVD::RedSymEigen
Index	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::LDLT
Index	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::LLT
Index	tools/eigen/Eigen/src/Core/EigenBase.h	/^  typedef Eigen::Index Index;$/;"	t	struct:Eigen::EigenBase
Index	tools/eigen/Eigen/src/Core/Stride.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Stride
Index	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::TranspositionsBase
Index	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::VectorwiseOp
Index	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE Index;$/;"	t	namespace:Eigen
Index	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ComplexEigenSolver
Index	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ComplexSchur
Index	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::EigenSolver
Index	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::GeneralizedEigenSolver
Index	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::HessenbergDecomposition
Index	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::RealQZ
Index	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::RealSchur
Index	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::SelfAdjointEigenSolver
Index	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Tridiagonalization
Index	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  typedef Eigen::Index                              Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::AlignedBox
Index	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Hyperplane
Index	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ParametrizedLine
Index	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Transform
Index	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::SVDBase
Index	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::internal::UpperBidiagonalization
Index	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  typedef typename Eigen::Tensor<real,2>::Index Index;$/;"	t	class:tensor_interface
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef typename internal::traits<Self>::Index Index;$/;"	t	class:Eigen::Tensor
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::internal::traits<TensorIndexTupleOp>::Index Index;$/;"	t	class:Eigen::TensorIndexTupleOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::internal::traits<TensorTupleReducerOp>::Index Index;$/;"	t	class:Eigen::TensorTupleReducerOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^                                      typename traits<RhsXprType>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename Eigen::internal::traits<TensorAssignOp>::Index Index;$/;"	t	class:Eigen::TensorAssignOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    typedef typename DerivedTraits::Index Index;$/;"	t	class:Eigen::TensorBase
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename Eigen::internal::traits<TensorBroadcastingOp>::Index Index;$/;"	t	class:Eigen::TensorBroadcastingOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename Eigen::internal::traits<TensorChippingOp>::Index Index;$/;"	t	class:Eigen::TensorChippingOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^                                      typename traits<RhsXprType>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    typedef typename internal::traits<TensorConcatenationOp>::Index Index;$/;"	t	class:Eigen::TensorConcatenationOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^                                      typename traits<RhsXprType>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename Eigen::internal::traits<TensorContractionOp>::Index Index;$/;"	t	class:Eigen::TensorContractionOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typedef typename internal::traits<TensorConversionOp>::Index Index;$/;"	t	class:Eigen::TensorConversionOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename traits<XprType>::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^                                      typename traits<KernelXprType>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename Eigen::internal::traits<TensorConvolutionOp>::Index Index;$/;"	t	class:Eigen::TensorConvolutionOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^                                      typename traits<RhsXprType>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<ArgType>::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomBinaryOp>::Index Index;$/;"	t	class:Eigen::TensorCustomBinaryOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomUnaryOp>::Index Index;$/;"	t	class:Eigen::TensorCustomUnaryOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<XprType>::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename Eigen::internal::traits<TensorEvalToOp>::Index Index;$/;"	t	class:Eigen::TensorEvalToOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^  typedef typename Expression::Index Index;$/;"	t	class:Eigen::internal::TensorExecutor
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^                                      typename traits<ThenXprType>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^      typename traits<RhsXprType>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseBinaryOp>::Index Index;$/;"	t	class:Eigen::TensorCwiseBinaryOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseNullaryOp>::Index Index;$/;"	t	class:Eigen::TensorCwiseNullaryOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseUnaryOp>::Index Index;$/;"	t	class:Eigen::TensorCwiseUnaryOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorSelectOp>::Index Index;$/;"	t	class:Eigen::TensorSelectOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef typename internal::traits<Self>::Index Index;$/;"	t	class:Eigen::TensorFixedSize
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename Eigen::internal::traits<TensorForcedEvalOp>::Index Index;$/;"	t	class:Eigen::TensorForcedEvalOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename traits<XprType>::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename Eigen::internal::traits<TensorGeneratorOp>::Index Index;$/;"	t	class:Eigen::TensorGeneratorOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename Eigen::internal::traits<TensorImagePatchOp>::Index Index;$/;"	t	class:Eigen::TensorImagePatchOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename Eigen::internal::traits<TensorInflationOp>::Index Index;$/;"	t	class:Eigen::TensorInflationOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename Eigen::internal::traits<TensorLayoutSwapOp>::Index Index;$/;"	t	class:Eigen::TensorLayoutSwapOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename internal::traits<PlainObjectType>::Index Index;$/;"	t	class:Eigen::TensorMap
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::traits<TensorReshapingOp>::Index Index;$/;"	t	class:Eigen::TensorReshapingOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::traits<TensorSlicingOp>::Index Index;$/;"	t	class:Eigen::TensorSlicingOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename Eigen::internal::traits<TensorPaddingOp>::Index Index;$/;"	t	class:Eigen::TensorPaddingOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename Eigen::internal::traits<TensorPatchOp>::Index Index;$/;"	t	class:Eigen::TensorPatchOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typedef typename Eigen::internal::traits<TensorReductionOp>::Index Index;$/;"	t	class:Eigen::TensorReductionOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename Self::Index Index;$/;"	t	class:Eigen::internal::BlockReducer
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename traits<XprType>::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename internal::traits<PlainObjectType>::Index Index;$/;"	t	class:Eigen::TensorRef
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename Eigen::internal::traits<TensorReverseOp>::Index Index;$/;"	t	class:Eigen::TensorReverseOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename Eigen::internal::traits<TensorShufflingOp>::Index Index;$/;"	t	class:Eigen::TensorShufflingOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    typedef IndexType Index;$/;"	t	class:Eigen::TensorStorage
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename Eigen::internal::traits<TensorStridingOp>::Index Index;$/;"	t	class:Eigen::TensorStridingOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef IndexType_ Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef typename BaseTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename Eigen::internal::traits<TensorVolumePatchOp>::Index Index;$/;"	t	class:Eigen::TensorVolumePatchOp
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename XprTraits::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::TensorEvaluator
Index	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    typedef typename Tensor_::Index Index;$/;"	t	class:Eigen::internal::tensor_symmetry_value_setter
Index	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  typedef typename Tensor_::Index Index;$/;"	t	struct:Eigen::internal::tensor_symmetry_assign_value
Index	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  typedef typename Tensor_::Index Index;$/;"	t	struct:Eigen::internal::tensor_symmetry_calculate_flags
Index	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename JacobianType::Index Index;$/;"	t	class:Eigen::AutoDiffJacobian
Index	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef typename JacobianType::Index Index;$/;"	t	class:Eigen::AutoDiffVector
Index	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef int Index;$/;"	t	class:Eigen::KdBVH
Index	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
Index	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::DGMRES
Index	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef typename Vector::Index Index;$/;"	t	class:Eigen::IncompleteLU
Index	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::IterScaling
Index	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef _Index Index;$/;"	t	struct:Eigen::SparseFunctor
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    typedef typename Derived::Index Index;$/;"	t	struct:Eigen::MatrixExponentialReturnValue
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename Derived::Index Index;$/;"	t	class:Eigen::MatrixFunctionReturnValue
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typedef typename Derived::Index Index;$/;"	t	class:Eigen::MatrixLogarithmReturnValue
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename Derived::Index Index;$/;"	t	class:Eigen::MatrixComplexPowerReturnValue
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename Derived::Index Index;$/;"	t	class:Eigen::MatrixPowerReturnValue
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::MatrixPower
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::MatrixPowerAtomic
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::MatrixPowerParenthesesReturnValue
Index	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    typedef typename Derived::Index Index;$/;"	t	class:Eigen::MatrixSquareRootReturnValue
Index	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::HybridNonLinearSolver
Index	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::LevenbergMarquardt
Index	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::internal::companion
Index	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::PolynomialSolverBase
Index	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SkylineInplaceLU
Index	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    typedef typename internal::index<StorageKind>::type Index;$/;"	t	class:Eigen::SkylineMatrixBase
Index	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    typedef SparseIndex Index;$/;"	t	class:Eigen::SkylineStorage
Index	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef typename BlockSparseMatrixT::Index Index;$/;"	t	class:Eigen::BlockSparseMatrixView
Index	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef typename BlockSparseMatrixT::Index Index;$/;"	t	class:Eigen::BlockVectorReturn
Index	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef typename BlockSparseMatrixT::Index Index;$/;"	t	class:Eigen::BlockVectorView
Index	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef _Index Index;$/;"	t	struct:Eigen::internal::traits
Index	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef typename BlockSparseMatrixT::Index Index;$/;"	t	struct:Eigen::internal::traits
IndexBased	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct IndexBased {};$/;"	s	namespace:Eigen::internal
IndexList	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr IndexList() : std::tuple<FirstType, OtherTypes...>() { }$/;"	f	struct:Eigen::IndexList
IndexList	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr IndexList(const std::tuple<FirstType, OtherTypes...>& other) : std::tuple<FirstType, OtherTypes...>(other) { }$/;"	f	struct:Eigen::IndexList
IndexList	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct IndexList : std::tuple<FirstType, OtherTypes...> {$/;"	s	namespace:Eigen
IndexMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  IndexMapper(const InputDims& input_dims, const array<Index, NumKernelDims>& kernel_dims,$/;"	f	class:Eigen::internal::IndexMapper
IndexMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^class IndexMapper {$/;"	c	namespace:Eigen::internal
IndexOfColMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE DenseIndex IndexOfColMajor(const array<DenseIndex, NumDims>& indices) const {$/;"	f	struct:Eigen::DSizes
IndexOfColMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  size_t IndexOfColMajor(const array<DenseIndex, Base::count>& indices) const {$/;"	f	struct:Eigen::Sizes
IndexOfRowMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE DenseIndex IndexOfRowMajor(const array<DenseIndex, NumDims>& indices) const {$/;"	f	struct:Eigen::DSizes
IndexOfRowMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  size_t IndexOfRowMajor(const array<DenseIndex, Base::count>& indices) const {$/;"	f	struct:Eigen::Sizes
IndexPair	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE IndexPair() : first(0), second(0) { }$/;"	f	struct:Eigen::IndexPair
IndexPair	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE IndexPair(Index f, Index s) : first(f), second(s) { }$/;"	f	struct:Eigen::IndexPair
IndexPair	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <typename Index> struct IndexPair {$/;"	s	namespace:Eigen
IndexPointer	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^                         StorageIndex *, const StorageIndex *>::type IndexPointer;$/;"	t	class:Eigen::SparseMapBase
IndexType	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef long long int IndexType;$/;"	t	struct:Eigen::internal::pardiso_run_selector
IndexVector	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	/^  typedef Matrix<StorageIndex,Dynamic,1> IndexVector; $/;"	t	class:Eigen::MetisOrdering
IndexVector	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^    typedef Matrix<StorageIndex, Dynamic, 1> IndexVector;$/;"	t	class:Eigen::COLAMDOrdering
IndexVector	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
IndexVector	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::SparseCompressedBase
IndexVector	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::SparseMatrix
IndexVector	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::SparseMatrixBase
IndexVector	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::SparseLU
IndexVector	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector; $/;"	t	class:Eigen::internal::SparseLUImpl
IndexVector	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
IndexVector	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef Matrix<StorageIndex, Dynamic, 1> IndexVector;$/;"	t	class:Eigen::SparseQR
Indices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef Indices_ Indices;$/;"	t	struct:Eigen::internal::traits
Indices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename internal::traits<Derived>::Indices Indices;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
IndicesRef	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef Ref<ArrayXi> IndicesRef;$/;"	t	class:Eigen::BDCSVD
IndicesType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::IndicesType IndicesType;$/;"	t	class:Eigen::Transpose
IndicesType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationBase
IndicesType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationMatrix
IndicesType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationWrapper
IndicesType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^  typedef Map<const Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^  typedef Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^  typedef _IndicesType IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Transpositions
IndicesType	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsBase
IndicesType	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsWrapper
IndicesType	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename TranspositionType::IndicesType IndicesType;$/;"	t	class:Eigen::Transpose
IndicesType	tools/eigen/Eigen/src/Core/Transpositions.h	/^  typedef Map<const Matrix<_StorageIndex,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	tools/eigen/Eigen/src/Core/Transpositions.h	/^  typedef Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
Infinity	tools/eigen/Eigen/src/Core/util/Constants.h	/^const int Infinity = -1;$/;"	m	namespace:Eigen
InitList	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	/^    typename Initializer<Derived, N - 1>::InitList> InitList;$/;"	t	struct:Eigen::internal::Initializer
InitList	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	/^  typedef std::initializer_list<typename traits<Derived>::Scalar> InitList;$/;"	t	struct:Eigen::internal::Initializer
Initializer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	/^struct Initializer {$/;"	s	namespace:Eigen::internal
Initializer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	/^struct Initializer<Derived, 1> {$/;"	s	namespace:Eigen::internal
InnerIterator	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  InnerIterator(const XprType &xpr, const Index &outerId)$/;"	f	class:Eigen::InnerIterator
InnerIterator	tools/eigen/Eigen/src/Core/CoreIterators.h	/^class InnerIterator$/;"	c	namespace:Eigen
InnerIterator	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef Eigen::InnerIterator<Derived> InnerIterator;$/;"	t	class:Eigen::DenseBase
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::conditional<OuterVector,OuterVectorInnerIterator,InnerVectorInnerIterator>::type InnerIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator(const SparseCompressedBase& mat, Index outer)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename Derived::InnerIterator InnerIterator;$/;"	t	struct:Eigen::internal::evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase<Derived>::InnerIterator$/;"	c	class:Eigen::SparseCompressedBase
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const binary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  class InnerIterator$/;"	c	struct:Eigen::internal::binary_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& unaryOp, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>::InnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>::InnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    InnerIterator(const sparse_dense_outer_product_evaluator &xprEval, Index outer)$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  class InnerIterator : public LhsIterator$/;"	c	struct:Eigen::internal::sparse_dense_outer_product_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    InnerIterator(const sparse_diagonal_product_evaluator &xprEval, Index outer)$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  class InnerIterator : public SparseXprInnerIterator$/;"	c	struct:Eigen::internal::sparse_diagonal_product_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  class InnerIterator$/;"	c	struct:Eigen::internal::sparse_diagonal_product_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::InnerIterator InnerIterator;$/;"	t	class:Eigen::SparseMatrix
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^      EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& unaryOp, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& xprEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE InnerIterator(const TriangularViewImpl& view, Index outer)$/;"	f	class:Eigen::TriangularViewImpl::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^class TriangularViewImpl<MatrixType,Mode,Sparse>::InnerIterator : public MatrixTypeNestedCleaned::InnerIterator$/;"	c	class:Eigen::TriangularViewImpl
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^	explicit InnerIterator(const SparseVector& vec, Index outer=0)$/;"	f	class:Eigen::SparseVector::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^	explicit InnerIterator(const internal::CompressedStorage<Scalar,StorageIndex>& data)$/;"	f	class:Eigen::SparseVector::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  typedef typename SparseVectorType::InnerIterator InnerIterator;$/;"	t	struct:Eigen::internal::evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector<Scalar,_Options,_StorageIndex>::InnerIterator$/;"	c	class:Eigen::SparseVector
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& sve, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    class InnerIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^     InnerIterator(const MappedSuperNodalMatrix& mat, Index outer)$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
InnerIterator	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^class MappedSuperNodalMatrix<Scalar,StorageIndex>::InnerIterator$/;"	c	class:Eigen::internal::MappedSuperNodalMatrix
InnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      InnerIterator(const BlockSparseMatrixView& mat, Index outer)$/;"	f	class:Eigen::BlockSparseMatrixView::InnerIterator
InnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    InnerIterator(const BlockSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
InnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    class InnerIterator : public BlockSparseMatrixT::BlockInnerIterator$/;"	c	class:Eigen::BlockSparseMatrixView
InnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^class BlockSparseMatrix<_Scalar, _BlockAtCompileTime, _Options, _StorageIndex>::InnerIterator$/;"	c	class:Eigen::BlockSparseMatrix
InnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    InnerIterator(const DynamicSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::DynamicSparseMatrix::InnerIterator
InnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef typename SparseMatrixType::InnerIterator InnerIterator;$/;"	t	struct:Eigen::internal::evaluator
InnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^class DynamicSparseMatrix<Scalar,_Options,_StorageIndex>::InnerIterator : public SparseVector<Scalar,_Options,_StorageIndex>::InnerIterator$/;"	c	class:Eigen::DynamicSparseMatrix
InnerLowerIterator	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    InnerLowerIterator(const SkylineMatrix& mat, Index outer)$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
InnerLowerIterator	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^class SkylineMatrix<Scalar, _Options>::InnerLowerIterator {$/;"	c	class:Eigen::SkylineMatrix
InnerMaxSize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    InnerMaxSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon640
InnerMaxSize	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      InnerMaxSize  = int(Dst::IsVectorAtCompileTime) ? int(Dst::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
InnerMaxSize	tools/eigen/Eigen/src/Core/Redux.h	/^    InnerMaxSize = int(Derived::IsRowMajor)$/;"	e	enum:Eigen::internal::redux_traits::__anon627
InnerMostDimPreserver	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct InnerMostDimPreserver {$/;"	s	namespace:Eigen::internal
InnerMostDimPreserver	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct InnerMostDimPreserver<0, Self, Op, true> {$/;"	s	namespace:Eigen::internal
InnerMostDimPreserver	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct InnerMostDimPreserver<DimIndex, Self, Op, true> {$/;"	s	namespace:Eigen::internal
InnerMostDimReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct InnerMostDimReducer {$/;"	s	namespace:Eigen::internal
InnerMostDimReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct InnerMostDimReducer<Self, Op, true> {$/;"	s	namespace:Eigen::internal
InnerProduct	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
InnerRandomAccessPattern	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^const int InnerRandomAccessPattern  = 0x2 | CoherentAccessPattern;$/;"	m	namespace:Eigen
InnerSize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    InnerSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon640
InnerSize	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      InnerSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
InnerSize	tools/eigen/Eigen/src/Core/Block.h	/^    InnerSize = IsRowMajor ? int(ColsAtCompileTime) : int(RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon246
InnerSize	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    InnerSize = IsRowMajor ? int(ColsAtCompileTime) : int(RowsAtCompileTime),$/;"	e	enum:Eigen::internal::evaluator::__anon660
InnerSize	tools/eigen/Eigen/src/Core/Product.h	/^    InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(LhsTraits::ColsAtCompileTime, RhsTraits::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon391
InnerSize	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(LhsNestedCleaned::ColsAtCompileTime, RhsNestedCleaned::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
InnerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(_LhsNested::ColsAtCompileTime, _RhsNested::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon34
InnerSizeAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::DenseBase::__anon582
InnerSizeAtCompileTime	tools/eigen/Eigen/src/Core/Redux.h	/^    InnerSizeAtCompileTime = XprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon637
InnerSizeAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
InnerStride	tools/eigen/Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC InnerStride() : Base() {}$/;"	f	class:Eigen::InnerStride
InnerStride	tools/eigen/Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC InnerStride(Index v) : Base(0, v) {} \/\/ FIXME making this explicit could break valid code$/;"	f	class:Eigen::InnerStride
InnerStride	tools/eigen/Eigen/src/Core/Stride.h	/^class InnerStride : public Stride<0, Value>$/;"	c	namespace:Eigen
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/Block.h	/^    InnerStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon246
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    InnerStrideAtCompileTime = HasSameStorageOrderAsArgType$/;"	e	enum:Eigen::internal::evaluator::__anon660
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    InnerStrideAtCompileTime = StrideType::InnerStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::evaluator::__anon658
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    InnerStrideAtCompileTime = MatrixTypeInnerStride == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon379
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      InnerStrideAtCompileTime = internal::inner_stride_at_compile_time<Derived>::ret,$/;"	e	enum:Eigen::DenseBase::__anon582
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/Diagonal.h	/^    InnerStrideAtCompileTime = MatrixTypeOuterStride == Dynamic ? Dynamic : MatrixTypeOuterStride+1,$/;"	e	enum:Eigen::internal::traits::__anon389
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/Map.h	/^    InnerStrideAtCompileTime = StrideType::InnerStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon674
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/Matrix.h	/^    InnerStrideAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon293
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/Stride.h	/^      InnerStrideAtCompileTime = _InnerStrideAtCompileTime,$/;"	e	enum:Eigen::Stride::__anon253
InnerStrideAtCompileTime	tools/eigen/Eigen/src/Core/Transpose.h	/^    InnerStrideAtCompileTime = inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon374
InnerStrideMatch	tools/eigen/Eigen/src/Core/Ref.h	/^      InnerStrideMatch = int(StrideType::InnerStrideAtCompileTime)==int(Dynamic)$/;"	e	enum:Eigen::internal::traits::match::__anon616
InnerUnrolling	tools/eigen/Eigen/src/Core/util/Constants.h	/^  InnerUnrolling,$/;"	e	enum:Eigen::__anon495
InnerUpperIterator	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    InnerUpperIterator(const SkylineMatrix& mat, Index outer)$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
InnerUpperIterator	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^class SkylineMatrix<Scalar, _Options>::InnerUpperIterator {$/;"	c	class:Eigen::SkylineMatrix
InnerVectorInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  EIGEN_STRONG_INLINE InnerVectorInnerIterator(const unary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
InnerVectorInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^class unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased>::InnerVectorInnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerVectorReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true>       InnerVectorReturnType;$/;"	t	class:Eigen::SparseMatrixBase
InnerVectorizedTraversal	tools/eigen/Eigen/src/Core/util/Constants.h	/^  InnerVectorizedTraversal,$/;"	e	enum:Eigen::__anon494
InnerVectorsReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<Derived,Dynamic,Dynamic,true> InnerVectorsReturnType;$/;"	t	class:Eigen::SparseMatrixBase
InputDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename TensorEvaluator<const TensorIndexTupleOp<ArgType> , Device>::Dimensions InputDimensions;$/;"	t	struct:Eigen::TensorEvaluator
InputDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename TensorEvaluator<ArgType, Device>::Dimensions InputDimensions;$/;"	t	struct:Eigen::TensorEvaluator
InputDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename TensorEvaluator<ArgType, Device>::Dimensions InputDimensions;$/;"	t	struct:Eigen::TensorEvaluator
InputPacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool InputPacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess;$/;"	m	struct:Eigen::TensorEvaluator
InputScalar	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar InputScalar;$/;"	t	struct:Eigen::internal::evaluator
InputScalar	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MatrixType::Scalar InputScalar;$/;"	t	struct:Eigen::internal::traits
InputType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename Functor::InputType InputType;$/;"	t	class:Eigen::AutoDiffJacobian
InputType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef Matrix<Scalar,Dynamic,1> InputType;$/;"	t	struct:Eigen::SparseFunctor
InputType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:Eigen::DenseFunctor
InputType	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef typename Functor::InputType InputType;$/;"	t	class:Eigen::NumericalDiff
InputType	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:Functor	file:
InputType	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:Functor	file:
InputType	tools/eigen/unsupported/test/autodiff.cpp	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:TestFunc1	file:
InputType	tools/eigen/unsupported/test/forward_adolc.cpp	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:TestFunc1	file:
InputsAtCompileTime	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^    InputsAtCompileTime = Functor::InputsAtCompileTime,$/;"	e	enum:Eigen::AutoDiffJacobian::__anon10
InputsAtCompileTime	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    InputsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::SparseFunctor::__anon2
InputsAtCompileTime	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    InputsAtCompileTime = NX,$/;"	e	enum:Eigen::DenseFunctor::__anon1
InputsAtCompileTime	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        InputsAtCompileTime = Functor::InputsAtCompileTime,$/;"	e	enum:Eigen::NumericalDiff::__anon3
InputsAtCompileTime	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    InputsAtCompileTime = NX,$/;"	e	enum:Functor::__anon129	file:
InputsAtCompileTime	tools/eigen/unsupported/test/NumericalDiff.cpp	/^    InputsAtCompileTime = NX,$/;"	e	enum:Functor::__anon123	file:
InputsAtCompileTime	tools/eigen/unsupported/test/autodiff.cpp	/^    InputsAtCompileTime = NX,$/;"	e	enum:TestFunc1::__anon128	file:
InputsAtCompileTime	tools/eigen/unsupported/test/forward_adolc.cpp	/^    InputsAtCompileTime = NX,$/;"	e	enum:TestFunc1::__anon127	file:
InsertZeros	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^struct InsertZeros {$/;"	s	file:
Instance	tools/eigen/bench/btl/generic_bench/btl.hh	/^  static BtlConfig Instance;$/;"	m	class:BtlConfig
IntColVectorType	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_col_type<MatrixType, StorageIndex>::type IntColVectorType;$/;"	t	class:Eigen::FullPivLU
IntColVectorType	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<StorageIndex, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::PardisoImpl
IntColVectorType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;    $/;"	t	class:Eigen::SuperLUBase
IntColVectorType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntColVectorType IntColVectorType;   $/;"	t	class:Eigen::SuperLU
IntColVectorType	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::UmfPackLU
IntDiagSizeVectorType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^                   EIGEN_SIZE_MIN_PREFER_FIXED(MaxColsAtCompileTime,MaxRowsAtCompileTime)> IntDiagSizeVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
IntDiagSizeVectorType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename FullPivHouseholderQR<MatrixType>::IntDiagSizeVectorType IntDiagSizeVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
IntRowVectorType	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_row_type<MatrixType, StorageIndex>::type IntRowVectorType;$/;"	t	class:Eigen::FullPivLU
IntRowVectorType	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<StorageIndex, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::PardisoImpl
IntRowVectorType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, Index>::type IntRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
IntRowVectorType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::SuperLUBase
IntRowVectorType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntRowVectorType IntRowVectorType;$/;"	t	class:Eigen::SuperLU
IntRowVectorType	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::UmfPackLU
Interpolate	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^  SplineType SplineFitting<SplineType>::Interpolate(const PointArrayType& pts, DenseIndex degree)$/;"	f	class:Eigen::SplineFitting
Interpolate	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^  SplineType SplineFitting<SplineType>::Interpolate(const PointArrayType& pts, DenseIndex degree, const KnotVectorType& knot_parameters)$/;"	f	class:Eigen::SplineFitting
InterpolateWithDerivatives	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^  SplineFitting<SplineType>::InterpolateWithDerivatives(const PointArrayType& points,$/;"	f	class:Eigen::SplineFitting
InvalidInput	tools/eigen/Eigen/src/Core/util/Constants.h	/^  InvalidInput = 3$/;"	e	enum:Eigen::ComputationInfo
InvalidTraversal	tools/eigen/Eigen/src/Core/util/Constants.h	/^  InvalidTraversal,$/;"	e	enum:Eigen::__anon494
Inverse	tools/eigen/Eigen/src/Core/Inverse.h	/^  explicit Inverse(const XprType &xpr)$/;"	f	class:Eigen::Inverse
Inverse	tools/eigen/Eigen/src/Core/Inverse.h	/^class Inverse : public InverseImpl<XprType,typename internal::traits<XprType>::StorageKind>$/;"	c	namespace:Eigen
InverseImpl	tools/eigen/Eigen/src/Core/Inverse.h	/^class InverseImpl<XprType,Dense>$/;"	c	namespace:Eigen
InverseReturnType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper<const CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const DiagonalVectorType> > InverseReturnType;$/;"	t	class:Eigen::DiagonalBase
InverseReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const Derived> InverseReturnType;$/;"	t
InverseType	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef Inverse<ArgType> InverseType;$/;"	t	struct:Eigen::internal::unary_evaluator
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^      IsAligned = bool(EIGEN_MAX_ALIGN_BYTES>0) & !(Options_&DontAlign),$/;"	e	enum:Eigen::Tensor::__anon55
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    IsAligned = \/*TensorEvaluator<ArgType, Device>::IsAligned*\/ false,$/;"	e	enum:Eigen::TensorEvaluator::__anon51
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    IsAligned = \/*TensorEvaluator<ArgType, Device>::IsAligned*\/ false,$/;"	e	enum:Eigen::TensorEvaluator::__anon52
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^    IsAligned = TensorEvaluator<LeftArgType, Device>::IsAligned & TensorEvaluator<RightArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon91
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon65
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon61
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon62
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon83
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon84
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    IsAligned = true,$/;"	e	enum:Eigen::TensorContractionEvaluatorBase::__anon96
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon99
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    IsAligned = TensorEvaluator<InputArgType, Device>::IsAligned & TensorEvaluator<KernelArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon104
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    IsAligned = TensorEvaluator<InputArgType, GpuDevice>::IsAligned & TensorEvaluator<KernelArgType, GpuDevice>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon105
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon100
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon101
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    IsAligned = true,$/;"	e	enum:Eigen::TensorEvaluator::__anon89
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    IsAligned = Derived::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon75
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    IsAligned = Derived::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon77
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    IsAligned = TensorEvaluator<ArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon79
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    IsAligned = TensorEvaluator<LeftArgType, Device>::IsAligned & TensorEvaluator<RightArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon80
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    IsAligned = TensorEvaluator<ThenArgType, Device>::IsAligned & TensorEvaluator<ElseArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon81
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    IsAligned = true,$/;"	e	enum:Eigen::TensorEvaluator::__anon78
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^      IsAligned = bool(EIGEN_MAX_ALIGN_BYTES>0),$/;"	e	enum:Eigen::TensorFixedSize::__anon87
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^    IsAligned = true,$/;"	e	enum:Eigen::TensorEvaluator::__anon57
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon71
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon86
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    IsAligned = \/*TensorEvaluator<ArgType, Device>::IsAligned*\/ false,$/;"	e	enum:Eigen::TensorEvaluator::__anon106
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    IsAligned = TensorEvaluator<ArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon58
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    IsAligned = TensorEvaluator<ArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon59
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^      IsAligned = ((int(Options_)&Aligned)==Aligned),$/;"	e	enum:Eigen::TensorMap::__anon60
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    IsAligned = TensorEvaluator<ArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon115
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    IsAligned = TensorEvaluator<ArgType, Device>::IsAligned,$/;"	e	enum:Eigen::TensorEvaluator::__anon116
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    IsAligned = \/*TensorEvaluator<ArgType, Device>::IsAligned*\/false,$/;"	e	enum:Eigen::TensorEvaluator::__anon118
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    IsAligned = \/*TensorEvaluator<ArgType, Device>::IsAligned*\/false,$/;"	e	enum:Eigen::TensorEvaluator::__anon119
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon68
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon102
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon67
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^      IsAligned = false,$/;"	e	enum:Eigen::TensorRef::__anon120
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon121
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon122
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon63
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon64
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon92
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon93
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    IsAligned = \/*TensorEvaluator<ArgType, Device>::IsAligned*\/false,$/;"	e	enum:Eigen::TensorEvaluator::__anon53
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    IsAligned = \/*TensorEvaluator<ArgType, Device>::IsAligned*\/false,$/;"	e	enum:Eigen::TensorEvaluator::__anon54
IsAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    IsAligned = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon85
IsColMajor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    IsColMajor = !IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
IsColMajor	tools/eigen/Eigen/src/Core/Reverse.h	/^      IsColMajor = !IsRowMajor,$/;"	e	enum:Eigen::Reverse::__anon256
IsColMajor	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      IsColMajor = Flags&RowMajorBit ? 0 : 1$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
IsColVector	tools/eigen/Eigen/src/Core/VectorBlock.h	/^      IsColVector = !(internal::traits<VectorType>::Flags & RowMajorBit)$/;"	e	enum:Eigen::VectorBlock::__anon572
IsColVector	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^      IsColVector = _Cols==1 && _Rows!=1,$/;"	e	enum:Eigen::internal::promote_index_type::make_proper_matrix_type::__anon564
IsColVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    IsColVector = (_Options & RowMajorBit) ? 0 : 1,$/;"	e	enum:Eigen::internal::traits::__anon226
IsColVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    enum { IsColVector = internal::traits<SparseVector>::IsColVector };$/;"	e	enum:Eigen::SparseVector::__anon228
IsComment	tools/SimpleIni.h	/^    inline bool IsComment(SI_CHAR ch) const {$/;"	f	class:CSimpleIniTempl
IsComplex	tools/eigen/Eigen/src/Core/NumTraits.h	/^    IsComplex = 0,$/;"	e	enum:Eigen::GenericNumTraits::__anon581
IsComplex	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon555
IsComplex	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon556
IsComplex	tools/eigen/blas/common.h	/^  IsComplex = Eigen::NumTraits<SCALAR>::IsComplex,$/;"	e	enum:__anon137
IsDense	tools/eigen/Eigen/src/Core/util/Constants.h	/^  IsDense         = 0,$/;"	e	enum:Eigen::__anon499
IsDynamicSize	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    IsDynamicSize = PlainObjectType::SizeAtCompileTime==Dynamic,$/;"	e	enum:Eigen::internal::evaluator::__anon658
IsEmpty	tools/SimpleIni.h	/^    bool IsEmpty() const { return m_data.empty(); }$/;"	f	class:CSimpleIniTempl
IsFiniteReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isfinite_op<Scalar>, const Derived> IsFiniteReturnType;$/;"	t
IsFixedSize	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  enum {IsFixedSize = (SIZE!=Dynamic)};$/;"	e	enum:eigen2_interface::__anon738
IsFixedSize	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  enum {IsFixedSize = (SIZE!=Dynamic)};$/;"	e	enum:eigen3_interface::__anon737
IsInf	tools/eigen/unsupported/test/mpreal/mpreal.h	75;"	d
IsInf	tools/eigen/unsupported/test/mpreal/mpreal.h	78;"	d
IsInf	tools/eigen/unsupported/test/mpreal/mpreal.h	81;"	d
IsInfReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isinf_op<Scalar>, const Derived> IsInfReturnType;$/;"	t
IsInteger	tools/eigen/Eigen/src/Core/NumTraits.h	/^    IsInteger = std::numeric_limits<T>::is_integer,$/;"	e	enum:Eigen::GenericNumTraits::__anon581
IsLess	tools/SimpleIni.h	/^    bool IsLess(const SI_CHAR * a_pLeft, const SI_CHAR * a_pRight) const {$/;"	f	class:CSimpleIniTempl
IsLower	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon649
IsLower	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon268
IsLower	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon269
IsLower	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon263
IsLower	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon264
IsLower	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon283
IsLower	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon284
IsLower	tools/eigen/blas/BandTriangularSolver.h	/^  enum { IsLower = (Mode&Lower) ? 1 : 0 };$/;"	e	enum:internal::band_solve_triangular_selector::__anon131
IsLower	tools/eigen/blas/BandTriangularSolver.h	/^  enum { IsLower = (Mode&Lower) ? 1 : 0 };$/;"	e	enum:internal::band_solve_triangular_selector::__anon132
IsLower	tools/eigen/blas/PackedTriangularMatrixVector.h	/^    IsLower     = (Mode & Lower)   ==Lower,$/;"	e	enum:internal::packed_triangular_matrix_vector_product::__anon138
IsLower	tools/eigen/blas/PackedTriangularMatrixVector.h	/^    IsLower     = (Mode & Lower)   ==Lower,$/;"	e	enum:internal::packed_triangular_matrix_vector_product::__anon139
IsLower	tools/eigen/blas/PackedTriangularSolverVector.h	/^    IsLower = (Mode&Lower)==Lower$/;"	e	enum:internal::packed_triangular_solve_vector::__anon133
IsLower	tools/eigen/blas/PackedTriangularSolverVector.h	/^    IsLower = (Mode&Lower)==Lower$/;"	e	enum:internal::packed_triangular_solve_vector::__anon134
IsMultiKey	tools/SimpleIni.h	/^    bool IsMultiKey() const { return m_bAllowMultiKey; }$/;"	f	class:CSimpleIniTempl
IsMultiLine	tools/SimpleIni.h	/^    bool IsMultiLine() const { return m_bAllowMultiLine; }$/;"	f	class:CSimpleIniTempl
IsMultiLineData	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::IsMultiLineData($/;"	f	class:CSimpleIniTempl
IsMultiLineTag	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::IsMultiLineTag($/;"	f	class:CSimpleIniTempl
IsNaNReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isnan_op<Scalar>, const Derived> IsNaNReturnType;$/;"	t
IsNewLineChar	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::IsNewLineChar($/;"	f	class:CSimpleIniTempl
IsOneByOne	tools/eigen/Eigen/src/Core/Product.h	/^      IsOneByOne = (RowsAtCompileTime == 1 || RowsAtCompileTime == Dynamic) && $/;"	e	enum:Eigen::ProductImpl::__anon392
IsPlainObjectBase	tools/eigen/Eigen/src/Core/DenseBase.h	/^    enum { IsPlainObjectBase = 0 };$/;"	e	enum:Eigen::DenseBase::__anon583
IsPlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    enum { IsPlainObjectBase = 1 };$/;"	e	enum:Eigen::PlainObjectBase::__anon309
IsProjective	tools/eigen/Eigen/src/Geometry/Transform.h	/^    IsProjective = (int(Mode)==int(Projective))$/;"	e	enum:Eigen::internal::transform_traits::__anon703
IsRepeatable	tools/eigen/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon619
IsRepeatable	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon453
IsRepeatable	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon451
IsRepeatable	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon452
IsRowMajor	tools/eigen/Eigen/src/Core/Block.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::traits::__anon246
IsRowMajor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::evaluator::__anon660
IsRowMajor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = PlainObjectType::IsRowMajor,$/;"	e	enum:Eigen::internal::evaluator::__anon651
IsRowMajor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
IsRowMajor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = XprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon657
IsRowMajor	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  enum { IsRowMajor = (XprType::Flags&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::inner_iterator_selector::__anon586
IsRowMajor	tools/eigen/Eigen/src/Core/DenseBase.h	/^      IsRowMajor = int(Flags) & RowMajorBit, \/**< True if this expression has row-major storage order. *\/$/;"	e	enum:Eigen::DenseBase::__anon582
IsRowMajor	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  template<typename T> struct IsRowMajor : internal::conditional<(int(T::Flags)&RowMajorBit), internal::true_type, internal::false_type>::type {};$/;"	s	struct:Eigen::internal::generic_product_impl
IsRowMajor	tools/eigen/Eigen/src/Core/Redux.h	/^    IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon637
IsRowMajor	tools/eigen/Eigen/src/Core/Replicate.h	/^    IsRowMajor = MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1 ? 1$/;"	e	enum:Eigen::internal::traits::__anon261
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^      IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon214
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon209
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon213
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::internal::sparse_matrix_block_impl::__anon211
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Lhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::binary_evaluator::InnerIterator::__anon219
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Rhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::binary_evaluator::InnerIterator::__anon217
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::Map::__anon237
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::Map::__anon238
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::SparseMapBase::__anon235
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::SparseMapBase::__anon236
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsRowMajor = Flags&RowMajorBit ? 1 : 0,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
IsRowMajor	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    enum { IsRowMajor = (XprType::Flags&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::unary_evaluator::__anon196
IsRowMajor	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        IsRowMajor = Flags & RowMajorBit ? 1 : 0$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
IsRowVector	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^      IsRowVector = _Rows==1 && _Cols!=1,$/;"	e	enum:Eigen::internal::promote_index_type::make_proper_matrix_type::__anon564
IsSigned	tools/eigen/Eigen/src/Core/NumTraits.h	/^    IsSigned = std::numeric_limits<T>::is_signed,$/;"	e	enum:Eigen::GenericNumTraits::__anon581
IsSkyline	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum {IsSkyline = SkylineBit};$/;"	e	enum:Eigen::__anon36
IsSorted	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    IsSorted = 0$/;"	e	enum:Eigen::GoogleDenseHashMapTraits::__anon20
IsSorted	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    IsSorted = 0$/;"	e	enum:Eigen::GoogleSparseHashMapTraits::__anon21
IsSorted	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    IsSorted = 0$/;"	e	enum:Eigen::StdUnorderedMapTraits::__anon19
IsSorted	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    IsSorted = 1$/;"	e	enum:Eigen::StdMapTraits::__anon18
IsSpace	tools/SimpleIni.h	/^    inline bool IsSpace(SI_CHAR ch) const {$/;"	f	class:CSimpleIniTempl
IsSparse	tools/eigen/Eigen/src/Core/util/Constants.h	/^  IsSparse$/;"	e	enum:Eigen::__anon499
IsStateful	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool IsStateful = false;$/;"	m	struct:Eigen::internal::ArgMaxTupleReducer
IsStateful	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool IsStateful = false;$/;"	m	struct:Eigen::internal::ArgMinTupleReducer
IsStateful	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool IsStateful = false;$/;"	m	struct:Eigen::internal::MaxReducer
IsStateful	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool IsStateful = false;$/;"	m	struct:Eigen::internal::MinReducer
IsStateful	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool IsStateful = false;$/;"	m	struct:Eigen::internal::ProdReducer
IsStateful	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool IsStateful = false;$/;"	m	struct:Eigen::internal::SumReducer
IsStateful	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool IsStateful = true;$/;"	m	struct:Eigen::internal::MeanReducer
IsTransposed	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = Base::IsTransposed ? 0 : 1$/;"	e	enum:Eigen::internal::blas_traits::__anon557
IsTransposed	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon555
IsUnicode	tools/SimpleIni.h	/^    bool IsUnicode() const { return m_bStoreIsUtf8; }$/;"	f	class:CSimpleIniTempl
IsVectorAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    IsVectorAtCompileTime = PlainObjectType::IsVectorAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon651
IsVectorAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      IsVectorAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime == 1$/;"	e	enum:Eigen::DenseBase::__anon582
IsVectorAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^      IsVectorAtCompileTime = 0,$/;"	e	enum:Eigen::DiagonalBase::__anon250
IsVectorAtCompileTime	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      IsVectorAtCompileTime = false$/;"	e	enum:Eigen::TriangularView::__anon299
IsVectorAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsVectorAtCompileTime = RowsAtCompileTime == 1 || ColsAtCompileTime == 1,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
IsVectorAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        IsVectorAtCompileTime = RowsAtCompileTime == 1 || ColsAtCompileTime == 1,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
IsVectorAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      IsVectorAtCompileTime = 0,$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
IsVectorizable	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h	/^struct IsVectorizable {$/;"	s	namespace:Eigen::internal
IsVectorizable	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h	/^struct IsVectorizable<GpuDevice, Expression> {$/;"	s	namespace:Eigen::internal
Isometry	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Isometry      = 0x1,$/;"	e	enum:Eigen::TransformTraits
Isometry2d	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Isometry> Isometry2d;$/;"	t	namespace:Eigen
Isometry2f	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Isometry> Isometry2f;$/;"	t	namespace:Eigen
Isometry3d	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Isometry> Isometry3d;$/;"	t	namespace:Eigen
Isometry3f	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Isometry> Isometry3f;$/;"	t	namespace:Eigen
IsometryTransformType	tools/eigen/Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Isometry> IsometryTransformType;$/;"	t	class:Eigen::Translation
IterScaling	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    IterScaling() { init(); }$/;"	f	class:Eigen::IterScaling
IterScaling	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    IterScaling(const MatrixType& matrix)$/;"	f	class:Eigen::IterScaling
IterScaling	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^class IterScaling$/;"	c	namespace:Eigen
IterationController	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    IterationController(double r = 1.0E-8, int noi = 0, size_t mit = size_t(-1))$/;"	f	class:Eigen::IterationController
IterationController	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^class IterationController$/;"	c	namespace:Eigen
IterativeSolverBase	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  IterativeSolverBase()$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  explicit IterativeSolverBase(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class IterativeSolverBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
Iterator	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    explicit Iterator(const AmbiVector& vec, const RealScalar& epsilon = 0)$/;"	f	class:Eigen::internal::AmbiVector::Iterator
Iterator	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector<_Scalar,_StorageIndex>::Iterator$/;"	c	class:Eigen::internal::AmbiVector
IteratorBased	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct IteratorBased {};$/;"	s	namespace:Eigen::internal
IteratorType	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  typedef internal::inner_iterator_selector<XprType, typename internal::evaluator_traits<XprType>::Kind> IteratorType;$/;"	t	class:Eigen::InnerIterator
J	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            I, ISNUM, J,/;"	v	program:CBLAT2
J	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            I, ISNUM, J,/;"	v	program:CBLAT3
J	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            I, ISNUM, J,/;"	v	program:DBLAT2
J	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            I, ISNUM, J,/;"	v	program:DBLAT3
J	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            I, ISNUM, J,/;"	v	program:SBLAT2
J	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            I, ISNUM, J,/;"	v	program:SBLAT3
J	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            I, ISNUM, J,/;"	v	program:ZBLAT2
J	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            I, ISNUM, J,/;"	v	program:ZBLAT3
J	tools/eigen/doc/snippets/Jacobi_makeJacobi.cpp	/^JacobiRotation<float> J;$/;"	v
JRs	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef JacobiRotation<Scalar> JRs;$/;"	t	class:Eigen::RealQZ
JacobiRotation	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation() {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation(const Scalar& c, const Scalar& s) : m_c(c), m_s(s) {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^template<typename Scalar> class JacobiRotation$/;"	c	namespace:Eigen
JacobiSVD	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD()$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    explicit JacobiSVD(Index rows, Index cols, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    explicit JacobiSVD(const MatrixType& matrix, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^template<typename _MatrixType, int QRPreconditioner> class JacobiSVD$/;"	c	namespace:Eigen
JacobianType	tools/eigen/test/denseLM.cpp	/^  typedef typename Base::JacobianType JacobianType;$/;"	t	struct:DenseLM	file:
JacobianType	tools/eigen/test/sparseLM.cpp	/^  typedef typename Base::JacobianType JacobianType;$/;"	t	struct:sparseGaussianTest	file:
JacobianType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename Functor::JacobianType JacobianType;$/;"	t	class:Eigen::AutoDiffJacobian
JacobianType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    typedef typename FunctorType::JacobianType JacobianType;$/;"	t	class:Eigen::LevenbergMarquardt
JacobianType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:Eigen::DenseFunctor
JacobianType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef SparseMatrix<Scalar, ColMajor, Index> JacobianType;$/;"	t	struct:Eigen::SparseFunctor
JacobianType	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    typedef Matrix< Scalar, Dynamic, Dynamic > JacobianType;$/;"	t	class:Eigen::HybridNonLinearSolver
JacobianType	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    typedef Matrix< Scalar, Dynamic, Dynamic > JacobianType;$/;"	t	class:Eigen::LevenbergMarquardt
JacobianType	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef typename Functor::JacobianType JacobianType;$/;"	t	class:Eigen::NumericalDiff
JacobianType	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:Functor	file:
JacobianType	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:Functor	file:
JacobianType	tools/eigen/unsupported/test/autodiff.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:TestFunc1	file:
JacobianType	tools/eigen/unsupported/test/forward_adolc.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:TestFunc1	file:
JointAlignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    JointAlignment = EIGEN_PLAIN_ENUM_MIN(DstAlignment,SrcAlignment)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon639
JointAlignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    JointAlignment = Kernel::AssignmentTraits::JointAlignment$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon646
KB	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            IDIM( NIDMAX ), INC( NINMAX ), KB(/;"	v	program:CBLAT2
KB	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            IDIM( NIDMAX ), INC( NINMAX ), KB(/;"	v	program:DBLAT2
KB	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            IDIM( NIDMAX ), INC( NINMAX ), KB(/;"	v	program:SBLAT2
KB	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            IDIM( NIDMAX ), INC( NINMAX ), KB(/;"	v	program:ZBLAT2
KDBVH_H_INCLUDED	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	11;"	d
KILL_NON_PRINCIPAL_COL	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	131;"	d
KILL_PRINCIPAL_COL	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	130;"	d
KILL_ROW	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	129;"	d
KK	tools/eigen/bench/sparse_setter.cpp	23;"	d	file:
KMADD	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	107;"	d
KMADD	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	273;"	d
KRONECKER_TENSOR_PRODUCT_H	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	13;"	d
KdBVH	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  KdBVH() {}$/;"	f	class:Eigen::KdBVH
KdBVH	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  template<typename Iter> KdBVH(Iter begin, Iter end) { init(begin, end, 0, 0); } \/\/int is recognized by init as not being an iterator type$/;"	f	class:Eigen::KdBVH
KdBVH	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  template<typename OIter, typename BIter> KdBVH(OIter begin, OIter end, BIter boxBegin, BIter boxEnd) { init(begin, end, boxBegin, boxEnd); }$/;"	f	class:Eigen::KdBVH
KdBVH	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^template<typename _Scalar, int _Dim, typename _Object> class KdBVH$/;"	c	namespace:Eigen
KeepsPacketAccess	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    KeepsPacketAccess = bool(HasNoInnerStride)$/;"	e	enum:Eigen::internal::evaluator::__anon658
KernelDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename TensorEvaluator<KernelArgType, GpuDevice>::Dimensions KernelDimensions;$/;"	t	struct:Eigen::TensorEvaluator
KeyOrder	tools/SimpleIni.h	/^        struct KeyOrder : std::binary_function<Entry, Entry, bool> {$/;"	s	struct:CSimpleIniTempl::Entry
KeyType	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    typedef typename MapTraits<ScalarWrapper>::KeyType KeyType;$/;"	t	class:Eigen::RandomSetter
KeyType	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef int KeyType;$/;"	t	struct:Eigen::GoogleDenseHashMapTraits
KeyType	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef int KeyType;$/;"	t	struct:Eigen::GoogleSparseHashMapTraits
KeyType	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef int KeyType;$/;"	t	struct:Eigen::StdMapTraits
KeyType	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef int KeyType;$/;"	t	struct:Eigen::StdUnorderedMapTraits
Kind	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^template<> struct AssignmentKind<DenseShape,DenseShape> { typedef Dense2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^template<typename,typename> struct AssignmentKind { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/Core/BandMatrix.h	/^template<> struct AssignmentKind<DenseShape,BandShape> { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef IndexBased Kind;$/;"	t	struct:Eigen::internal::storage_kind_to_evaluator_kind
Kind	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename storage_kind_to_evaluator_kind<typename traits<T>::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits_base
Kind	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^template<> struct AssignmentKind<DenseShape,DiagonalShape> { typedef Diagonal2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^template<> struct AssignmentKind<DenseShape,PermutationShape> { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<DenseShape,TriangularShape>      { typedef Triangular2Dense      Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,DenseShape>      { typedef Dense2Triangular      Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,TriangularShape> { typedef Triangular2Triangular Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename storage_kind_to_evaluator_kind<typename ArgType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^template<> struct AssignmentKind<DenseShape,HomogeneousShape> { typedef Dense2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  typedef IteratorBased Kind;$/;"	t	struct:Eigen::internal::storage_kind_to_evaluator_kind
Kind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseShape>           { typedef Sparse2Dense  Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseShape>           { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseTriangularShape> { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape,DiagonalShape> { typedef Diagonal2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseSelfAdjointShape,SparseShape> { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseShape,SparseSelfAdjointShape> { typedef SparseSelfAdjoint2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
KnotAveraging	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^  void KnotAveraging(const KnotVectorType& parameters, DenseIndex degree, KnotVectorType& knots)$/;"	f	namespace:Eigen
KnotAveragingWithDerivatives	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^  void KnotAveragingWithDerivatives(const ParameterVectorType& parameters,$/;"	f	namespace:Eigen
KnotVectorType	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::KnotVectorType KnotVectorType;$/;"	t	class:Eigen::Spline
KnotVectorType	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^    typedef typename SplineType::KnotVectorType KnotVectorType;$/;"	t	struct:Eigen::SplineFitting
KnotVectorType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,1,Dynamic> KnotVectorType;$/;"	t	struct:Eigen::SplineTraits
KroneckerProduct	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    KroneckerProduct(const Lhs& A, const Rhs& B)$/;"	f	class:Eigen::KroneckerProduct
KroneckerProduct	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^class KroneckerProduct : public KroneckerProductBase<KroneckerProduct<Lhs,Rhs> >$/;"	c	namespace:Eigen
KroneckerProductBase	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    KroneckerProductBase(const Lhs& A, const Rhs& B)$/;"	f	class:Eigen::KroneckerProductBase
KroneckerProductBase	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^class KroneckerProductBase : public ReturnByValue<Derived>$/;"	c	namespace:Eigen
KroneckerProductSparse	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    KroneckerProductSparse(const Lhs& A, const Rhs& B)$/;"	f	class:Eigen::KroneckerProductSparse
KroneckerProductSparse	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^class KroneckerProductSparse : public KroneckerProductBase<KroneckerProductSparse<Lhs,Rhs> >$/;"	c	namespace:Eigen
L	Top.hh	/^    mat L;$/;"	m	class:Top
L	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  typename Interface::gene_matrix L;$/;"	m	class:Action_trisolve
L	tools/eigen/doc/snippets/LLT_example.cpp	/^MatrixXd L = lltOfA.matrixL(); \/\/ retrieve factor L  in the decomposition$/;"	v
LAUNCH_CUDA_KERNEL	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	490;"	d
LCE	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            LCE$/;"	v	program:CBLAT2
LCE	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL FUNCTION LCE(/;"	f
LCE	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            LCE$/;"	v	program:CBLAT3
LCE	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL FUNCTION LCE(/;"	f
LCERES	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL FUNCTION LCERES(/;"	f
LCERES	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL FUNCTION LCERES(/;"	f
LDE	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            LDE$/;"	v	program:DBLAT2
LDE	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL FUNCTION LDE(/;"	f
LDE	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            LDE$/;"	v	program:DBLAT3
LDE	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL FUNCTION LDE(/;"	f
LDERES	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL FUNCTION LDERES(/;"	f
LDERES	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL FUNCTION LDERES(/;"	f
LDLT	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    LDLT() $/;"	f	class:Eigen::LDLT
LDLT	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    explicit LDLT(Index size)$/;"	f	class:Eigen::LDLT
LDLT	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    explicit LDLT(const MatrixType& matrix)$/;"	f	class:Eigen::LDLT
LDLT	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^template<typename _MatrixType, int _UpLo> class LDLT$/;"	c	namespace:Eigen
LDLTTraits	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT<MatrixType,UpLo> > LDLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LDLT_Traits	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LDLT_Traits	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int LDims =$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
LDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int LDims =$/;"	m	struct:Eigen::TensorEvaluator
LDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  static const int LDims =$/;"	m	struct:Eigen::TensorEvaluator
LDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  static const int LDims =$/;"	m	struct:Eigen::TensorEvaluator
LEFT	tools/eigen/blas/common.h	29;"	d
LERR	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            LERR,/;"	v	program:CBLAT2
LERR	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            LERR,/;"	v	program:CBLAT3
LERR	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            LERR,/;"	v	program:DBLAT2
LERR	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            LERR,/;"	v	program:DBLAT3
LERR	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            LERR,/;"	v	program:SBLAT2
LERR	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            LERR,/;"	v	program:SBLAT3
LERR	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            LERR,/;"	v	program:ZBLAT2
LERR	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            LERR,/;"	v	program:ZBLAT3
LIToSecs	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   double LIToSecs(LARGE_INTEGER& L) {$/;"	f	class:Portable_Timer
LLT	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    LLT() : m_matrix(), m_isInitialized(false) {}$/;"	f	class:Eigen::LLT
LLT	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    explicit LLT(Index size) : m_matrix(size, size),$/;"	f	class:Eigen::LLT
LLT	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    explicit LLT(const MatrixType& matrix)$/;"	f	class:Eigen::LLT
LLT	tools/eigen/Eigen/src/Cholesky/LLT.h	/^template<typename _MatrixType, int _UpLo> class LLT$/;"	c	namespace:Eigen
LLTTraits	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT<MatrixType,UpLo>  > LLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LLT_Traits	tools/eigen/Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LLT_Traits	tools/eigen/Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LLVL	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon180
LMatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType, Lower|UnitDiag>  LMatrixType;$/;"	t	class:Eigen::SuperLU
LO	tools/eigen/blas/common.h	33;"	d
LSE	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            LSE$/;"	v	program:SBLAT2
LSE	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL FUNCTION LSE(/;"	f
LSE	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            LSE$/;"	v	program:SBLAT3
LSE	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL FUNCTION LSE(/;"	f
LSERES	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL FUNCTION LSERES(/;"	f
LSERES	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL FUNCTION LSERES(/;"	f
LSUB	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon180
LTEST	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            LTEST(/;"	v	program:CBLAT2
LTEST	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            LTEST(/;"	v	program:CBLAT3
LTEST	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            LTEST(/;"	v	program:DBLAT2
LTEST	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            LTEST(/;"	v	program:DBLAT3
LTEST	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            LTEST(/;"	v	program:SBLAT2
LTEST	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            LTEST(/;"	v	program:SBLAT3
LTEST	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            LTEST(/;"	v	program:ZBLAT2
LTEST	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            LTEST(/;"	v	program:ZBLAT3
LTESTT	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            FATAL, LTESTT,/;"	v	program:CBLAT2
LTESTT	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            FATAL, LTESTT,/;"	v	program:CBLAT3
LTESTT	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            FATAL, LTESTT,/;"	v	program:DBLAT2
LTESTT	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            FATAL, LTESTT,/;"	v	program:DBLAT3
LTESTT	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            FATAL, LTESTT,/;"	v	program:SBLAT2
LTESTT	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            FATAL, LTESTT,/;"	v	program:SBLAT3
LTESTT	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            FATAL, LTESTT,/;"	v	program:ZBLAT2
LTESTT	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            FATAL, LTESTT,/;"	v	program:ZBLAT3
LUMatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::SuperLUBase
LUMatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::LUMatrixType LUMatrixType;$/;"	t	class:Eigen::SuperLU
LUMatrixType	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::UmfPackLU
LUNoMarker	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^enum { LUNoMarker = 3 };$/;"	e	enum:Eigen::internal::__anon178
LUSUP	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon180
LUTempSpace	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^inline Index LUTempSpace(Index&m, Index& w)$/;"	f	namespace:Eigen::internal
LU_GlobalLU_t	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^struct LU_GlobalLU_t {$/;"	s	namespace:Eigen::internal
LU_factor	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  inline static void LU_factor(gene_matrix & LU, Pivot_Vector & pivot, int N)$/;"	f	class:blitz_LU_solve_interface
LU_factor	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  inline static void LU_factor(gene_matrix & LU, Pivot_Vector & pivot, int N)$/;"	f	class:blitz_LU_solve_interface
LU_factor	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  inline static void LU_factor(gene_matrix & LU, Pivot_Vector & pivot, int N)$/;"	f	class:blitz_LU_solve_interface
LU_kernel_bmod	tools/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^template <> struct LU_kernel_bmod<1>$/;"	s	namespace:Eigen::internal
LU_kernel_bmod	tools/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^template <int SegSizeAtCompileTime> struct LU_kernel_bmod$/;"	s	namespace:Eigen::internal
LU_solve	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  inline static void LU_solve(const gene_matrix & LU, const Pivot_Vector pivot, gene_vector &B, gene_vector X, int N)$/;"	f	class:blitz_LU_solve_interface
LU_solve	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  inline static void LU_solve(const gene_matrix & LU, const Pivot_Vector pivot, gene_vector &B, gene_vector X, int N)$/;"	f	class:blitz_LU_solve_interface
LU_solve	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  inline static void LU_solve(const gene_matrix & LU, const Pivot_Vector pivot, gene_vector &B, gene_vector X, int N)$/;"	f	class:blitz_LU_solve_interface
LUnumTempV	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^inline Index LUnumTempV(Index& m, Index& w, Index& t, Index& b)$/;"	f	namespace:Eigen::internal
LZE	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            LZE$/;"	v	program:ZBLAT2
LZE	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL FUNCTION LZE(/;"	f
LZE	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            LZE$/;"	v	program:ZBLAT3
LZE	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL FUNCTION LZE(/;"	f
LZERES	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL FUNCTION LZERES(/;"	f
LZERES	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL FUNCTION LZERES(/;"	f
L_stl	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  typename Interface::stl_matrix L_stl;$/;"	m	class:Action_trisolve
Large	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  Large = 2,$/;"	e	enum:Eigen::__anon588
LargeEnough	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      LargeEnough = VmlSize==Dynamic || VmlSize>=EIGEN_MKL_VML_THRESHOLD$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^      Layout = Options_ & RowMajor ? RowMajor : ColMajor,$/;"	e	enum:Eigen::Tensor::__anon55
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon51
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    Layout = TensorEvaluator<const TensorReductionOp<ReduceOp, Dims, const TensorIndexTupleOp<ArgType> >, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon52
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^    Layout = TensorEvaluator<LeftArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon91
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  static const int Layout = internal::traits<LhsXprType>::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon65
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon61
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    Layout = TensorEvaluator<LeftArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon83
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    Layout = TensorEvaluator<LeftArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon84
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  static const int Layout = traits<LhsXprType>::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    Layout = TensorEvaluator<LeftArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorContractionEvaluatorBase::__anon96
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    Layout = TensorEvaluator<LeftArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon97
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int Layout = traits<LhsXprType>::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^    Layout = TensorEvaluator<LeftArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon74
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^    Layout = TensorEvaluator<LeftArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon114
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon99
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  static const int Layout = traits<XprType>::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    Layout = TensorEvaluator<InputArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon104
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    Layout = TensorEvaluator<InputArgType, GpuDevice>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon105
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  static const int Layout = traits<InputXprType>::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    Layout = TensorEvaluator<LhsXprType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon101
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    Layout = TensorEvaluator<XprType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon100
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  static const int Layout = traits<LhsXprType>::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  static const int Layout = traits<XprType>::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon89
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    Layout = Derived::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon75
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    Layout = Derived::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon77
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon78
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon79
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    Layout = TensorEvaluator<IfArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon81
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    Layout = TensorEvaluator<LeftArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon80
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^      Layout = Options_ & RowMajor ? RowMajor : ColMajor,$/;"	e	enum:Eigen::TensorFixedSize::__anon87
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon57
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon71
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon86
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon106
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    Layout = (static_cast<int>(TensorEvaluator<ArgType, Device>::Layout) == static_cast<int>(ColMajor)) ? RowMajor : ColMajor,$/;"	e	enum:Eigen::TensorEvaluator::__anon58
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    Layout = (static_cast<int>(TensorEvaluator<ArgType, Device>::Layout) == static_cast<int>(ColMajor)) ? RowMajor : ColMajor,$/;"	e	enum:Eigen::TensorEvaluator::__anon59
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  static const int Layout = (traits<XprType>::Layout == ColMajor) ? RowMajor : ColMajor;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^      Layout = PlainObjectType::Layout,$/;"	e	enum:Eigen::TensorMap::__anon60
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon115
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon116
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon118
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon119
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon68
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon102
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon67
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^      Layout = PlainObjectType::Layout,$/;"	e	enum:Eigen::TensorRef::__anon120
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    Layout = TensorRef<Derived>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon121
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon63
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon64
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon92
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon53
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon54
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  static const int Layout = BaseTraits::Layout;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  static const int Layout = Options_ & RowMajor ? RowMajor : ColMajor;$/;"	m	struct:Eigen::internal::traits
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    Layout = TensorEvaluator<ArgType, Device>::Layout,$/;"	e	enum:Eigen::TensorEvaluator::__anon85
Layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  static const int Layout = XprTraits::Layout;$/;"	m	struct:Eigen::internal::traits
LazyCoeffBasedProductMode	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
LazyEval	tools/eigen/bench/basicbenchmark.h	/^enum {LazyEval, EarlyEval, OmpEval};$/;"	e	enum:__anon729
LazyProduct	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
LeastSquareDiagonalPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner() : Base() {}$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
LeastSquareDiagonalPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit LeastSquareDiagonalPreconditioner(const MatType& mat) : Base()$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
LeastSquareDiagonalPreconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class LeastSquareDiagonalPreconditioner : public DiagonalPreconditioner<_Scalar>$/;"	c	namespace:Eigen
LeastSquaresConjugateGradient	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  LeastSquaresConjugateGradient() : Base() {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
LeastSquaresConjugateGradient	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  explicit LeastSquaresConjugateGradient(const MatrixType& A) : Base(A) {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
LeastSquaresConjugateGradient	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^class LeastSquaresConjugateGradient : public IterativeSolverBase<LeastSquaresConjugateGradient<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
LeftArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef LeftArgType_ LeftArgType;$/;"	t	struct:Eigen::internal::traits
LeftArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename internal::traits<Derived>::LeftArgType LeftArgType;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
LeftBlock	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix< Scalar, _Deg, Deg_1 >          LeftBlock;$/;"	t	class:Eigen::internal::companion
LeftBlockFirstRow	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix< Scalar, 1, Deg_1 >             LeftBlockFirstRow;$/;"	t	class:Eigen::internal::companion
LeftDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename LeftEvaluator::Dimensions LeftDimensions;$/;"	t	struct:Eigen::TensorEvaluator
LeftEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef TensorEvaluator<EvalLeftArgType, Device> LeftEvaluator;$/;"	t	struct:Eigen::TensorEvaluator
LeftEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef TensorEvaluator<EvalLeftArgType, Device> LeftEvaluator;$/;"	t	struct:Eigen::TensorEvaluator
LeftScaling	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    VectorXd& LeftScaling()$/;"	f	class:Eigen::IterScaling
LerpEulerAngles	tools/eigen/demos/opengl/quaternion_demo.h	/^      LerpEulerAngles$/;"	e	enum:RenderingWidget::LerpMode
LerpMode	tools/eigen/demos/opengl/quaternion_demo.h	/^    enum LerpMode {$/;"	g	class:RenderingWidget
LerpQuaternion	tools/eigen/demos/opengl/quaternion_demo.h	/^      LerpQuaternion,$/;"	e	enum:RenderingWidget::LerpMode
LevenbergMarquardt	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    LevenbergMarquardt(FunctorType& functor) $/;"	f	class:Eigen::LevenbergMarquardt
LevenbergMarquardt	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^class LevenbergMarquardt : internal::no_assignment_operator$/;"	c	namespace:Eigen
LevenbergMarquardt	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    LevenbergMarquardt(FunctorType &_functor)$/;"	f	class:Eigen::LevenbergMarquardt
LevenbergMarquardt	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^class LevenbergMarquardt$/;"	c	namespace:Eigen
LevenbergMarquardtSpace	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^namespace LevenbergMarquardtSpace {$/;"	n	namespace:Eigen
LevenbergMarquardtSpace	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^namespace LevenbergMarquardtSpace {$/;"	n	namespace:Eigen
Lhs	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_all<LhsType>::type Lhs;$/;"	t	class:Eigen::CwiseBinaryOp
Lhs	tools/eigen/Eigen/src/Core/Product.h	/^    typedef _Lhs Lhs;$/;"	t	class:Eigen::Product
Lhs	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,LhsMode,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<SparseLhsType>::type Lhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
Lhs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Lhs = 1,$/;"	e	enum:Eigen::internal::__anon94
Lhs	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    typedef typename Traits::Lhs Lhs;$/;"	t	class:Eigen::KroneckerProductBase
Lhs	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^  typedef typename remove_all<_Lhs>::type Lhs;$/;"	t	struct:Eigen::internal::traits
Lhs1	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename conditional<NeedToTranspose,RhsT,LhsT>::type Lhs1;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsAlignment	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    LhsAlignment = LhsEtorType::Alignment,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
LhsArg	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^            Lhs1 const&, SparseView<Lhs1> >::type LhsArg;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsBlasTraits	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::generic_product_impl
LhsBlasTraits	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
LhsBlasTraits	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
LhsCleaned	tools/eigen/Eigen/src/Core/Product.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:Eigen::internal::traits
LhsCleaned	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
LhsCoeffReadCost	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    LhsCoeffReadCost = LhsEtorType::CoeffReadCost,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
LhsCoeffReadCost	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        LhsCoeffReadCost = _LhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon34
LhsEtorType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<LhsNestedCleaned> LhsEtorType;$/;"	t	struct:Eigen::internal::product_evaluator
LhsEval	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<ActualLhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsEval	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<Lhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsEval	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef evaluator<Lhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
LhsEvaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef evaluator<Lhs>  LhsEvaluator;$/;"	t	struct:Eigen::internal::binary_evaluator
LhsFlags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    LhsFlags = evaluator<Lhs>::Flags,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon655
LhsFlags	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    LhsFlags = LhsEtorType::Flags,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
LhsFlags	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    LhsFlags = Lhs::Flags,$/;"	e	enum:Eigen::internal::traits::__anon12
LhsFlags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        LhsFlags = _LhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon34
LhsInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename evaluator<Lhs>::InnerIterator LhsInnerIterator;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsIsAligned	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    LhsIsAligned = int(LhsAlignment) >= int(unpacket_traits<PacketScalar>::alignment),$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
LhsIsSelfAdjoint	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsSelfAdjoint = (LhsMode&SelfAdjoint)==SelfAdjoint,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon286
LhsIsUpper	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsUpper = (LhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon286
LhsIterator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<Lhs>::InnerIterator  LhsIterator;$/;"	t	struct:Eigen::internal::binary_evaluator
LhsIterator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename evaluator<ActualLhs>::InnerIterator LhsIterator;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsIterator	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename evaluator<Lhs>::InnerIterator LhsIterator;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
LhsMap	tools/eigen/blas/BandTriangularSolver.h	/^  typedef Map<const Matrix<LhsScalar,Dynamic,Dynamic,ColMajor>, 0, OuterStride<> > LhsMap;$/;"	t	struct:internal::band_solve_triangular_selector
LhsMap	tools/eigen/blas/BandTriangularSolver.h	/^  typedef Map<const Matrix<LhsScalar,Dynamic,Dynamic,RowMajor>, 0, OuterStride<> > LhsMap;$/;"	t	struct:internal::band_solve_triangular_selector
LhsMatrixType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename take_matrix_for_product<Lhs>::type LhsMatrixType;$/;"	t	struct:Eigen::internal::traits
LhsMatrixType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<homogeneous_left_product_impl>::LhsMatrixType LhsMatrixType;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
LhsMatrixTypeNested	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename LhsMatrixTypeCleaned::Nested>::type LhsMatrixTypeNested;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsNested	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::ref_selector<LhsType>::type LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
LhsNested	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Lhs::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	tools/eigen/Eigen/src/Core/Product.h	/^    typedef typename internal::ref_selector<Lhs>::type LhsNested;$/;"	t	class:Eigen::Product
LhsNested	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::nested_eval<Lhs,Rhs::ColsAtCompileTime>::type LhsNested;$/;"	t	struct:Eigen::internal::product_evaluator
LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename LhsXprType::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename LhsXprType::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename LhsXprType::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename InputXprType::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename LhsXprType::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename LhsXprType::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef const typename internal::nested_eval<Lhs, Rhs::RowsAtCompileTime>::type LhsNested;$/;"	t	struct:Eigen::SkylineProductReturnType
LhsNestedCleaned	tools/eigen/Eigen/src/Core/Product.h	/^    typedef typename internal::remove_all<LhsNested>::type LhsNestedCleaned;$/;"	t	class:Eigen::Product
LhsNestedCleaned	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::remove_all<LhsNested>::type LhsNestedCleaned;$/;"	t	struct:Eigen::internal::product_evaluator
LhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::LhsPacket LhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
LhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,RealPacket,  Scalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
LhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
LhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
LhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
LhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
LhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon266
LhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon267
LhsProductTraits	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef blas_traits<Lhs> LhsProductTraits;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress   = Traits::LhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon274
LhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
LhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
LhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
LhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
LhsRowMajor	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    LhsRowMajor = LhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
LhsScalar	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Lhs::Scalar LhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar> LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
LhsScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_RhsScalar,_LhsScalar>::type LhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
LhsScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Lhs::Scalar LhsScalar;$/;"	t	struct:Eigen::internal::generic_product_impl
LhsScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename internal::remove_const<typename EvalLeftArgType::Scalar>::type LhsScalar;$/;"	t	struct:Eigen::TensorEvaluator
LhsScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef typename internal::remove_const<typename EvalLeftArgType::Scalar>::type LhsScalar;$/;"	t	struct:Eigen::TensorEvaluator
LhsTraits	tools/eigen/Eigen/src/Core/Product.h	/^  typedef traits<LhsCleaned> LhsTraits;$/;"	t	struct:Eigen::internal::traits
LhsUpLo	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  enum { LhsUpLo = LhsMode&(Upper|Lower) };$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon281
Lib_Mean	tools/eigen/bench/btl/data/mean.cxx	/^  Lib_Mean( void ):_lib_name(),_mean_in_cache(),_mean_out_of_cache(){$/;"	f	class:Lib_Mean
Lib_Mean	tools/eigen/bench/btl/data/mean.cxx	/^  Lib_Mean(const Lib_Mean & lm):_lib_name(lm._lib_name),_mean_in_cache(lm._mean_in_cache),_mean_out_of_cache(lm._mean_out_of_cache){$/;"	f	class:Lib_Mean
Lib_Mean	tools/eigen/bench/btl/data/mean.cxx	/^  Lib_Mean(const string & name, const double & mic, const double & moc):_lib_name(name),_mean_in_cache(mic),_mean_out_of_cache(moc){$/;"	f	class:Lib_Mean
Lib_Mean	tools/eigen/bench/btl/data/mean.cxx	/^class Lib_Mean{$/;"	c	file:
LinSpaced	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinearAccess	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    LinearAccess = ( (Direction==BothDirections) && (int(Flags0)&PacketAccessBit) )$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
LinearAccessBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int LinearAccessBit = 0x10;$/;"	m	namespace:Eigen
LinearBlock	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_const<LinearBlockConst>::type                 LinearBlock;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearBlock	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_const<LinearBlockConst>::type                 LinearBlock;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearBlockConst	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Lhs::template ConstNColsBlockXpr<Dim>::Type          LinearBlockConst;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearBlockConst	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Rhs::template ConstNRowsBlockXpr<Dim>::Type          LinearBlockConst;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearMapper	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gebp_kernel
LinearMapper	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gemm_pack_lhs
LinearMapper	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gemm_pack_rhs
LinearMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef BlasLinearMapper<Scalar, Index, AlignmentType> LinearMapper;$/;"	t	class:Eigen::internal::blas_data_mapper
LinearMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef Self LinearMapper;$/;"	t	class:Eigen::internal::TensorContractionSubMapper
LinearMatrixType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,Dim,Options> LinearMatrixType;$/;"	t	class:Eigen::Transform
LinearMatrixType	tools/eigen/Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Translation
LinearPart	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,Dim,int(Mode)==(AffineCompact) && (Options&RowMajor)==0> LinearPart;$/;"	t	class:Eigen::Transform
LinearProduct	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<Lhs,LinearBlock,LazyProduct>                          LinearProduct;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearProduct	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<LinearBlock,Rhs,LazyProduct>                          LinearProduct;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearTraversal	tools/eigen/Eigen/src/Core/util/Constants.h	/^  LinearTraversal,$/;"	e	enum:Eigen::__anon494
LinearVectorizedTraversal	tools/eigen/Eigen/src/Core/util/Constants.h	/^  LinearVectorizedTraversal,$/;"	e	enum:Eigen::__anon494
ListEl	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    struct ListEl$/;"	s	class:Eigen::internal::AmbiVector
LoadData	tools/SimpleIni.h	/^    SI_Error LoadData(const std::string & a_strData) {$/;"	f	class:CSimpleIniTempl
LoadData	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::LoadData($/;"	f	class:CSimpleIniTempl
LoadFile	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::LoadFile($/;"	f	class:CSimpleIniTempl
LoadMultiLineText	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::LoadMultiLineText($/;"	f	class:CSimpleIniTempl
LoadOrder	tools/SimpleIni.h	/^        struct LoadOrder : std::binary_function<Entry, Entry, bool> {$/;"	s	struct:CSimpleIniTempl::Entry
Local	tools/eigen/demos/opengl/trackball.h	/^    enum Mode {Around, Local};$/;"	e	enum:Trackball::Mode
Log10ReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_log10_op<Scalar>, const Derived> Log10ReturnType;$/;"	t
LogReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_log_op<Scalar>, const Derived> LogReturnType;$/;"	t
Lower	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Lower=0x1,                      $/;"	e	enum:Eigen::__anon492
LuType	tools/eigen/Eigen/src/LU/FullPivLU.h	/^  typedef FullPivLU<MatrixType> LuType;$/;"	t	struct:Eigen::internal::Assignment
LuType	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  typedef PartialPivLU<MatrixType> LuType;$/;"	t	struct:Eigen::internal::Assignment
LvalueBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int LvalueBit = 0x20;$/;"	m	namespace:Eigen
M	tools/eigen/bench/bench_gemm.cpp	/^typedef Matrix<RealScalar,Dynamic,Dynamic> M;$/;"	t	file:
M	tools/eigen/bench/geometry.cpp	/^typedef Matrix<RealScalar,Dynamic,Dynamic> M;$/;"	t	file:
M	tools/eigen/doc/snippets/DirectionWise_hnormalized.cpp	/^Matrix4Xd M = Matrix4Xd::Random(4,5);$/;"	v
M	tools/eigen/doc/snippets/MatrixBase_eval.cpp	/^Matrix2f M = Matrix2f::Random();$/;"	v
M	tools/eigen/doc/snippets/VectorwiseOp_homogeneous.cpp	/^Matrix3Xd M = Matrix3Xd::Random(3,5);$/;"	v
MAKE_STRING	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	48;"	d
MAKE_STRING2	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	47;"	d
MANDELBROT_H	tools/eigen/demos/mandelbrot/mandelbrot.h	11;"	d
MATSIZE	tools/eigen/bench/benchmark.cpp	8;"	d	file:
MATSIZE	tools/eigen/bench/benchmarkX.cpp	15;"	d	file:
MATTYPE	tools/eigen/bench/benchmarkX.cpp	11;"	d	file:
MAX_AXPY	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	32;"	d
MAX_LU	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	44;"	d
MAX_MM	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	40;"	d
MAX_MV	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	36;"	d
MESSAGE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	59;"	d
MESSAGE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	76;"	d
METIS_SUPPORT_H	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	10;"	d
MGH09_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    MGH09_functor(void) : Functor<double>(4,11) {}$/;"	f	struct:MGH09_functor
MGH09_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct MGH09_functor : Functor<double>$/;"	s	file:
MGH09_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    MGH09_functor(void) : DenseFunctor<double>(4,11) {}$/;"	f	struct:MGH09_functor
MGH09_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct MGH09_functor : DenseFunctor<double>$/;"	s	file:
MGH10_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    MGH10_functor(void) : Functor<double>(3,16) {}$/;"	f	struct:MGH10_functor
MGH10_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct MGH10_functor : Functor<double>$/;"	s	file:
MGH10_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    MGH10_functor(void) : DenseFunctor<double>(3,16) {}$/;"	f	struct:MGH10_functor
MGH10_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct MGH10_functor : DenseFunctor<double>$/;"	s	file:
MGH17_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    MGH17_functor(void) : Functor<double>(5,33) {}$/;"	f	struct:MGH17_functor
MGH17_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct MGH17_functor : Functor<double>$/;"	s	file:
MGH17_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    MGH17_functor(void) : DenseFunctor<double>(5,33) {}$/;"	f	struct:MGH17_functor
MGH17_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct MGH17_functor : DenseFunctor<double>$/;"	s	file:
MINDENSITY	tools/eigen/bench/sparse_cholesky.cpp	26;"	d	file:
MINDENSITY	tools/eigen/bench/sparse_dense_product.cpp	21;"	d	file:
MINDENSITY	tools/eigen/bench/sparse_lu.cpp	26;"	d	file:
MINDENSITY	tools/eigen/bench/sparse_randomsetter.cpp	25;"	d	file:
MINDENSITY	tools/eigen/bench/sparse_transpose.cpp	21;"	d	file:
MINDENSITY	tools/eigen/bench/sparse_trisolver.cpp	22;"	d	file:
MINRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        MINRES() : Base() {}$/;"	f	class:Eigen::MINRES
MINRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        MINRES(const MatrixType& A) : Base(A) {}$/;"	f	class:Eigen::MINRES
MINRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^    class MINRES : public IterativeSolverBase<MINRES<_MatrixType,_UpLo,_Preconditioner> >$/;"	c	namespace:Eigen
MIN_AXPY	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	30;"	d
MIN_LU	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	42;"	d
MIN_MM	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	38;"	d
MIN_MV	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	34;"	d
MIN_TIME	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	26;"	d
MODE	tools/eigen/blas/testing/cblat1.f	/^      INTEGER          ICASE, INCX, INCY, MODE,/;"	v	program:CBLAT1
MODE	tools/eigen/blas/testing/zblat1.f	/^      INTEGER          ICASE, INCX, INCY, MODE,/;"	v	program:ZBLAT1
MODES	tools/eigen/bench/basicbenchmark.cpp	12;"	d	file:
MPFR_USE_INTMAX_T	tools/eigen/unsupported/test/mpreal/mpreal.h	112;"	d
MPFR_USE_INTMAX_T	tools/eigen/unsupported/test/mpreal/mpreal.h	120;"	d
MPFR_USE_INTMAX_T	tools/eigen/unsupported/test/mpreal/mpreal.h	127;"	d
MPREAL_DOUBLE_BITS_OVERFLOW	tools/eigen/unsupported/test/mpreal/mpreal.h	153;"	d
MPREAL_HAVE_DYNAMIC_STD_NUMERIC_LIMITS	tools/eigen/unsupported/test/mpreal/mpreal.h	63;"	d
MPREAL_HAVE_EXPLICIT_CONVERTERS	tools/eigen/unsupported/test/mpreal/mpreal.h	106;"	d
MPREAL_HAVE_INT64_SUPPORT	tools/eigen/unsupported/test/mpreal/mpreal.h	119;"	d
MPREAL_HAVE_INT64_SUPPORT	tools/eigen/unsupported/test/mpreal/mpreal.h	126;"	d
MPREAL_HAVE_MOVE_SUPPORT	tools/eigen/unsupported/test/mpreal/mpreal.h	94;"	d
MPREAL_HAVE_MSVC_DEBUGVIEW	tools/eigen/unsupported/test/mpreal/mpreal.h	62;"	d
MPREAL_MSVC_DEBUGVIEW_CODE	tools/eigen/unsupported/test/mpreal/mpreal.h	139;"	d
MPREAL_MSVC_DEBUGVIEW_CODE	tools/eigen/unsupported/test/mpreal/mpreal.h	142;"	d
MPREAL_MSVC_DEBUGVIEW_DATA	tools/eigen/unsupported/test/mpreal/mpreal.h	140;"	d
MPREAL_MSVC_DEBUGVIEW_DATA	tools/eigen/unsupported/test/mpreal/mpreal.h	143;"	d
MPREAL_PERMISSIVE_EXPR	tools/eigen/unsupported/test/mpreal/mpreal.h	157;"	d
MPREAL_PERMISSIVE_EXPR	tools/eigen/unsupported/test/mpreal/mpreal.h	159;"	d
MPREAL_UNARY_MATH_FUNCTION_BODY	tools/eigen/unsupported/test/mpreal/mpreal.h	2131;"	d
MPREAL_VERSION_MAJOR	tools/eigen/unsupported/test/mpreal/mpreal.h	68;"	d
MPREAL_VERSION_MINOR	tools/eigen/unsupported/test/mpreal/mpreal.h	69;"	d
MPREAL_VERSION_PATCHLEVEL	tools/eigen/unsupported/test/mpreal/mpreal.h	70;"	d
MPREAL_VERSION_STRING	tools/eigen/unsupported/test/mpreal/mpreal.h	71;"	d
MTL4_INTERFACE_HH	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	19;"	d
MYVERIFY	tools/eigen/bench/benchBlasGemm.cpp	171;"	d	file:
M_PI	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	15;"	d
MakeComplexOp	tools/eigen/doc/examples/class_CwiseBinaryOp.cpp	/^template<typename Scalar> struct MakeComplexOp {$/;"	s	file:
MakeLowerTriangular	tools/eigen/test/sparse.h	/^  MakeLowerTriangular = 2,$/;"	e	enum:__anon722
MakeUpperTriangular	tools/eigen/test/sparse.h	/^  MakeUpperTriangular = 4,$/;"	e	enum:__anon722
MandelbrotThread	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    MandelbrotThread(MandelbrotWidget *w, int i) : widget(w), id(i) {}$/;"	f	class:MandelbrotThread
MandelbrotThread	tools/eigen/demos/mandelbrot/mandelbrot.h	/^class MandelbrotThread : public QThread$/;"	c
MandelbrotWidget	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    MandelbrotWidget() : QWidget(), center(0,0), xradius(2),$/;"	f	class:MandelbrotWidget
MandelbrotWidget	tools/eigen/demos/mandelbrot/mandelbrot.h	/^class MandelbrotWidget : public QWidget$/;"	c
Map	tools/eigen/Eigen/src/Core/Map.h	/^    explicit inline Map(PointerArgType dataPtr, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, Index rows, Index cols, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, Index size, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Core/Map.h	/^template<typename PlainObjectType, int MapOptions, typename StrideType> class Map$/;"	c	namespace:Eigen
Map	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const StorageIndex* indicesPtr)$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const StorageIndex* indicesPtr, Index size)$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^class Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex>,_PacketAccess>$/;"	c	namespace:Eigen
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	tools/eigen/Eigen/src/Core/Transpositions.h	/^    explicit inline Map(const StorageIndex* indicesPtr)$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline Map(const StorageIndex* indicesPtr, Index size)$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Core/Transpositions.h	/^class Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex>,PacketAccess>$/;"	c	namespace:Eigen
Map	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    explicit EIGEN_STRONG_INLINE Map(Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    explicit EIGEN_STRONG_INLINE Map(const Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^class Map<Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^class Map<const Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Map(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr,$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Map(Index rows, Index cols, Index nnz, const StorageIndex* outerIndexPtr,$/;"	f	class:Eigen::Map
Map	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^class Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
Map	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^class Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
Map	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef MappedSparseMatrix<Scalar,Flags> Map;$/;"	t	class:Eigen::SparseMatrix
Map	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(MatrixBase<MatrixType>& _mat)$/;"	f	struct:Eigen::SluMatrix
Map	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(SparseMatrixBase<MatrixType>& a_mat)$/;"	f	struct:Eigen::SluMatrix
Map	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    static SkylineStorage Map(Index* upperProfile, Index* lowerProfile, Scalar* diag, Scalar* upper, Scalar* lower, Index size, Index upperSize, Index lowerSize) {$/;"	f	class:Eigen::SkylineStorage
Map	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    typedef MappedSparseMatrix<Scalar,Flags> Map;$/;"	t	class:Eigen::DynamicSparseMatrix
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC explicit inline MapBase(PointerType dataPtr) : Base(dataPtr) {}$/;"	f	class:Eigen::MapBase
MapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline MapBase(PointerType dataPtr, Index rows, Index cols) : Base(dataPtr, rows, cols) {}$/;"	f	class:Eigen::MapBase
MapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline MapBase(PointerType dataPtr, Index vecSize) : Base(dataPtr, vecSize) {}$/;"	f	class:Eigen::MapBase
MapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^    explicit inline MapBase(PointerType dataPtr) : m_data(dataPtr), m_rows(RowsAtCompileTime), m_cols(ColsAtCompileTime)$/;"	f	class:Eigen::MapBase
MapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index rows, Index cols)$/;"	f	class:Eigen::MapBase
MapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index vecSize)$/;"	f	class:Eigen::MapBase
MapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
MapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, WriteAccessors>$/;"	c	namespace:Eigen
MapLU	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  typedef Map<Matrix<Scalar, Dynamic, Dynamic, StorageOrder> > MapLU;$/;"	t	struct:Eigen::internal::partial_lu_impl
MapType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, Unaligned>  MapType;$/;"	t	class:Eigen::PlainObjectBase
MapType	tools/eigen/doc/snippets/Tutorial_Map_using.cpp	/^typedef Map<MatrixType> MapType;$/;"	t	file:
MapTypeConst	tools/eigen/doc/snippets/Tutorial_Map_using.cpp	/^typedef Map<const MatrixType> MapTypeConst;   \/\/ a read-only map$/;"	t	file:
Map_MatrixXd_add	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void Map_MatrixXd_add(const C_Map_MatrixXd *m1, const C_Map_MatrixXd *m2, C_Map_MatrixXd *result)$/;"	f
Map_MatrixXd_copy	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void Map_MatrixXd_copy(C_Map_MatrixXd *dst, const C_Map_MatrixXd *src)$/;"	f
Map_MatrixXd_copy_matrix	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void Map_MatrixXd_copy_matrix(C_Map_MatrixXd *dst, const C_MatrixXd *src)$/;"	f
Map_MatrixXd_delete	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void Map_MatrixXd_delete(C_Map_MatrixXd *m)$/;"	f
Map_MatrixXd_get_coeff	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^double Map_MatrixXd_get_coeff(const C_Map_MatrixXd *m, int i, int j)$/;"	f
Map_MatrixXd_multiply	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void Map_MatrixXd_multiply(const C_Map_MatrixXd *m1, const C_Map_MatrixXd *m2, C_Map_MatrixXd *result)$/;"	f
Map_MatrixXd_new	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^C_Map_MatrixXd* Map_MatrixXd_new(double *array, int rows, int cols)$/;"	f
Map_MatrixXd_print	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void Map_MatrixXd_print(const C_Map_MatrixXd *m)$/;"	f
Map_MatrixXd_set_coeff	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void Map_MatrixXd_set_coeff(C_Map_MatrixXd *m, int i, int j, double coeff)$/;"	f
Map_MatrixXd_set_zero	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void Map_MatrixXd_set_zero(C_Map_MatrixXd *m)$/;"	f
MappedMatrixBlock	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Map<ScalarMatrix, 0,  OuterStride<> > MappedMatrixBlock;$/;"	t	class:Eigen::internal::SparseLUImpl
MappedRhs	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef Map<Matrix<RhsScalar,Dynamic,1>, Aligned> MappedRhs;$/;"	t	struct:Eigen::internal::triangular_solver_selector
MappedSparseMatrix	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline MappedSparseMatrix(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr, StorageIndex* innerIndexPtr, Scalar* valuePtr, StorageIndex* innerNonZeroPtr = 0)$/;"	f	class:Eigen::MappedSparseMatrix
MappedSparseMatrix	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix$/;"	c	namespace:Eigen
MappedSuperNodalMatrix	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    MappedSuperNodalMatrix()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
MappedSuperNodalMatrix	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    MappedSuperNodalMatrix(Index m, Index n,  ScalarVector& nzval, IndexVector& nzval_colptr, IndexVector& rowind,$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
MappedSuperNodalMatrix	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^class MappedSuperNodalMatrix$/;"	c	namespace:Eigen::internal
MaskLvalueBit	tools/eigen/Eigen/src/Core/Diagonal.h	/^    MaskLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon389
MaskPacketAccessBit	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    MaskPacketAccessBit = (InnerSize == Dynamic || (InnerSize % packet_traits<Scalar>::size) == 0)$/;"	e	enum:Eigen::internal::evaluator::__anon660
Mat	tools/eigen/bench/perf_monitoring/gemm/gemm.cpp	/^typedef Matrix<Scalar,Dynamic,Dynamic> Mat;$/;"	t	file:
Mat1	tools/eigen/failtest/sparse_storage_mismatch.cpp	/^typedef SparseMatrix<double,ColMajor> Mat1;$/;"	t	file:
Mat2	tools/eigen/failtest/sparse_storage_mismatch.cpp	/^typedef SparseMatrix<double,ColMajor> Mat2;$/;"	t	file:
Mat2	tools/eigen/failtest/sparse_storage_mismatch.cpp	/^typedef SparseMatrix<double,RowMajor> Mat2;$/;"	t	file:
MatchAtCompileTime	tools/eigen/Eigen/src/Core/Ref.h	/^      MatchAtCompileTime = HasDirectAccess && StorageOrderMatch && InnerStrideMatch && OuterStrideMatch && AlignmentMatch && ScalarTypeMatch$/;"	e	enum:Eigen::internal::traits::match::__anon616
MatchAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^      MatchAtCompileTime = (Derived::Flags&CompressedAccessBit) && StorageOrderMatch$/;"	e	enum:Eigen::internal::traits::match::__anon200
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix() : Base()$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Matrix& other) : Base(other)$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z)$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const T0& x, const T1& y)$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE explicit Matrix(const T& x)$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    Matrix(Matrix&& other)$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^    explicit Matrix(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Matrix
Matrix	tools/eigen/Eigen/src/Core/Matrix.h	/^class Matrix$/;"	c	namespace:Eigen
Matrix	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^::Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
Matrix2	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,2> Matrix2;$/;"	t	class:Eigen::Rotation2D
Matrix2s	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,2,2> Matrix2s;$/;"	t	class:Eigen::RealQZ
Matrix3	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::AngleAxis
Matrix3	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::QuaternionBase
Matrix3	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:EulerAngles	file:
Matrix3Xd	tools/eigen/doc/snippets/VectorwiseOp_homogeneous.cpp	/^typedef Matrix<double,3,Dynamic> Matrix3Xd;$/;"	t	file:
Matrix3dRowMajor	tools/eigen/unsupported/test/matrix_power.cpp	/^typedef Matrix<double,3,3,RowMajor>         Matrix3dRowMajor;$/;"	t	file:
Matrix3e	tools/eigen/unsupported/test/matrix_power.cpp	/^typedef Matrix<long double,3,3>             Matrix3e;$/;"	t	file:
Matrix3x3	tools/eigen/doc/snippets/HouseholderQR_solve.cpp	/^typedef Matrix<float,3,3> Matrix3x3;$/;"	t	file:
Matrix4Xd	tools/eigen/doc/snippets/DirectionWise_hnormalized.cpp	/^typedef Matrix<double,4,Dynamic> Matrix4Xd;$/;"	t	file:
Matrix5x3	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^typedef Matrix<double, 5, 3> Matrix5x3;$/;"	t	file:
Matrix5x5	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^typedef Matrix<double, 5, 5> Matrix5x5;$/;"	t	file:
MatrixAlignment	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment     = traits<MatrixType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon171
MatrixAlignment	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment     = traits<MatrixType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon172
MatrixBase	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC MatrixBase() : Base() {}$/;"	f	class:Eigen::MatrixBase
MatrixBase	tools/eigen/Eigen/src/Core/MatrixBase.h	/^template<typename Derived> class MatrixBase$/;"	c	namespace:Eigen
MatrixCols	tools/eigen/Eigen/src/Core/Block.h	/^    MatrixCols = traits<XprType>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon246
MatrixComplexPowerReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    MatrixComplexPowerReturnValue(const Derived& A, const ComplexScalar& p) : m_A(A), m_p(p)$/;"	f	class:Eigen::MatrixComplexPowerReturnValue
MatrixComplexPowerReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^class MatrixComplexPowerReturnValue : public ReturnByValue< MatrixComplexPowerReturnValue<Derived> >$/;"	c	namespace:Eigen
MatrixConjugateReturnType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::remove_all<typename MatrixType::ConjugateReturnType>::type MatrixConjugateReturnType;$/;"	t	class:Eigen::TriangularView
MatrixExponentialReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    MatrixExponentialReturnValue(const Derived& src) : m_src(src) { }$/;"	f	struct:Eigen::MatrixExponentialReturnValue
MatrixExponentialReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^template<typename Derived> struct MatrixExponentialReturnValue$/;"	s	namespace:Eigen
MatrixExponentialScalingOp	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^  MatrixExponentialScalingOp(int squarings) : m_squarings(squarings) { }$/;"	f	struct:Eigen::internal::MatrixExponentialScalingOp
MatrixExponentialScalingOp	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^struct MatrixExponentialScalingOp$/;"	s	namespace:Eigen::internal
MatrixFlags	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    MatrixFlags = evaluator<MatrixType>::Flags,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
MatrixFunctionAtomic	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    MatrixFunctionAtomic(StemFunction f) : m_f(f) { }$/;"	f	class:Eigen::internal::MatrixFunctionAtomic
MatrixFunctionAtomic	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^class MatrixFunctionAtomic $/;"	c	namespace:Eigen::internal
MatrixFunctionReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    MatrixFunctionReturnValue(const Derived& A, StemFunction f) : m_A(A), m_f(f) { }$/;"	f	class:Eigen::MatrixFunctionReturnValue
MatrixFunctionReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^template<typename Derived> class MatrixFunctionReturnValue$/;"	c	namespace:Eigen
MatrixHReturnType	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef internal::HessenbergDecompositionMatrixHReturnType<MatrixType> MatrixHReturnType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixL	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLDLT
MatrixL	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLLT
MatrixL	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const CholMatrixType, Eigen::Lower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixL	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const CholMatrixType, Eigen::UnitLower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixLogarithmAtomic	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^class MatrixLogarithmAtomic$/;"	c	namespace:Eigen::internal
MatrixLogarithmReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  explicit MatrixLogarithmReturnValue(const Derived& A) : m_A(A) { }$/;"	f	class:Eigen::MatrixLogarithmReturnValue
MatrixLogarithmReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^template<typename Derived> class MatrixLogarithmReturnValue$/;"	c	namespace:Eigen
MatrixMarketIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    MatrixMarketIterator(const std::string &folder)$/;"	f	class:Eigen::MatrixMarketIterator
MatrixMarketIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^class MatrixMarketIterator $/;"	c	namespace:Eigen
MatrixOptions	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^    MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::BDCSVD::__anon164
MatrixOptions	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^      MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::JacobiSVD::__anon161
MatrixOptions	tools/eigen/Eigen/src/SVD/SVDBase.h	/^    MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::SVDBase::__anon162
MatrixPower	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    explicit MatrixPower(const MatrixType& A) :$/;"	f	class:Eigen::MatrixPower
MatrixPower	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^class MatrixPower : internal::noncopyable$/;"	c	namespace:Eigen
MatrixPowerAtomic	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^MatrixPowerAtomic<MatrixType>::MatrixPowerAtomic(const MatrixType& T, RealScalar p) :$/;"	f	class:Eigen::MatrixPowerAtomic
MatrixPowerAtomic	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^class MatrixPowerAtomic : internal::noncopyable$/;"	c	namespace:Eigen
MatrixPowerParenthesesReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    MatrixPowerParenthesesReturnValue(MatrixPower<MatrixType>& pow, RealScalar p) : m_pow(pow), m_p(p)$/;"	f	class:Eigen::MatrixPowerParenthesesReturnValue
MatrixPowerParenthesesReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^class MatrixPowerParenthesesReturnValue : public ReturnByValue< MatrixPowerParenthesesReturnValue<MatrixType> >$/;"	c	namespace:Eigen
MatrixPowerReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    MatrixPowerReturnValue(const Derived& A, RealScalar p) : m_A(A), m_p(p)$/;"	f	class:Eigen::MatrixPowerReturnValue
MatrixPowerReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^class MatrixPowerReturnValue : public ReturnByValue< MatrixPowerReturnValue<Derived> >$/;"	c	namespace:Eigen
MatrixQReturnType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef internal::FullPivHouseholderQRMatrixQReturnType<MatrixType> MatrixQReturnType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixQType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, Options, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixQType;$/;"	t	class:Eigen::ColPivHouseholderQR
MatrixQType	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, (MatrixType::Flags&RowMajorBit) ? RowMajor : ColMajor, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixQType;$/;"	t	class:Eigen::HouseholderQR
MatrixRows	tools/eigen/Eigen/src/Core/Block.h	/^    MatrixRows = traits<XprType>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon246
MatrixSquareRootReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    explicit MatrixSquareRootReturnValue(const Derived& src) : m_src(src) { }$/;"	f	class:Eigen::MatrixSquareRootReturnValue
MatrixSquareRootReturnValue	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^template<typename Derived> class MatrixSquareRootReturnValue$/;"	c	namespace:Eigen
MatrixTReturnType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef internal::TridiagonalizationMatrixTReturnType<MatrixTypeRealView> MatrixTReturnType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	tools/RedSVD.hh	/^		typedef _MatrixType MatrixType;$/;"	t	class:RedSVD::RedPCA
MatrixType	tools/RedSVD.hh	/^		typedef _MatrixType MatrixType;$/;"	t	class:RedSVD::RedSVD
MatrixType	tools/RedSVD.hh	/^		typedef _MatrixType MatrixType;$/;"	t	class:RedSVD::RedSymEigen
MatrixType	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LDLT
MatrixType	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LLT
MatrixType	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodBase
MatrixType	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodDecomposition
MatrixType	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLDLT
MatrixType	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLLT
MatrixType	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSupernodalLLT
MatrixType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    typedef typename nested_eval<ExpressionType, 1>::type MatrixType;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::conditional<int(Side)==OnTheRight,Lhs,Rhs>::type MatrixType;$/;"	t	struct:Eigen::internal::generic_product_impl
MatrixType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename nested_eval<ExpressionType, 1>::type MatrixType;$/;"	t	struct:Eigen::internal::transposition_matrix_product
MatrixType	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SelfAdjointView
MatrixType	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef typename Decomposition::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::solve_traits
MatrixType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::TriangularView
MatrixType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::TriangularViewImpl
MatrixType	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexEigenSolver
MatrixType	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexSchur
MatrixType	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::EigenSolver
MatrixType	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedEigenSolver
MatrixType	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
MatrixType	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixType	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealQZ
MatrixType	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealSchur
MatrixType	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
MatrixType	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
MatrixType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef typename Transform<Scalar,Dim,AffineCompact,Options>::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
MatrixType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef typename internal::make_proper_matrix_type<Scalar,Rows,HDim,Options>::type MatrixType;$/;"	t	class:Eigen::Transform
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> MatrixType;$/;"	t	class:Eigen::DiagonalPreconditioner
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::BiCGSTAB
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ConjugateGradient
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> MatrixType;$/;"	t	class:Eigen::IncompleteLUT
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::IterativeSolverBase
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
MatrixType	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivLU
MatrixType	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PartialPivLU
MatrixType	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MapLU, Dynamic, Dynamic> MatrixType;$/;"	t	struct:Eigen::internal::partial_lu_impl
MatrixType	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixBase
MatrixType	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLDLT
MatrixType	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLLT
MatrixType	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLU
MatrixType	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pastix_traits
MatrixType	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pardiso_traits
MatrixType	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::MatrixType MatrixType;$/;"	t	class:Eigen::PardisoImpl
MatrixType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ColPivHouseholderQR
MatrixType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixType	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HouseholderQR
MatrixType	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor, StorageIndex> MatrixType;$/;"	t	class:Eigen::SPQR
MatrixType	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::BDCSVD
MatrixType	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::JacobiSVD
MatrixType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::SVDBase
MatrixType	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
MatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholesky
MatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLDLT
MatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLLT
MatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
MatrixType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef SparseMatrix<_Scalar, _Options, _Index> MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef _MatrixType MatrixType; $/;"	t	class:Eigen::SparseLU
MatrixType	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> MatrixType; $/;"	t	class:Eigen::internal::SparseLUImpl
MatrixType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SparseQR
MatrixType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::evaluator_traits
MatrixType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::QRMatrixType MatrixType;$/;"	t	struct:Eigen::SparseQR_QProduct
MatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperILU
MatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLU
MatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLUBase
MatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Derived MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Matrix<Scalar,Rows,Cols,Options,MRows,MCols> MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::UmfPackLU
MatrixType	tools/eigen/Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::image_retval_base
MatrixType	tools/eigen/Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/Eigen/src/misc/Kernel.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^typedef MatrixXf MatrixType;$/;"	t	file:
MatrixType	tools/eigen/blas/common.h	/^typedef Map<Matrix<Scalar,Dynamic,Dynamic,ColMajor>, 0, OuterStride<> > MatrixType;$/;"	t
MatrixType	tools/eigen/doc/snippets/Tutorial_Map_using.cpp	/^typedef Matrix<float,1,Dynamic> MatrixType;$/;"	t	file:
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::DGMRES
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GMRES
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef FactorType MatrixType;$/;"	t	class:Eigen::IncompleteCholesky
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> MatrixType;$/;"	t	class:Eigen::IncompleteLU
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^            typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        typedef _MatrixType MatrixType;$/;"	t	class:Eigen::MINRES
MatrixType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    typedef _MatrixType MatrixType; $/;"	t	class:Eigen::IterScaling
MatrixType	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    typedef SparseMatrix<Scalar,ColMajor> MatrixType; $/;"	t	class:Eigen::MatrixMarketIterator
MatrixTypeCleaned	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixTypeCleaned	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::transposition_matrix_product
MatrixTypeCleaned	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeInnerStride	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    MatrixTypeInnerStride =  inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon379
MatrixTypeNested	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/Core/Diagonal.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::Replicate
MatrixTypeNested	tools/eigen/Eigen/src/Core/Replicate.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/Core/Reverse.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNested	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/Core/Transpose.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::TriangularView
MatrixTypeNested	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::traits<PartialReduxExpr>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::PartialReduxExpr
MatrixTypeNested	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseView
MatrixTypeNestedCleaned	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNestedCleaned MatrixTypeNestedCleaned;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNestedCleaned	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixTypeNestedCleaned	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNestedNonRef	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedNonRef MatrixTypeNestedNonRef;$/;"	t	class:Eigen::TriangularView
MatrixTypeNestedNonRef	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedNonRef	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNestedPlain	tools/eigen/Eigen/src/Core/Transpose.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedPlain;$/;"	t	struct:Eigen::internal::traits
MatrixTypeOuterStride	tools/eigen/Eigen/src/Core/Diagonal.h	/^    MatrixTypeOuterStride = outer_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon389
MatrixTypeRealView	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::remove_all<typename MatrixType::RealReturnType>::type MatrixTypeRealView;$/;"	t	class:Eigen::Tridiagonalization
MatrixU	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLDLT
MatrixU	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLLT
MatrixU	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const typename CholMatrixType::AdjointReturnType, Eigen::UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixU	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const typename CholMatrixType::AdjointReturnType, Eigen::Upper>   MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixUType	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::MatrixUType MatrixUType;$/;"	t	class:Eigen::BDCSVD
MatrixUType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::MatrixUType MatrixUType;$/;"	t	class:Eigen::JacobiSVD
MatrixUType	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, MatrixOptions, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixUType;$/;"	t	class:Eigen::SVDBase
MatrixVType	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::MatrixVType MatrixVType;$/;"	t	class:Eigen::BDCSVD
MatrixVType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::MatrixVType MatrixVType;$/;"	t	class:Eigen::JacobiSVD
MatrixVType	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  typedef Matrix<Scalar, ColsAtCompileTime, ColsAtCompileTime, MatrixOptions, MaxColsAtCompileTime, MaxColsAtCompileTime> MatrixVType;$/;"	t	class:Eigen::SVDBase
MatrixWrapper	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    explicit inline MatrixWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::MatrixWrapper
MatrixWrapper	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^class MatrixWrapper : public MatrixBase<MatrixWrapper<ExpressionType> >$/;"	c	namespace:Eigen
MatrixX	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<Scalar, Dynamic, Dynamic, ColMajor> MatrixX;$/;"	t	class:Eigen::BDCSVD
MatrixXd_add	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_add(const C_MatrixXd *m1, const C_MatrixXd *m2, C_MatrixXd *result)$/;"	f
MatrixXd_copy	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_copy(C_MatrixXd *dst, const C_MatrixXd *src)$/;"	f
MatrixXd_copy_map	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_copy_map(C_MatrixXd *dst, const C_Map_MatrixXd *src)$/;"	f
MatrixXd_data	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^double* MatrixXd_data(C_MatrixXd *m)$/;"	f
MatrixXd_delete	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_delete(C_MatrixXd *m)$/;"	f
MatrixXd_get_coeff	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^double MatrixXd_get_coeff(const C_MatrixXd *m, int i, int j)$/;"	f
MatrixXd_multiply	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_multiply(const C_MatrixXd *m1, const C_MatrixXd *m2, C_MatrixXd *result)$/;"	f
MatrixXd_new	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^C_MatrixXd* MatrixXd_new(int rows, int cols)$/;"	f
MatrixXd_print	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_print(const C_MatrixXd *m)$/;"	f
MatrixXd_resize	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_resize(C_MatrixXd *m, int rows, int cols)$/;"	f
MatrixXd_set_coeff	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_set_coeff(C_MatrixXd *m, int i, int j, double coeff)$/;"	f
MatrixXd_set_zero	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^void MatrixXd_set_zero(C_MatrixXd *m)$/;"	f
MatrixXe	tools/eigen/unsupported/test/matrix_power.cpp	/^typedef Matrix<long double,Dynamic,Dynamic> MatrixXe;$/;"	t	file:
MatrixXpr	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct MatrixXpr {};$/;"	s	namespace:Eigen
MatrixXr	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<RealScalar, Dynamic, Dynamic, ColMajor> MatrixXr;$/;"	t	class:Eigen::BDCSVD
Max	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MaxCoeffReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_maxCoeff>::Type MaxCoeffReturnType;$/;"	t	class:Eigen::VectorwiseOp
MaxCols	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    MaxCols = traits<_Rhs>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon590
MaxCols	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^         MaxCols = traits<T>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::promote_index_type::plain_matrix_type_column_major::__anon569
MaxCols	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^         MaxCols = traits<T>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::promote_index_type::plain_matrix_type_row_major::__anon570
MaxCols	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    MaxCols = size_at_compile_time<traits<Lhs>::MaxColsAtCompileTime, traits<Rhs>::MaxColsAtCompileTime>::ret$/;"	e	enum:Eigen::internal::traits::__anon11
MaxColsAtCompileTime	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon243
MaxColsAtCompileTime	tools/eigen/Eigen/src/Cholesky/LLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::LLT::__anon244
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon623
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon624
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Block.h	/^    MaxColsAtCompileTime = BlockCols==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon246
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    MaxColsAtCompileTime = traits<XprType>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon660
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    MaxColsAtCompileTime = traits<Ancestor>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon617
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon582
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Diagonal.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon389
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^      MaxColsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon250
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    MaxColsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon252
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Matrix.h	/^    MaxColsAtCompileTime = _MaxCols,$/;"	e	enum:Eigen::internal::traits::__anon293
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = Traits::MaxColsAtCompileTime$/;"	e	enum:Eigen::PermutationBase::__anon670
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = Traits::MaxColsAtCompileTime$/;"	e	enum:Eigen::Transpose::__anon672
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    MaxColsAtCompileTime = IndicesType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon671
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Product.h	/^    MaxColsAtCompileTime = RhsTraits::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon391
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    MaxColsAtCompileTime = RhsNestedCleaned::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Redux.h	/^    MaxColsAtCompileTime = XprType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon637
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Replicate.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon261
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Reverse.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon255
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Select.h	/^    MaxColsAtCompileTime = ConditionMatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon373
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/Transpose.h	/^    MaxColsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon374
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon297
MaxColsAtCompileTime	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    MaxColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon577
MaxColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexEigenSolver::__anon685
MaxColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexSchur::__anon684
MaxColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::EigenSolver::__anon686
MaxColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon683
MaxColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^        MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealQZ::__anon682
MaxColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealSchur::__anon681
MaxColsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon690
MaxColsAtCompileTime	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon691
MaxColsAtCompileTime	tools/eigen/Eigen/src/Geometry/Transform.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon704
MaxColsAtCompileTime	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^      MaxColsAtCompileTime = internal::traits<HouseholderSequence>::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderSequence::__anon183
MaxColsAtCompileTime	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    MaxColsAtCompileTime = MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
MaxColsAtCompileTime	tools/eigen/Eigen/src/LU/FullPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivLU::__anon168
MaxColsAtCompileTime	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::PartialPivLU::__anon166
MaxColsAtCompileTime	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon680
MaxColsAtCompileTime	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon678
MaxColsAtCompileTime	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderQR::__anon676
MaxColsAtCompileTime	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon164
MaxColsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon161
MaxColsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon158
MaxColsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon159
MaxColsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon160
MaxColsAtCompileTime	tools/eigen/Eigen/src/SVD/SVDBase.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon162
MaxColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon223
MaxColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon222
MaxColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
MaxColsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon226
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    MaxColsAtCompileTime = size_at_compile_time<traits<Lhs>::MaxColsAtCompileTime, traits<Rhs>::MaxColsAtCompileTime>::ret,$/;"	e	enum:Eigen::internal::traits::__anon12
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon35
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        MaxColsAtCompileTime = _RhsNested::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon34
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      MaxColsAtCompileTime = BlockSparseMatrixT::MaxColsAtCompileTime,$/;"	e	enum:Eigen::BlockSparseMatrixView::__anon24
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon23
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon27
MaxColsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon15
MaxDepth	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    MaxDepth = EIGEN_SIZE_MIN_PREFER_FIXED(traits<_Lhs>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon590
MaxDepthAtCompileTime	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    MaxDepthAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(Lhs::MaxColsAtCompileTime,Rhs::MaxRowsAtCompileTime)$/;"	e	enum:Eigen::internal::generic_product_impl::__anon280
MaxDiagSizeAtCompileTime	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^    MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime, MaxColsAtCompileTime), $/;"	e	enum:Eigen::BDCSVD::__anon164
MaxDiagSizeAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^      MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime,MaxColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon161
MaxDiagSizeAtCompileTime	tools/eigen/Eigen/src/SVD/SVDBase.h	/^    MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime,MaxColsAtCompileTime),$/;"	e	enum:Eigen::SVDBase::__anon162
MaxReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> struct MaxReducer$/;"	s	namespace:Eigen::internal
MaxRows	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    MaxRows = traits<_Lhs>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon590
MaxRows	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^         MaxRows = traits<T>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::promote_index_type::plain_matrix_type_column_major::__anon569
MaxRows	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^         MaxRows = traits<T>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::promote_index_type::plain_matrix_type_row_major::__anon570
MaxRows	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    MaxRows = size_at_compile_time<traits<Lhs>::MaxRowsAtCompileTime, traits<Rhs>::MaxRowsAtCompileTime>::ret,$/;"	e	enum:Eigen::internal::traits::__anon11
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon243
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon623
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon624
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Block.h	/^    MaxRowsAtCompileTime = BlockRows==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon246
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    MaxRowsAtCompileTime = traits<XprType>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon660
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    MaxRowsAtCompileTime = traits<Ancestor>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon617
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon582
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Diagonal.h	/^    MaxRowsAtCompileTime = int(MatrixType::MaxSizeAtCompileTime) == Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon389
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^      MaxRowsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon250
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    MaxRowsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon252
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Matrix.h	/^    MaxRowsAtCompileTime = _MaxRows,$/;"	e	enum:Eigen::internal::traits::__anon293
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = Traits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon670
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = Traits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon672
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    MaxRowsAtCompileTime = IndicesType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon671
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Product.h	/^    MaxRowsAtCompileTime = LhsTraits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon391
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    MaxRowsAtCompileTime = LhsNestedCleaned::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Redux.h	/^    MaxRowsAtCompileTime = XprType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon637
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Replicate.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon261
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Reverse.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon255
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Select.h	/^    MaxRowsAtCompileTime = ConditionMatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon373
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/Transpose.h	/^    MaxRowsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon374
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon297
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    MaxRowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon577
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon685
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon684
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon686
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon683
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^        MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon682
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon681
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon691
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Geometry/Transform.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon704
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^      MaxRowsAtCompileTime = internal::traits<HouseholderSequence>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon183
MaxRowsAtCompileTime	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    MaxRowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon182
MaxRowsAtCompileTime	tools/eigen/Eigen/src/LU/FullPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon168
MaxRowsAtCompileTime	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon166
MaxRowsAtCompileTime	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon680
MaxRowsAtCompileTime	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon678
MaxRowsAtCompileTime	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon676
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon164
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon161
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon157
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon158
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon159
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon160
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SVD/SVDBase.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon162
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon222
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon223
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
MaxRowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon226
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    MaxRowsAtCompileTime = size_at_compile_time<traits<Lhs>::MaxRowsAtCompileTime, traits<Rhs>::MaxRowsAtCompileTime>::ret,$/;"	e	enum:Eigen::internal::traits::__anon12
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime$/;"	e	enum:Eigen::MatrixPowerAtomic::__anon4
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon35
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        MaxRowsAtCompileTime = _LhsNested::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon34
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      MaxRowsAtCompileTime = BlockSparseMatrixT::MaxRowsAtCompileTime$/;"	e	enum:Eigen::BlockSparseMatrixView::__anon24
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon23
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon27
MaxRowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon15
MaxSize	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon687
MaxSize	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon689
MaxSizeAtCompileTime	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    MaxSizeAtCompileTime = Dst::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon640
MaxSizeAtCompileTime	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      MaxSizeAtCompileTime = Dst::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
MaxSizeAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon582
MaxSizeAtCompileTime	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon297
MaxSizeAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
MaxSizeAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        MaxSizeAtCompileTime = (internal::size_at_compile_time<MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
MaxSizeMinusOne	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : MaxSize - 1$/;"	e	enum:Eigen::HessenbergDecomposition::__anon687
MaxSizeMinusOne	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : (MaxSize > 1 ? MaxSize - 1 : 1)$/;"	e	enum:Eigen::Tridiagonalization::__anon689
MaxSmallDimAtCompileTime	tools/eigen/Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::image_retval::__anon170
MaxSmallDimAtCompileTime	tools/eigen/Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::kernel_retval::__anon169
MaximumIters	tools/eigen/bench/spbench/spbenchsolver.h	/^int MaximumIters; \/\/ Maximum number of iterations$/;"	v
MayInnerVectorize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon641
MayLinearVectorize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon641
MayLinearVectorize	tools/eigen/Eigen/src/Core/Redux.h	/^    MayLinearVectorize = MightVectorize && (int(Derived::Flags)&LinearAccessBit),$/;"	e	enum:Eigen::internal::redux_traits::__anon628
MayLinearize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    MayLinearize = StorageOrdersAgree && (int(DstFlags) & int(SrcFlags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon641
MaySliceVectorize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    MaySliceVectorize  = MightVectorize && DstHasDirectAccess$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon641
MaySliceVectorize	tools/eigen/Eigen/src/Core/Redux.h	/^    MaySliceVectorize  = MightVectorize && int(InnerMaxSize)>=3*PacketSize$/;"	e	enum:Eigen::internal::redux_traits::__anon628
MayUnrollCompletely	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    MayUnrollCompletely = int(Dst::SizeAtCompileTime) != Dynamic$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon643
MayUnrollInner	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    MayUnrollInner      = int(InnerSize) != Dynamic$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon643
MeanReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  MeanReducer() : scalarCount_(0), packetCount_(0) { }$/;"	f	struct:Eigen::internal::MeanReducer
MeanReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> struct MeanReducer$/;"	s	namespace:Eigen::internal
MeanReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_mean>::Type MeanReturnType;$/;"	t	class:Eigen::VectorwiseOp
MemType	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	t	namespace:Eigen::internal	typeref:enum:Eigen::internal::__anon180
MemcpyTriggerForSlicing	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC MemcpyTriggerForSlicing(const Device& device) : threshold_(2 * device.numThreads()) { }$/;"	f	struct:Eigen::__anon117::MemcpyTriggerForSlicing
MemcpyTriggerForSlicing	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC MemcpyTriggerForSlicing(const GpuDevice&) { }$/;"	f	struct:Eigen::__anon117::MemcpyTriggerForSlicing
MemcpyTriggerForSlicing	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^template <typename Index, typename Device> struct MemcpyTriggerForSlicing {$/;"	s	namespace:Eigen::__anon117
MemcpyTriggerForSlicing	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^template <typename Index> struct MemcpyTriggerForSlicing<Index, GpuDevice>  {$/;"	s	namespace:Eigen::__anon117
MetisOrdering	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	/^class MetisOrdering$/;"	c	namespace:Eigen
MightEnableVml	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      MightEnableVml = StorageOrdersAgree && DstHasDirectAccess && SrcHasDirectAccess && Src::InnerStrideAtCompileTime==1 && Dst::InnerStrideAtCompileTime==1,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
MightLinearize	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      MightLinearize = MightEnableVml && (int(Dst::Flags) & int(Src::Flags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
MightVectorize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    MightVectorize = StorageOrdersAgree$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon641
MightVectorize	tools/eigen/Eigen/src/Core/Redux.h	/^    MightVectorize = (int(Derived::Flags)&ActualPacketAccessBit)$/;"	e	enum:Eigen::internal::redux_traits::__anon628
Min	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MinCoeffReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_minCoeff>::Type MinCoeffReturnType;$/;"	t	class:Eigen::VectorwiseOp
MinReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> struct MinReducer$/;"	s	namespace:Eigen::internal
MinRowsAtCompileTime	tools/eigen/Eigen/src/Geometry/Umeyama.h	/^    MinRowsAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(MatrixType::RowsAtCompileTime, OtherMatrixType::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon696
Mixed_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	/^  Mixed_Perf_Analyzer( const Mixed_Perf_Analyzer & ){$/;"	f	class:Mixed_Perf_Analyzer
Mixed_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	/^  Mixed_Perf_Analyzer( void ):_x86pa(),_ppa(),_use_ppa(true)$/;"	f	class:Mixed_Perf_Analyzer
Mixed_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	/^class Mixed_Perf_Analyzer{$/;"	c
Mode	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^      Mode = internal::traits<SelfAdjointView>::Mode,$/;"	e	enum:Eigen::SelfAdjointView::__anon576
Mode	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    Mode = UpLo | SelfAdjoint,$/;"	e	enum:Eigen::internal::traits::__anon575
Mode	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::TriangularView::__anon299
Mode	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::TriangularViewImpl::__anon300
Mode	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      Mode = internal::traits<Derived>::Mode,$/;"	e	enum:Eigen::TriangularBase::__anon297
Mode	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::internal::traits::__anon298
Mode	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Mode = Transform::Mode,$/;"	e	enum:Eigen::internal::transform_traits::__anon703
Mode	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::Transform::__anon705
Mode	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Mode =$/;"	e	enum:Eigen::internal::transform_product_result::__anon707
Mode	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon192
Mode	tools/eigen/demos/opengl/trackball.h	/^    enum Mode {Around, Local};$/;"	g	class:Trackball
MoveOuter	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^      MoveOuter = SrcStorageOrder==RowMajor ? Side==OnTheLeft : Side==OnTheRight$/;"	e	enum:Eigen::internal::permutation_matrix_product::__anon241
MtlSparse	tools/eigen/bench/BenchSparseUtil.h	/^typedef mtl::compressed2D<Scalar, mtl::matrix::parameters<mtl::tag::col_major> > MtlSparse;$/;"	t
MtlSparseRowMajor	tools/eigen/bench/BenchSparseUtil.h	/^typedef mtl::compressed2D<Scalar, mtl::matrix::parameters<mtl::tag::row_major> > MtlSparseRowMajor;$/;"	t
MulCost	tools/eigen/Eigen/src/Core/NumTraits.h	/^    MulCost = 1$/;"	e	enum:Eigen::GenericNumTraits::__anon581
MyClassA	tools/eigen/test/dynalloc.cpp	/^class MyClassA$/;"	c	file:
MyGenerator	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^  MyGenerator() { }$/;"	f	struct:MyGenerator
MyGenerator	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^  MyGenerator(const MyGenerator&) { }$/;"	f	struct:MyGenerator
MyGenerator	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^struct MyGenerator {$/;"	s	file:
MyMatrix	tools/eigen/bench/benchBlasGemm.cpp	/^typedef Eigen::Matrix<Scalar,Eigen::Dynamic,Eigen::Dynamic> MyMatrix;$/;"	t	file:
MyStruct	tools/eigen/test/dynalloc.cpp	/^struct MyStruct$/;"	s	file:
MyVectorType	tools/eigen/doc/examples/CustomizingEigen_Inheritance.cpp	/^    MyVectorType(const Eigen::MatrixBase<OtherDerived>& other)$/;"	f	class:MyVectorType
MyVectorType	tools/eigen/doc/examples/CustomizingEigen_Inheritance.cpp	/^    MyVectorType(void):Eigen::VectorXd() {}$/;"	f	class:MyVectorType
MyVectorType	tools/eigen/doc/examples/CustomizingEigen_Inheritance.cpp	/^class MyVectorType : public Eigen::VectorXd$/;"	c	file:
N	tools/eigen/blas/testing/cblat1.f	/^      INT/;"	v	program:CBLAT1
N	tools/eigen/blas/testing/cblat2.f	/^      INT/;"	v	program:CBLAT2
N	tools/eigen/blas/testing/cblat3.f	/^      INT/;"	v	program:CBLAT3
N	tools/eigen/blas/testing/dblat1.f	/^      INT/;"	v	program:DBLAT1
N	tools/eigen/blas/testing/dblat2.f	/^      INT/;"	v	program:DBLAT2
N	tools/eigen/blas/testing/dblat3.f	/^      INT/;"	v	program:DBLAT3
N	tools/eigen/blas/testing/sblat1.f	/^      INT/;"	v	program:SBLAT1
N	tools/eigen/blas/testing/sblat2.f	/^      INT/;"	v	program:SBLAT2
N	tools/eigen/blas/testing/sblat3.f	/^      INT/;"	v	program:SBLAT3
N	tools/eigen/blas/testing/zblat1.f	/^      INT/;"	v	program:ZBLAT1
N	tools/eigen/blas/testing/zblat2.f	/^      INT/;"	v	program:ZBLAT2
N	tools/eigen/blas/testing/zblat3.f	/^      INT/;"	v	program:ZBLAT3
N	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^    static const int N = sizeof(T) * 8;$/;"	m	struct:Eigen::internal::__anon66::DividerTraits
N	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  constexpr static std::size_t N = sizeof...(nn);$/;"	m	struct:Eigen::internal::tensor_static_symgroup_permutate
NALF	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF,/;"	v	program:CBLAT2
NALF	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF,/;"	v	program:CBLAT3
NALF	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF,/;"	v	program:DBLAT2
NALF	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF,/;"	v	program:DBLAT3
NALF	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF,/;"	v	program:SBLAT2
NALF	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF,/;"	v	program:SBLAT3
NALF	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF,/;"	v	program:ZBLAT2
NALF	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF,/;"	v	program:ZBLAT3
NALMAX	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX, NALMAX,/;"	v	program:CBLAT2
NALMAX	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            NIDMAX, NALMAX,/;"	v	program:CBLAT3
NALMAX	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX, NALMAX,/;"	v	program:DBLAT2
NALMAX	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            NIDMAX, NALMAX,/;"	v	program:DBLAT3
NALMAX	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX, NALMAX,/;"	v	program:SBLAT2
NALMAX	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            NIDMAX, NALMAX,/;"	v	program:SBLAT3
NALMAX	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX, NALMAX,/;"	v	program:ZBLAT2
NALMAX	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            NIDMAX, NALMAX,/;"	v	program:ZBLAT3
NAsInteger	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    NAsInteger = n == Dynamic ? int(DynamicAsInteger) : n,$/;"	e	enum:Eigen::internal::promote_index_type::nested_eval::__anon571
NBEMAX	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX, NALMAX, NBEMAX$/;"	v	program:CBLAT2
NBEMAX	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            NIDMAX, NALMAX, NBEMAX$/;"	v	program:CBLAT3
NBEMAX	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX, NALMAX, NBEMAX$/;"	v	program:DBLAT2
NBEMAX	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            NIDMAX, NALMAX, NBEMAX$/;"	v	program:DBLAT3
NBEMAX	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX, NALMAX, NBEMAX$/;"	v	program:SBLAT2
NBEMAX	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            NIDMAX, NALMAX, NBEMAX$/;"	v	program:SBLAT3
NBEMAX	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX, NALMAX, NBEMAX$/;"	v	program:ZBLAT2
NBEMAX	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            NIDMAX, NALMAX, NBEMAX$/;"	v	program:ZBLAT3
NBET	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET,/;"	v	program:CBLAT2
NBET	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET,/;"	v	program:CBLAT3
NBET	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET,/;"	v	program:DBLAT2
NBET	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET,/;"	v	program:DBLAT3
NBET	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET,/;"	v	program:SBLAT2
NBET	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET,/;"	v	program:SBLAT3
NBET	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET,/;"	v	program:ZBLAT2
NBET	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET,/;"	v	program:ZBLAT3
NBPERROW	tools/eigen/bench/sparse_setter.cpp	11;"	d	file:
NBTRIES	tools/eigen/bench/sparse_cholesky.cpp	30;"	d	file:
NBTRIES	tools/eigen/bench/sparse_dense_product.cpp	25;"	d	file:
NBTRIES	tools/eigen/bench/sparse_lu.cpp	30;"	d	file:
NBTRIES	tools/eigen/bench/sparse_product.cpp	27;"	d	file:
NBTRIES	tools/eigen/bench/sparse_randomsetter.cpp	29;"	d	file:
NBTRIES	tools/eigen/bench/sparse_setter.cpp	19;"	d	file:
NBTRIES	tools/eigen/bench/sparse_transpose.cpp	25;"	d	file:
NBTRIES	tools/eigen/bench/sparse_trisolver.cpp	26;"	d	file:
NB_POINT	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	28;"	d
NCMatrix	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> NCMatrix;$/;"	t	class:Eigen::SparseLU
NColsBlockXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
NDATA	tools/eigen/bench/benchFFT.cpp	38;"	d	file:
NDEBUG	tools/eigen/test/main.h	99;"	d
NEON	tools/eigen/Eigen/src/Core/util/Constants.h	/^    NEON = 0x4,$/;"	e	enum:Eigen::Architecture::Type
NFFT	tools/eigen/bench/benchFFT.cpp	35;"	d	file:
NIDIM	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM,/;"	v	program:CBLAT2
NIDIM	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM,/;"	v	program:CBLAT3
NIDIM	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM,/;"	v	program:DBLAT2
NIDIM	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM,/;"	v	program:DBLAT3
NIDIM	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM,/;"	v	program:SBLAT2
NIDIM	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM,/;"	v	program:SBLAT3
NIDIM	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM,/;"	v	program:ZBLAT2
NIDIM	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM,/;"	v	program:ZBLAT3
NIDMAX	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NINMAX, NIDMAX,/;"	v	program:CBLAT2
NIDMAX	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            NIDMAX,/;"	v	program:CBLAT3
NIDMAX	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NINMAX, NIDMAX,/;"	v	program:DBLAT2
NIDMAX	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            NIDMAX,/;"	v	program:DBLAT3
NIDMAX	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NINMAX, NIDMAX,/;"	v	program:SBLAT2
NIDMAX	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            NIDMAX,/;"	v	program:SBLAT3
NIDMAX	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NINMAX, NIDMAX,/;"	v	program:ZBLAT2
NIDMAX	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            NIDMAX,/;"	v	program:ZBLAT3
NIN	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NIN$/;"	v	program:CBLAT2
NIN	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            NIN$/;"	v	program:CBLAT3
NIN	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NIN$/;"	v	program:DBLAT2
NIN	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            NIN$/;"	v	program:DBLAT3
NIN	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NIN$/;"	v	program:SBLAT2
NIN	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            NIN$/;"	v	program:SBLAT3
NIN	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NIN$/;"	v	program:ZBLAT2
NIN	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            NIN$/;"	v	program:ZBLAT3
NINC	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC,/;"	v	program:CBLAT2
NINC	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC,/;"	v	program:DBLAT2
NINC	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC,/;"	v	program:SBLAT2
NINC	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC,/;"	v	program:ZBLAT2
NINMAX	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NINMAX,/;"	v	program:CBLAT2
NINMAX	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NINMAX,/;"	v	program:DBLAT2
NINMAX	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NINMAX,/;"	v	program:SBLAT2
NINMAX	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NINMAX,/;"	v	program:ZBLAT2
NKB	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC, NKB,/;"	v	program:CBLAT2
NKB	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC, NKB,/;"	v	program:DBLAT2
NKB	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC, NKB,/;"	v	program:SBLAT2
NKB	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC, NKB,/;"	v	program:ZBLAT2
NKBMAX	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX,/;"	v	program:CBLAT2
NKBMAX	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX,/;"	v	program:DBLAT2
NKBMAX	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX,/;"	v	program:SBLAT2
NKBMAX	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NINMAX, NIDMAX, NKBMAX,/;"	v	program:ZBLAT2
NMAX	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NMAX,/;"	v	program:CBLAT2
NMAX	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            NMAX$/;"	v	program:CBLAT3
NMAX	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NMAX,/;"	v	program:DBLAT2
NMAX	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            NMAX$/;"	v	program:DBLAT3
NMAX	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NMAX,/;"	v	program:SBLAT2
NMAX	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            NMAX$/;"	v	program:SBLAT3
NMAX	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NMAX,/;"	v	program:ZBLAT2
NMAX	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            NMAX$/;"	v	program:ZBLAT3
NNZPERCOL	tools/eigen/bench/sparse_product.cpp	14;"	d	file:
NOGMM	tools/eigen/bench/sparse_cholesky.cpp	8;"	d	file:
NOGMM	tools/eigen/bench/sparse_lu.cpp	8;"	d	file:
NOGMM	tools/eigen/bench/sparse_randomsetter.cpp	2;"	d	file:
NOMINMAX	tools/eigen/bench/BenchTimer.h	16;"	d
NOMINMAX	tools/eigen/bench/BenchTimer.h	179;"	d
NOMINMAX	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	39;"	d
NOMTL	tools/eigen/bench/sparse_cholesky.cpp	9;"	d	file:
NOMTL	tools/eigen/bench/sparse_lu.cpp	9;"	d	file:
NOMTL	tools/eigen/bench/sparse_randomsetter.cpp	3;"	d	file:
NOTR	tools/eigen/blas/common.h	25;"	d
NOUT	tools/eigen/blas/testing/cblat1.f	/^      INTEGER          NOUT$/;"	v	program:CBLAT1
NOUT	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC, NKB,$/;"	v	program:CBLAT2
NOUT	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NOUT,/;"	v	program:CBLAT3
NOUT	tools/eigen/blas/testing/dblat1.f	/^      INTEGER          NOUT$/;"	v	program:DBLAT1
NOUT	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC, NKB,$/;"	v	program:DBLAT2
NOUT	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NOUT,/;"	v	program:DBLAT3
NOUT	tools/eigen/blas/testing/sblat1.f	/^      INTEGER          NOUT$/;"	v	program:SBLAT1
NOUT	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC, NKB,$/;"	v	program:SBLAT2
NOUT	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NOUT,/;"	v	program:SBLAT3
NOUT	tools/eigen/blas/testing/zblat1.f	/^      INTEGER          NOUT$/;"	v	program:ZBLAT1
NOUT	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NINC, NKB,$/;"	v	program:ZBLAT2
NOUT	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NOUT,/;"	v	program:ZBLAT3
NOUTC	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            INFOT, NOUTC$/;"	v	program:CBLAT2
NOUTC	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            INFOT, NOUTC$/;"	v	program:CBLAT3
NOUTC	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            INFOT, NOUTC$/;"	v	program:DBLAT2
NOUTC	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            INFOT, NOUTC$/;"	v	program:DBLAT3
NOUTC	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            INFOT, NOUTC$/;"	v	program:SBLAT2
NOUTC	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            INFOT, NOUTC$/;"	v	program:SBLAT3
NOUTC	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            INFOT, NOUTC$/;"	v	program:ZBLAT2
NOUTC	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            INFOT, NOUTC$/;"	v	program:ZBLAT3
NRowsBlockXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
NSUBS	tools/eigen/blas/testing/cblat2.f	/^      INTEGER            NSUBS$/;"	v	program:CBLAT2
NSUBS	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            NSUBS$/;"	v	program:CBLAT3
NSUBS	tools/eigen/blas/testing/dblat2.f	/^      INTEGER            NSUBS$/;"	v	program:DBLAT2
NSUBS	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            NSUBS$/;"	v	program:DBLAT3
NSUBS	tools/eigen/blas/testing/sblat2.f	/^      INTEGER            NSUBS$/;"	v	program:SBLAT2
NSUBS	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            NSUBS$/;"	v	program:SBLAT3
NSUBS	tools/eigen/blas/testing/zblat2.f	/^      INTEGER            NSUBS$/;"	v	program:ZBLAT2
NSUBS	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            NSUBS$/;"	v	program:ZBLAT3
NTRA	tools/eigen/blas/testing/cblat2.f	/^     $                   NOUT, NTRA$/;"	v	program:CBLAT2
NTRA	tools/eigen/blas/testing/cblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NOUT, NTRA$/;"	v	program:CBLAT3
NTRA	tools/eigen/blas/testing/dblat2.f	/^     $                   NOUT, NTRA$/;"	v	program:DBLAT2
NTRA	tools/eigen/blas/testing/dblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NOUT, NTRA$/;"	v	program:DBLAT3
NTRA	tools/eigen/blas/testing/sblat2.f	/^     $                   NOUT, NTRA$/;"	v	program:SBLAT2
NTRA	tools/eigen/blas/testing/sblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NOUT, NTRA$/;"	v	program:SBLAT3
NTRA	tools/eigen/blas/testing/zblat2.f	/^     $                   NOUT, NTRA$/;"	v	program:ZBLAT2
NTRA	tools/eigen/blas/testing/zblat3.f	/^      INTEGER            I, ISNUM, J, N, NALF, NBET, NIDIM, NOUT, NTRA$/;"	v	program:ZBLAT3
NUMBER_DIRECTIONS	tools/eigen/unsupported/test/forward_adolc.cpp	13;"	d	file:
NUMBER_SAMPLE	tools/eigen/unsupported/bench/bench_svd.cpp	30;"	d	file:
NUMERIC_TYPE_MUST_BE_REAL	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        NUMERIC_TYPE_MUST_BE_REAL,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
NUNIT	tools/eigen/blas/common.h	35;"	d
NaturalOrdering	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^class NaturalOrdering$/;"	c	namespace:Eigen
NavFly	tools/eigen/demos/opengl/quaternion_demo.h	/^      NavFly$/;"	e	enum:RenderingWidget::NavMode
NavMode	tools/eigen/demos/opengl/quaternion_demo.h	/^    enum NavMode {$/;"	g	class:RenderingWidget
NavTurnAround	tools/eigen/demos/opengl/quaternion_demo.h	/^      NavTurnAround,$/;"	e	enum:RenderingWidget::NavMode
NeedToConjugate	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = Base::NeedToConjugate ? 0 : IsComplex$/;"	e	enum:Eigen::internal::blas_traits::__anon556
NeedToConjugate	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon555
NeedsAlignment	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  enum { NeedsAlignment = internal::traits<Quaternion>::Alignment>0 };$/;"	e	enum:Eigen::Quaternion::__anon715
NeedsToAlign	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    enum { NeedsToAlign = (SizeAtCompileTime != Dynamic) && (internal::traits<Derived>::Alignment>0) };$/;"	e	enum:Eigen::PlainObjectBase::__anon308
NegationFlag	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  NegationFlag           = 0x01,$/;"	e	enum:Eigen::__anon49
NegativeReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_opposite_op<Scalar>, const Derived> NegativeReturnType;$/;"	t
NegativeSemiDef	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
NestByRefBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int NestByRefBit = 0x100;$/;"	m	namespace:Eigen
NestByValue	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC explicit inline NestByValue(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::NestByValue
NestByValue	tools/eigen/Eigen/src/Core/NestByValue.h	/^template<typename ExpressionType> class NestByValue$/;"	c	namespace:Eigen
Nested	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper Nested;$/;"	t	class:Eigen::DiagonalWrapper
Nested	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef const DiagonalMatrix& Nested;$/;"	t	class:Eigen::DiagonalMatrix
Nested	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef const PermutationMatrix& Nested;$/;"	t	class:Eigen::PermutationMatrix
Nested	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef Derived const& Nested;$/;"	t	class:Eigen::TriangularBase
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef typename Eigen::internal::nested<Self>::type Nested;$/;"	t	class:Eigen::Tensor
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::internal::nested<TensorIndexTupleOp>::type Nested;$/;"	t	class:Eigen::TensorIndexTupleOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::internal::nested<TensorTupleReducerOp>::type Nested;$/;"	t	class:Eigen::TensorTupleReducerOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename Eigen::internal::nested<TensorAssignOp>::type Nested;$/;"	t	class:Eigen::TensorAssignOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename Eigen::internal::nested<TensorBroadcastingOp>::type Nested;$/;"	t	class:Eigen::TensorBroadcastingOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename Eigen::internal::nested<TensorChippingOp>::type Nested;$/;"	t	class:Eigen::TensorChippingOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    typedef typename internal::nested<TensorConcatenationOp>::type Nested;$/;"	t	class:Eigen::TensorConcatenationOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename Eigen::internal::nested<TensorContractionOp>::type Nested;$/;"	t	class:Eigen::TensorContractionOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typedef typename internal::nested<TensorConversionOp>::type Nested;$/;"	t	class:Eigen::TensorConversionOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename Eigen::internal::nested<TensorConvolutionOp>::type Nested;$/;"	t	class:Eigen::TensorConvolutionOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::nested<TensorCustomBinaryOp>::type Nested;$/;"	t	class:Eigen::TensorCustomBinaryOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::nested<TensorCustomUnaryOp>::type Nested;$/;"	t	class:Eigen::TensorCustomUnaryOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename Eigen::internal::nested<TensorEvalToOp>::type Nested;$/;"	t	class:Eigen::TensorEvalToOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef TensorCwiseNullaryOp<NullaryOp, XprType> Nested;$/;"	t	class:Eigen::TensorCwiseNullaryOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::nested<TensorCwiseBinaryOp>::type Nested;$/;"	t	class:Eigen::TensorCwiseBinaryOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::nested<TensorCwiseUnaryOp>::type Nested;$/;"	t	class:Eigen::TensorCwiseUnaryOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::nested<TensorSelectOp>::type Nested;$/;"	t	class:Eigen::TensorSelectOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef typename Eigen::internal::nested<Self>::type Nested;$/;"	t	class:Eigen::TensorFixedSize
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename Eigen::internal::nested<TensorForcedEvalOp>::type Nested;$/;"	t	class:Eigen::TensorForcedEvalOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename Eigen::internal::nested<TensorGeneratorOp>::type Nested;$/;"	t	class:Eigen::TensorGeneratorOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename Eigen::internal::nested<TensorImagePatchOp>::type Nested;$/;"	t	class:Eigen::TensorImagePatchOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename Eigen::internal::nested<TensorInflationOp>::type Nested;$/;"	t	class:Eigen::TensorInflationOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename Eigen::internal::nested<TensorLayoutSwapOp>::type Nested;$/;"	t	class:Eigen::TensorLayoutSwapOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename Eigen::internal::nested<Self>::type Nested;$/;"	t	class:Eigen::TensorMap
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::nested<TensorReshapingOp>::type Nested;$/;"	t	class:Eigen::TensorReshapingOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::nested<TensorSlicingOp>::type Nested;$/;"	t	class:Eigen::TensorSlicingOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename Eigen::internal::nested<TensorPaddingOp>::type Nested;$/;"	t	class:Eigen::TensorPaddingOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename Eigen::internal::nested<TensorPatchOp>::type Nested;$/;"	t	class:Eigen::TensorPatchOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typedef typename Eigen::internal::nested<TensorReductionOp>::type Nested;$/;"	t	class:Eigen::TensorReductionOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename Eigen::internal::nested<Self>::type Nested;$/;"	t	class:Eigen::TensorRef
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename Eigen::internal::nested<TensorReverseOp>::type Nested;$/;"	t	class:Eigen::TensorReverseOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename Eigen::internal::nested<TensorShufflingOp>::type Nested;$/;"	t	class:Eigen::TensorShufflingOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename Eigen::internal::nested<TensorStridingOp>::type Nested;$/;"	t	class:Eigen::TensorStridingOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename Eigen::internal::nested<TensorVolumePatchOp>::type Nested;$/;"	t	class:Eigen::TensorVolumePatchOp
Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename XprType::Nested Nested;$/;"	t	struct:Eigen::internal::traits
Nested	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef AutoDiffScalar<DerType>& Nested;$/;"	t	struct:Eigen::NumTraits
Nested	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef  BlockSparseMatrixT Nested;$/;"	t	class:Eigen::BlockSparseMatrixView
Nested	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef typename internal::ref_selector<BlockSparseMatrix<_Scalar, _BlockAtCompileTime, _Options, _StorageIndex> >::type Nested;$/;"	t	class:Eigen::BlockSparseMatrix
NestedExpression	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::remove_all<ExpressionType>::type NestedExpression;$/;"	t	class:Eigen::ArrayWrapper
NestedExpression	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::remove_all<ExpressionType>::type NestedExpression;$/;"	t	class:Eigen::MatrixWrapper
NestedExpression	tools/eigen/Eigen/src/Core/Block.h	/^    typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::Block
NestedExpression	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::CwiseUnaryOp
NestedExpression	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::CwiseUnaryView
NestedExpression	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::InverseImpl
NestedExpression	tools/eigen/Eigen/src/Core/Replicate.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Replicate
NestedExpression	tools/eigen/Eigen/src/Core/Reverse.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Reverse
NestedExpression	tools/eigen/Eigen/src/Core/Transpose.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Transpose
NestedExpression	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedCleaned NestedExpression;$/;"	t	class:Eigen::TriangularView
NestedExpression	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    typedef MatrixType NestedExpression;$/;"	t	class:Eigen::Homogeneous
NestedExpression	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type NestedExpression;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
NestedExpression	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::SparseView
NestedExpressionType	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::ref_selector<ExpressionType>::type NestedExpressionType;$/;"	t	class:Eigen::ArrayWrapper
NestedExpressionType	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::ref_selector<ExpressionType>::type NestedExpressionType;$/;"	t	class:Eigen::MatrixWrapper
NewInf	tools/eigen/Eigen/src/Core/util/Meta.h	/^      NewInf = int(TakeInf) ? InfX : int(MidX),$/;"	m	namespace:Eigen::internal
NewSup	tools/eigen/Eigen/src/Core/util/Meta.h	/^      NewSup = int(TakeInf) ? int(MidX) : SupX$/;"	m	namespace:Eigen::internal
NoAlias	tools/eigen/Eigen/src/Core/NoAlias.h	/^    explicit NoAlias(ExpressionType& expression) : m_expression(expression) {}$/;"	f	class:Eigen::NoAlias
NoAlias	tools/eigen/Eigen/src/Core/NoAlias.h	/^class NoAlias$/;"	c	namespace:Eigen
NoChange	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	e	enum:Eigen::NoChange_t
NoChange_t	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	g	namespace:Eigen
NoConvergence	tools/eigen/Eigen/src/Core/util/Constants.h	/^  NoConvergence = 2,$/;"	e	enum:Eigen::ComputationInfo
NoPivoting	tools/eigen/Eigen/src/Core/util/Constants.h	/^  NoPivoting          = 0x02, $/;"	e	enum:Eigen::DecompositionOptions
NoPreferredStorageOrderBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int NoPreferredStorageOrderBit = 0x200;$/;"	m	namespace:Eigen
NoQRPreconditioner	tools/eigen/Eigen/src/Core/util/Constants.h	/^  NoQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
NoUnrolling	tools/eigen/Eigen/src/Core/util/Constants.h	/^  NoUnrolling,$/;"	e	enum:Eigen::__anon495
NonConstImagReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryView<internal::scalar_imag_ref_op<Scalar>, Derived> NonConstImagReturnType;$/;"	t
NonConstRealReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type NonConstRealReturnType;$/;"	t
NonInteger	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::NonInteger      NonInteger;$/;"	t	class:Eigen::AlignedBox
NonInteger	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef AutoDiffScalar<DerType> NonInteger;$/;"	t	struct:Eigen::NumTraits
NonSymmetric	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^  NonSymmetric = 0x0$/;"	e	enum:Eigen::__anon30
NormReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_norm,RealScalar>::Type NormReturnType;$/;"	t	class:Eigen::VectorwiseOp
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  NormalRandomGenerator(bool deterministic = true) : m_deterministic(deterministic) {}$/;"	f	class:Eigen::internal::NormalRandomGenerator
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  NormalRandomGenerator(bool deterministic = true) : m_deterministic(deterministic), m_distribution(0, 1) {$/;"	f	class:Eigen::internal::NormalRandomGenerator
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  NormalRandomGenerator(const NormalRandomGenerator& other)$/;"	f	class:Eigen::internal::NormalRandomGenerator
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  __device__ NormalRandomGenerator(bool deterministic = true) : m_deterministic(deterministic) {$/;"	f	class:Eigen::internal::NormalRandomGenerator
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  __device__ NormalRandomGenerator(const NormalRandomGenerator& other) {$/;"	f	class:Eigen::internal::NormalRandomGenerator
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  __device__ NormalRandomGenerator(const NormalRandomGenerator<double>& other) {$/;"	f	class:Eigen::internal::NormalRandomGenerator
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  __device__ NormalRandomGenerator(const NormalRandomGenerator<float>& other) {$/;"	f	class:Eigen::internal::NormalRandomGenerator
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <> class NormalRandomGenerator<double> {$/;"	c	namespace:Eigen::internal
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <> class NormalRandomGenerator<float> {$/;"	c	namespace:Eigen::internal
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <> class NormalRandomGenerator<std::complex<double> > {$/;"	c	namespace:Eigen::internal
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <> class NormalRandomGenerator<std::complex<float> > {$/;"	c	namespace:Eigen::internal
NormalRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> class NormalRandomGenerator {$/;"	c	namespace:Eigen::internal
NormalReturnType	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  typedef Block<Coefficients,AmbientDimAtCompileTime,1> NormalReturnType;$/;"	t	class:Eigen::Hyperplane
NotMakingProgressIterations	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        NotMakingProgressIterations = 5,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
NotMakingProgressJacobian	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        NotMakingProgressJacobian = 4,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
NotStarted	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        NotStarted = -2,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
NotStarted	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        NotStarted = -2,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
Notification	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  Notification() : notified_(false) {}$/;"	f	class:Eigen::Notification
Notification	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^class Notification {$/;"	c	namespace:Eigen
Notify	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  void Notify() {$/;"	f	class:Eigen::Notification
NullaryExpr	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index rows, Index cols, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index size, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NumCoords	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  static const int NumCoords = internal::traits<Derived>::NumDimensions > 0 ?$/;"	m	struct:Eigen::TensorEvaluator
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  static const std::size_t NumDimensions = internal::traits<LhsXprType>::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    static const int NumDimensions = DerivedTraits::NumDimensions;$/;"	m	class:Eigen::TensorBase
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  static const int NumDimensions = XprTraits::NumDimensions - 1;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  static const int NumDimensions = traits<LhsXprType>::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int NumDimensions = max_n_1<traits<LeftArgType_>::NumDimensions + traits<RightArgType_>::NumDimensions - 2 * array_size<Indices_>::value>::size;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int NumDimensions = max_n_1<traits<RhsXprType>::NumDimensions + traits<RhsXprType>::NumDimensions - 2 * array_size<Dimensions>::value>::size;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  static const int NumDimensions = traits<XprType>::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  static const int NumDimensions = traits<InputXprType>::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  static const int NumDimensions = traits<LhsXprType>::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  static const int NumDimensions = traits<XprType>::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  static const int NumDimensions = XprTraits::NumDimensions + 1;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  static const int NumDimensions = traits<XprType>::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  static const int NumDimensions = array_size<NewDimensions>::value;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  static const int NumDimensions = array_size<StartIndices>::value;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  static const int NumDimensions = XprTraits::NumDimensions + 1;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  static const int NumDimensions = XprTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  static const int NumDimensions = BaseTraits::NumDimensions;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  static const int NumDimensions = NumIndices_;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  static const int NumDimensions = array_size<Dimensions>::value;$/;"	m	struct:Eigen::internal::traits
NumDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  static const int NumDimensions = XprTraits::NumDimensions + 1;$/;"	m	struct:Eigen::internal::traits
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  static const int NumDims = internal::array_size<Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  static const int NumDims = internal::array_size<InputDimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  static const int NumDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  static const int NumDims = NumInputDims-1;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  static const int NumDims = internal::array_size<typename TensorEvaluator<LeftArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int NumDims = max_n_1<LDims + RDims - 2 * ContractDims>::size;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int NumDims = max_n_1<LDims + RDims - 2 * ContractDims>::size;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  static const int NumDims = max_n_1<LDims + RDims - 2 * ContractDims>::size;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  static const int NumDims = max_n_1<LDims + RDims - 2 * ContractDims>::size;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  static const int NumDims =  internal::array_size<typename TensorEvaluator<InputArgType, GpuDevice>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  static const int NumDims = internal::array_size<typename TensorEvaluator<InputArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  static const size_t NumDims = internal::array_size<InputDims>::value;$/;"	m	class:Eigen::internal::IndexMapper
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  static const int NumDims = internal::traits<ArgType>::NumDimensions;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  static const int NumDims = internal::traits<XprType>::NumDimensions;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  static const int NumDims = internal::array_size<Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  static const int NumDims = NumInputDims + 1;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  static const int NumDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  static const int NumDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  static const int NumDims = internal::array_size<Sizes>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  static const int NumDims = internal::array_size<PaddingDimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  static const int NumDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value + 1;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  static const int NumDims = internal::array_size<ReverseDimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  static const int NumDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  static const int NumDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  static const int NumDims = NumInputDims + 1;$/;"	m	struct:Eigen::TensorEvaluator
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    static const std::size_t NumIndices = NumIndices_;$/;"	m	class:Eigen::Tensor
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^  static const std::size_t NumIndices = Dimensions::count;$/;"	m	class:Eigen::TensorFixedSize
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    static const Index NumIndices = PlainObjectType::NumIndices;$/;"	m	class:Eigen::TensorMap
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    static const Index NumIndices = PlainObjectType::NumIndices;$/;"	m	class:Eigen::TensorRef
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static std::size_t NumIndices = internal::tensor_symmetry_num_indices<Gen...>::value;$/;"	m	class:Eigen::StaticSGroup
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    constexpr static std::size_t NumIndices = Tensor_::NumIndices;$/;"	m	class:Eigen::internal::tensor_symmetry_value_setter
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    constexpr static std::size_t NumIndices = internal::tensor_symmetry_num_indices<Gen...>::value;$/;"	m	class:Eigen::SGroup
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t NumIndices = Tensor_::NumIndices;$/;"	m	struct:Eigen::internal::tensor_symmetry_assign_value
NumIndices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t NumIndices = Tensor_::NumIndices;$/;"	m	struct:Eigen::internal::tensor_symmetry_calculate_flags
NumInputDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  static const int NumInputDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumInputDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  static const int NumInputDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumInputDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const int NumInputDims = internal::array_size<InputDimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumInputDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  static const int NumInputDims = internal::array_size<typename TensorEvaluator<ArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumKernelDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  static const int NumKernelDims = internal::array_size<Indices>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumOfDerivativesAtCompileTime	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { NumOfDerivativesAtCompileTime = OrderAtCompileTime \/*!< The number of derivatives defined for the current spline. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon42
NumOfDerivativesAtCompileTime	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { NumOfDerivativesAtCompileTime = _DerivativeOrder==Dynamic ? Dynamic : _DerivativeOrder+1 \/*!< The number of derivatives defined for the current spline. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon45
NumOutputDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const int NumOutputDims = (NumInputDims==NumReducedDims) ? 1 : NumInputDims - NumReducedDims;$/;"	m	struct:Eigen::TensorEvaluator
NumReducedDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const int NumReducedDims = internal::array_size<Dims>::value;$/;"	m	struct:Eigen::TensorEvaluator
NumTraits	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^template<typename DerType> struct NumTraits<AutoDiffScalar<DerType> >$/;"	s	namespace:Eigen
NumberOfRegisters	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
NumberOfRegisters	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
NumberOfRegisters	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
NumericalDiff	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        NumericalDiff(const T0& a0) : Functor(a0), epsfcn(0) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        NumericalDiff(const T0& a0, const T1& a1) : Functor(a0, a1), epsfcn(0) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        NumericalDiff(const T0& a0, const T1& a1, const T2& a2) : Functor(a0, a1, a2), epsfcn(0) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    NumericalDiff(Scalar _epsfcn=0.) : Functor(), epsfcn(_epsfcn) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    NumericalDiff(const Functor& f, Scalar _epsfcn=0.) : Functor(f), epsfcn(_epsfcn) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^class NumericalDiff : public _Functor$/;"	c	namespace:Eigen
NumericalDiffMode	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^enum NumericalDiffMode {$/;"	g	namespace:Eigen
NumericalIssue	tools/eigen/Eigen/src/Core/util/Constants.h	/^  NumericalIssue = 1, $/;"	e	enum:Eigen::ComputationInfo
OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
OK	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            LERR, OK$/;"	v	program:CBLAT2
OK	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            LERR, OK$/;"	v	program:CBLAT3
OK	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            LERR, OK$/;"	v	program:DBLAT2
OK	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            LERR, OK$/;"	v	program:DBLAT3
OK	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            LERR, OK$/;"	v	program:SBLAT2
OK	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            LERR, OK$/;"	v	program:SBLAT3
OK	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            LERR, OK$/;"	v	program:ZBLAT2
OK	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            LERR, OK$/;"	v	program:ZBLAT3
ONE	tools/eigen/blas/testing/cblat2.f	/^      COMPLEX            ZERO, ONE$/;"	v	program:CBLAT2
ONE	tools/eigen/blas/testing/cblat3.f	/^      COMPLEX            ZERO, ONE$/;"	v	program:CBLAT3
ONE	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   ZERO, HALF, ONE$/;"	v	program:DBLAT2
ONE	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   ZERO, HALF, ONE$/;"	v	program:DBLAT3
ONE	tools/eigen/blas/testing/sblat2.f	/^      REAL               ZERO, HALF, ONE$/;"	v	program:SBLAT2
ONE	tools/eigen/blas/testing/sblat3.f	/^      REAL               ZERO, HALF, ONE$/;"	v	program:SBLAT3
ONE	tools/eigen/blas/testing/zblat2.f	/^      COMPLEX*16         ZERO, ONE$/;"	v	program:ZBLAT2
ONE	tools/eigen/blas/testing/zblat3.f	/^      COMPLEX*16         ZERO, ONE$/;"	v	program:ZBLAT3
ONES_COMPLEMENT	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	108;"	d
OP	tools/eigen/blas/common.h	40;"	d
OP	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^struct OP$/;"	s	namespace:Eigen::internal
OP	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^struct OP<MatrixSolver, MatrixType, Scalar, false>$/;"	s	namespace:Eigen::internal
OP	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^struct OP<MatrixSolver, MatrixType, Scalar, true>$/;"	s	namespace:Eigen::internal
OPT	Makefile	/^OPT = SCALABLE$/;"	m
Object	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef _Object Object;$/;"	t	class:Eigen::KdBVH
ObjectIterator	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef const Object *ObjectIterator;$/;"	t	class:Eigen::KdBVH
ObjectList	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef std::vector<Object, aligned_allocator<Object> > ObjectList;$/;"	t	class:Eigen::KdBVH
OffsetCol	tools/eigen/Eigen/src/Core/Reverse.h	/^      OffsetCol  = ReverseCol && IsRowMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon256
OffsetRow	tools/eigen/Eigen/src/Core/Reverse.h	/^      OffsetRow  = ReverseRow && IsColMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon256
OmpEval	tools/eigen/bench/basicbenchmark.h	/^enum {LazyEval, EarlyEval, OmpEval};$/;"	e	enum:__anon729
OnTheLeft	tools/eigen/Eigen/src/Core/util/Constants.h	/^  OnTheLeft = 1,  $/;"	e	enum:Eigen::__anon498
OnTheRight	tools/eigen/Eigen/src/Core/util/Constants.h	/^  OnTheRight = 2  $/;"	e	enum:Eigen::__anon498
One	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int One = One_;$/;"	m	struct:Eigen::AntiHermiticity
One	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int One = One_;$/;"	m	struct:Eigen::AntiSymmetry
One	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int One = One_;$/;"	m	struct:Eigen::Hermiticity
One	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int One = One_;$/;"	m	struct:Eigen::Symmetry
One	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t One = static_cast<std::size_t>(One_);$/;"	m	struct:Eigen::internal::tensor_symmetry_num_indices
Ones	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones()$/;"	f	class:Eigen::DenseBase
Ones	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index newSize)$/;"	f	class:Eigen::DenseBase
Ones	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
OppositeExtendedType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct OppositeExtendedType {$/;"	s	class:Eigen::VectorwiseOp
Options	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^      Options = MatrixType::Options & ~RowMajorBit, \/\/ these are the options for the TmpMatrixType, we need a ColMajor matrix here!$/;"	e	enum:Eigen::LDLT::__anon243
Options	tools/eigen/Eigen/src/Cholesky/LLT.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::LLT::__anon244
Options	tools/eigen/Eigen/src/Core/Array.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Array::__anon249
Options	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      Options = internal::traits<Derived>::Options$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
Options	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon623
Options	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon624
Options	tools/eigen/Eigen/src/Core/Map.h	/^  enum { Options }; \/\/ Expressions don't have Options$/;"	e	enum:Eigen::internal::traits::__anon675
Options	tools/eigen/Eigen/src/Core/Matrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon293
Options	tools/eigen/Eigen/src/Core/Matrix.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Matrix::__anon294
Options	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    enum { Options = internal::traits<Derived>::Options };$/;"	e	enum:Eigen::PlainObjectBase::__anon307
Options	tools/eigen/Eigen/src/Core/Ref.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon615
Options	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^      Options = IsColVector ? (_Options | ColMajor) & ~RowMajor$/;"	e	enum:Eigen::internal::promote_index_type::make_proper_matrix_type::__anon564
Options	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon685
Options	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexSchur::__anon684
Options	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::EigenSolver::__anon686
Options	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon683
Options	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon687
Options	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^        Options = MatrixType::Options,$/;"	e	enum:Eigen::RealQZ::__anon682
Options	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::RealSchur::__anon681
Options	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon690
Options	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::Tridiagonalization::__anon689
Options	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^    Options = _Options$/;"	e	enum:Eigen::Hyperplane::__anon712
Options	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^    Options = _Options$/;"	e	enum:Eigen::ParametrizedLine::__anon711
Options	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Options = _Options,$/;"	e	enum:Eigen::Transform::__anon705
Options	tools/eigen/Eigen/src/LU/FullPivLU.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::FullPivLU::__anon168
Options	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::PartialPivLU::__anon166
Options	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon680
Options	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon678
Options	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::HouseholderQR::__anon676
Options	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon158
Options	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon159
Options	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon160
Options	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseMatrix::__anon225
Options	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon199
Options	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseVector::__anon229
Options	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    static const int Options = Options_;$/;"	m	class:Eigen::Tensor
Options	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    static const int Options = Options_;$/;"	m	class:Eigen::TensorFixedSize
Options	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    static const int Options = Options_;$/;"	m	class:Eigen::TensorMap
Options	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    Options = BaseTraits::Options,$/;"	e	enum:Eigen::internal::traits::__anon112
Options	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    Options = Options_,$/;"	e	enum:Eigen::internal::traits::__anon109
Options	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    Options = Options_,$/;"	e	enum:Eigen::internal::traits::__anon110
Options	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    Options = Options_,$/;"	e	enum:Eigen::internal::traits::__anon111
Options	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      Options = BlockSparseMatrixT::Options,$/;"	e	enum:Eigen::BlockSparseMatrixView::__anon24
Options	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      Options = _Options,$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
Options	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^      Options = _Options$/;"	e	enum:Eigen::DynamicSparseMatrix::__anon16
OrderAtCompileTime	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { OrderAtCompileTime = _Degree==Dynamic ? Dynamic : _Degree+1 \/*!< The spline curve's order at compile-time. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon41
OrderAtCompileTime	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { OrderAtCompileTime = _Degree==Dynamic ? Dynamic : _Degree+1 \/*!< The spline curve's order at compile-time. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon44
OrderingType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename internal::traits<Derived>::OrderingType OrderingType;$/;"	t	class:Eigen::SimplicialCholeskyBase
OrderingType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef _Ordering OrderingType;$/;"	t	struct:Eigen::internal::traits
OrderingType	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::SparseLU
OrderingType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::SparseQR
OrderingType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::IncompleteCholesky
OtherCols	tools/eigen/Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon708
OtherCols	tools/eigen/Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon709
OtherRows	tools/eigen/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon708
OtherRows	tools/eigen/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon709
OuterPacketMask	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    static const int OuterPacketMask = (1 << OuterPacketBits) - 1;$/;"	m	class:Eigen::RandomSetter
OuterProduct	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum { DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon500
OuterRandomAccessPattern	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^const int OuterRandomAccessPattern  = 0x4 | CoherentAccessPattern;$/;"	m	namespace:Eigen
OuterSize	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    enum { OuterSize = IsRowMajor ? BlockRows : BlockCols };$/;"	e	enum:Eigen::BlockImpl::__anon210
OuterSize	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    enum { OuterSize = IsRowMajor ? BlockRows : BlockCols };$/;"	e	enum:Eigen::internal::sparse_matrix_block_impl::__anon212
OuterStride	tools/eigen/Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC OuterStride() : Base() {}$/;"	f	class:Eigen::OuterStride
OuterStride	tools/eigen/Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC OuterStride(Index v) : Base(v,0) {} \/\/ FIXME making this explicit could break valid code$/;"	f	class:Eigen::OuterStride
OuterStride	tools/eigen/Eigen/src/Core/Stride.h	/^class OuterStride : public Stride<Value, 0>$/;"	c	namespace:Eigen
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/Block.h	/^    OuterStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon246
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    OuterStrideAtCompileTime = HasSameStorageOrderAsArgType$/;"	e	enum:Eigen::internal::evaluator::__anon660
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    OuterStrideAtCompileTime = StrideType::OuterStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::evaluator::__anon658
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon379
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      OuterStrideAtCompileTime = internal::outer_stride_at_compile_time<Derived>::ret$/;"	e	enum:Eigen::DenseBase::__anon582
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/Diagonal.h	/^    OuterStrideAtCompileTime = 0$/;"	e	enum:Eigen::internal::traits::__anon389
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/Map.h	/^    OuterStrideAtCompileTime = StrideType::OuterStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon674
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/Matrix.h	/^    OuterStrideAtCompileTime = (Options&RowMajor) ? ColsAtCompileTime : RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon293
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/Stride.h	/^      OuterStrideAtCompileTime = _OuterStrideAtCompileTime$/;"	e	enum:Eigen::Stride::__anon253
OuterStrideAtCompileTime	tools/eigen/Eigen/src/Core/Transpose.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret$/;"	e	enum:Eigen::internal::traits::__anon374
OuterStrideMatch	tools/eigen/Eigen/src/Core/Ref.h	/^      OuterStrideMatch = Derived::IsVectorAtCompileTime$/;"	e	enum:Eigen::internal::traits::match::__anon616
OuterVector	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^      OuterVector =  (BlockCols==1 && ArgType::IsRowMajor)$/;"	e	enum:Eigen::internal::unary_evaluator::__anon214
OuterVectorInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  EIGEN_STRONG_INLINE OuterVectorInnerIterator(const unary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
OuterVectorInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^class unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased>::OuterVectorInnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
OutputMultiLineText	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::OutputMultiLineText($/;"	f	class:CSimpleIniTempl
OutputWriter	tools/SimpleIni.h	/^        OutputWriter() { }$/;"	f	class:CSimpleIniTempl::OutputWriter
OutputWriter	tools/SimpleIni.h	/^    class OutputWriter {$/;"	c	class:CSimpleIniTempl
PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
PADDING_SAME	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  PADDING_SAME = 2,$/;"	e	enum:Eigen::__anon113
PADDING_VALID	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  PADDING_VALID = 1,$/;"	e	enum:Eigen::__anon113
PALIGN_NEON	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	477;"	d
PALIGN_NEON	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	497;"	d
PALIGN_NEON	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	702;"	d
PALIGN_NEON	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	715;"	d
PASS	tools/eigen/blas/testing/cblat1.f	/^      LOGICAL          PASS$/;"	v	program:CBLAT1
PASS	tools/eigen/blas/testing/dblat1.f	/^      LOGICAL          PASS$/;"	v	program:DBLAT1
PASS	tools/eigen/blas/testing/sblat1.f	/^      LOGICAL          PASS$/;"	v	program:SBLAT1
PASS	tools/eigen/blas/testing/zblat1.f	/^      LOGICAL          PASS$/;"	v	program:ZBLAT1
PASTIX_COMPLEX	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	16;"	d
PASTIX_DCOMPLEX	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	17;"	d
PM_Normalized	tools/eigen/demos/opengl/gpuhelper.h	/^    enum ProjectionMode2D { PM_Normalized = 1, PM_Viewport = 2 };$/;"	e	enum:GpuHelper::ProjectionMode2D
PM_Viewport	tools/eigen/demos/opengl/gpuhelper.h	/^    enum ProjectionMode2D { PM_Normalized = 1, PM_Viewport = 2 };$/;"	e	enum:GpuHelper::ProjectionMode2D
PS_Base	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef PolynomialSolverBase<_Scalar,1>    PS_Base;$/;"	t	class:Eigen::PolynomialSolver
PS_Base	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef PolynomialSolverBase<_Scalar,_Deg>    PS_Base;$/;"	t	class:Eigen::PolynomialSolver
PYSCRIPT	tools/eigen/bench/btl/generic_bench/utils/utilities.h	23;"	d
Packet	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_ceil_op
Packet	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::gemm_pack_rhs
Packet	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::internal::BlasLinearMapper
Packet	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::internal::blas_data_mapper
Packet	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^typedef internal::packet_traits<Scalar>::type Packet;$/;"	t	file:
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::Tensor
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename Eigen::internal::traits<TensorAssignOp>::Packet Packet;$/;"	t	class:Eigen::TensorAssignOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename Eigen::internal::traits<TensorBroadcastingOp>::Packet Packet;$/;"	t	class:Eigen::TensorBroadcastingOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename Eigen::internal::traits<TensorChippingOp>::Packet Packet;$/;"	t	class:Eigen::TensorChippingOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    typedef typename internal::traits<TensorConcatenationOp>::Packet Packet;$/;"	t	class:Eigen::TensorConcatenationOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename Eigen::internal::traits<TensorContractionOp>::Packet Packet;$/;"	t	class:Eigen::TensorContractionOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename XprType::Packet Packet;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename XprType::Packet Packet;$/;"	t	struct:Eigen::TensorEvaluator
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::internal::TensorContractionInputMapper
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::internal::TensorContractionSubMapper
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename XprType::Packet Packet;$/;"	t	struct:Eigen::TensorEvaluator
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef typename XprType::Packet Packet;$/;"	t	struct:Eigen::TensorEvaluator
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typedef typename internal::traits<TensorConversionOp>::Packet Packet;$/;"	t	class:Eigen::TensorConversionOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename Eigen::internal::traits<TensorConvolutionOp>::Packet Packet;$/;"	t	class:Eigen::TensorConvolutionOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomBinaryOp>::Packet Packet;$/;"	t	class:Eigen::TensorCustomBinaryOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomUnaryOp>::Packet Packet;$/;"	t	class:Eigen::TensorCustomUnaryOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename ArgType::Packet Packet;$/;"	t	struct:Eigen::TensorEvaluator
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename Eigen::internal::traits<TensorEvalToOp>::Packet Packet;$/;"	t	class:Eigen::TensorEvalToOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename Derived::Packet Packet;$/;"	t	struct:Eigen::TensorEvaluator
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseBinaryOp>::Packet Packet;$/;"	t	class:Eigen::TensorCwiseBinaryOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseNullaryOp>::Packet Packet;$/;"	t	class:Eigen::TensorCwiseNullaryOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseUnaryOp>::Packet Packet;$/;"	t	class:Eigen::TensorCwiseUnaryOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorSelectOp>::Packet Packet;$/;"	t	class:Eigen::TensorSelectOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename XprType::Packet Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::TensorFixedSize
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename ArgType::Packet Packet;$/;"	t	struct:Eigen::TensorEvaluator
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename Eigen::internal::traits<TensorForcedEvalOp>::Packet Packet;$/;"	t	class:Eigen::TensorForcedEvalOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename Eigen::internal::traits<TensorGeneratorOp>::Packet Packet;$/;"	t	class:Eigen::TensorGeneratorOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename Eigen::internal::traits<TensorImagePatchOp>::Packet Packet;$/;"	t	class:Eigen::TensorImagePatchOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename Eigen::internal::traits<TensorInflationOp>::Packet Packet;$/;"	t	class:Eigen::TensorInflationOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename Eigen::internal::traits<TensorLayoutSwapOp>::Packet Packet;$/;"	t	class:Eigen::TensorLayoutSwapOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::TensorMap
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::traits<TensorReshapingOp>::Packet Packet;$/;"	t	class:Eigen::TensorReshapingOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::traits<TensorSlicingOp>::Packet Packet;$/;"	t	class:Eigen::TensorSlicingOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename Eigen::internal::traits<TensorPaddingOp>::Packet Packet;$/;"	t	class:Eigen::TensorPaddingOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename Eigen::internal::traits<TensorPatchOp>::Packet Packet;$/;"	t	class:Eigen::TensorPatchOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typedef typename Eigen::internal::traits<TensorReductionOp>::Packet Packet;$/;"	t	class:Eigen::TensorReductionOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::TensorRef
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename Derived::Packet Packet;$/;"	t	struct:Eigen::TensorEvaluator
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename Eigen::internal::traits<TensorReverseOp>::Packet Packet;$/;"	t	class:Eigen::TensorReverseOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename Eigen::internal::traits<TensorShufflingOp>::Packet Packet;$/;"	t	class:Eigen::TensorShufflingOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename Eigen::internal::traits<TensorStridingOp>::Packet Packet;$/;"	t	class:Eigen::TensorStridingOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename Eigen::internal::traits<TensorVolumePatchOp>::Packet Packet;$/;"	t	class:Eigen::TensorVolumePatchOp
Packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::traits
Packet16uc	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned char  Packet16uc;$/;"	t	namespace:Eigen::internal
Packet1cd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const Packet2d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1cd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const Packet2d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1cd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const __m128d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1d	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float64x1_t Packet1d;$/;"	t	namespace:Eigen::internal
Packet2cd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd() {}$/;"	f	struct:Eigen::internal::Packet2cd
Packet2cd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cd(const __m256d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cd
Packet2cd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^struct Packet2cd$/;"	s	namespace:Eigen::internal
Packet2cf	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const __m128& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2d	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector double              Packet2d;$/;"	t	namespace:Eigen::internal
Packet2d	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float64x2_t Packet2d;$/;"	t	namespace:Eigen::internal
Packet2d	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128d> Packet2d;$/;"	t	namespace:Eigen::internal
Packet2f	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float32x2_t Packet2f;$/;"	t	namespace:Eigen::internal
Packet2i	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef int32x2_t   Packet2i;$/;"	t	namespace:Eigen::internal
Packet2l	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector long long           Packet2l;$/;"	t	namespace:Eigen::internal
Packet2ul	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned long long  Packet2ul;$/;"	t	namespace:Eigen::internal
Packet4bi	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector __bool int     Packet4bi;$/;"	t	namespace:Eigen::internal
Packet4cf	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf() {}$/;"	f	struct:Eigen::internal::Packet4cf
Packet4cf	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet4cf(const __m256& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet4cf
Packet4cf	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^struct Packet4cf$/;"	s	namespace:Eigen::internal
Packet4d	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256d Packet4d;$/;"	t	namespace:Eigen::internal
Packet4f	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector float          Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float32x4_t Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128>  Packet4f;$/;"	t	namespace:Eigen::internal
Packet4i	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector int            Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef int32x4_t   Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128i> Packet4i;$/;"	t	namespace:Eigen::internal
Packet4ui	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned int   Packet4ui;$/;"	t	namespace:Eigen::internal
Packet4ui	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef uint32x4_t  Packet4ui;$/;"	t	namespace:Eigen::internal
Packet8f	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256  Packet8f;$/;"	t	namespace:Eigen::internal
Packet8i	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256i Packet8i;$/;"	t	namespace:Eigen::internal
Packet8i	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector short int      Packet8i;$/;"	t	namespace:Eigen::internal
PacketAccess	tools/eigen/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon619
PacketAccess	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon396
PacketAccess	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasAdd$/;"	e	enum:Eigen::internal::functor_traits::__anon394
PacketAccess	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasDiv$/;"	e	enum:Eigen::internal::functor_traits::__anon398
PacketAccess	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSub$/;"	e	enum:Eigen::internal::functor_traits::__anon395
PacketAccess	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = packet_traits<Scalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon393
PacketAccess	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = packet_traits<Scalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon399
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon407
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon413
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon414
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon404
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasAdd$/;"	e	enum:Eigen::internal::functor_traits::__anon400
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasMax$/;"	e	enum:Eigen::internal::functor_traits::__anon406
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasMin$/;"	e	enum:Eigen::internal::functor_traits::__anon405
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSub$/;"	e	enum:Eigen::internal::functor_traits::__anon410
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = scalar_product_op<LhsScalar,RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon402
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = scalar_quotient_op<LhsScalar,RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon412
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon409
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess=0 };$/;"	e	enum:Eigen::internal::functor_traits::__anon408
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = 2 * NumTraits<Scalar1>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon418
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon417
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon426
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar1>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon416
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon423
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon424
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon425
PacketAccess	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon415
PacketAccess	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon453
PacketAccess	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon451
PacketAccess	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon452
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon445
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon446
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon447
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon448
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon443
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon444
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon432
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon433
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon434
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon435
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon436
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon437
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon438
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon439
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon440
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon429
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon430
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon431
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon427
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon428
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon450
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon449
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon441
PacketAccess	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon442
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon486
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon487
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon488
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon489
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasACos$/;"	e	enum:Eigen::internal::functor_traits::__anon474
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasASin$/;"	e	enum:Eigen::internal::functor_traits::__anon475
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasATan$/;"	e	enum:Eigen::internal::functor_traits::__anon476
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasAbs$/;"	e	enum:Eigen::internal::functor_traits::__anon457
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasArg$/;"	e	enum:Eigen::internal::functor_traits::__anon460
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCeil$/;"	e	enum:Eigen::internal::functor_traits::__anon485
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasConj$/;"	e	enum:Eigen::internal::functor_traits::__anon459
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCos$/;"	e	enum:Eigen::internal::functor_traits::__anon471
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCosh$/;"	e	enum:Eigen::internal::functor_traits::__anon479
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasFloor$/;"	e	enum:Eigen::internal::functor_traits::__anon484
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasNegate };$/;"	e	enum:Eigen::internal::functor_traits::__anon456
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasRound$/;"	e	enum:Eigen::internal::functor_traits::__anon483
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasRsqrt$/;"	e	enum:Eigen::internal::functor_traits::__anon470
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSin$/;"	e	enum:Eigen::internal::functor_traits::__anon472
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSinh$/;"	e	enum:Eigen::internal::functor_traits::__anon478
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSqrt$/;"	e	enum:Eigen::internal::functor_traits::__anon469
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasTan$/;"	e	enum:Eigen::internal::functor_traits::__anon473
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasTanh$/;"	e	enum:Eigen::internal::functor_traits::__anon477
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon462
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon463
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon464
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon465
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon482
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasExp }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon466
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon467
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog10 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon468
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon458
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon480
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon481
PacketAccess	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon461
PacketAccess	tools/eigen/blas/level1_cplx_impl.h	/^      enum { Cost = 3 * NumTraits<Scalar>::AddCost, PacketAccess = 0 };$/;"	e	enum:Eigen::internal::functor_traits::__anon130
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^      PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::Tensor::__anon55
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    PacketAccess = \/*TensorEvaluator<ArgType, Device>::PacketAccess*\/ false,$/;"	e	enum:Eigen::TensorEvaluator::__anon51
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    PacketAccess = \/*TensorEvaluator<ArgType, Device>::PacketAccess*\/ false,$/;"	e	enum:Eigen::TensorEvaluator::__anon52
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^    PacketAccess = TensorEvaluator<LeftArgType, Device>::PacketAccess & TensorEvaluator<RightArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon91
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon65
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon61
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon62
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    PacketAccess = TensorEvaluator<LeftArgType, Device>::PacketAccess & TensorEvaluator<RightArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon83
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    PacketAccess = TensorEvaluator<LeftArgType, Device>::PacketAccess & TensorEvaluator<RightArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon84
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorContractionEvaluatorBase::__anon96
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess && internal::type_casting_traits<SrcType, TargetType>::VectorizedCast,$/;"	e	enum:Eigen::TensorEvaluator::__anon99
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    PacketAccess = TensorEvaluator<InputArgType, Device>::PacketAccess & TensorEvaluator<KernelArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon104
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    PacketAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon105
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorEvaluator::__anon100
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorEvaluator::__anon101
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    PacketAccess = true,$/;"	e	enum:Eigen::TensorEvaluator::__anon89
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    PacketAccess = Derived::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon75
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    PacketAccess = Derived::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon77
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess & internal::functor_traits<UnaryOp>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon79
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    PacketAccess = TensorEvaluator<LeftArgType, Device>::PacketAccess & TensorEvaluator<RightArgType, Device>::PacketAccess &$/;"	e	enum:Eigen::TensorEvaluator::__anon80
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    PacketAccess = TensorEvaluator<ThenArgType, Device>::PacketAccess & TensorEvaluator<ElseArgType, Device>::PacketAccess &$/;"	e	enum:Eigen::TensorEvaluator::__anon81
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^    PacketAccess = internal::functor_traits<NullaryOp>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon78
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^      PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorFixedSize::__anon87
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^    PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorEvaluator::__anon57
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^    PacketAccess = packet_traits<T>::HasAdd && packet_traits<T>::HasDiv &&$/;"	e	enum:Eigen::internal::functor_traits::__anon69
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = false;$/;"	m	class:Eigen::internal::GaussianGenerator
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = false;$/;"	m	class:Eigen::internal::NormalRandomGenerator
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = false;$/;"	m	struct:Eigen::internal::ArgMaxTupleReducer
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = false;$/;"	m	struct:Eigen::internal::ArgMinTupleReducer
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = true;$/;"	m	class:Eigen::internal::NormalRandomGenerator
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = true;$/;"	m	class:Eigen::internal::UniformRandomGenerator
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = true;$/;"	m	struct:Eigen::internal::MaxReducer
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = true;$/;"	m	struct:Eigen::internal::MeanReducer
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = true;$/;"	m	struct:Eigen::internal::MinReducer
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = true;$/;"	m	struct:Eigen::internal::ProdReducer
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  static const bool PacketAccess = true;$/;"	m	struct:Eigen::internal::SumReducer
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorEvaluator::__anon71
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon86
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon106
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon58
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon59
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^      PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorMap::__anon60
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon115
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon116
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon118
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon119
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon68
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon102
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    PacketAccess = Self::InputPacketAccess && Op::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon67
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^      PacketAccess = false,$/;"	e	enum:Eigen::TensorRef::__anon120
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    PacketAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon121
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    PacketAccess = false,$/;"	e	enum:Eigen::TensorEvaluator::__anon122
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon63
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon64
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorEvaluator::__anon92
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    PacketAccess = (internal::packet_traits<Scalar>::size > 1),$/;"	e	enum:Eigen::TensorEvaluator::__anon93
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon53
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon54
PacketAccess	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    PacketAccess = TensorEvaluator<ArgType, Device>::PacketAccess,$/;"	e	enum:Eigen::TensorEvaluator::__anon85
PacketAccess	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^  static const bool PacketAccess = false;$/;"	m	struct:UserReducer	file:
PacketAccessBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int PacketAccessBit = 0x8;$/;"	m	namespace:Eigen
PacketAlignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    PacketAlignment = unpacket_traits<PacketScalar>::alignment,$/;"	e	enum:Eigen::internal::evaluator::__anon658
PacketAlignment	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    PacketAlignment = unpacket_traits<PacketScalar>::alignment,$/;"	e	enum:Eigen::internal::evaluator::__anon660
PacketBlock	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template <typename Packet,int N=unpacket_traits<Packet>::size> struct PacketBlock {$/;"	s	namespace:Eigen::internal
PacketConverter	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  PacketConverter(const TensorEvaluator& impl)$/;"	f	struct:Eigen::PacketConverter
PacketConverter	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^struct PacketConverter {$/;"	s	namespace:Eigen
PacketConverter	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^struct PacketConverter<TensorEvaluator, SrcPacket, TgtPacket, 1, 2> {$/;"	s	namespace:Eigen
PacketConverter	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^struct PacketConverter<TensorEvaluator, SrcPacket, TgtPacket, 2, 1> {$/;"	s	namespace:Eigen
PacketReturnType	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
PacketReturnType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::internal::product_evaluator
PacketReturnType	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::internal::redux_evaluator
PacketReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::SparseMatrixBase
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef typename Base::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::Tensor
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename LhsXprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorAssignOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    typedef typename internal::packet_traits<CoeffReturnType>::type PacketReturnType;$/;"	t	class:Eigen::TensorBase
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketReturnType;$/;"	t	class:Eigen::TensorBase
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorBroadcastingOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorChippingOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^                                                    typename RhsXprType::PacketReturnType>::ret PacketReturnType;$/;"	t	class:Eigen::TensorConcatenationOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^                                                  typename RhsXprType::PacketReturnType>::ret PacketReturnType;$/;"	t	class:Eigen::TensorContractionOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorConversionOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename internal::traits<XprType>::Packet PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^                                                  typename KernelXprType::PacketReturnType>::ret PacketReturnType;$/;"	t	class:Eigen::TensorConvolutionOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^                                                  typename RhsXprType::PacketReturnType>::ret PacketReturnType;$/;"	t	struct:Eigen::internal::traits
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorCustomUnaryOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomBinaryOp>::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorCustomBinaryOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename internal::remove_const<typename XprType::PacketReturnType>::type PacketReturnType;$/;"	t	class:Eigen::TensorEvalToOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename internal::remove_const<typename XprType::PacketReturnType>::type PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename Derived::Packet PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename internal::traits<XprType>::Packet PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^                                                    typename ElseXprType::PacketReturnType>::ret PacketReturnType;$/;"	t	class:Eigen::TensorSelectOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorCwiseNullaryOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename internal::packet_traits<CoeffReturnType>::type PacketReturnType;$/;"	t	class:Eigen::TensorCwiseBinaryOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename internal::packet_traits<CoeffReturnType>::type PacketReturnType;$/;"	t	class:Eigen::TensorCwiseUnaryOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename internal::remove_const<typename XprType::PacketReturnType>::type PacketReturnType;$/;"	t	class:Eigen::TensorForcedEvalOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorGeneratorOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorImagePatchOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorInflationOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename internal::remove_const<typename XprType::PacketReturnType>::type PacketReturnType;$/;"	t	class:Eigen::TensorLayoutSwapOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorSlicingOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename internal::remove_const<typename XprType::PacketReturnType>::type PacketReturnType;$/;"	t	class:Eigen::TensorReshapingOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorPaddingOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorPatchOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typedef typename internal::remove_const<typename XprType::PacketReturnType>::type PacketReturnType;$/;"	t	class:Eigen::TensorReductionOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename Self::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::internal::BlockReducer
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename internal::remove_const<typename XprType::PacketReturnType>::type PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename Derived::Packet PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorReverseOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorShufflingOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorStridingOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::TensorVolumePatchOp
PacketReturnType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	struct:Eigen::TensorEvaluator
PacketScalar	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::ArrayBase
PacketScalar	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::evaluator
PacketScalar	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::find_best_packet<Scalar,SizeAtCompileTime>::type PacketScalar;$/;"	t	class:Eigen::DenseBase
PacketScalar	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::DenseCoeffsBase
PacketScalar	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename Base::PacketScalar PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	tools/eigen/Eigen/src/Core/Matrix.h	/^  typedef typename find_best_packet<_Scalar,size>::type PacketScalar;$/;"	t	struct:Eigen::internal::traits
PacketScalar	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MatrixBase
PacketScalar	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::PlainObjectBase
PacketScalar	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::PacketScalar PacketScalar;$/;"	t	struct:Eigen::internal::product_evaluator
PacketScalar	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename XprType::PacketScalar PacketScalar;$/;"	t	class:Eigen::internal::redux_evaluator
PacketScalar	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::redux_impl
PacketScalar	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
PacketScalar	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::SparseMatrixBase
PacketSize	tools/eigen/Eigen/src/Cholesky/LLT.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::LLT::__anon245
PacketSize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    PacketSize = unpacket_traits<PacketType>::size$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon640
PacketSize	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    PacketSize = packet_traits<Scalar>::size,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
PacketSize	tools/eigen/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<Scalar>::size,$/;"	e	enum:Eigen::internal::redux_impl::__anon636
PacketSize	tools/eigen/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_traits::__anon627
PacketSize	tools/eigen/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon634
PacketSize	tools/eigen/Eigen/src/Core/Reverse.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::Reverse::__anon256
PacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon275
PacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon276
PacketSize	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::symm_pack_rhs::__anon285
PacketSize	tools/eigen/test/vectorization_logic.cpp	/^    PacketSize = internal::unpacket_traits<PacketType>::size$/;"	e	enum:vectorization_logic_half::__anon721	file:
PacketSize	tools/eigen/test/vectorization_logic.cpp	/^    PacketSize = internal::unpacket_traits<PacketType>::size,$/;"	e	enum:vectorization_logic::__anon720	file:
PacketSourceType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename internal::packet_traits<SrcType>::type PacketSourceType;$/;"	t	struct:Eigen::TensorEvaluator
PacketTraits	tools/eigen/test/vectorization_logic.cpp	/^  typedef internal::packet_traits<Scalar> PacketTraits;$/;"	t	struct:vectorization_logic	file:
PacketTraits	tools/eigen/test/vectorization_logic.cpp	/^  typedef internal::packet_traits<Scalar> PacketTraits;$/;"	t	struct:vectorization_logic_half	file:
PacketType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename AssignmentTraits::PacketType PacketType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
PacketType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
PacketType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
PacketType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::dense_assignment_loop
PacketType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename find_best_packet<DstScalar,Dst::SizeAtCompileTime>::type PacketType; $/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
PacketType	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename packet_traits<Scalar>::type PacketType;$/;"	t	struct:Eigen::internal::redux_impl
PacketType	tools/eigen/test/vectorization_logic.cpp	/^  typedef typename internal::packet_traits<Scalar>::type PacketType;$/;"	t	struct:vectorization_logic	file:
PacketType	tools/eigen/test/vectorization_logic.cpp	/^  typedef typename internal::unpacket_traits<typename internal::packet_traits<Scalar>::type>::half PacketType;$/;"	t	struct:vectorization_logic_half	file:
PaddingType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^} PaddingType;$/;"	t	namespace:Eigen	typeref:enum:Eigen::__anon113
ParameterType	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Array<StorageIndex,64,1,DontAlign> ParameterType;$/;"	t	class:Eigen::PardisoImpl
ParameterVectorType	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::ParameterVectorType ParameterVectorType;$/;"	t	class:Eigen::Spline
ParameterVectorType	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^    typedef typename SplineType::ParameterVectorType ParameterVectorType;$/;"	t	struct:Eigen::SplineFitting
ParameterVectorType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,1,Dynamic> ParameterVectorType;$/;"	t	struct:Eigen::SplineTraits
Parameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Parameters()$/;"	f	struct:Eigen::HybridNonLinearSolver::Parameters
Parameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    struct Parameters {$/;"	s	class:Eigen::HybridNonLinearSolver
Parameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Parameters()$/;"	f	struct:Eigen::LevenbergMarquardt::Parameters
Parameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    struct Parameters {$/;"	s	class:Eigen::LevenbergMarquardt
ParametrizedLine	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  ParametrizedLine(const ParametrizedLine<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  ParametrizedLine(const VectorType& origin, const VectorType& direction)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  inline ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(Index _dim) : m_origin(_dim), m_direction(_dim) {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(const ParametrizedLine<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^class ParametrizedLine$/;"	c	namespace:Eigen
ParametrizedLine	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^inline ParametrizedLine<_Scalar, _AmbientDim,_Options>::ParametrizedLine(const Hyperplane<_Scalar, _AmbientDim,OtherOptions>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
PardisoImpl	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
PardisoImpl	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoImpl : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
PardisoLDLT	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT()$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLDLT : public PardisoImpl< PardisoLDLT<MatrixType,Options> >$/;"	c	namespace:Eigen
PardisoLLT	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT()$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLLT : public PardisoImpl< PardisoLLT<MatrixType,_UpLo> >$/;"	c	namespace:Eigen
PardisoLU	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU()$/;"	f	class:Eigen::PardisoLU
PardisoLU	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLU(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
PardisoLU	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLU : public PardisoImpl< PardisoLU<MatrixType> >$/;"	c	namespace:Eigen
ParentMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorContractionInputMapper<Scalar, Index, side, Tensor, nocontract_t, contract_t, packet_size, inner_dim_contiguous, inner_dim_reordered, Alignment> ParentMapper;$/;"	t	class:Eigen::internal::TensorContractionSubMapper
PartialPivLU	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU()$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(Index size)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(const MatrixType& matrix)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^template<typename _MatrixType> class PartialPivLU$/;"	c	namespace:Eigen
PartialReduxExpr	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    explicit PartialReduxExpr(const MatrixType& mat, const MemberOp& func = MemberOp())$/;"	f	class:Eigen::PartialReduxExpr
PartialReduxExpr	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^class PartialReduxExpr : public internal::dense_xpr_base< PartialReduxExpr<MatrixType, MemberOp, Direction> >::type,$/;"	c	namespace:Eigen
PastixBase	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixBase() : m_initisOk(false), m_analysisIsOk(false), m_factorizationIsOk(false), m_pastixdata(0), m_size(0)$/;"	f	class:Eigen::PastixBase
PastixBase	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
PastixLDLT	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLDLT():Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLDLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLDLT : public PastixBase< PastixLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLLT	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLLT() : Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLLT : public PastixBase< PastixLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLU	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLU() : Base()$/;"	f	class:Eigen::PastixLU
PastixLU	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLU(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLU
PastixLU	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLU : public PastixBase< PastixLU<_MatrixType> >$/;"	c	namespace:Eigen
Perm	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef PermutationMatrix<Dynamic,Dynamic,StorageIndex> Perm;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
PermIndex	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    typedef typename QRSolver::StorageIndex PermIndex;$/;"	t	class:Eigen::LevenbergMarquardt
PermIndexType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename PermutationType::StorageIndex PermIndexType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermPermProduct	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	e	enum:Eigen::internal::PermPermProduct_t
PermPermProduct_t	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	g	namespace:Eigen::internal
PermutationBase	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^class PermutationBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
PermutationMap	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Map<PermutationMatrix<Dynamic,Dynamic,int> > PermutationMap;$/;"	t	class:Eigen::SuperLUBase
PermutationMap	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::PermutationMap PermutationMap;$/;"	t	class:Eigen::SuperLU
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(const Transpose<PermutationBase<Other> >& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(internal::PermPermProduct_t, const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    explicit PermutationMatrix(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    explicit inline PermutationMatrix(Index size) : m_indices(size)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    explicit inline PermutationMatrix(const MatrixBase<Other>& indices) : m_indices(indices)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix()$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationMatrix& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^class PermutationMatrix : public PermutationBase<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex> >$/;"	c	namespace:Eigen
PermutationPType	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationPType;$/;"	t	class:Eigen::FullPivLU
PermutationQType	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationQType;$/;"	t	class:Eigen::FullPivLU
PermutationShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct PermutationShape       { static std::string debugName() { return "PermutationShape"; } };$/;"	s	namespace:Eigen
PermutationStorage	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct PermutationStorage {};$/;"	s	namespace:Eigen
PermutationType	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::LDLT
PermutationType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef Derived PermutationType;$/;"	t	class:Eigen::Transpose
PermutationType	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::PartialPivLU
PermutationType	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	/^  typedef PermutationMatrix<Dynamic,Dynamic,StorageIndex> PermutationType;$/;"	t	class:Eigen::MetisOrdering
PermutationType	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType; $/;"	t	class:Eigen::COLAMDOrdering
PermutationType	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::AMDOrdering
PermutationType	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::NaturalOrdering
PermutationType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermutationType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::FullPivHouseholderQR
PermutationType	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef Map<PermutationMatrix<Dynamic, Dynamic, StorageIndex> > PermutationType;$/;"	t	class:Eigen::SPQR
PermutationType	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::SparseLU
PermutationType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::SparseQR
PermutationType	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef typename OrderingType::PermutationType PermutationType;$/;"	t	class:Eigen::IncompleteCholesky
PermutationType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    typedef PermutationMatrix<Dynamic,Dynamic> PermutationType;$/;"	t	class:Eigen::LevenbergMarquardt
PermutationWrapper	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationWrapper(const IndicesType& indices)$/;"	f	class:Eigen::PermutationWrapper
PermutationWrapper	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^class PermutationWrapper : public PermutationBase<PermutationWrapper<_IndicesType> >$/;"	c	namespace:Eigen
Pivot_Vector	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  typedef blitz::Array<int,1> Pivot_Vector;$/;"	t	class:blitz_LU_solve_interface
Pivot_Vector	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  typedef blitz::Array<int,1> Pivot_Vector;$/;"	t	class:blitz_LU_solve_interface
Pivot_Vector	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  typedef blitz::Array<int,1> Pivot_Vector;$/;"	t	class:blitz_LU_solve_interface
Pivoting	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Pivoting            = 0x01, $/;"	e	enum:Eigen::DecompositionOptions
PivotsType	tools/eigen/lapack/lapack_common.h	/^typedef Eigen::Map<Eigen::Transpositions<Eigen::Dynamic,Eigen::Dynamic,int> > PivotsType;$/;"	t
PlainArray	tools/eigen/Eigen/src/Core/DenseBase.h	/^          > PlainArray;$/;"	t	class:Eigen::DenseBase
PlainMatrix	tools/eigen/Eigen/src/Core/DenseBase.h	/^          > PlainMatrix;$/;"	t	class:Eigen::DenseBase
PlainMatrixType	tools/eigen/blas/common.h	/^typedef Matrix<Scalar,Dynamic,Dynamic,ColMajor> PlainMatrixType;$/;"	t
PlainObject	tools/eigen/Eigen/src/Core/Array.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Array
PlainObject	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::ArrayBase
PlainObject	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::PlainObject         PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	tools/eigen/Eigen/src/Core/DenseBase.h	/^                                 PlainMatrix, PlainArray>::type PlainObject;$/;"	t	class:Eigen::DenseBase
PlainObject	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalMatrix<Scalar,DiagonalVectorType::SizeAtCompileTime,DiagonalVectorType::MaxSizeAtCompileTime> PlainObject;$/;"	t	class:Eigen::DiagonalBase
PlainObject	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef typename InverseType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::unary_evaluator
PlainObject	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef typename XprType::PlainObject                       PlainObject;$/;"	t	class:Eigen::Inverse
PlainObject	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	tools/eigen/Eigen/src/Core/Matrix.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Matrix
PlainObject	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::MatrixBase
PlainObject	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^  typedef typename internal::traits<Derived>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::SelfAdjointView
PlainObject	tools/eigen/Eigen/src/Core/Solve.h	/^                 RhsType::MaxColsAtCompileTime> PlainObject;  $/;"	t	struct:Eigen::internal::solve_traits
PlainObject	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef typename SolveType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef typename internal::traits<Solve>::PlainObject PlainObject;$/;"	t	class:Eigen::Solve
PlainObject	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef typename solve_traits<Decomposition,RhsType,typename internal::traits<RhsType>::StorageKind>::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType PlainObject;$/;"	t	class:Eigen::TriangularViewImpl
PlainObject	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::unary_evaluator
PlainObject	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef Quaternion<_Scalar,_Options> PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename SolveType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::traits<SolveWithGuess>::PlainObject PlainObject;$/;"	t	class:Eigen::SolveWithGuess
PlainObject	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::FullPivLU
PlainObject	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::PartialPivLU
PlainObject	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::ColPivHouseholderQR
PlainObject	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::FullPivHouseholderQR
PlainObject	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrix<Scalar, Flags&RowMajorBit ? RowMajor : ColMajor, StorageIndex> PlainObject;$/;"	t	class:Eigen::SparseMatrixBase
PlainObject	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename permutation_matrix_product<Lhs,OnTheRight,false,SparseShape>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename permutation_matrix_product<Rhs,OnTheRight,false,SparseShape>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename sparse_eval<RhsType, RhsType::RowsAtCompileTime, RhsType::ColsAtCompileTime>::type PlainObject;$/;"	t	struct:Eigen::internal::solve_traits
PlainObject	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename Derived::PlainObject PlainObject;$/;"	t	class:Eigen::MatrixComplexPowerReturnValue
PlainObject	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename Derived::PlainObject PlainObject;$/;"	t	class:Eigen::MatrixPowerReturnValue
PlainObject	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef BlockSparseMatrix<Scalar, BlockSize, IsColMajor ? ColMajor : RowMajor, StorageIndex> PlainObject;$/;"	t	class:Eigen::BlockSparseMatrix
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase() : m_storage()$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(Index size, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const DenseBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const PlainObjectBase& other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    PlainObjectBase(PlainObjectBase&& other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    explicit PlainObjectBase(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^class PlainObjectBase : public internal::dense_xpr_base_dispatcher_for_doxygen<Derived>$/;"	c	namespace:Eigen
PlainObjectType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef PlainObjectBase<Derived> PlainObjectType;$/;"	t	struct:Eigen::internal::evaluator
PlainObjectType	tools/eigen/Eigen/src/Core/Ref.h	/^  typedef _PlainObjectType PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	tools/eigen/Eigen/src/Core/Ref.h	/^  typedef typename internal::traits<Derived>::PlainObjectType PlainObjectType;$/;"	t	class:Eigen::RefBase
PlainObjectType	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^  typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	class:Eigen::Ref
PlainObjectType	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectTypeCleaned	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::remove_all<PlainObjectType>::type PlainObjectTypeCleaned;$/;"	t	struct:Eigen::internal::evaluator
PlainPermutationType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^            PlainPermutationType;$/;"	t	class:Eigen::PermutationBase
PlainPermutationType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::PlainPermutationType PlainPermutationType;$/;"	t	class:Eigen::Transpose
PlanData	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef fftw_plan<Scalar> PlanData;$/;"	t	struct:Eigen::internal::fftw_impl
PlanData	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef kiss_cpx_fft<Scalar> PlanData;$/;"	t	struct:Eigen::internal::kissfft_impl
PlanKey	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    int PlanKey(int nfft, bool isinverse) const { return (nfft<<1) | int(isinverse); }$/;"	f	struct:Eigen::internal::kissfft_impl
PlanMap	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef std::map<int64_t,PlanData> PlanMap;$/;"	t	struct:Eigen::internal::fftw_impl
PlanMap	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef std::map<int,PlanData> PlanMap;$/;"	t	struct:Eigen::internal::kissfft_impl
PointPointMinimizer	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^  PointPointMinimizer() : calls(0) {}$/;"	f	struct:PointPointMinimizer
PointPointMinimizer	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^struct PointPointMinimizer \/\/how to compute squared distances between points and rectangles$/;"	s	file:
PointType	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::PointType PointType;$/;"	t	class:Eigen::Spline
PointType	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,Dimension,1> PointType;$/;"	t	struct:Eigen::SplineTraits
PointerArgType	tools/eigen/Eigen/src/Core/Map.h	/^    typedef PointerType PointerArgType;$/;"	t	class:Eigen::Map
PointerArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef PointerType PointerArgType;$/;"	t	class:Eigen::TensorMap
PointerArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef PointerType PointerArgType;$/;"	t	class:Eigen::TensorRef
PointerType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::PointerType PointerType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
PointerType	tools/eigen/Eigen/src/Core/Map.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::Map
PointerType	tools/eigen/Eigen/src/Core/MapBase.h	/^                     PointerType;$/;"	t	class:Eigen::MapBase
PointerType	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::MapBase
PointerType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef Scalar* PointerType;$/;"	t	class:Eigen::TensorMap
PointerType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef Scalar* PointerType;$/;"	t	class:Eigen::TensorRef
PolynomialSolver	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline PolynomialSolver( const OtherPolynomial& poly ){$/;"	f	class:Eigen::PolynomialSolver
PolynomialSolver	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline PolynomialSolver(){}$/;"	f	class:Eigen::PolynomialSolver
PolynomialSolver	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^class PolynomialSolver : public PolynomialSolverBase<_Scalar,_Deg>$/;"	c	namespace:Eigen
PolynomialSolver	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^class PolynomialSolver<_Scalar,1> : public PolynomialSolverBase<_Scalar,1>$/;"	c	namespace:Eigen
PolynomialSolverBase	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline PolynomialSolverBase( const OtherPolynomial& poly ){$/;"	f	class:Eigen::PolynomialSolverBase
PolynomialSolverBase	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline PolynomialSolverBase(){}$/;"	f	class:Eigen::PolynomialSolverBase
PolynomialSolverBase	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^class PolynomialSolverBase$/;"	c	namespace:Eigen
Portable_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  Portable_Perf_Analyzer( ):_nb_calc(0), m_time_action(0), _chronos(){$/;"	f	class:Portable_Perf_Analyzer
Portable_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  Portable_Perf_Analyzer( const Portable_Perf_Analyzer & ){$/;"	f	class:Portable_Perf_Analyzer
Portable_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^class Portable_Perf_Analyzer{$/;"	c
Portable_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  Portable_Perf_Analyzer( const Portable_Perf_Analyzer & ){$/;"	f	class:Portable_Perf_Analyzer
Portable_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  Portable_Perf_Analyzer( void ):_nb_calc(1),_nb_init(1),_chronos(){$/;"	f	class:Portable_Perf_Analyzer
Portable_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^class Portable_Perf_Analyzer{$/;"	c
Portable_Timer	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   Portable_Timer()$/;"	f	class:Portable_Timer
Portable_Timer	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  Portable_Timer()$/;"	f	class:Portable_Timer
Portable_Timer	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  Portable_Timer(int clkid) : m_clkid(clkid)$/;"	f	class:Portable_Timer
Portable_Timer	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^ class Portable_Timer$/;"	c
Portable_Timer	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^class Portable_Timer$/;"	c
PositiveSemiDef	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
PossiblyRotatingKernelHelper	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  PossiblyRotatingKernelHelper(const Traits& t) : traits(t) {}$/;"	f	struct:Eigen::internal::PossiblyRotatingKernelHelper
PossiblyRotatingKernelHelper	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct PossiblyRotatingKernelHelper$/;"	s	namespace:Eigen::internal
PossiblyRotatingKernelHelper	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct PossiblyRotatingKernelHelper<GebpKernel, true>$/;"	s	namespace:Eigen::internal
PowReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_pow_op<Scalar>, const Derived> PowReturnType;$/;"	t
PreconditionIfMoreColsThanRows	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon155
PreconditionIfMoreRowsThanCols	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon155
Preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::BiCGSTAB
Preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::ConjugateGradient
Preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::Preconditioner Preconditioner;$/;"	t	class:Eigen::IterativeSolverBase
Preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::DGMRES
Preconditioner	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::GMRES
Preconditioner	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^            typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::MINRES
PreservingInnerMostDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool PreservingInnerMostDims = internal::preserve_inner_most_dims<Dims, NumInputDims, Layout>::value;$/;"	m	struct:Eigen::TensorEvaluator
ProdReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> struct ProdReducer$/;"	s	namespace:Eigen::internal
ProdReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_prod>::Type ProdReturnType;$/;"	t	class:Eigen::VectorwiseOp
ProdXprType	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Product<LhsT,RhsT,DefaultProduct> ProdXprType;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
Product	tools/eigen/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)$/;"	f	class:Eigen::Product
Product	tools/eigen/Eigen/src/Core/Product.h	/^class Product : public ProductImpl<_Lhs,_Rhs,Option,$/;"	c	namespace:Eigen
ProductImpl	tools/eigen/Eigen/src/Core/Product.h	/^class ProductImpl : public internal::generic_xpr_base<Product<Lhs,Rhs,Option>, MatrixXpr, StorageKind>::type$/;"	c	namespace:Eigen
ProductImpl	tools/eigen/Eigen/src/Core/Product.h	/^class ProductImpl<Lhs,Rhs,Option,Dense>$/;"	c	namespace:Eigen
ProductType	tools/eigen/Eigen/src/Geometry/Transform.h	/^    typedef internal::transform_transform_product_impl<Transform,Transform<Scalar,Dim,OtherMode,OtherOptions> > ProductType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
ProductXpr	tools/eigen/Eigen/src/Core/Product.h	/^  typedef Product<Lhs,Rhs,Option> ProductXpr;$/;"	t	class:Eigen::internal::dense_product_base
ProjectionMode2D	tools/eigen/demos/opengl/gpuhelper.h	/^    enum ProjectionMode2D { PM_Normalized = 1, PM_Viewport = 2 };$/;"	g	class:GpuHelper
Projective	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Projective    = 0x20$/;"	e	enum:Eigen::TransformTraits
Projective2d	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Projective> Projective2d;$/;"	t	namespace:Eigen
Projective2f	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Projective> Projective2f;$/;"	t	namespace:Eigen
Projective3d	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Projective> Projective3d;$/;"	t	namespace:Eigen
Projective3f	tools/eigen/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Projective> Projective3f;$/;"	t	namespace:Eigen
PutMatrixElt	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void PutMatrixElt(Scalar value, int row, int col, std::ofstream& out)$/;"	f	namespace:Eigen::internal
PutMatrixElt	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void PutMatrixElt(std::complex<Scalar> value, int row, int col, std::ofstream& out)$/;"	f	namespace:Eigen::internal
Q	tools/eigen/doc/snippets/HessenbergDecomposition_matrixH.cpp	/^MatrixXf Q = hessOfA.matrixQ();$/;"	v
Q	tools/eigen/doc/snippets/HouseholderQR_householderQ.cpp	/^std::cout << "The complete unitary matrix Q is:\\n" << Q << "\\n\\n";$/;"	v
Q	tools/eigen/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp	/^MatrixXd Q = triOfA.matrixQ();$/;"	v
QRMatrixType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> QRMatrixType;$/;"	t	class:Eigen::SparseQR
QRPreconditioners	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum QRPreconditioners {$/;"	g	namespace:Eigen
QRSolver	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    typedef typename FunctorType::QRSolver QRSolver;$/;"	t	class:Eigen::LevenbergMarquardt
QRSolver	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef ColPivHouseholderQR<JacobianType> QRSolver;$/;"	t	struct:Eigen::DenseFunctor
QRSolver	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef SparseQR<JacobianType, COLAMDOrdering<int> > QRSolver;$/;"	t	struct:Eigen::SparseFunctor
QRType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef ColPivHouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef ColPivHouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef FullPivHouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef FullPivHouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef HouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef HouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QrType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^  typedef ColPivHouseholderQR<MatrixType> QrType;$/;"	t	struct:Eigen::internal::Assignment
QrType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef FullPivHouseholderQR<MatrixType> QrType;$/;"	t	struct:Eigen::internal::Assignment
Quaternion	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const AngleAxisType& aa) { *this = aa; }$/;"	f	class:Eigen::Quaternion
Quaternion	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const MatrixBase<Derived>& other) { *this = other; }$/;"	f	class:Eigen::Quaternion
Quaternion	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const Quaternion<OtherScalar, OtherOptions>& other)$/;"	f	class:Eigen::Quaternion
Quaternion	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const Scalar* data) : m_coeffs(data) {}$/;"	f	class:Eigen::Quaternion
Quaternion	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion() {}$/;"	f	class:Eigen::Quaternion
Quaternion	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion(const Scalar& w, const Scalar& x, const Scalar& y, const Scalar& z) : m_coeffs(x, y, z, w){}$/;"	f	class:Eigen::Quaternion
Quaternion	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_STRONG_INLINE Quaternion(const QuaternionBase<Derived>& other) { this->Base::operator=(other); }$/;"	f	class:Eigen::Quaternion
Quaternion	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^class Quaternion : public QuaternionBase<Quaternion<_Scalar,_Options> >$/;"	c	namespace:Eigen
QuaternionBase	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^class QuaternionBase : public RotationBase<Derived, 3>$/;"	c	namespace:Eigen
QuaternionDemo	tools/eigen/demos/opengl/quaternion_demo.cpp	/^QuaternionDemo::QuaternionDemo()$/;"	f	class:QuaternionDemo
QuaternionDemo	tools/eigen/demos/opengl/quaternion_demo.h	/^class QuaternionDemo : public QMainWindow$/;"	c
QuaternionMapAlignedd	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, Aligned>  QuaternionMapAlignedd;$/;"	t	namespace:Eigen
QuaternionMapAlignedf	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, Aligned>   QuaternionMapAlignedf;$/;"	t	namespace:Eigen
QuaternionMapd	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, 0>        QuaternionMapd;$/;"	t	namespace:Eigen
QuaternionMapf	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, 0>         QuaternionMapf;$/;"	t	namespace:Eigen
QuaternionType	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  typedef Quaternion<Scalar> QuaternionType;$/;"	t	class:Eigen::AngleAxis
QuaternionType	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  typedef Quaternion<Scalar> QuaternionType;$/;"	t	class:EulerAngles	file:
Quaterniond	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<double> Quaterniond;$/;"	t	namespace:Eigen
Quaternionf	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<float> Quaternionf;$/;"	t	namespace:Eigen
QuickSplit	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^Index QuickSplit(VectorV &row, VectorI &ind, Index ncut)$/;"	f	namespace:Eigen::internal
R	Top.hh	/^    mat R;$/;"	m	class:Top
R	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    UpperTriangularType R;$/;"	m	class:Eigen::HybridNonLinearSolver
RDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int RDims =$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
RDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  static const int RDims =$/;"	m	struct:Eigen::TensorEvaluator
RDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  static const int RDims =$/;"	m	struct:Eigen::TensorEvaluator
RDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  static const int RDims =$/;"	m	struct:Eigen::TensorEvaluator
REAL_SCALAR_SUFFIX	tools/eigen/blas/complex_double.cpp	13;"	d	file:
REAL_SCALAR_SUFFIX	tools/eigen/blas/complex_single.cpp	13;"	d	file:
REAL_SCALAR_SUFFIX	tools/eigen/lapack/complex_double.cpp	13;"	d	file:
REAL_SCALAR_SUFFIX	tools/eigen/lapack/complex_single.cpp	13;"	d	file:
REAL_TIMER	tools/eigen/bench/BenchTimer.h	/^  REAL_TIMER = 1$/;"	e	enum:Eigen::__anon733
REAL_TYPE	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	24;"	d
REF_ADD	tools/eigen/test/packetmath.cpp	95;"	d	file:
REF_DIV	tools/eigen/test/packetmath.cpp	98;"	d	file:
REF_MUL	tools/eigen/test/packetmath.cpp	97;"	d	file:
REF_SUB	tools/eigen/test/packetmath.cpp	96;"	d	file:
REPEAT	tools/eigen/bench/benchCholesky.cpp	19;"	d	file:
REPEAT	tools/eigen/bench/benchEigenSolver.cpp	20;"	d	file:
REPEAT	tools/eigen/bench/benchGeometry.cpp	11;"	d	file:
REPEAT	tools/eigen/bench/benchVecAdd.cpp	12;"	d	file:
REPEAT	tools/eigen/bench/bench_reverse.cpp	8;"	d	file:
REPEAT	tools/eigen/bench/benchmark.cpp	15;"	d	file:
REPEAT	tools/eigen/bench/benchmarkSlice.cpp	11;"	d	file:
REPEAT	tools/eigen/bench/benchmarkX.cpp	19;"	d	file:
REPEAT	tools/eigen/bench/benchmarkXcwise.cpp	18;"	d	file:
REPEAT	tools/eigen/bench/sparse_cholesky.cpp	20;"	d	file:
REPEAT	tools/eigen/bench/sparse_dense_product.cpp	15;"	d	file:
REPEAT	tools/eigen/bench/sparse_lu.cpp	20;"	d	file:
REPEAT	tools/eigen/bench/sparse_product.cpp	18;"	d	file:
REPEAT	tools/eigen/bench/sparse_randomsetter.cpp	19;"	d	file:
REPEAT	tools/eigen/bench/sparse_setter.cpp	15;"	d	file:
REPEAT	tools/eigen/bench/sparse_transpose.cpp	15;"	d	file:
REPEAT	tools/eigen/bench/sparse_trisolver.cpp	16;"	d	file:
REPEAT	tools/eigen/bench/vdw_new.cpp	15;"	d	file:
REPEAT	tools/eigen/unsupported/bench/bench_svd.cpp	25;"	d	file:
REPERE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	66;"	d
REPERE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	83;"	d
REWI	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI,/;"	v	program:CBLAT2
REWI	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI,/;"	v	program:CBLAT3
REWI	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI,/;"	v	program:DBLAT2
REWI	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI,/;"	v	program:DBLAT3
REWI	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI,/;"	v	program:SBLAT2
REWI	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI,/;"	v	program:SBLAT3
REWI	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI,/;"	v	program:ZBLAT2
REWI	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI,/;"	v	program:ZBLAT3
RHALF	tools/eigen/blas/testing/cblat2.f	/^      REAL               RZERO, RHALF,/;"	v	program:CBLAT2
RHALF	tools/eigen/blas/testing/cblat3.f	/^      REAL               RZERO, RHALF,/;"	v	program:CBLAT3
RHALF	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION   RZERO, RHALF,/;"	v	program:ZBLAT2
RHALF	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION   RZERO, RHALF,/;"	v	program:ZBLAT3
RIGHT	tools/eigen/blas/common.h	30;"	d
RONE	tools/eigen/blas/testing/cblat2.f	/^      REAL               RZERO, RHALF, RONE$/;"	v	program:CBLAT2
RONE	tools/eigen/blas/testing/cblat3.f	/^      REAL               RZERO, RHALF, RONE$/;"	v	program:CBLAT3
RONE	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION   RZERO, RHALF, RONE$/;"	v	program:ZBLAT2
RONE	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION   RZERO, RHALF, RONE$/;"	v	program:ZBLAT3
ROW_IS_ALIVE	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	125;"	d
ROW_IS_DEAD	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	123;"	d
ROW_IS_MARKED_DEAD	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	124;"	d
RZERO	tools/eigen/blas/testing/cblat2.f	/^      REAL               RZERO,/;"	v	program:CBLAT2
RZERO	tools/eigen/blas/testing/cblat3.f	/^      REAL               RZERO,/;"	v	program:CBLAT3
RZERO	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION   RZERO,/;"	v	program:ZBLAT2
RZERO	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION   RZERO,/;"	v	program:ZBLAT3
Random	tools/eigen/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random()$/;"	f	class:Eigen::DenseBase
Random	tools/eigen/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Random	tools/eigen/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index size)$/;"	f	class:Eigen::DenseBase
RandomAccessLinSpacedReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,PacketScalar,true>,PlainObject> RandomAccessLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
RandomAccessPattern	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^const int RandomAccessPattern       = 0x8 | OuterRandomAccessPattern | InnerRandomAccessPattern;$/;"	m	namespace:Eigen
RandomCpx	tools/eigen/unsupported/test/FFTW.cpp	/^std::complex<T> RandomCpx() { return std::complex<T>( (T)(rand()\/(T)RAND_MAX - .5), (T)(rand()\/(T)RAND_MAX - .5) ); }$/;"	f
RandomFill	tools/eigen/unsupported/doc/examples/FFT.cpp	/^void RandomFill(std::vector<T> & vec)$/;"	f
RandomFill	tools/eigen/unsupported/doc/examples/FFT.cpp	/^void RandomFill(std::vector<std::complex<T> > & vec)$/;"	f
RandomReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::scalar_random_op<Scalar>,PlainObject> RandomReturnType;$/;"	t	class:Eigen::DenseBase
RandomSetter	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    inline RandomSetter(SparseMatrixType& target)$/;"	f	class:Eigen::RandomSetter
RandomSetter	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^class RandomSetter$/;"	c	namespace:Eigen
ReadCost	tools/eigen/Eigen/src/Core/NumTraits.h	/^    ReadCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon581
ReadOnlyAccessors	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ReadOnlyAccessors, $/;"	e	enum:Eigen::AccessorLevels
ReadOnlyMapBase	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> ReadOnlyMapBase;$/;"	t	class:Eigen::MapBase
ReadOnlyMapBase	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> ReadOnlyMapBase;$/;"	t	class:Eigen::SparseMapBase
Real	tools/eigen/Eigen/src/Core/NumTraits.h	/^  typedef T Real;$/;"	t	struct:Eigen::GenericNumTraits
Real	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    typedef typename NumTraits<Scalar>::Real Real;$/;"	t	class:Eigen::AutoDiffScalar
Real	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef AutoDiffScalar<Matrix<typename NumTraits<typename DerType::Scalar>::Real,DerType::RowsAtCompileTime,DerType::ColsAtCompileTime> > Real;$/;"	t	struct:Eigen::NumTraits
Real	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef typename NumTraits<Scalar>::Real Real;$/;"	t	struct:Eigen::internal::auto_diff_special_op
RealPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RealScalar>::type RealPacket;$/;"	t	class:Eigen::internal::gebp_traits
RealPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacketSize  = Vectorizable ? packet_traits<RealScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
RealQZ	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      explicit RealQZ(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime) :$/;"	f	class:Eigen::RealQZ
RealQZ	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      explicit RealQZ(const MatrixType& A, const MatrixType& B, bool computeQZ = true) :$/;"	f	class:Eigen::RealQZ
RealQZ	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^  template<typename _MatrixType> class RealQZ$/;"	c	namespace:Eigen
RealReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type RealReturnType;$/;"	t
RealRowVectorType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, RealScalar>::type RealRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RealScalar	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LDLT
RealScalar	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LLT
RealScalar	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::llt_inplace
RealScalar	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::CholmodBase
RealScalar	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ArrayBase
RealScalar	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseBase
RealScalar	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseCoeffsBase
RealScalar	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::RealScalar RealScalar;$/;"	t	class:Eigen::DiagonalBase
RealScalar	tools/eigen/Eigen/src/Core/Dot.h	/^  typedef typename NumTraits<typename traits<Derived>::Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::lpNorm_selector
RealScalar	tools/eigen/Eigen/src/Core/IO.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::significant_decimals_default_impl
RealScalar	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MapBase
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::arg_default_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef bool RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::abs2_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::hypot_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_default_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_ref_default_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::norm1_default_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_default_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_ref_impl
RealScalar	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_default_impl
RealScalar	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixBase
RealScalar	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::PlainObjectBase
RealScalar	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointView
RealScalar	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::RealScalar RealScalar;$/;"	t	class:Eigen::VectorwiseOp
RealScalar	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexEigenSolver
RealScalar	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexSchur
RealScalar	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::EigenSolver
RealScalar	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
RealScalar	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::HessenbergDecomposition
RealScalar	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
RealScalar	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Tridiagonalization
RealScalar	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
RealScalar	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::Real               RealScalar;$/;"	t	class:Eigen::AlignedBox
RealScalar	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Hyperplane
RealScalar	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
RealScalar	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ParametrizedLine
RealScalar	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::QuaternionBase
RealScalar	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
RealScalar	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::BiCGSTAB
RealScalar	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ConjugateGradient
RealScalar	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::IncompleteLUT
RealScalar	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::IterativeSolverBase
RealScalar	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
RealScalar	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiRotation
RealScalar	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::FullPivLU
RealScalar	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::PartialPivLU
RealScalar	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::partial_lu_impl
RealScalar	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::PastixBase
RealScalar	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pastix_traits
RealScalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLDLT
RealScalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLLT
RealScalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLU
RealScalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoImpl
RealScalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pardiso_traits
RealScalar	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ColPivHouseholderQR
RealScalar	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::FullPivHouseholderQR
RealScalar	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::HouseholderQR
RealScalar	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SPQR
RealScalar	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::BDCSVD
RealScalar	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiSVD
RealScalar	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
RealScalar	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::SVDBase
RealScalar	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RealScalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholesky
RealScalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
RealScalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLDLT
RealScalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLLT
RealScalar	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector
RealScalar	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
RealScalar	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::CompressedStorage
RealScalar	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SparseMatrixBase
RealScalar	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename ResultType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
RealScalar	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::RealScalar RealScalar; $/;"	t	class:Eigen::SparseLU
RealScalar	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef typename ScalarVector::RealScalar RealScalar; $/;"	t	class:Eigen::internal::SparseLUImpl
RealScalar	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SparseQR
RealScalar	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperILU
RealScalar	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLU
RealScalar	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLUBase
RealScalar	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::UmfPackLU
RealScalar	tools/eigen/bench/bench_gemm.cpp	/^typedef NumTraits<Scalar>::Real RealScalar;$/;"	t	file:
RealScalar	tools/eigen/bench/geometry.cpp	/^typedef NumTraits<Scalar>::Real RealScalar;$/;"	t	file:
RealScalar	tools/eigen/blas/PackedSelfadjointProduct.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:internal::selfadjoint_packed_rank1_update
RealScalar	tools/eigen/blas/common.h	/^typedef NumTraits<Scalar>::Real RealScalar;$/;"	t
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Tensor
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorIndexTupleOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorTupleReducerOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorAssignOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorBroadcastingOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorChippingOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorConcatenationOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorConversionOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorConvolutionOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorCustomBinaryOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorCustomUnaryOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorEvalToOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorCwiseBinaryOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorCwiseNullaryOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorCwiseUnaryOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorSelectOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorFixedSize
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorForcedEvalOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorGeneratorOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorImagePatchOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorInflationOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorLayoutSwapOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorMap
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorReshapingOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorSlicingOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorPaddingOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorPatchOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorReductionOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorRef
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorReverseOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorShufflingOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorStridingOp
RealScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename Eigen::NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::TensorVolumePatchOp
RealScalar	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
RealScalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::DGMRES
RealScalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::GMRES
RealScalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar; $/;"	t	class:Eigen::IncompleteCholesky
RealScalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::MINRES
RealScalar	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    typedef typename JacobianType::RealScalar RealScalar; $/;"	t	class:Eigen::LevenbergMarquardt
RealScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::matrix_log_max_pade_degree
RealScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename Derived::RealScalar RealScalar;$/;"	t	class:Eigen::MatrixPowerReturnValue
RealScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::MatrixPower
RealScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::MatrixPowerAtomic
RealScalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::MatrixPowerParenthesesReturnValue
RealScalar	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef typename NumTraits<Scalar>::Real       RealScalar;$/;"	t	class:Eigen::internal::companion
RealScalar	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef typename NumTraits<Scalar>::Real    RealScalar;$/;"	t	class:Eigen::PolynomialSolverBase
RealScalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::SkylineInplaceLU
RealScalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SkylineMatrixBase
RealScalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SkylineStorage
RealScalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef Ref<typename BlockSparseMatrixT::BlockRealScalar> RealScalar;$/;"	t	class:Eigen::BlockSparseMatrixView
RealScalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::BlockSparseMatrix
RealScalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef Ref<Matrix<typename BlockSparseMatrixT::RealScalar, BlockSparseMatrixT::BlockSize, BlockSparseMatrixT::BlockSize> > RealScalar;$/;"	t	struct:Eigen::internal::traits
RealScalar	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixMarketIterator
RealSchur	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    explicit RealSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::RealSchur
RealSchur	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    explicit RealSchur(const MatrixType& matrix, bool computeU = true)$/;"	f	class:Eigen::RealSchur
RealSchur	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^template<typename _MatrixType> class RealSchur$/;"	c	namespace:Eigen
RealVectorType	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type RealVectorType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
RealVectorType	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  typedef typename internal::plain_col_type<MatrixType, RealScalar>::type RealVectorType;$/;"	t	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
RedPCA	tools/RedSVD.hh	/^		RedPCA() {}$/;"	f	class:RedSVD::RedPCA
RedPCA	tools/RedSVD.hh	/^		RedPCA(const MatrixType& A)$/;"	f	class:RedSVD::RedPCA
RedPCA	tools/RedSVD.hh	/^		RedPCA(const MatrixType& A, const Index rank)$/;"	f	class:RedSVD::RedPCA
RedPCA	tools/RedSVD.hh	/^	class RedPCA$/;"	c	namespace:RedSVD
RedSVD	tools/RedSVD.hh	/^		RedSVD() {}$/;"	f	class:RedSVD::RedSVD
RedSVD	tools/RedSVD.hh	/^		RedSVD(const MatrixType& A)$/;"	f	class:RedSVD::RedSVD
RedSVD	tools/RedSVD.hh	/^		RedSVD(const MatrixType& A, const Index rank)$/;"	f	class:RedSVD::RedSVD
RedSVD	tools/RedSVD.hh	/^	class RedSVD$/;"	c	namespace:RedSVD
RedSVD	tools/RedSVD.hh	/^namespace RedSVD$/;"	n
RedSymEigen	tools/RedSVD.hh	/^		RedSymEigen() {}$/;"	f	class:RedSVD::RedSymEigen
RedSymEigen	tools/RedSVD.hh	/^		RedSymEigen(const MatrixType& A)$/;"	f	class:RedSVD::RedSymEigen
RedSymEigen	tools/RedSVD.hh	/^		RedSymEigen(const MatrixType& A, const Index rank)$/;"	f	class:RedSVD::RedSymEigen
RedSymEigen	tools/RedSVD.hh	/^	class RedSymEigen$/;"	c	namespace:RedSVD
Reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  void Reduce(Index index, Index num_values_to_reduce, Scalar* data) {$/;"	f	class:Eigen::internal::BlockReducer
ReducingInnerMostDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool ReducingInnerMostDims = internal::are_inner_most_dims<Dims, NumInputDims, Layout>::value;$/;"	m	struct:Eigen::TensorEvaluator
ReduxReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    template<typename BinaryOp> struct ReduxReturnType$/;"	s	class:Eigen::VectorwiseOp
Ref	tools/eigen/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(PlainObjectBase<Derived>& expr,$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const DenseBase<Derived>& expr,$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const Ref& other) : Base(other) {$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const RefBase<OtherRef>& other) {$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/Core/Ref.h	/^template<typename PlainObjectType, int Options, typename StrideType> class Ref$/;"	c	namespace:Eigen
Ref	tools/eigen/Eigen/src/Core/Ref.h	/^template<typename TPlainObjectType, int Options, typename StrideType> class Ref<const TPlainObjectType, Options, StrideType>$/;"	c	namespace:Eigen
Ref	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(MappedSparseMatrix<MatScalar,OtherOptions,MatIndex>& expr)$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(SparseMatrix<MatScalar,OtherOptions,MatIndex>& expr)$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const Ref& other) : Base(other) {$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const RefBase<OtherRef>& other) {$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const SparseCompressedBase<Derived>& expr)$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const SparseMatrixBase<Derived>& expr)$/;"	f	class:Eigen::Ref
Ref	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^class Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType >$/;"	c	namespace:Eigen
Ref	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^class Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
RefBase	tools/eigen/Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC RefBase()$/;"	f	class:Eigen::RefBase
RefBase	tools/eigen/Eigen/src/Core/Ref.h	/^template<typename Derived> class RefBase$/;"	c	namespace:Eigen
RefactoredXpr	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename helper::Xpr RefactoredXpr;$/;"	t	struct:Eigen::internal::product_evaluator
RelErr	tools/eigen/bench/spbench/spbenchsolver.h	/^double RelErr; \/\/ Relative error of the computed solution$/;"	v
Relation	problem.hh	/^    Relation(const char* filename, const Entity& e1, const Entity& e2) {$/;"	f	class:Relation
Relation	problem.hh	/^class Relation {$/;"	c
RelativeErrorAndReductionTooSmall	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        RelativeErrorAndReductionTooSmall = 3,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RelativeErrorAndReductionTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        RelativeErrorAndReductionTooSmall = 3,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RelativeErrorTooSmall	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        RelativeErrorTooSmall = 2,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RelativeErrorTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        RelativeErrorTooSmall = 1,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
RelativeErrorTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        RelativeErrorTooSmall = 2,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RelativeReductionTooSmall	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        RelativeReductionTooSmall = 1,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RelativeReductionTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        RelativeReductionTooSmall = 1,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RemovedBits	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    RemovedBits = ~(EvalToRowMajor ? 0 : RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon12
RemovedBits	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        RemovedBits = ~((EvalToRowMajor ? 0 : RowMajorBit) | (ResultIsSkyline ? 0 : SkylineBit)),$/;"	e	enum:Eigen::internal::traits::__anon34
RenderingWidget	tools/eigen/demos/opengl/quaternion_demo.cpp	/^RenderingWidget::RenderingWidget()$/;"	f	class:RenderingWidget
RenderingWidget	tools/eigen/demos/opengl/quaternion_demo.h	/^class RenderingWidget : public QGLWidget$/;"	c
Replicate	tools/eigen/Eigen/src/Core/Replicate.h	/^    inline Replicate(const OriginalMatrixType& matrix, Index rowFactor, Index colFactor)$/;"	f	class:Eigen::Replicate
Replicate	tools/eigen/Eigen/src/Core/Replicate.h	/^    inline explicit Replicate(const OriginalMatrixType& matrix)$/;"	f	class:Eigen::Replicate
Replicate	tools/eigen/Eigen/src/Core/Replicate.h	/^template<typename MatrixType,int RowFactor,int ColFactor> class Replicate$/;"	c	namespace:Eigen
ReplicateReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef Replicate<ExpressionType,(isVertical?Dynamic:1),(isHorizontal?Dynamic:1)> ReplicateReturnType;$/;"	t	class:Eigen::VectorwiseOp
RequireInitialization	tools/eigen/Eigen/src/Core/NumTraits.h	/^    RequireInitialization = internal::is_arithmetic<T>::value ? 0 : 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon581
RequireInitialization	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    RequireInitialization = 1$/;"	e	enum:Eigen::NumTraits::__anon9
RequiredAlignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    RequiredAlignment = unpacket_traits<PacketType>::alignment$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon638
Res	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseResType>::type Res;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
ResPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResPacket ResPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
ResPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,ScalarPacket,Scalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize   = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
ResPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Traits::ResPacketSize$/;"	e	enum:Eigen::internal::gebp_kernel::__anon274
ResPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
ResPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
ResPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
ResPacketSize	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon266
ResPacketSize	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon267
ResScalar	tools/eigen/Eigen/src/Core/Dot.h	/^  typedef typename scalar_product_traits<typename traits<T>::Scalar,typename traits<U>::Scalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::dot_nocheck
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::gebp_kernel
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::tribb_kernel
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_triangular_product
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResScalar	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::triangular_matrix_vector_product
ResScalar	tools/eigen/blas/PackedTriangularMatrixVector.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:internal::packed_triangular_matrix_vector_product
Reset	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::Reset()$/;"	f	class:CSimpleIniTempl
Result	problem.hh	/^class Result {$/;"	c
ResultAlignment	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment     = traits<ResultType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon171
ResultAlignment	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment     = traits<ResultType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon172
ResultIsSkyline	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        ResultIsSkyline = ProductMode == SkylineTimeSkylineProduct,$/;"	e	enum:Eigen::internal::traits::__anon34
ResultMode	tools/eigen/Eigen/src/Geometry/Transform.h	/^  enum { ResultMode = transform_product_result<LhsMode,RhsMode>::Mode };$/;"	e	enum:Eigen::internal::transform_transform_product_impl::__anon710
ResultScalar	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    ResultScalar;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
ResultType	tools/eigen/Eigen/src/Geometry/Transform.h	/^    typedef typename ProductType::ResultType ResultType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
ResultType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,ResultMode,LhsOptions> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Projective,Options> ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef TransformType ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef typename MatrixType::PlainObject ResultType;$/;"	t	struct:Eigen::internal::transform_right_product_impl
ResultType	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef Block<MatrixType,Dynamic,Dynamic> ResultType;$/;"	t	class:Eigen::MatrixPowerAtomic
ReturnByValue	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^template<typename Derived> class ReturnByValue$/;"	c	namespace:Eigen
ReturnOpposite	tools/eigen/Eigen/src/Core/BandMatrix.h	/^        ReturnOpposite = (Options&SelfAdjoint) && (((Index)>0 && Supers==0) || ((Index)<0 && Subs==0)),$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon622
ReturnType	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::traits<Derived>::ReturnType ReturnType;$/;"	t	class:Eigen::ReturnByValue
ReturnType	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef typename internal::plain_matrix_type_column_major<Rhs>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^                      typename Scalar_=Scalar> struct ReturnType$/;"	s	class:Eigen::VectorwiseOp
ReturnType	tools/eigen/Eigen/src/Core/util/Meta.h	/^  typedef T ReturnType;$/;"	t	struct:Eigen::scalar_product_traits
ReturnType	tools/eigen/Eigen/src/Core/util/Meta.h	/^  typedef std::complex<T> ReturnType;$/;"	t	struct:Eigen::scalar_product_traits
ReturnType	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^  typedef MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::PlainObject ReturnType; \/\/ FIXME shall it be a BandMatrix?$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^                 MatrixTypeCleaned::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^                 Rhs::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,1> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,Dim> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^  typedef Transform<Scalar,Dim,Affine> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      typedef typename SPQRType::MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename CwiseUnaryOp<scalar_multiple2_op<T1, typename T2::Scalar>, T2>::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::scalar_product_traits
ReturnType	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^        SparseMatrix<Scalar,int(SrcStorageOrder)==RowMajor?ColMajor:RowMajor,StorageIndex> >::type ReturnType;$/;"	t	struct:Eigen::internal::permutation_matrix_product
ReturnType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename SparseQRType::MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/misc/Image.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/Eigen/src/misc/Kernel.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef AutoDiffScalar<DerType> ReturnType;$/;"	t	struct:Eigen::internal::scalar_product_traits
ReturnType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols> ReturnType;$/;"	t	struct:Eigen::internal::scalar_product_traits
ReturnType	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^  typedef Matrix<Scalar,Rows,Cols> ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^  typedef SparseMatrix<Scalar, 0, StorageIndex> ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^  typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^  typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^    typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^{ typedef typename Derived::PlainObject ReturnType; };$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^{ typedef typename MatrixPowerType::PlainObject ReturnType; };$/;"	t	struct:Eigen::internal::traits
ReturnType	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^  typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
Reverse	tools/eigen/Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC explicit inline Reverse(const MatrixType& matrix) : m_matrix(matrix) { }$/;"	f	class:Eigen::Reverse
Reverse	tools/eigen/Eigen/src/Core/Reverse.h	/^template<typename MatrixType, int Direction> class Reverse$/;"	c	namespace:Eigen
ReverseCol	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    ReverseCol = (Direction == Horizontal) || (Direction == BothDirections),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
ReverseCol	tools/eigen/Eigen/src/Core/Reverse.h	/^      ReverseCol = (Direction == Horizontal) || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon256
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    ReverseInnerIterator(const SparseCompressedBase& mat, Index outer)$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename Derived::ReverseInnerIterator ReverseInnerIterator;$/;"	t	struct:Eigen::internal::evaluator
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase<Derived>::ReverseInnerIterator$/;"	c	class:Eigen::SparseCompressedBase
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::ReverseInnerIterator ReverseInnerIterator;$/;"	t	class:Eigen::SparseMatrix
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^      EIGEN_STRONG_INLINE ReverseInnerIterator(const unary_evaluator& unaryOp, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::ReverseInnerIterator
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    class ReverseInnerIterator : public EvalReverseIterator$/;"	c	struct:Eigen::internal::unary_evaluator
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const TriangularViewType& view, Index outer)$/;"	f	class:Eigen::TriangularViewImpl::ReverseInnerIterator
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^class TriangularViewImpl<MatrixType,Mode,Sparse>::ReverseInnerIterator : public MatrixTypeNestedCleaned::ReverseInnerIterator$/;"	c	class:Eigen::TriangularViewImpl
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^	explicit ReverseInnerIterator(const SparseVector& vec, Index outer=0)$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^	explicit ReverseInnerIterator(const internal::CompressedStorage<Scalar,StorageIndex>& data)$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  typedef typename SparseVectorType::ReverseInnerIterator ReverseInnerIterator;$/;"	t	struct:Eigen::internal::evaluator
ReverseInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector<Scalar,_Options,_StorageIndex>::ReverseInnerIterator$/;"	c	class:Eigen::SparseVector
ReverseInnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    ReverseInnerIterator(const DynamicSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
ReverseInnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef typename SparseMatrixType::ReverseInnerIterator ReverseInnerIterator;$/;"	t	struct:Eigen::internal::evaluator
ReverseInnerIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^class DynamicSparseMatrix<Scalar,_Options,_StorageIndex>::ReverseInnerIterator : public SparseVector<Scalar,_Options,_StorageIndex>::ReverseInnerIterator$/;"	c	class:Eigen::DynamicSparseMatrix
ReversePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    ReversePacket = (Direction == BothDirections)$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
ReversePacket	tools/eigen/Eigen/src/Core/Reverse.h	/^      ReversePacket = (Direction == BothDirections)$/;"	e	enum:Eigen::Reverse::__anon256
ReverseReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef Reverse<Derived, BothDirections> ReverseReturnType;$/;"	t	class:Eigen::DenseBase
ReverseReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef Reverse<ExpressionType, Direction> ReverseReturnType;$/;"	t	class:Eigen::VectorwiseOp
ReverseRow	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    ReverseRow = (Direction == Vertical)   || (Direction == BothDirections),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon668
ReverseRow	tools/eigen/Eigen/src/Core/Reverse.h	/^      ReverseRow = (Direction == Vertical)   || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon256
Rhs	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_all<RhsType>::type Rhs;$/;"	t	class:Eigen::CwiseBinaryOp
Rhs	tools/eigen/Eigen/src/Core/Product.h	/^    typedef _Rhs Rhs;$/;"	t	class:Eigen::Product
Rhs	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,RhsMode,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseRhsType>::type Rhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
Rhs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Rhs = 0,$/;"	e	enum:Eigen::internal::__anon94
Rhs	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    typedef typename Traits::Rhs Rhs;$/;"	t	class:Eigen::KroneckerProductBase
Rhs	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^  typedef typename remove_all<_Rhs>::type Rhs;$/;"	t	struct:Eigen::internal::traits
RhsAlignment	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    RhsAlignment = RhsEtorType::Alignment,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
RhsBlasTraits	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::generic_product_impl
RhsBlasTraits	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
RhsBlasTraits	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
RhsCleaned	tools/eigen/Eigen/src/Core/Product.h	/^  typedef typename remove_all<Rhs>::type RhsCleaned;$/;"	t	struct:Eigen::internal::traits
RhsCoeffReadCost	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    RhsCoeffReadCost = RhsEtorType::CoeffReadCost,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
RhsCoeffReadCost	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        RhsCoeffReadCost = _RhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon34
RhsEtorType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<RhsNestedCleaned> RhsEtorType;$/;"	t	struct:Eigen::internal::product_evaluator
RhsEval	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<ActualRhs> RhsEval;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
RhsEvaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef evaluator<Rhs>  RhsEvaluator;$/;"	t	struct:Eigen::internal::binary_evaluator
RhsFlags	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    RhsFlags = evaluator<Rhs>::Flags,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon655
RhsFlags	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    RhsFlags = RhsEtorType::Flags,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
RhsFlags	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    RhsFlags = Rhs::Flags,$/;"	e	enum:Eigen::internal::traits::__anon12
RhsFlags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        RhsFlags = _RhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon34
RhsIsAligned	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    RhsIsAligned = int(RhsAlignment) >= int(unpacket_traits<PacketScalar>::alignment),$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
RhsIsSelfAdjoint	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsSelfAdjoint = (RhsMode&SelfAdjoint)==SelfAdjoint$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon286
RhsIsUpper	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsUpper = (RhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon286
RhsIsVectorAtCompileTime	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^      RhsIsVectorAtCompileTime = (Side==OnTheLeft ? Rhs::ColsAtCompileTime : Rhs::RowsAtCompileTime)==1$/;"	e	enum:Eigen::internal::trsolve_traits::__anon647
RhsIterator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<Rhs>::InnerIterator  RhsIterator;$/;"	t	struct:Eigen::internal::binary_evaluator
RhsMap	tools/eigen/blas/BandTriangularSolver.h	/^  typedef Map<Matrix<RhsScalar,Dynamic,1> > RhsMap;$/;"	t	struct:internal::band_solve_triangular_selector
RhsNested	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::ref_selector<RhsType>::type RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
RhsNested	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Rhs::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	tools/eigen/Eigen/src/Core/Product.h	/^    typedef typename internal::ref_selector<Rhs>::type RhsNested;$/;"	t	class:Eigen::Product
RhsNested	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::nested_eval<Rhs,Lhs::RowsAtCompileTime>::type RhsNested;$/;"	t	struct:Eigen::internal::product_evaluator
RhsNested	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNested;$/;"	t	struct:Eigen::internal::homogeneous_right_product_impl
RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename RhsXprType::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename RhsXprType::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename RhsXprType::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename KernelXprType::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename RhsXprType::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename RhsXprType::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef const typename internal::nested_eval<Rhs, Lhs::RowsAtCompileTime>::type RhsNested;$/;"	t	struct:Eigen::SkylineProductReturnType
RhsNestedCleaned	tools/eigen/Eigen/src/Core/Product.h	/^    typedef typename internal::remove_all<RhsNested>::type RhsNestedCleaned;$/;"	t	class:Eigen::Product
RhsNestedCleaned	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::remove_all<RhsNested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::product_evaluator
RhsNestedCleaned	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::triangular_solve_retval
RhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::RhsPacket RhsPacket;$/;"	t	struct:Eigen::internal::PossiblyRotatingKernelHelper
RhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::RhsPacket RhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
RhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacketType,Scalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
RhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
RhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
RhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
RhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
RhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon266
RhsPacketSize	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon267
RhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress   = Traits::RhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon274
RhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
RhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
RhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
RhsProgress	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
RhsRowMajor	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    RhsRowMajor = RhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
RhsScalar	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar RhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
RhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::RhsScalar RhsScalar;$/;"	t	struct:Eigen::internal::PossiblyRotatingKernelHelper
RhsScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
RhsScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_LhsScalar,_RhsScalar>::type RhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
RhsScalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Rhs::Scalar RhsScalar;$/;"	t	struct:Eigen::internal::generic_product_impl
RhsScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename internal::remove_const<typename EvalRightArgType::Scalar>::type RhsScalar;$/;"	t	struct:Eigen::TensorEvaluator
RhsScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef typename internal::remove_const<typename EvalRightArgType::Scalar>::type RhsScalar;$/;"	t	struct:Eigen::TensorEvaluator
RhsTraits	tools/eigen/Eigen/src/Core/Product.h	/^  typedef traits<RhsCleaned> RhsTraits;$/;"	t	struct:Eigen::internal::traits
RhsUpLo	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  enum { RhsUpLo = RhsMode&(Upper|Lower)  };$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon282
RhsVectors	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^      RhsVectors  = RhsIsVectorAtCompileTime ? 1 : Dynamic$/;"	e	enum:Eigen::internal::trsolve_traits::__anon648
RightArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef RightArgType_ RightArgType;$/;"	t	struct:Eigen::internal::traits
RightArgType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename internal::traits<Derived>::RightArgType RightArgType;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
RightColumn	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix<Scalar, Deg, 1>                 RightColumn;$/;"	t	class:Eigen::internal::companion
RightDimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename RightEvaluator::Dimensions RightDimensions;$/;"	t	struct:Eigen::TensorEvaluator
RightEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef TensorEvaluator<EvalRightArgType, Device> RightEvaluator;$/;"	t	struct:Eigen::TensorEvaluator
RightEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef TensorEvaluator<EvalRightArgType, Device> RightEvaluator;$/;"	t	struct:Eigen::TensorEvaluator
RightNumDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  static const int RightNumDims = internal::array_size<typename TensorEvaluator<RightArgType, Device>::Dimensions>::value;$/;"	m	struct:Eigen::TensorEvaluator
RightScaling	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    VectorXd& RightScaling()$/;"	f	class:Eigen::IterScaling
RootType	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef std::complex<RealScalar>            RootType;$/;"	t	class:Eigen::PolynomialSolverBase
RootsType	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef Matrix<RootType,_Deg,1>             RootsType;$/;"	t	class:Eigen::PolynomialSolverBase
Rotation2D	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  Rotation2D() {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  explicit inline Rotation2D(const Scalar& a) : m_angle(a) {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline explicit Rotation2D(const Rotation2D<OtherScalarType>& other)$/;"	f	class:Eigen::Rotation2D
Rotation2D	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^class Rotation2D : public RotationBase<Rotation2D<_Scalar>,2>$/;"	c	namespace:Eigen
Rotation2Dd	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<double> Rotation2Dd;$/;"	t	namespace:Eigen
Rotation2Df	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<float> Rotation2Df;$/;"	t	namespace:Eigen
RotationBase	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^class RotationBase$/;"	c	namespace:Eigen
RotationMatrixType	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,Dim> RotationMatrixType;$/;"	t	class:Eigen::RotationBase
RotationMode	tools/eigen/demos/opengl/quaternion_demo.h	/^    enum RotationMode {$/;"	g	class:RenderingWidget
RotationStable	tools/eigen/demos/opengl/quaternion_demo.h	/^      RotationStable,$/;"	e	enum:RenderingWidget::RotationMode
RotationStandard	tools/eigen/demos/opengl/quaternion_demo.h	/^      RotationStandard$/;"	e	enum:RenderingWidget::RotationMode
RoundReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_round_op<Scalar>, const Derived> RoundReturnType;$/;"	t
RowMajor	tools/eigen/Eigen/src/Core/util/Constants.h	/^  RowMajor = 0x1,  \/\/ it is only a coincidence that this is equal to RowMajorBit -- don't rely on that$/;"	e	enum:Eigen::__anon497
RowMajorBit	tools/eigen/Eigen/src/Core/util/Constants.h	/^const unsigned int RowMajorBit = 0x1;$/;"	m	namespace:Eigen
RowMatrixXd	tools/eigen/test/ref.cpp	/^typedef Matrix<double,Dynamic,Dynamic,RowMajor> RowMatrixXd;$/;"	t	file:
RowType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowType;$/;"	t	class:Eigen::JacobiSVD
RowVectorType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RowVectorType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
RowVectorType	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::HouseholderQR
RowVectorType	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, 1, ColsAtCompileTime> RowVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RowXpr	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::RowXpr RowXpr;$/;"	t	class:Eigen::MatrixBase
RowXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowXpr;$/;"	t
Rows	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    Rows    = traits<_Lhs>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon590
Rows	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { Rows = traits<T>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::promote_index_type::plain_matrix_type_column_major::__anon569
Rows	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { Rows = traits<T>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::promote_index_type::plain_matrix_type_row_major::__anon570
Rows	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    Rows = Lhs::RowsAtCompileTime$/;"	e	enum:Eigen::internal::homogeneous_right_product_refactoring_helper::__anon693
Rows	tools/eigen/Eigen/src/Geometry/Transform.h	/^    Rows = int(Mode)==(AffineCompact) ? Dim : HDim$/;"	e	enum:Eigen::Transform::__anon705
Rows	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    Rows = size_at_compile_time<traits<Lhs>::RowsAtCompileTime, traits<Rhs>::RowsAtCompileTime>::ret,$/;"	e	enum:Eigen::internal::traits::__anon11
RowsAtCompileTime	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon243
RowsAtCompileTime	tools/eigen/Eigen/src/Cholesky/LLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon244
RowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
RowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon623
RowsAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon624
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Block.h	/^    RowsAtCompileTime = MatrixRows == 0 ? 0 : BlockRows,$/;"	e	enum:Eigen::internal::traits::__anon246
RowsAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = PlainObjectType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon651
RowsAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = XprType::RowsAtCompileTime$/;"	e	enum:Eigen::internal::unary_evaluator::__anon661
RowsAtCompileTime	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = traits<XprType>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon660
RowsAtCompileTime	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    RowsAtCompileTime = traits<Ancestor>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon617
RowsAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon582
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Diagonal.h	/^    RowsAtCompileTime = (int(DiagIndex) == DynamicIndex || int(MatrixType::SizeAtCompileTime) == Dynamic) ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon389
RowsAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^      RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon250
RowsAtCompileTime	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon252
RowsAtCompileTime	tools/eigen/Eigen/src/Core/MapBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon587
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Matrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon293
RowsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon670
RowsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon672
RowsAtCompileTime	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    RowsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon671
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Product.h	/^    RowsAtCompileTime    = LhsTraits::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon391
RowsAtCompileTime	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    RowsAtCompileTime = LhsNestedCleaned::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Replicate.h	/^    RowsAtCompileTime = RowFactor==Dynamic || int(MatrixType::RowsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon261
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Reverse.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon255
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Select.h	/^    RowsAtCompileTime = ConditionMatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon373
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Transpose.h	/^    RowsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon374
RowsAtCompileTime	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon297
RowsAtCompileTime	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    RowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon577
RowsAtCompileTime	tools/eigen/Eigen/src/Core/Visitor.h	/^    RowsAtCompileTime = XprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::visitor_evaluator::__anon311
RowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon685
RowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon684
RowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon686
RowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon683
RowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^        RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon682
RowsAtCompileTime	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon681
RowsAtCompileTime	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    RowsAtCompileTime = Direction==Vertical  ?  RowsPlusOne : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon691
RowsAtCompileTime	tools/eigen/Eigen/src/Geometry/Transform.h	/^    RowsAtCompileTime = _Mode==Projective ? Dim1 : _Dim,$/;"	e	enum:Eigen::internal::traits::__anon704
RowsAtCompileTime	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^      RowsAtCompileTime = internal::traits<HouseholderSequence>::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon183
RowsAtCompileTime	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    RowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::RowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon182
RowsAtCompileTime	tools/eigen/Eigen/src/LU/FullPivLU.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon168
RowsAtCompileTime	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon166
RowsAtCompileTime	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon680
RowsAtCompileTime	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon678
RowsAtCompileTime	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon676
RowsAtCompileTime	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon164
RowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon161
RowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon157
RowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon158
RowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon159
RowsAtCompileTime	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon160
RowsAtCompileTime	tools/eigen/Eigen/src/SVD/SVDBase.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon162
RowsAtCompileTime	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon163
RowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon222
RowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon223
RowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
RowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      RowsAtCompileTime = internal::traits<SparseSelfAdjointView>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon192
RowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      RowsAtCompileTime = internal::traits<SparseSymmetricPermutationProduct>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseSymmetricPermutationProduct::__anon193
RowsAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    RowsAtCompileTime = IsColVector ? Dynamic : 1,$/;"	e	enum:Eigen::internal::traits::__anon226
RowsAtCompileTime	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^      RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon143
RowsAtCompileTime	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::SparseQRMatrixQReturnType::__anon144
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    RowsAtCompileTime = size_at_compile_time<traits<Lhs>::RowsAtCompileTime, traits<Rhs>::RowsAtCompileTime>::ret,$/;"	e	enum:Eigen::internal::traits::__anon12
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::MatrixPowerAtomic::__anon4
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon35
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        RowsAtCompileTime = _LhsNested::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon34
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      RowsAtCompileTime = BlockSparseMatrixT::RowsAtCompileTime,$/;"	e	enum:Eigen::BlockSparseMatrixView::__anon24
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::BlockSparseMatrix::__anon28
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      RowsAtCompileTime = VectorType::RowsAtCompileTime,$/;"	e	enum:Eigen::BlockVectorReturn::__anon26
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^      RowsAtCompileTime = VectorType::RowsAtCompileTime,$/;"	e	enum:Eigen::BlockVectorView::__anon25
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon23
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon27
RowsAtCompileTime	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon15
RowsBlockXpr	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowsBlockXpr;$/;"	t
RowsPlusOne	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    RowsPlusOne = (MatrixType::RowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon691
RowwiseReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Horizontal> RowwiseReturnType;$/;"	t	class:Eigen::DenseBase
Running	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        Running = -1,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
Running	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Running = -1,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
Running	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Running = -1,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RunningFullReduction	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool RunningFullReduction = (NumInputDims==NumReducedDims);$/;"	m	struct:Eigen::TensorEvaluator
RunningOnGPU	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool RunningOnGPU = false;$/;"	m	struct:Eigen::TensorEvaluator
RunningOnGPU	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool RunningOnGPU = internal::is_same<Device, Eigen::GpuDevice>::value;$/;"	m	struct:Eigen::TensorEvaluator
S	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^    S = IsLower ? 0     : I+1$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon649
SAME	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME,/;"	v	program:CBLAT2
SAME	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME,/;"	v	program:CBLAT3
SAME	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME,/;"	v	program:DBLAT2
SAME	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME,/;"	v	program:DBLAT3
SAME	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME,/;"	v	program:SBLAT2
SAME	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME,/;"	v	program:SBLAT3
SAME	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME,/;"	v	program:ZBLAT2
SAME	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME,/;"	v	program:ZBLAT3
SAccPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::AccPacket SAccPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SBEG	tools/eigen/blas/testing/sblat2.f	/^      REAL FUNCTION SBEG(/;"	f
SBEG	tools/eigen/blas/testing/sblat3.f	/^      REAL FUNCTION SBEG(/;"	f
SBLAT1	tools/eigen/blas/testing/sblat1.f	/^      PROGRAM SBLAT1$/;"	p
SBLAT2	tools/eigen/blas/testing/sblat2.f	/^      PROGRAM SBLAT2$/;"	p
SBLAT3	tools/eigen/blas/testing/sblat3.f	/^      PROGRAM SBLAT3$/;"	p
SCALAR	tools/eigen/bench/BenchSparseUtil.h	19;"	d
SCALAR	tools/eigen/bench/benchEigenSolver.cpp	28;"	d	file:
SCALAR	tools/eigen/bench/bench_gemm.cpp	22;"	d	file:
SCALAR	tools/eigen/bench/benchmark.cpp	19;"	d	file:
SCALAR	tools/eigen/bench/benchmarkSlice.cpp	15;"	d	file:
SCALAR	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	67;"	d
SCALAR	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	70;"	d
SCALAR	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	74;"	d
SCALAR	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	77;"	d
SCALAR	tools/eigen/bench/geometry.cpp	10;"	d	file:
SCALAR	tools/eigen/bench/spmv.cpp	4;"	d	file:
SCALAR	tools/eigen/bench/vdw_new.cpp	7;"	d	file:
SCALAR	tools/eigen/blas/complex_double.cpp	10;"	d	file:
SCALAR	tools/eigen/blas/complex_single.cpp	10;"	d	file:
SCALAR	tools/eigen/blas/double.cpp	11;"	d	file:
SCALAR	tools/eigen/blas/single.cpp	10;"	d	file:
SCALAR	tools/eigen/failtest/bdcsvd_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/bdcsvd_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/colpivqr_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/colpivqr_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/eigensolver_cplx.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/eigensolver_cplx.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/eigensolver_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/eigensolver_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/fullpivlu_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/fullpivlu_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/fullpivqr_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/fullpivqr_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/jacobisvd_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/jacobisvd_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/ldlt_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/ldlt_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/llt_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/llt_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/partialpivlu_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/partialpivlu_int.cpp	6;"	d	file:
SCALAR	tools/eigen/failtest/qr_int.cpp	4;"	d	file:
SCALAR	tools/eigen/failtest/qr_int.cpp	6;"	d	file:
SCALAR	tools/eigen/lapack/complex_double.cpp	10;"	d	file:
SCALAR	tools/eigen/lapack/complex_single.cpp	10;"	d	file:
SCALAR	tools/eigen/lapack/double.cpp	10;"	d	file:
SCALAR	tools/eigen/lapack/single.cpp	10;"	d	file:
SCALARA	tools/eigen/bench/bench_gemm.cpp	26;"	d	file:
SCALARB	tools/eigen/bench/bench_gemm.cpp	30;"	d	file:
SCALAR_PREFIX	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	68;"	d
SCALAR_PREFIX	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	71;"	d
SCALAR_PREFIX	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	75;"	d
SCALAR_PREFIX	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	78;"	d
SCALAR_SUFFIX	tools/eigen/blas/complex_double.cpp	11;"	d	file:
SCALAR_SUFFIX	tools/eigen/blas/complex_single.cpp	11;"	d	file:
SCALAR_SUFFIX	tools/eigen/blas/double.cpp	12;"	d	file:
SCALAR_SUFFIX	tools/eigen/blas/single.cpp	11;"	d	file:
SCALAR_SUFFIX	tools/eigen/lapack/complex_double.cpp	11;"	d	file:
SCALAR_SUFFIX	tools/eigen/lapack/complex_single.cpp	11;"	d	file:
SCALAR_SUFFIX	tools/eigen/lapack/double.cpp	11;"	d	file:
SCALAR_SUFFIX	tools/eigen/lapack/single.cpp	11;"	d	file:
SCALAR_SUFFIX_UP	tools/eigen/blas/complex_double.cpp	12;"	d	file:
SCALAR_SUFFIX_UP	tools/eigen/blas/complex_single.cpp	12;"	d	file:
SCALAR_SUFFIX_UP	tools/eigen/blas/double.cpp	13;"	d	file:
SCALAR_SUFFIX_UP	tools/eigen/blas/single.cpp	12;"	d	file:
SCALAR_SUFFIX_UP	tools/eigen/lapack/complex_double.cpp	12;"	d	file:
SCALAR_SUFFIX_UP	tools/eigen/lapack/complex_single.cpp	12;"	d	file:
SCALAR_SUFFIX_UP	tools/eigen/lapack/double.cpp	12;"	d	file:
SCALAR_SUFFIX_UP	tools/eigen/lapack/single.cpp	12;"	d	file:
SCHK1	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SCHK1(/;"	s
SCHK1	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE SCHK1(/;"	s
SCHK2	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SCHK2(/;"	s
SCHK2	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE SCHK2(/;"	s
SCHK3	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SCHK3(/;"	s
SCHK3	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE SCHK3(/;"	s
SCHK4	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SCHK4(/;"	s
SCHK4	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE SCHK4(/;"	s
SCHK5	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SCHK5(/;"	s
SCHK5	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE SCHK5(/;"	s
SCHK6	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SCHK6(/;"	s
SCHKE	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SCHKE(/;"	s
SCHKE	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE SCHKE(/;"	s
SCMatrix	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef internal::MappedSuperNodalMatrix<Scalar, StorageIndex> SCMatrix;$/;"	t	class:Eigen::SparseLU
SCRUTE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	58;"	d
SCRUTE	tools/eigen/bench/btl/generic_bench/utils/utilities.h	75;"	d
SDIFF	tools/eigen/blas/testing/cblat1.f	/^      REAL             FUNCTION SDIFF(/;"	f
SDIFF	tools/eigen/blas/testing/cblat2.f	/^      REAL               SDIFF$/;"	v	program:CBLAT2
SDIFF	tools/eigen/blas/testing/cblat2.f	/^      REAL FUNCTION SDIFF(/;"	f
SDIFF	tools/eigen/blas/testing/cblat3.f	/^      REAL               SDIFF$/;"	v	program:CBLAT3
SDIFF	tools/eigen/blas/testing/cblat3.f	/^      REAL FUNCTION SDIFF(/;"	f
SDIFF	tools/eigen/blas/testing/dblat1.f	/^      DOUBLE PRECISION FUNCTION SDIFF(/;"	f
SDIFF	tools/eigen/blas/testing/sblat1.f	/^      REAL             FUNCTION SDIFF(/;"	f
SDIFF	tools/eigen/blas/testing/sblat2.f	/^      REAL               SDIFF$/;"	v	program:SBLAT2
SDIFF	tools/eigen/blas/testing/sblat2.f	/^      REAL FUNCTION SDIFF(/;"	f
SDIFF	tools/eigen/blas/testing/sblat3.f	/^      REAL               SDIFF$/;"	v	program:SBLAT3
SDIFF	tools/eigen/blas/testing/sblat3.f	/^      REAL FUNCTION SDIFF(/;"	f
SDIFF	tools/eigen/blas/testing/zblat1.f	/^      DOUBLE PRECISION FUNCTION SDIFF(/;"	f
SDP_AsCwiseProduct	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  SDP_AsCwiseProduct$/;"	e	enum:Eigen::internal::__anon202
SDP_AsScalarProduct	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  SDP_AsScalarProduct,$/;"	e	enum:Eigen::internal::__anon202
SECOND	tools/eigen/lapack/second_NONE.f	/^      REAL FUNCTION SECOND(/;"	f
SFAC	tools/eigen/blas/testing/cblat1.f	/^      REAL             SFAC$/;"	v	program:CBLAT1
SFAC	tools/eigen/blas/testing/dblat1.f	/^      DOUBLE PRECISION SFAC$/;"	v	program:DBLAT1
SFAC	tools/eigen/blas/testing/sblat1.f	/^      REAL             SFAC$/;"	v	program:SBLAT1
SFAC	tools/eigen/blas/testing/zblat1.f	/^      DOUBLE PRECISION SFAC$/;"	v	program:ZBLAT1
SFATAL	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL,/;"	v	program:CBLAT2
SFATAL	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL,/;"	v	program:CBLAT3
SFATAL	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL,/;"	v	program:DBLAT2
SFATAL	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL,/;"	v	program:DBLAT3
SFATAL	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL,/;"	v	program:SBLAT2
SFATAL	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL,/;"	v	program:SBLAT3
SFATAL	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL,/;"	v	program:ZBLAT2
SFATAL	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL,/;"	v	program:ZBLAT3
SGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    inline SGroup() : Base() { }$/;"	f	class:Eigen::SGroup
SGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    inline SGroup(SGroup<Gen...>&& other) : Base(other) { }$/;"	f	class:Eigen::SGroup
SGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    inline SGroup(const SGroup<Gen...>& other) : Base(other) { }$/;"	f	class:Eigen::SGroup
SGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^class SGroup : public internal::tensor_symmetry_pre_analysis<internal::tensor_symmetry_num_indices<Gen...>::value, Gen...>::root_type$/;"	c	namespace:Eigen
SIDE	tools/eigen/blas/common.h	45;"	d
SIZE	tools/eigen/bench/BenchSparseUtil.h	11;"	d
SIZE	tools/eigen/bench/benchVecAdd.cpp	8;"	d	file:
SIZE	tools/eigen/bench/geometry.cpp	14;"	d	file:
SIZE	tools/eigen/bench/sparse_cholesky.cpp	12;"	d	file:
SIZE	tools/eigen/bench/sparse_dense_product.cpp	7;"	d	file:
SIZE	tools/eigen/bench/sparse_lu.cpp	12;"	d	file:
SIZE	tools/eigen/bench/sparse_product.cpp	10;"	d	file:
SIZE	tools/eigen/bench/sparse_randomsetter.cpp	11;"	d	file:
SIZE	tools/eigen/bench/sparse_setter.cpp	7;"	d	file:
SIZE	tools/eigen/bench/sparse_transpose.cpp	7;"	d	file:
SIZE	tools/eigen/bench/sparse_trisolver.cpp	8;"	d	file:
SIZE	tools/eigen/bench/vdw_new.cpp	11;"	d	file:
SIZE_LIN_LOG	tools/eigen/bench/btl/generic_bench/utils/size_lin_log.hh	21;"	d
SIZE_LOG	tools/eigen/bench/btl/generic_bench/utils/size_log.hh	21;"	d
SI_ASSERT	tools/SimpleIni.h	232;"	d
SI_ASSERT	tools/SimpleIni.h	234;"	d
SI_CHAR_T	tools/SimpleIni.h	/^    typedef SI_CHAR SI_CHAR_T;$/;"	t	class:CSimpleIniTempl
SI_CONVERT_GENERIC	tools/SimpleIni.h	2675;"	d
SI_CONVERT_WIN32	tools/SimpleIni.h	2673;"	d
SI_Case	tools/SimpleIni.h	2843;"	d
SI_Case	tools/SimpleIni.h	3051;"	d
SI_Case	tools/SimpleIni.h	3239;"	d
SI_ConvertA	tools/SimpleIni.h	/^    SI_ConvertA() { }$/;"	f	class:SI_ConvertA
SI_ConvertA	tools/SimpleIni.h	/^    SI_ConvertA(bool a_bStoreIsUtf8) : m_bStoreIsUtf8(a_bStoreIsUtf8) { }$/;"	f	class:SI_ConvertA
SI_ConvertA	tools/SimpleIni.h	/^    SI_ConvertA(const SI_ConvertA & rhs) { operator=(rhs); }$/;"	f	class:SI_ConvertA
SI_ConvertA	tools/SimpleIni.h	/^class SI_ConvertA {$/;"	c
SI_ConvertW	tools/SimpleIni.h	/^    SI_ConvertW() : m_pEncoding(NULL), m_pConverter(NULL) { }$/;"	f	class:SI_ConvertW
SI_ConvertW	tools/SimpleIni.h	/^    SI_ConvertW() { }$/;"	f	class:SI_ConvertW
SI_ConvertW	tools/SimpleIni.h	/^    SI_ConvertW(bool a_bStoreIsUtf8) : m_bStoreIsUtf8(a_bStoreIsUtf8) { }$/;"	f	class:SI_ConvertW
SI_ConvertW	tools/SimpleIni.h	/^    SI_ConvertW(bool a_bStoreIsUtf8) : m_pConverter(NULL) {$/;"	f	class:SI_ConvertW
SI_ConvertW	tools/SimpleIni.h	/^    SI_ConvertW(bool a_bStoreIsUtf8) {$/;"	f	class:SI_ConvertW
SI_ConvertW	tools/SimpleIni.h	/^    SI_ConvertW(const SI_ConvertW & rhs) { operator=(rhs); }$/;"	f	class:SI_ConvertW
SI_ConvertW	tools/SimpleIni.h	/^class SI_ConvertW {$/;"	c
SI_Error	tools/SimpleIni.h	/^enum SI_Error {$/;"	g
SI_FAIL	tools/SimpleIni.h	/^    SI_FAIL     = -1,   \/\/!< Generic failure$/;"	e	enum:SI_Error
SI_FILE	tools/SimpleIni.h	/^    SI_FILE     = -3    \/\/!< File error (see errno for detail error)$/;"	e	enum:SI_Error
SI_GenericCase	tools/SimpleIni.h	/^struct SI_GenericCase {$/;"	s
SI_GenericNoCase	tools/SimpleIni.h	/^struct SI_GenericNoCase {$/;"	s
SI_HAS_WIDE_FILE	tools/SimpleIni.h	263;"	d
SI_HAS_WIDE_FILE	tools/SimpleIni.h	266;"	d
SI_INSERTED	tools/SimpleIni.h	/^    SI_INSERTED =  2,   \/\/!< A new value was inserted$/;"	e	enum:SI_Error
SI_NEWLINE	tools/SimpleIni.h	3425;"	d
SI_NEWLINE	tools/SimpleIni.h	3429;"	d
SI_NEWLINE_A	tools/SimpleIni.h	251;"	d
SI_NEWLINE_A	tools/SimpleIni.h	254;"	d
SI_NEWLINE_W	tools/SimpleIni.h	252;"	d
SI_NEWLINE_W	tools/SimpleIni.h	255;"	d
SI_NOMEM	tools/SimpleIni.h	/^    SI_NOMEM    = -2,   \/\/!< Out of memory error$/;"	e	enum:SI_Error
SI_NO_MBCS	tools/SimpleIni.h	3244;"	d
SI_NoCase	tools/SimpleIni.h	/^struct SI_NoCase {$/;"	s
SI_NoCase	tools/SimpleIni.h	2844;"	d
SI_NoCase	tools/SimpleIni.h	3052;"	d
SI_NoCase	tools/SimpleIni.h	3250;"	d
SI_OK	tools/SimpleIni.h	/^    SI_OK       =  0,   \/\/!< No error$/;"	e	enum:SI_Error
SI_UPDATED	tools/SimpleIni.h	/^    SI_UPDATED  =  1,   \/\/!< An existing value was updated$/;"	e	enum:SI_Error
SI_UTF8_SIGNATURE	tools/SimpleIni.h	248;"	d
SI_WCHAR_T	tools/SimpleIni.h	264;"	d
SI_WCHAR_T	tools/SimpleIni.h	267;"	d
SLADIV	tools/eigen/lapack/sladiv.f	/^      SUBROUTINE SLADIV(/;"	s
SLAMC3	tools/eigen/lapack/slamch.f	/^      REAL             FUNCTION SLAMC3(/;"	f
SLAMCH	tools/eigen/lapack/slamch.f	/^      REAL             FUNCTION SLAMCH(/;"	f
SLAPY2	tools/eigen/lapack/slapy2.f	/^      REAL             FUNCTION SLAPY2(/;"	f
SLAPY3	tools/eigen/lapack/slapy3.f	/^      REAL             FUNCTION SLAPY3(/;"	f
SLARF	tools/eigen/lapack/slarf.f	/^      SUBROUTINE SLARF(/;"	s
SLARFB	tools/eigen/lapack/slarfb.f	/^      SUBROUTINE SLARFB(/;"	s
SLARFG	tools/eigen/lapack/slarfg.f	/^      SUBROUTINE SLARFG(/;"	s
SLARFT	tools/eigen/lapack/slarft.f	/^      SUBROUTINE SLARFT(/;"	s
SLhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::LhsPacket SLhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SMAKE	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SMAKE(/;"	s
SMAKE	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE SMAKE(/;"	s
SMMCH	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE SMMCH(/;"	s
SMVCH	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE SMVCH(/;"	s
SNAMES	tools/eigen/blas/testing/cblat2.f	/^      CHARACTER*6        SNAMES(/;"	v	program:CBLAT2
SNAMES	tools/eigen/blas/testing/cblat3.f	/^      CHARACTER*6        SNAMES(/;"	v	program:CBLAT3
SNAMES	tools/eigen/blas/testing/dblat2.f	/^      CHARACTER*6        SNAMES(/;"	v	program:DBLAT2
SNAMES	tools/eigen/blas/testing/dblat3.f	/^      CHARACTER*6        SNAMES(/;"	v	program:DBLAT3
SNAMES	tools/eigen/blas/testing/sblat2.f	/^      CHARACTER*6        SNAMES(/;"	v	program:SBLAT2
SNAMES	tools/eigen/blas/testing/sblat3.f	/^      CHARACTER*6        SNAMES(/;"	v	program:SBLAT3
SNAMES	tools/eigen/blas/testing/zblat2.f	/^      CHARACTER*6        SNAMES(/;"	v	program:ZBLAT2
SNAMES	tools/eigen/blas/testing/zblat3.f	/^      CHARACTER*6        SNAMES(/;"	v	program:ZBLAT3
SNAMET	tools/eigen/blas/testing/cblat2.f	/^      CHARACTER*6        SNAMET$/;"	v	program:CBLAT2
SNAMET	tools/eigen/blas/testing/cblat3.f	/^      CHARACTER*6        SNAMET$/;"	v	program:CBLAT3
SNAMET	tools/eigen/blas/testing/dblat2.f	/^      CHARACTER*6        SNAMET$/;"	v	program:DBLAT2
SNAMET	tools/eigen/blas/testing/dblat3.f	/^      CHARACTER*6        SNAMET$/;"	v	program:DBLAT3
SNAMET	tools/eigen/blas/testing/sblat2.f	/^      CHARACTER*6        SNAMET$/;"	v	program:SBLAT2
SNAMET	tools/eigen/blas/testing/sblat3.f	/^      CHARACTER*6        SNAMET$/;"	v	program:SBLAT3
SNAMET	tools/eigen/blas/testing/zblat2.f	/^      CHARACTER*6        SNAMET$/;"	v	program:ZBLAT2
SNAMET	tools/eigen/blas/testing/zblat3.f	/^      CHARACTER*6        SNAMET$/;"	v	program:ZBLAT3
SNAPS	tools/eigen/blas/testing/cblat2.f	/^      CHARACTER*32       SNAPS,/;"	v	program:CBLAT2
SNAPS	tools/eigen/blas/testing/cblat3.f	/^      CHARACTER*32       SNAPS,/;"	v	program:CBLAT3
SNAPS	tools/eigen/blas/testing/dblat2.f	/^      CHARACTER*32       SNAPS,/;"	v	program:DBLAT2
SNAPS	tools/eigen/blas/testing/dblat3.f	/^      CHARACTER*32       SNAPS,/;"	v	program:DBLAT3
SNAPS	tools/eigen/blas/testing/sblat2.f	/^      CHARACTER*32       SNAPS,/;"	v	program:SBLAT2
SNAPS	tools/eigen/blas/testing/sblat3.f	/^      CHARACTER*32       SNAPS,/;"	v	program:SBLAT3
SNAPS	tools/eigen/blas/testing/zblat2.f	/^      CHARACTER*32       SNAPS,/;"	v	program:ZBLAT2
SNAPS	tools/eigen/blas/testing/zblat3.f	/^      CHARACTER*32       SNAPS,/;"	v	program:ZBLAT3
SPARSELU_COLUMN_BMOD_H	tools/eigen/Eigen/src/SparseLU/SparseLU_column_bmod.h	32;"	d
SPARSELU_COLUMN_DFS_H	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	31;"	d
SPARSELU_COPY_TO_UCOL_H	tools/eigen/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	30;"	d
SPARSELU_HEAP_RELAX_SNODE_H	tools/eigen/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	29;"	d
SPARSELU_IMPL_H	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	10;"	d
SPARSELU_KERNEL_BMOD_H	tools/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	12;"	d
SPARSELU_PANEL_BMOD_H	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h	32;"	d
SPARSELU_PANEL_DFS_H	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	31;"	d
SPARSELU_PIVOTL_H	tools/eigen/Eigen/src/SparseLU/SparseLU_pivotL.h	31;"	d
SPARSELU_PRUNEL_H	tools/eigen/Eigen/src/SparseLU/SparseLU_pruneL.h	31;"	d
SPARSELU_RELAX_SNODE_H	tools/eigen/Eigen/src/SparseLU/SparseLU_relax_snode.h	29;"	d
SPARSE_COLETREE_H	tools/eigen/Eigen/src/SparseCore/SparseColEtree.h	32;"	d
SPBENCHSTYLE_H	tools/eigen/bench/spbench/spbenchstyle.h	11;"	d
SPD	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^  SPD = 0x100,$/;"	e	enum:Eigen::__anon30
SPMV_BENCH	tools/eigen/bench/spmv.cpp	11;"	d	file:
SPQR	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQR() $/;"	f	class:Eigen::SPQR
SPQR	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    explicit SPQR(const _MatrixType& matrix)$/;"	f	class:Eigen::SPQR
SPQR	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^class SPQR : public SparseSolverBase<SPQR<_MatrixType> >$/;"	c	namespace:Eigen
SPQRMatrixQReturnType	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQReturnType(const SPQRType& spqr) : m_spqr(spqr) {}$/;"	f	struct:Eigen::SPQRMatrixQReturnType
SPQRMatrixQReturnType	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQRMatrixQReturnType{$/;"	s	namespace:Eigen
SPQRMatrixQTransposeReturnType	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType(const SPQRType& spqr) : m_spqr(spqr) {}$/;"	f	struct:Eigen::SPQRMatrixQTransposeReturnType
SPQRMatrixQTransposeReturnType	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQRMatrixQTransposeReturnType{$/;"	s	namespace:Eigen
SPQR_QProduct	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct(const SPQRType& spqr, const Derived& other, bool transpose) : m_spqr(spqr),m_other(other),m_transpose(transpose) {}$/;"	f	struct:Eigen::SPQR_QProduct
SPQR_QProduct	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQR_QProduct : ReturnByValue<SPQR_QProduct<SPQRType,Derived> >$/;"	s	namespace:Eigen
SPQR_free	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void SPQR_free()$/;"	f	class:Eigen::SPQR
SQR	tools/eigen/unsupported/test/BVH.cpp	/^inline double SQR(double x) { return x * x; }$/;"	f
SRNAMC	tools/eigen/blas/testing/cblat2.f	116;"	c	program:CBLAT2
SRNAMC	tools/eigen/blas/testing/cblat2.f	3214;"	c	subroutine:XERBLA
SRNAMC	tools/eigen/blas/testing/cblat3.f	3412;"	c	subroutine:XERBLA
SRNAMC	tools/eigen/blas/testing/cblat3.f	95;"	c	program:CBLAT3
SRNAMC	tools/eigen/blas/testing/dblat2.f	112;"	c	program:DBLAT2
SRNAMC	tools/eigen/blas/testing/dblat2.f	3111;"	c	subroutine:XERBLA
SRNAMC	tools/eigen/blas/testing/dblat3.f	2796;"	c	subroutine:XERBLA
SRNAMC	tools/eigen/blas/testing/dblat3.f	89;"	c	program:DBLAT3
SRNAMC	tools/eigen/blas/testing/sblat2.f	112;"	c	program:SBLAT2
SRNAMC	tools/eigen/blas/testing/sblat2.f	3111;"	c	subroutine:XERBLA
SRNAMC	tools/eigen/blas/testing/sblat3.f	2796;"	c	subroutine:XERBLA
SRNAMC	tools/eigen/blas/testing/sblat3.f	89;"	c	program:SBLAT3
SRNAMC	tools/eigen/blas/testing/zblat2.f	117;"	c	program:ZBLAT2
SRNAMC	tools/eigen/blas/testing/zblat2.f	3222;"	c	subroutine:XERBLA
SRNAMC	tools/eigen/blas/testing/zblat3.f	3418;"	c	subroutine:XERBLA
SRNAMC	tools/eigen/blas/testing/zblat3.f	96;"	c	program:ZBLAT3
SRNAMT	tools/eigen/blas/testing/cblat2.f	/^      CHARACTER*6        SRNAMT$/;"	v	program:CBLAT2
SRNAMT	tools/eigen/blas/testing/cblat3.f	/^      CHARACTER*6        SRNAMT$/;"	v	program:CBLAT3
SRNAMT	tools/eigen/blas/testing/dblat2.f	/^      CHARACTER*6        SRNAMT$/;"	v	program:DBLAT2
SRNAMT	tools/eigen/blas/testing/dblat3.f	/^      CHARACTER*6        SRNAMT$/;"	v	program:DBLAT3
SRNAMT	tools/eigen/blas/testing/sblat2.f	/^      CHARACTER*6        SRNAMT$/;"	v	program:SBLAT2
SRNAMT	tools/eigen/blas/testing/sblat3.f	/^      CHARACTER*6        SRNAMT$/;"	v	program:SBLAT3
SRNAMT	tools/eigen/blas/testing/zblat2.f	/^      CHARACTER*6        SRNAMT$/;"	v	program:ZBLAT2
SRNAMT	tools/eigen/blas/testing/zblat3.f	/^      CHARACTER*6        SRNAMT$/;"	v	program:ZBLAT3
SResPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::ResPacket SResPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SResScalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::ResScalar SResScalar;$/;"	t	struct:Eigen::internal::gebp_kernel
SRhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::RhsPacket SRhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SSE	tools/eigen/Eigen/src/Core/util/Constants.h	/^    SSE = 0x1,$/;"	e	enum:Eigen::Architecture::Type
STD_GET_ARR_HACK	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	56;"	d
STD_GET_ARR_HACK	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	71;"	d
STEST	tools/eigen/blas/testing/cblat1.f	/^      SUBROUTINE STEST(/;"	s
STEST	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE STEST(/;"	s
STEST	tools/eigen/blas/testing/sblat1.f	/^      SUBROUTINE STEST(/;"	s
STEST	tools/eigen/blas/testing/zblat1.f	/^      SUBROUTINE STEST(/;"	s
STEST1	tools/eigen/blas/testing/cblat1.f	/^      SUBROUTINE STEST1(/;"	s
STEST1	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE STEST1(/;"	s
STEST1	tools/eigen/blas/testing/sblat1.f	/^      SUBROUTINE STEST1(/;"	s
STEST1	tools/eigen/blas/testing/zblat1.f	/^      SUBROUTINE STEST1(/;"	s
STL_INTERFACE_HH	tools/eigen/bench/btl/libs/STL/STL_interface.hh	21;"	d
STL_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/STL_perf_analyzer.hh	/^  STL_Perf_Analyzer( const STL_Perf_Analyzer & ){$/;"	f	class:STL_Perf_Analyzer
STL_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/STL_perf_analyzer.hh	/^  STL_Perf_Analyzer(unsigned long long nb_sample=DEFAULT_NB_SAMPLE):_nb_sample(nb_sample),_chronos()$/;"	f	class:STL_Perf_Analyzer
STL_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/STL_perf_analyzer.hh	/^class STL_Perf_Analyzer{$/;"	c
STL_Timer	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  STL_Timer(){ baseline = false; };  \/\/ Default constructor$/;"	f	class:STL_Timer
STL_Timer	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^class STL_Timer {$/;"	c
STL_interface	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^class STL_interface{$/;"	c
STORAGE_LAYOUT_DOES_NOT_MATCH	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        STORAGE_LAYOUT_DOES_NOT_MATCH$/;"	e	enum:Eigen::internal::static_assertion::__anon558
SUMMRY	tools/eigen/blas/testing/cblat2.f	/^      CHARACTER*32       SNAPS, SUMMRY$/;"	v	program:CBLAT2
SUMMRY	tools/eigen/blas/testing/cblat3.f	/^      CHARACTER*32       SNAPS, SUMMRY$/;"	v	program:CBLAT3
SUMMRY	tools/eigen/blas/testing/dblat2.f	/^      CHARACTER*32       SNAPS, SUMMRY$/;"	v	program:DBLAT2
SUMMRY	tools/eigen/blas/testing/dblat3.f	/^      CHARACTER*32       SNAPS, SUMMRY$/;"	v	program:DBLAT3
SUMMRY	tools/eigen/blas/testing/sblat2.f	/^      CHARACTER*32       SNAPS, SUMMRY$/;"	v	program:SBLAT2
SUMMRY	tools/eigen/blas/testing/sblat3.f	/^      CHARACTER*32       SNAPS, SUMMRY$/;"	v	program:SBLAT3
SUMMRY	tools/eigen/blas/testing/zblat2.f	/^      CHARACTER*32       SNAPS, SUMMRY$/;"	v	program:ZBLAT2
SUMMRY	tools/eigen/blas/testing/zblat3.f	/^      CHARACTER*32       SNAPS, SUMMRY$/;"	v	program:ZBLAT3
SVA_Inner	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  SVA_Inner,$/;"	e	enum:Eigen::internal::__anon227
SVA_Outer	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  SVA_Outer$/;"	e	enum:Eigen::internal::__anon227
SVA_RuntimeSwitch	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  SVA_RuntimeSwitch,$/;"	e	enum:Eigen::internal::__anon227
SVD	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef JacobiSVD<MatrixType, QRPreconditioner> SVD;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
SVDBase	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  SVDBase()$/;"	f	class:Eigen::SVDBase
SVDBase	tools/eigen/Eigen/src/SVD/SVDBase.h	/^class SVDBase$/;"	c	namespace:Eigen
SVD_DEFAULT	tools/eigen/test/bdcsvd.cpp	23;"	d	file:
SVD_DEFAULT	tools/eigen/test/jacobisvd.cpp	17;"	d	file:
SVD_DEFAULT	tools/eigen/test/svd_common.h	477;"	d
SVD_FOR_MIN_NORM	tools/eigen/test/bdcsvd.cpp	24;"	d	file:
SVD_FOR_MIN_NORM	tools/eigen/test/jacobisvd.cpp	18;"	d	file:
SVD_FOR_MIN_NORM	tools/eigen/test/svd_common.h	478;"	d
SameType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    SameType = is_same<typename Lhs::Scalar,typename Rhs::Scalar>::value,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon655
SameType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    SameType = is_same<typename LhsNestedCleaned::Scalar,typename RhsNestedCleaned::Scalar>::value,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
Save	tools/SimpleIni.h	/^    SI_Error Save($/;"	f	class:CSimpleIniTempl
Save	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::Save($/;"	f	class:CSimpleIniTempl
SaveFile	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::SaveFile($/;"	f	class:CSimpleIniTempl
Scalar	tools/RedSVD.hh	/^		typedef typename MatrixType::Scalar Scalar;$/;"	t	class:RedSVD::RedPCA
Scalar	tools/RedSVD.hh	/^		typedef typename MatrixType::Scalar Scalar;$/;"	t	class:RedSVD::RedSVD
Scalar	tools/RedSVD.hh	/^		typedef typename MatrixType::Scalar Scalar;$/;"	t	class:RedSVD::RedSymEigen
Scalar	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LDLT
Scalar	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LLT
Scalar	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::CholmodBase
Scalar	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::ArrayBase
Scalar	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::Scalar Scalar;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Scalar	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrix
Scalar	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixWrapper
Scalar	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixBase
Scalar	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::CommaInitializer
Scalar	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
Scalar	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename PlainObjectType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::block_evaluator
Scalar	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::mapbase_evaluator
Scalar	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  typedef typename internal::traits<XprType>::Scalar Scalar;$/;"	t	class:Eigen::InnerIterator
Scalar	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	class:Eigen::internal::inner_iterator_selector
Scalar	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseBase
Scalar	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseCoeffsBase
Scalar	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalMatrix
Scalar	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	class:Eigen::DiagonalBase
Scalar	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	tools/eigen/Eigen/src/Core/Matrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/MatrixBase.h	/^      typedef typename internal::scalar_product_traits<typename internal::traits<Derived>::Scalar,typename internal::traits<OtherDerived>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
Scalar	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MatrixBase
Scalar	tools/eigen/Eigen/src/Core/NoAlias.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::NoAlias
Scalar	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::Transpose
Scalar	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename _IndicesType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::PlainObjectBase
Scalar	tools/eigen/Eigen/src/Core/Product.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::dense_product_base
Scalar	tools/eigen/Eigen/src/Core/Product.h	/^  typedef typename Lhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::product_result_scalar
Scalar	tools/eigen/Eigen/src/Core/Product.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::product_result_scalar
Scalar	tools/eigen/Eigen/src/Core/Product.h	/^  typedef typename product_result_scalar<LhsCleaned,RhsCleaned>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/Product.h	/^  typedef typename scalar_product_traits<typename Lhs::Scalar, typename Rhs::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::product_result_scalar
Scalar	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^   typedef typename scalar_product_traits<typename MatrixType::Scalar, typename DiagonalType::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::diagonal_product_evaluator_base
Scalar	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	struct:Eigen::internal::product_evaluator
Scalar	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl_base
Scalar	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::product_evaluator
Scalar	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_impl
Scalar	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_novec_unroller
Scalar	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
Scalar	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::redux_evaluator
Scalar	tools/eigen/Eigen/src/Core/Replicate.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/Reverse.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::Scalar Scalar; $/;"	t	class:Eigen::SelfAdjointView
Scalar	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Scalar	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
Scalar	tools/eigen/Eigen/src/Core/Swap.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Scalar	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::TriangularBase
Scalar	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::Scalar Scalar;$/;"	t	class:Eigen::TriangularView
Scalar	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularViewType>::Scalar Scalar;$/;"	t	class:Eigen::TriangularViewImpl
Scalar	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Scalar	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Kernel::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
Scalar	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::VectorwiseOp
Scalar	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::result_type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar; $/;"	t	struct:Eigen::internal::max_coeff_visitor
Scalar	tools/eigen/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::coeff_visitor
Scalar	tools/eigen/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::min_coeff_visitor
Scalar	tools/eigen/Eigen/src/Core/Visitor.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::visitor_evaluator
Scalar	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  Scalar;$/;"	t	class:Eigen::internal::gebp_traits
Scalar	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
Scalar	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
Scalar	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef std::complex<RealScalar> Scalar;$/;"	t	struct:Eigen::internal::conj_helper
Scalar	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename NestedXpr::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexEigenSolver
Scalar	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexSchur
Scalar	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::EigenSolver
Scalar	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
Scalar	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HessenbergDecomposition
Scalar	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealQZ
Scalar	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealSchur
Scalar	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Scalar	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::Scalar Scalar;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
Scalar	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::Tridiagonalization
Scalar	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Scalar	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  typedef _Scalar                                   Scalar;$/;"	t	class:Eigen::AlignedBox
Scalar	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AngleAxis
Scalar	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Hyperplane
Scalar	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename traits<Derived>::Scalar Scalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Scalar	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::ParametrizedLine
Scalar	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::Map
Scalar	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Quaternion
Scalar	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::internal::quaternionbase_assign_impl
Scalar	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::QuaternionBase
Scalar	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Rotation2D
Scalar	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::RotationBase
Scalar	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::UniformScaling
Scalar	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Transform
Scalar	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/Geometry/Translation.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Translation
Scalar	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::traits<HouseholderSequence>::Scalar Scalar;$/;"	t	class:Eigen::HouseholderSequence
Scalar	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalPreconditioner
Scalar	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
Scalar	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::BiCGSTAB
Scalar	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ConjugateGradient
Scalar	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::IncompleteLUT
Scalar	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::IterativeSolverBase
Scalar	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Scalar	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::traits<SolveWithGuess>::Scalar Scalar;$/;"	t	class:Eigen::SolveWithGuess
Scalar	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::FullPivLU
Scalar	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::PartialPivLU
Scalar	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::PastixBase
Scalar	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pastix_traits
Scalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLDLT
Scalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLLT
Scalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLU
Scalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::PardisoImpl
Scalar	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pardiso_traits
Scalar	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ColPivHouseholderQR
Scalar	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::FullPivHouseholderQR
Scalar	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HouseholderQR
Scalar	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SPQR
Scalar	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef typename SPQRType::Scalar Scalar;$/;"	t	struct:Eigen::SPQR_QProduct
Scalar	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::BDCSVD
Scalar	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::JacobiSVD
Scalar	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Scalar	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
Scalar	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SVDBase
Scalar	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Scalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholesky
Scalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
Scalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLDLT
Scalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLLT
Scalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                             Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                         Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector
Scalar	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
Scalar	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::CompressedStorage
Scalar	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename LhsCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::MappedSparseMatrix
Scalar	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::binary_evaluator
Scalar	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Scalar	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename ProdXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
Scalar	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename SparseXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
Scalar	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SparseMapBase
Scalar	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SparseMatrixBase
Scalar	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeNestedCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::permutation_matrix_product
Scalar	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSelfAdjointView
Scalar	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
Scalar	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
Scalar	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::SparseTransposeImpl
Scalar	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Scalar	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
Scalar	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
Scalar	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::Scalar Scalar; $/;"	t	class:Eigen::SparseLU
Scalar	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MappedSupernodalType::Scalar Scalar;$/;"	t	struct:Eigen::SparseLUMatrixLReturnType
Scalar	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MatrixLType::Scalar Scalar;$/;"	t	struct:Eigen::SparseLUMatrixUReturnType
Scalar	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef _Scalar Scalar; $/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
Scalar	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typedef typename ScalarVector::Scalar Scalar;$/;"	t	struct:Eigen::internal::column_dfs_traits
Scalar	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseQR
Scalar	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename DstXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::Assignment
Scalar	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Scalar Scalar;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
Scalar	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Scalar Scalar;$/;"	t	struct:Eigen::SparseQR_QProduct
Scalar	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperILU
Scalar	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperLU
Scalar	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SuperLUBase
Scalar	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::UmfPackLU
Scalar	tools/eigen/bench/BenchSparseUtil.h	/^typedef SCALAR Scalar;$/;"	t
Scalar	tools/eigen/bench/benchBlasGemm.cpp	/^typedef double Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/benchBlasGemm.cpp	/^typedef float Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/benchCholesky.cpp	/^typedef float Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/benchEigenSolver.cpp	/^typedef SCALAR Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/benchVecAdd.cpp	/^typedef float Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/bench_gemm.cpp	/^typedef SCALAR Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/bench_reverse.cpp	/^typedef double Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^typedef MatrixType::Scalar Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/geometry.cpp	/^  typedef typename T::Scalar Scalar;$/;"	t	struct:ToRotationMatrixWrapper	file:
Scalar	tools/eigen/bench/geometry.cpp	/^typedef SCALAR Scalar;$/;"	t	file:
Scalar	tools/eigen/bench/perf_monitoring/gemm/gemm.cpp	/^typedef SCALAR Scalar;$/;"	t	file:
Scalar	tools/eigen/blas/common.h	/^typedef SCALAR Scalar;$/;"	t
Scalar	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  typedef _Scalar Scalar;$/;"	t	class:EulerAngles	file:
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef Scalar_ Scalar;$/;"	t	class:Eigen::Tensor
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef Index Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef Tuple<Index, typename XprTraits::Scalar> Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::internal::traits<TensorIndexTupleOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorIndexTupleOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::internal::traits<TensorTupleReducerOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorTupleReducerOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename Eigen::internal::traits<TensorAssignOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorAssignOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename LhsXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    typedef typename DerivedTraits::Scalar Scalar;$/;"	t	class:Eigen::TensorBase
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename Eigen::internal::traits<TensorBroadcastingOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorBroadcastingOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename Eigen::internal::traits<TensorChippingOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorChippingOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^                                        typename RhsXprType::Scalar>::ret Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    typedef typename internal::traits<TensorConcatenationOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorConcatenationOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^                                                  typename RhsXprType::Scalar>::ret Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename Eigen::internal::traits<TensorContractionOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorContractionOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename internal::remove_const<typename XprType::Scalar>::type Scalar;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename internal::remove_const<typename XprType::Scalar>::type Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef typename internal::remove_const<typename XprType::Scalar>::type Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef typename internal::remove_const<typename XprType::Scalar>::type Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typedef typename internal::traits<TensorConversionOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorConversionOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef TargetType Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef TargetType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^                                        typename KernelXprType::Scalar>::ret Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename Eigen::internal::traits<TensorConvolutionOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorConvolutionOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename InputArgType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^                                                  typename RhsXprType::Scalar>::ret Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^      typename internal::remove_const<typename ArgType::Scalar>::type Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomBinaryOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorCustomBinaryOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomUnaryOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorCustomUnaryOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename ArgType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename Eigen::internal::traits<TensorEvalToOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorEvalToOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^               typename RhsXprType::Scalar)>::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseBinaryOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorCwiseBinaryOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseNullaryOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorCwiseNullaryOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseUnaryOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorCwiseUnaryOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorSelectOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorSelectOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename result_of<UnaryOp(typename XprType::Scalar)>::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename traits<ThenXprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef Scalar_ Scalar;$/;"	t	class:Eigen::TensorFixedSize
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename ArgType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename Eigen::internal::traits<TensorForcedEvalOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorForcedEvalOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename Eigen::internal::traits<TensorGeneratorOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorGeneratorOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename Eigen::internal::traits<TensorImagePatchOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorImagePatchOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename internal::remove_const<typename XprType::Scalar>::type Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename internal::remove_const<typename XprType::Scalar>::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename Eigen::internal::traits<TensorInflationOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorInflationOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename Eigen::internal::traits<TensorLayoutSwapOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorLayoutSwapOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename internal::traits<PlainObjectType>::Scalar Scalar;$/;"	t	class:Eigen::TensorMap
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::traits<TensorReshapingOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorReshapingOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::traits<TensorSlicingOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorSlicingOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename Eigen::internal::traits<TensorPaddingOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorPaddingOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename Eigen::internal::traits<TensorPatchOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorPatchOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typedef typename Eigen::internal::traits<TensorReductionOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorReductionOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename Self::Scalar Scalar;$/;"	t	class:Eigen::internal::BlockReducer
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename internal::traits<PlainObjectType>::Scalar Scalar;$/;"	t	class:Eigen::TensorRef
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::TensorLazyEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::TensorLazyEvaluatorWritable
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  typedef typename TensorEvaluator<Expr, Device>::Scalar Scalar;$/;"	t	class:Eigen::internal::TensorLazyEvaluatorReadOnly
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename Eigen::internal::traits<TensorReverseOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorReverseOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename Eigen::internal::traits<TensorShufflingOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorShufflingOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename Eigen::internal::traits<TensorStridingOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorStridingOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef Scalar_ Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef typename BaseTraits::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename Eigen::internal::traits<TensorVolumePatchOp>::Scalar Scalar;$/;"	t	class:Eigen::TensorVolumePatchOp
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename internal::remove_const<typename XprType::Scalar>::type Scalar;$/;"	t	struct:Eigen::TensorEvaluator
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename internal::remove_const<typename XprType::Scalar>::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    typedef typename Tensor_::Scalar Scalar;$/;"	t	class:Eigen::internal::tensor_symmetry_value_setter
Scalar	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  typedef typename Tensor_::Scalar Scalar;$/;"	t	struct:Eigen::internal::tensor_symmetry_assign_value
Scalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename JacobianType::Scalar Scalar;$/;"	t	class:Eigen::AutoDiffJacobian
Scalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    typedef typename internal::traits<DerType>::Scalar Scalar;$/;"	t	class:Eigen::AutoDiffScalar
Scalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef typename traits<DerType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::auto_diff_special_op
Scalar	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef ActiveScalar Scalar;$/;"	t	class:Eigen::AutoDiffVector
Scalar	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  typedef typename Minimizer::Scalar Scalar;$/;"	t	struct:Eigen::internal::minimizer_helper1
Scalar	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  typedef typename Minimizer::Scalar Scalar;$/;"	t	struct:Eigen::internal::minimizer_helper2
Scalar	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::KdBVH
Scalar	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
Scalar	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::fftw_impl
Scalar	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::kiss_cpx_fft
Scalar	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::kissfft_impl
Scalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::DGMRES
Scalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::GMRES
Scalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::IncompleteLU
Scalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::MINRES
Scalar	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::IterScaling
Scalar	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::KroneckerProductBase
Scalar	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^  typedef typename scalar_product_traits<typename Lhs::Scalar, typename Rhs::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    typedef typename JacobianType::Scalar Scalar;$/;"	t	class:Eigen::LevenbergMarquardt
Scalar	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::DenseFunctor
Scalar	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::SparseFunctor
Scalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename Derived::Scalar Scalar;$/;"	t	class:Eigen::MatrixFunctionReturnValue
Scalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::MatrixFunctionAtomic
Scalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	class:Eigen::MatrixLogarithmReturnValue
Scalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::MatrixPower
Scalar	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::MatrixPowerAtomic
Scalar	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef typename Functor::Scalar Scalar;$/;"	t	class:Eigen::NumericalDiff
Scalar	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef _Scalar                                Scalar;$/;"	t	class:Eigen::internal::companion
Scalar	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef _Scalar                             Scalar;$/;"	t	class:Eigen::PolynomialSolverBase
Scalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SkylineInplaceLU
Scalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SkylineMatrixBase
Scalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename _LhsNested::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::skyline_product_selector
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef Ref<Matrix<typename VectorType::Scalar, RowsAtCompileTime, ColsAtCompileTime> > Scalar;$/;"	t	class:Eigen::BlockVectorReturn
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef Ref<const Matrix<typename BlockSparseMatrixT::Scalar, (RowsAtCompileTime==1)? 1 : BlockSize, (ColsAtCompileTime==1)? 1 : BlockSize> >Scalar;$/;"	t	class:Eigen::BlockVectorView
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef Ref<typename BlockSparseMatrixT::BlockScalar> Scalar;$/;"	t	class:Eigen::BlockSparseMatrixView
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::BlockSparseMatrix
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef Ref<Matrix<typename BlockSparseMatrixT::Scalar, BlockSparseMatrixT::BlockSize, BlockSparseMatrixT::BlockSize> > Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef typename BlockSparseMatrixT::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    typedef typename SparseMatrixType::Scalar Scalar;$/;"	t	class:Eigen::RandomSetter
Scalar	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    typedef _Scalar Scalar; \/*!< The spline curve's scalar type. *\/$/;"	t	class:Eigen::Spline
Scalar	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef _Scalar Scalar; \/*!< The spline curve's scalar type. *\/$/;"	t	struct:Eigen::SplineTraits
Scalar	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^  typedef double Scalar;$/;"	t	struct:PointPointMinimizer	file:
Scalar	tools/eigen/unsupported/test/BVH.cpp	/^  typedef double Scalar;$/;"	t	struct:BallPointStuff	file:
Scalar	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  typedef _Scalar Scalar;$/;"	t	struct:Functor	file:
Scalar	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  typedef _Scalar Scalar;$/;"	t	struct:Functor	file:
Scalar	tools/eigen/unsupported/test/autodiff.cpp	/^  typedef _Scalar Scalar;$/;"	t	struct:TestFunc1	file:
Scalar	tools/eigen/unsupported/test/forward_adolc.cpp	/^  typedef _Scalar Scalar;$/;"	t	struct:TestFunc1	file:
ScalarComplexMultipleReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_multiple2_op<Scalar,std::complex<Scalar> >, const Derived> ScalarComplexMultipleReturnType;$/;"	t
ScalarIsComplex	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^      ScalarIsComplex = NumTraits<Scalar>::IsComplex$/;"	e	enum:Eigen::PardisoImpl::__anon717
ScalarMatrix	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic,ColMajor> ScalarMatrix;$/;"	t	class:Eigen::internal::SparseLUImpl
ScalarMultipleReturnType	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper<const CwiseUnaryOp<internal::scalar_multiple_op<Scalar>, const DiagonalVectorType> > ScalarMultipleReturnType;$/;"	t	class:Eigen::DiagonalBase
ScalarMultipleReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_multiple_op<Scalar>, const Derived> ScalarMultipleReturnType;$/;"	t
ScalarPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type     ScalarPacket;$/;"	t	class:Eigen::internal::gebp_traits
ScalarPointer	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^                         Scalar *, const Scalar *>::type ScalarPointer;$/;"	t	class:Eigen::SparseMapBase
ScalarQuotient1ReturnType	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_quotient1_op<Scalar>, const Derived> ScalarQuotient1ReturnType;$/;"	t
ScalarReadCost	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    ScalarReadCost = NumTraits<typename traits<T>::Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::promote_index_type::nested_eval::__anon571
ScalarReadCostAsInteger	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    ScalarReadCostAsInteger = ScalarReadCost == Dynamic ? int(DynamicAsInteger) : int(ScalarReadCost),$/;"	e	enum:Eigen::internal::promote_index_type::nested_eval::__anon571
ScalarTraits	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  typedef NumTraits<Scalar>                         ScalarTraits;$/;"	t	class:Eigen::AlignedBox
ScalarTypeMatch	tools/eigen/Eigen/src/Core/Ref.h	/^      ScalarTypeMatch = internal::is_same<typename PlainObjectType::Scalar, typename Derived::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::match::__anon616
ScalarVector	tools/RedSVD.hh	/^		typedef typename Eigen::Matrix<Scalar, Eigen::Dynamic, 1> ScalarVector;$/;"	t	class:RedSVD::RedPCA
ScalarVector	tools/RedSVD.hh	/^		typedef typename Eigen::Matrix<Scalar, Eigen::Dynamic, 1> ScalarVector;$/;"	t	class:RedSVD::RedSVD
ScalarVector	tools/RedSVD.hh	/^		typedef typename Eigen::Matrix<Scalar, Eigen::Dynamic, 1> ScalarVector;$/;"	t	class:RedSVD::RedSymEigen
ScalarVector	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::ScalarVector ScalarVector;$/;"	t	class:Eigen::SparseMatrix
ScalarVector	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::SparseMatrixBase
ScalarVector	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::SparseLU
ScalarVector	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::internal::SparseLUImpl
ScalarVector	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
ScalarVector	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef Matrix<Scalar, Dynamic, 1> ScalarVector;$/;"	t	class:Eigen::SparseQR
ScalarWithConstIfNotLvalue	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::ArrayWrapper
ScalarWithConstIfNotLvalue	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MatrixWrapper
ScalarWithConstIfNotLvalue	tools/eigen/Eigen/src/Core/Diagonal.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::Diagonal
ScalarWithConstIfNotLvalue	tools/eigen/Eigen/src/Core/MapBase.h	/^                  >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MapBase
ScalarWithConstIfNotLvalue	tools/eigen/Eigen/src/Core/Transpose.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::TransposeImpl
ScalarWithExceptions	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions() { init(); }$/;"	f	class:ScalarWithExceptions
ScalarWithExceptions	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions(const ScalarWithExceptions& other) { init(); *v = *(other.v); }$/;"	f	class:ScalarWithExceptions
ScalarWithExceptions	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions(const float& _v) { init(); *v = _v; }$/;"	f	class:ScalarWithExceptions
ScalarWithExceptions	tools/eigen/test/exceptions.cpp	/^class ScalarWithExceptions$/;"	c	file:
ScalarWrapper	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      ScalarWrapper() : value(0) {}$/;"	f	struct:Eigen::RandomSetter::ScalarWrapper
ScalarWrapper	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    struct ScalarWrapper$/;"	s	class:Eigen::RandomSetter
Scaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^static inline DiagonalMatrix<Scalar,2> Scaling(const Scalar& sx, const Scalar& sy)$/;"	f	namespace:Eigen
Scaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^static inline DiagonalMatrix<Scalar,3> Scaling(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	namespace:Eigen
Scaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<double> Scaling(double s) { return UniformScaling<double>(s); }$/;"	f	namespace:Eigen
Scaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<float> Scaling(float s) { return UniformScaling<float>(s); }$/;"	f	namespace:Eigen
Scaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<std::complex<RealScalar> > Scaling(const std::complex<RealScalar>& s)$/;"	f	namespace:Eigen
Scaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^static inline const DiagonalWrapper<const Derived> Scaling(const MatrixBase<Derived>& coeffs)$/;"	f	namespace:Eigen
Schedule	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  void Schedule(std::function<void()> fn) {$/;"	f	class:Eigen::ThreadPool
Score_is_abs	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef void Score_is_abs;$/;"	t	struct:Eigen::internal::scalar_score_coeff_op
SegmentReturnType	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^typedef VectorBlock<Derived> SegmentReturnType;$/;"	t
Select	tools/eigen/Eigen/src/Core/Select.h	/^    Select(const ConditionMatrixType& a_conditionMatrix,$/;"	f	class:Eigen::Select
Select	tools/eigen/Eigen/src/Core/Select.h	/^class Select : public internal::dense_xpr_base< Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >::type,$/;"	c	namespace:Eigen
SelectSolvers	tools/eigen/bench/spbench/spbenchsolver.h	/^void SelectSolvers(const SparseMatrix<Scalar>&A, unsigned int sym, Matrix<Scalar, Dynamic, 1>& b, const Matrix<Scalar, Dynamic, 1>& refX, std::string& statFile)$/;"	f
Selector	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template <size_t N> struct Selector {$/;"	s	namespace:Eigen::internal
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef Tensor<Scalar_, NumIndices_, Options_, IndexType_> Self;$/;"	t	class:Eigen::Tensor
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorContractionSubMapper<Scalar, Index, side, Tensor, nocontract_t, contract_t, packet_size, inner_dim_contiguous, inner_dim_reordered, Alignment> Self;$/;"	t	class:Eigen::internal::TensorContractionSubMapper
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorEvaluator<const TensorContractionOp<Indices, LeftArgType, RightArgType>, Device> Self;$/;"	t	struct:Eigen::TensorEvaluator
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef TensorEvaluator<const TensorContractionOp<Indices, LeftArgType, RightArgType>, Device> Self;$/;"	t	struct:Eigen::TensorEvaluator
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef TensorEvaluator<const TensorContractionOp<Indices, LeftArgType, RightArgType>, Device> Self;$/;"	t	struct:Eigen::TensorEvaluator
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef TensorFixedSize<Scalar_, Dimensions_, Options_, IndexType> Self;$/;"	t	class:Eigen::TensorFixedSize
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^                          Device> Self;$/;"	t	struct:Eigen::TensorEvaluator
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef TensorMap<PlainObjectType, Options_> Self;$/;"	t	class:Eigen::TensorMap
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef TensorEvaluator<const TensorReductionOp<Op, Dims, ArgType>, Device> Self;$/;"	t	struct:Eigen::TensorEvaluator
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef TensorRef<PlainObjectType> Self;$/;"	t	class:Eigen::TensorRef
Self	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    typedef TensorStorage<T, DSizes<IndexType, NumIndices_>, Options_> Self;$/;"	t	class:Eigen::TensorStorage
SelfAdjoint	tools/eigen/Eigen/src/Core/util/Constants.h	/^  SelfAdjoint=0x10,$/;"	e	enum:Eigen::__anon492
SelfAdjointEigenSolver	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver()$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    explicit SelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    explicit SelfAdjointEigenSolver(const MatrixType& matrix, int options = ComputeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename _MatrixType> class SelfAdjointEigenSolver$/;"	c	namespace:Eigen
SelfAdjointShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct SelfAdjointShape       { static std::string debugName() { return "SelfAdjointShape"; } };$/;"	s	namespace:Eigen
SelfAdjointView	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    explicit inline SelfAdjointView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SelfAdjointView
SelfAdjointView	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^template<typename _MatrixType, unsigned int UpLo> class SelfAdjointView$/;"	c	namespace:Eigen
SelfAdjointViewReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
SelfAdjointViewReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SparseSelfAdjointView<Derived, UpLo> Type; };$/;"	s	class:Eigen::SparseMatrixBase
Sequential	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	e	enum:Eigen::Sequential_t
SequentialLinSpacedReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,PacketScalar,false>,PlainObject> SequentialLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
Sequential_t	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	g	namespace:Eigen
SetAction	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
SetBoolValue	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::SetBoolValue($/;"	f	class:CSimpleIniTempl
SetDiag	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon268
SetDiag	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon269
SetDoubleValue	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::SetDoubleValue($/;"	f	class:CSimpleIniTempl
SetLongValue	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::SetLongValue($/;"	f	class:CSimpleIniTempl
SetMultiKey	tools/SimpleIni.h	/^    void SetMultiKey(bool a_bAllowMultiKey = true) {$/;"	f	class:CSimpleIniTempl
SetMultiLine	tools/SimpleIni.h	/^    void SetMultiLine(bool a_bAllowMultiLine = true) {$/;"	f	class:CSimpleIniTempl
SetSpaces	tools/SimpleIni.h	/^    void SetSpaces(bool a_bSpaces = true) {$/;"	f	class:CSimpleIniTempl
SetUnicode	tools/SimpleIni.h	/^    void SetUnicode(bool a_bIsUtf8 = true) {$/;"	f	class:CSimpleIniTempl
SetValue	tools/SimpleIni.h	/^    SI_Error SetValue($/;"	f	class:CSimpleIniTempl
SetterRowMajor	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      SetterRowMajor = SwapStorage ? 1-TargetRowMajor : TargetRowMajor$/;"	e	enum:Eigen::RandomSetter::__anon22
Shape	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef BandShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename storage_kind_to_shape<typename traits<T>::StorageKind>::Shape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits_base
Shape	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<Dense>                  { typedef DenseShape Shape;           };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<PermutationStorage>     { typedef PermutationShape Shape;     };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<TranspositionsStorage>  { typedef TranspositionsShape Shape;  };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^template<> struct storage_kind_to_shape<DiagonalShape> { typedef DiagonalShape Shape; };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef SelfAdjointShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename glue_shapes<typename evaluator_traits<MatrixType>::Shape, TriangularShape>::type Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef HomogeneousShape Shape;  $/;"	t	struct:Eigen::internal::evaluator_traits
Shape	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequenceShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  typedef SparseShape Shape;$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef SparseSelfAdjointShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef SparseShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Side	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  enum { Side = Lhs::IsVectorAtCompileTime ? OnTheLeft : OnTheRight };$/;"	e	enum:Eigen::internal::generic_product_impl::__anon383
SignMatrix	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	g	namespace:Eigen::internal
SimplicialCholesky	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky() : Base(), m_LDLT(true) {}$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholesky	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialCholesky : public SimplicialCholeskyBase<SimplicialCholesky<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialCholesky	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialCholesky(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholeskyBase	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialCholeskyBase(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^class SimplicialCholeskyBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
SimplicialCholeskyLDLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLDLT$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyLLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLLT,$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyMode	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^enum SimplicialCholeskyMode {$/;"	g	namespace:Eigen
SimplicialLDLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT() : Base() {}$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLDLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLDLT : public SimplicialCholeskyBase<SimplicialLDLT<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialLDLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT() : Base() {}$/;"	f	class:Eigen::SimplicialLLT
SimplicialLLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLLT : public SimplicialCholeskyBase<SimplicialLLT<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialLLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialLLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
SinReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sin_op<Scalar>, const Derived> SinReturnType;$/;"	t
SingletonVector	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^        SingletonVector(Index i, Index v)$/;"	f	class:Eigen::SparseMatrix::SingletonVector
SingletonVector	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    class SingletonVector$/;"	c	class:Eigen::SparseMatrix
SingularValuesType	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::SingularValuesType SingularValuesType;$/;"	t	class:Eigen::BDCSVD
SingularValuesType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::SingularValuesType SingularValuesType;$/;"	t	class:Eigen::JacobiSVD
SingularValuesType	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  typedef typename internal::plain_diag_type<MatrixType, RealScalar>::type SingularValuesType;$/;"	t	class:Eigen::SVDBase
SinhReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sinh_op<Scalar>, const Derived> SinhReturnType;$/;"	t
Size	tools/eigen/Eigen/src/Core/Redux.h	/^    Size = Derived::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_impl::__anon636
Size	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon687
Size	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon690
Size	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon689
Size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  static const std::size_t Size = FixedDimensions::total_size;$/;"	m	class:Eigen::TensorStorage
SizeA	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeA = ActualRows * MaxDepth,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon278
SizeAtCompileTime	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      SizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime)$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon621
SizeAtCompileTime	tools/eigen/Eigen/src/Core/DenseBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon582
SizeAtCompileTime	tools/eigen/Eigen/src/Core/MapBase.h	/^      SizeAtCompileTime = Base::SizeAtCompileTime$/;"	e	enum:Eigen::MapBase::__anon587
SizeAtCompileTime	tools/eigen/Eigen/src/Core/Redux.h	/^    SizeAtCompileTime = XprType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon637
SizeAtCompileTime	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon297
SizeAtCompileTime	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
SizeAtCompileTime	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon38
SizeB	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeB = ActualCols * MaxDepth$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon278
SizeFromStore	tools/SimpleIni.h	/^    size_t SizeFromStore($/;"	f	class:SI_ConvertA
SizeFromStore	tools/SimpleIni.h	/^    size_t SizeFromStore($/;"	f	class:SI_ConvertW
SizeMinusOne	tools/eigen/Eigen/src/Core/MatrixBase.h	/^      SizeMinusOne = SizeAtCompileTime==Dynamic ? Dynamic : SizeAtCompileTime-1$/;"	e	enum:Eigen::MatrixBase::__anon372
SizeMinusOne	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : Size - 1,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon687
SizeMinusOne	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : (Size > 1 ? Size - 1 : 1),$/;"	e	enum:Eigen::Tridiagonalization::__anon689
SizeToStore	tools/SimpleIni.h	/^    size_t SizeToStore($/;"	f	class:SI_ConvertA
SizeToStore	tools/SimpleIni.h	/^    size_t SizeToStore($/;"	f	class:SI_ConvertW
Sizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  Sizes() { }$/;"	f	struct:Eigen::Sizes
Sizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  explicit Sizes(const array<DenseIndex, Base::count>& \/*indices*\/) {$/;"	f	struct:Eigen::Sizes
Sizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  explicit Sizes(std::initializer_list<std::ptrdiff_t> \/*l*\/) {$/;"	f	struct:Eigen::Sizes
Sizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  template <typename... DenseIndex> Sizes(DenseIndex...) { }$/;"	f	struct:Eigen::Sizes
Sizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct Sizes : internal::numeric_list<std::ptrdiff_t, Indices...> {$/;"	s	namespace:Eigen
SkipDiag	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipDiag = (Mode&ZeroDiag) ? 1 : 0,$/;"	e	enum:Eigen::TriangularViewImpl::__anon205
SkipDiag	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^         SkipDiag = (Mode&ZeroDiag) ? 1 : 0,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon206
SkipFirst	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    enum { SkipFirst = ((Mode&Lower) && !(MatrixType::Flags&RowMajorBit))$/;"	e	enum:Eigen::TriangularViewImpl::__anon205
SkipFirst	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  enum { SkipFirst = ((Mode&Lower) && !(ArgType::Flags&RowMajorBit))$/;"	e	enum:Eigen::internal::unary_evaluator::__anon206
SkipLast	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipLast = !SkipFirst,$/;"	e	enum:Eigen::TriangularViewImpl::__anon205
SkipLast	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^         SkipLast = !SkipFirst,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon206
SkipNewLine	tools/SimpleIni.h	/^    inline void SkipNewLine(SI_CHAR *& a_pData) const {$/;"	f	class:CSimpleIniTempl
SkylineBit	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^const unsigned int SkylineBit = 0x1200;$/;"	m	namespace:Eigen
SkylineInplaceLU	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    SkylineInplaceLU(MatrixType& matrix, int flags = 0)$/;"	f	class:Eigen::SkylineInplaceLU
SkylineInplaceLU	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^class SkylineInplaceLU {$/;"	c	namespace:Eigen
SkylineMatrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix()$/;"	f	class:Eigen::SkylineMatrix
SkylineMatrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix(const SkylineMatrix & other)$/;"	f	class:Eigen::SkylineMatrix
SkylineMatrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix(const SkylineMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SkylineMatrix
SkylineMatrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix(size_t rows, size_t cols)$/;"	f	class:Eigen::SkylineMatrix
SkylineMatrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^class SkylineMatrix$/;"	c	namespace:Eigen
SkylineMatrixBase	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    SkylineMatrixBase() : m_isRValue(false) {$/;"	f	class:Eigen::SkylineMatrixBase
SkylineMatrixBase	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^template<typename Derived> class SkylineMatrixBase : public EigenBase<Derived> {$/;"	c	namespace:Eigen
SkylineProduct	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE SkylineProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::internal::SkylineProduct
SkylineProduct	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^class SkylineProduct : no_assignment_operator,$/;"	c	namespace:Eigen::internal
SkylineProductReturnType	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^struct SkylineProductReturnType {$/;"	s	namespace:Eigen
SkylineStorage	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    SkylineStorage()$/;"	f	class:Eigen::SkylineStorage
SkylineStorage	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    SkylineStorage(const SkylineStorage& other)$/;"	f	class:Eigen::SkylineStorage
SkylineStorage	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^class SkylineStorage {$/;"	c	namespace:Eigen
SkylineTimeDenseProduct	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum AdditionalProductEvaluationMode {SkylineTimeDenseProduct, SkylineTimeSkylineProduct, DenseTimeSkylineProduct};$/;"	e	enum:Eigen::AdditionalProductEvaluationMode
SkylineTimeSkylineProduct	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum AdditionalProductEvaluationMode {SkylineTimeDenseProduct, SkylineTimeSkylineProduct, DenseTimeSkylineProduct};$/;"	e	enum:Eigen::AdditionalProductEvaluationMode
SliceVectorizedTraversal	tools/eigen/Eigen/src/Core/util/Constants.h	/^  SliceVectorizedTraversal,$/;"	e	enum:Eigen::__anon494
SluMatrix	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix()$/;"	f	struct:Eigen::SluMatrix
SluMatrix	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
SluMatrix	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrix : SuperMatrix$/;"	s	namespace:Eigen
SluMatrixMapHelper	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<Matrix<Scalar,Rows,Cols,Options,MRows,MCols> >$/;"	s	namespace:Eigen
SluMatrixMapHelper	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<SparseMatrixBase<Derived> >$/;"	s	namespace:Eigen
Small	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  Small = 3$/;"	e	enum:Eigen::__anon588
SmallPanelWidth	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = 2 * EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon268
SmallPanelWidth	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon269
Solve	tools/eigen/Eigen/src/Core/Solve.h	/^  Solve(const Decomposition &dec, const RhsType &rhs)$/;"	f	class:Eigen::Solve
Solve	tools/eigen/Eigen/src/Core/Solve.h	/^class Solve : public SolveImpl<Decomposition,RhsType,typename internal::traits<RhsType>::StorageKind>$/;"	c	namespace:Eigen
SolveImpl	tools/eigen/Eigen/src/Core/Solve.h	/^class SolveImpl : public internal::generic_xpr_base<Solve<Decomposition,RhsType>, MatrixXpr, StorageKind>::type$/;"	c	namespace:Eigen
SolveImpl	tools/eigen/Eigen/src/Core/Solve.h	/^class SolveImpl<Decomposition,RhsType,Dense>$/;"	c	namespace:Eigen
SolveType	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef Solve<Decomposition,RhsType> SolveType;$/;"	t	struct:Eigen::internal::evaluator
SolveType	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef SolveWithGuess<Decomposition,RhsType,GuessType> SolveType;$/;"	t	struct:Eigen::internal::evaluator
SolveWithGuess	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  SolveWithGuess(const Decomposition &dec, const RhsType &rhs, const GuessType &guess)$/;"	f	class:Eigen::SolveWithGuess
SolveWithGuess	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^class SolveWithGuess : public internal::generic_xpr_base<SolveWithGuess<Decomposition,RhsType,GuessType>, MatrixXpr, typename internal::traits<RhsType>::StorageKind>::type$/;"	c	namespace:Eigen
SpMat	tools/eigen/doc/special_examples/Tutorial_sparse_example.cpp	/^typedef Eigen::SparseMatrix<double> SpMat; \/\/ declares a column-major sparse matrix type of double$/;"	t	file:
SpMat	tools/eigen/doc/special_examples/Tutorial_sparse_example_details.cpp	/^typedef Eigen::SparseMatrix<double> SpMat; \/\/ declares a column-major sparse matrix type of double$/;"	t	file:
Span	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^  DenseIndex Spline<_Scalar, _Dim, _Degree>::Span($/;"	f	class:Eigen::Spline
Sparse	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct Sparse {};$/;"	s	namespace:Eigen
Sparse2Dense	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct Sparse2Dense  {};$/;"	s	namespace:Eigen::internal
Sparse2Sparse	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct Sparse2Sparse {};$/;"	s	namespace:Eigen::internal
SparseBase	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    typedef SparseMatrixBase<SparseVector> SparseBase;$/;"	t	class:Eigen::SparseVector
SparseCompressedBase	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase$/;"	c	namespace:Eigen
SparseFunctor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  SparseFunctor(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:Eigen::SparseFunctor
SparseFunctor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^struct SparseFunctor$/;"	s	namespace:Eigen
SparseLU	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    SparseLU():m_lastError(""),m_Ustore(0,0,0,0,0,0),m_symmetricmode(false),m_diagpivotthresh(1.0),m_detPermR(1)$/;"	f	class:Eigen::SparseLU
SparseLU	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    explicit SparseLU(const MatrixType& matrix):m_lastError(""),m_Ustore(0,0,0,0,0,0),m_symmetricmode(false),m_diagpivotthresh(1.0),m_detPermR(1)$/;"	f	class:Eigen::SparseLU
SparseLU	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^class SparseLU : public SparseSolverBase<SparseLU<_MatrixType,_OrderingType> >, public internal::SparseLUImpl<typename _MatrixType::Scalar, typename _MatrixType::StorageIndex>$/;"	c	namespace:Eigen
SparseLUImpl	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^class SparseLUImpl$/;"	c	namespace:Eigen::internal
SparseLUMatrixLReturnType	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  explicit SparseLUMatrixLReturnType(const MappedSupernodalType& mapL) : m_mapL(mapL)$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
SparseLUMatrixLReturnType	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^struct SparseLUMatrixLReturnType : internal::no_assignment_operator$/;"	s	namespace:Eigen
SparseLUMatrixUReturnType	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  explicit SparseLUMatrixUReturnType(const MatrixLType& mapL, const MatrixUType& mapU)$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
SparseLUMatrixUReturnType	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^struct SparseLUMatrixUReturnType : internal::no_assignment_operator$/;"	s	namespace:Eigen
SparseMapBase	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index rows, Index cols, Index nnz, IndexPointer outerIndexPtr, IndexPointer innerIndexPtr,$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr, StorageIndex* innerIndexPtr,$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^class SparseMapBase<Derived,ReadOnlyAccessors>$/;"	c	namespace:Eigen
SparseMapBase	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^class SparseMapBase<Derived,WriteAccessors>$/;"	c	namespace:Eigen
SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    SparseMatrix(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    explicit SparseMatrix(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseSelfAdjointView<OtherDerived, UpLo>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix$/;"	c	namespace:Eigen
SparseMatrixBase	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseMatrixBase() : m_isRValue(false) { \/* TODO check flags *\/ }$/;"	f	class:Eigen::SparseMatrixBase
SparseMatrixBase	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^template<typename Derived> class SparseMatrixBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
SparseMatrixType	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef SparseMatrix<Scalar,RowMajor,StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::PardisoImpl
SparseMatrixType	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  typedef SparseMatrix<_Scalar, _Options, _StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::BlockImpl
SparseMatrixType	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  typedef const SparseMatrix<_Scalar, _Options, _StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::BlockImpl
SparseMatrixType	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef SparseMatrix<_Scalar,_Options,_Index> SparseMatrixType;$/;"	t	struct:Eigen::internal::evaluator
SparseMatrixType	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef DynamicSparseMatrix<_Scalar,_Options,_StorageIndex> SparseMatrixType;$/;"	t	struct:Eigen::internal::evaluator
SparseQR	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    SparseQR () :  m_analysisIsok(false), m_lastError(""), m_useDefaultThreshold(true),m_isQSorted(false),m_isEtreeOk(false)$/;"	f	class:Eigen::SparseQR
SparseQR	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    explicit SparseQR(const MatrixType& mat) : m_analysisIsok(false), m_lastError(""), m_useDefaultThreshold(true),m_isQSorted(false),m_isEtreeOk(false)$/;"	f	class:Eigen::SparseQR
SparseQR	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^class SparseQR : public SparseSolverBase<SparseQR<_MatrixType,_OrderingType> >$/;"	c	namespace:Eigen
SparseQRMatrixQReturnType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  explicit SparseQRMatrixQReturnType(const SparseQRType& qr) : m_qr(qr) {}$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
SparseQRMatrixQReturnType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQRMatrixQReturnType : public EigenBase<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen
SparseQRMatrixQTransposeReturnType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  explicit SparseQRMatrixQTransposeReturnType(const SparseQRType& qr) : m_qr(qr) {}$/;"	f	struct:Eigen::SparseQRMatrixQTransposeReturnType
SparseQRMatrixQTransposeReturnType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQRMatrixQTransposeReturnType$/;"	s	namespace:Eigen
SparseQR_QProduct	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct(const SparseQRType& qr, const Derived& other, bool transpose) : $/;"	f	struct:Eigen::SparseQR_QProduct
SparseQR_QProduct	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQR_QProduct : ReturnByValue<SparseQR_QProduct<SparseQRType, Derived> >$/;"	s	namespace:Eigen
SparseRefBase	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  SparseRefBase()$/;"	f	class:Eigen::internal::SparseRefBase
SparseRefBase	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^template<typename Derived> class SparseRefBase$/;"	c	namespace:Eigen::internal
SparseSelfAdjoint2Sparse	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct SparseSelfAdjoint2Sparse {};$/;"	s	namespace:Eigen::internal
SparseSelfAdjointShape	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^struct SparseSelfAdjointShape { static std::string debugName() { return "SparseSelfAdjointShape"; } };$/;"	s	namespace:Eigen::internal
SparseSelfAdjointView	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    explicit inline SparseSelfAdjointView(const MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SparseSelfAdjointView
SparseSelfAdjointView	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<typename MatrixType, unsigned int _Mode> class SparseSelfAdjointView$/;"	c	namespace:Eigen
SparseShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct SparseShape            { static std::string debugName() { return "SparseShape"; } };$/;"	s	namespace:Eigen
SparseSolverBase	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^    SparseSolverBase()$/;"	f	class:Eigen::SparseSolverBase
SparseSolverBase	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^class SparseSolverBase : internal::noncopyable$/;"	c	namespace:Eigen
SparseSymmetricPermutationProduct	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct(const MatrixType& mat, const Perm& perm)$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
SparseSymmetricPermutationProduct	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class SparseSymmetricPermutationProduct$/;"	c	namespace:Eigen
SparseTransposeImpl	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^  class SparseTransposeImpl$/;"	c	namespace:Eigen::internal
SparseTransposeImpl	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^  class SparseTransposeImpl<MatrixType,CompressedAccessBit>$/;"	c	namespace:Eigen::internal
SparseTriangularShape	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^struct SparseTriangularShape  { static std::string debugName() { return "SparseTriangularShape"; } };$/;"	s	namespace:Eigen::internal
SparseVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    explicit inline SparseVector(Index size) : m_size(0) { check_template_parameters(); resize(size); }$/;"	f	class:Eigen::SparseVector
SparseVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector() : m_size(0) { check_template_parameters(); resize(0); }$/;"	f	class:Eigen::SparseVector
SparseVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(Index rows, Index cols) : m_size(0) { check_template_parameters(); resize(rows,cols); }$/;"	f	class:Eigen::SparseVector
SparseVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
SparseVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
SparseVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector$/;"	c	namespace:Eigen
SparseVectorType	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  typedef SparseVector<_Scalar,_Options,_Index> SparseVectorType;$/;"	t	struct:Eigen::internal::evaluator
SparseView	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  explicit SparseView(const MatrixType& mat, const Scalar& reference = Scalar(0),$/;"	f	class:Eigen::SparseView
SparseView	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^class SparseView : public SparseMatrixBase<SparseView<MatrixType> >$/;"	c	namespace:Eigen
SparseXprInnerIterator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename evaluator<SparseXprType>::InnerIterator SparseXprInnerIterator;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
SparseXprIter	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename evaluator<SparseXprType>::InnerIterator SparseXprIter;$/;"	t	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
Specialized	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Specialized,$/;"	e	enum:Eigen::__anon496
Spline	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    Spline() $/;"	f	class:Eigen::Spline
Spline	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    Spline(const OtherVectorType& knots, const OtherArrayType& ctrls) : m_knots(knots), m_ctrls(ctrls) {}$/;"	f	class:Eigen::Spline
Spline	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    Spline(const Spline<Scalar, Dimension, OtherDegree>& spline) : $/;"	f	class:Eigen::Spline
Spline	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^  class Spline$/;"	c	namespace:Eigen
Spline2d	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^    typedef Spline<double,2> Spline2d;$/;"	t	namespace:Eigen
Spline2f	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^    typedef Spline<float,2> Spline2f;$/;"	t	namespace:Eigen
Spline3d	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^    typedef Spline<double,3> Spline3d;$/;"	t	namespace:Eigen
Spline3f	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^    typedef Spline<float,3> Spline3f;$/;"	t	namespace:Eigen
SplineFitting	tools/eigen/unsupported/Eigen/src/Splines/SplineFitting.h	/^  struct SplineFitting$/;"	s	namespace:Eigen
SplineTraits	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^    struct SplineTraits< Spline<_Scalar, _Dim, _Degree>, Dynamic >$/;"	s	namespace:Eigen
SplineTraits	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^    struct SplineTraits< Spline<_Scalar, _Dim, _Degree>, _DerivativeOrder > : public SplineTraits< Spline<_Scalar, _Dim, _Degree> >$/;"	s	namespace:Eigen
SplineTraits	tools/eigen/unsupported/Eigen/src/Splines/SplineFwd.h	/^    template < typename SplineType, int DerivativeOrder = Dynamic > struct SplineTraits {};$/;"	s	namespace:Eigen
SqrtReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sqrt_op<Scalar>, const Derived> SqrtReturnType;$/;"	t
SquareMatrixType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::MatrixBase
SquareMatrixType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::SparseMatrixBase
SquareMatrixType	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^                           EIGEN_SIZE_MAX(RowsAtCompileTime, ColsAtCompileTime) > SquareMatrixType;$/;"	t	class:Eigen::SkylineMatrixBase
SquareReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_square_op<Scalar>, const Derived> SquareReturnType;$/;"	t
SquaredNormReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_squaredNorm,RealScalar>::Type SquaredNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
SrcAlignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    SrcAlignment = SrcEvaluator::Alignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon639
SrcCoeffRatio	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon260
SrcCoeffRatio	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon357
SrcCoeffRatio	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon358
SrcCoeffRatio	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon330
SrcCoeffRatio	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon331
SrcCoeffRatio	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon333
SrcCoeffRatio	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 2,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon332
SrcEvaluatorType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef SrcEvaluatorTypeT SrcEvaluatorType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
SrcEvaluatorType	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::SrcEvaluatorType SrcEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcEvaluatorType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::SrcEvaluatorType SrcEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcFlags	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    SrcFlags = SrcEvaluator::Flags,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon638
SrcHasDirectAccess	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      SrcHasDirectAccess = Src::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
SrcIsRowMajor	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    SrcIsRowMajor = SrcFlags&RowMajorBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon641
SrcStorageOrder	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^      SrcStorageOrder = MatrixTypeNestedCleaned::Flags&RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::permutation_matrix_product::__anon241
SrcType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename internal::remove_all<typename internal::traits<ArgType>::Scalar>::type SrcType;$/;"	t	struct:Eigen::TensorEvaluator
SrcXprType	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename SrcEvaluatorTypeT::XprType SrcXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
SrcXprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^                       const Product<Lhs,Rhs,DefaultProduct> > SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs,Rhs,Options> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::SrcXprType SrcXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcXprType	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef Solve<DecType,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef Product<Lhs,Rhs,DefaultProduct> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::SrcXprType SrcXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcXprType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Horizontal> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Vertical> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef SolveWithGuess<DecType,RhsType,GuessType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/LU/FullPivLU.h	/^  typedef Inverse<LuType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/LU/InverseImpl.h	/^  typedef Inverse<XprType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  typedef Inverse<LuType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^  typedef Inverse<QrType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef Inverse<QrType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  typedef Solve<DecType,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef SparseSymmetricPermutationProduct<MatrixType,Mode> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef SparseQRMatrixQReturnType<SparseQRType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
StableNormReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_stableNorm,RealScalar>::Type StableNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
StandardCompressedFormat	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  StandardCompressedFormat = 2$/;"	e	enum:Eigen::__anon198
StaticSGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr inline StaticSGroup() {}$/;"	f	class:Eigen::StaticSGroup
StaticSGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr inline StaticSGroup(StaticSGroup<Gen...>&&) {}$/;"	f	class:Eigen::StaticSGroup
StaticSGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr inline StaticSGroup(const StaticSGroup<Gen...>&) {}$/;"	f	class:Eigen::StaticSGroup
StaticSGroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^class StaticSGroup$/;"	c	namespace:Eigen
Status	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    enum Status {$/;"	g	namespace:Eigen::LevenbergMarquardtSpace
Status	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    enum Status {$/;"	g	namespace:Eigen::HybridNonLinearSolverSpace
Status	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    enum Status {$/;"	g	namespace:Eigen::LevenbergMarquardtSpace
StdMapTraits	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^template<typename Scalar> struct StdMapTraits$/;"	s	namespace:Eigen
StdUnorderedMapTraits	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^template<typename Scalar> struct StdUnorderedMapTraits$/;"	s	namespace:Eigen
StdVectorContainer	tools/eigen/unsupported/test/FFTW.cpp	/^enum { StdVectorContainer, EigenVectorContainer };$/;"	e	enum:__anon126	file:
StemFunction	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::MatrixBase
StemFunction	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename internal::stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::MatrixFunctionReturnValue
StemFunction	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::internal::MatrixFunctionAtomic
Storage	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef internal::CompressedStorage<Scalar,StorageIndex> Storage;$/;"	t	class:Eigen::SparseMatrix
Storage	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    typedef internal::CompressedStorage<Scalar,StorageIndex> Storage;$/;"	t	class:Eigen::SparseVector
StorageBaseType	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase StorageBaseType;$/;"	t	class:Eigen::ArrayBase
StorageBaseType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef MatrixBase StorageBaseType;$/;"	t	class:Eigen::MatrixBase
StorageBaseType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrixBase StorageBaseType;$/;"	t	class:Eigen::SparseMatrixBase
StorageIndex	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::LDLT
StorageIndex	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::LLT
StorageIndex	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::CholmodBase
StorageIndex	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
StorageIndex	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::dense_assignment_loop
StorageIndex	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::TridiagonalMatrix
StorageIndex	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename DenseMatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrixBase
StorageIndex	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrix
StorageIndex	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrixWrapper
StorageIndex	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/Block.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	class:Eigen::BlockImpl
StorageIndex	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename traits<ExpressionType>::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::evaluator_base
StorageIndex	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^                                      typename traits<Rhs>::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DenseBase
StorageIndex	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalBase
StorageIndex	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalMatrix
StorageIndex	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	class:Eigen::Inverse
StorageIndex	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::MapBase
StorageIndex	tools/eigen/Eigen/src/Core/Matrix.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::MatrixBase
StorageIndex	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Map
StorageIndex	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PermutationBase
StorageIndex	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PermutationMatrix
StorageIndex	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::Transpose
StorageIndex	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename _IndicesType::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/Product.h	/^                                      typename RhsTraits::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SelfAdjointView
StorageIndex	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef typename internal::traits<Solve>::StorageIndex StorageIndex;$/;"	t	class:Eigen::Solve
StorageIndex	tools/eigen/Eigen/src/Core/Solve.h	/^  typedef typename promote_index_type<typename Decomposition::StorageIndex, typename RhsType::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Map
StorageIndex	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Transpositions
StorageIndex	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::TranspositionsBase
StorageIndex	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::TranspositionsWrapper
StorageIndex	tools/eigen/Eigen/src/Core/Transpositions.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::TriangularBase
StorageIndex	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	class:Eigen::Transform
StorageIndex	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef typename Vector::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalPreconditioner
StorageIndex	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::IncompleteLUT
StorageIndex	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::IterativeSolverBase
StorageIndex	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::FullPivLU
StorageIndex	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::PartialPivLU
StorageIndex	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::PastixBase
StorageIndex	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::PastixLU
StorageIndex	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::pastix_traits
StorageIndex	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoLDLT
StorageIndex	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoLLT
StorageIndex	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoImpl
StorageIndex	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;    $/;"	t	struct:Eigen::internal::pardiso_traits
StorageIndex	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::pardiso_traits
StorageIndex	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::ColPivHouseholderQR
StorageIndex	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::FullPivHouseholderQR
StorageIndex	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::HouseholderQR
StorageIndex	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef UF_long StorageIndex ;$/;"	t	class:Eigen::SPQR
StorageIndex	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef typename SPQRType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::SPQR_QProduct
StorageIndex	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SVDBase
StorageIndex	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialCholesky
StorageIndex	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialCholeskyBase
StorageIndex	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialLDLT
StorageIndex	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialLLT
StorageIndex	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::StorageIndex                       StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::StorageIndex                   StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::AmbiVector
StorageIndex	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::CompressedStorage
StorageIndex	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::MappedSparseMatrix
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::BlockImpl
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::binary_evaluator
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename SparseXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseMapBase
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseMatrixBase
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeNestedCleaned::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::permutation_matrix_product
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseSelfAdjointView
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::SparseTransposeImpl
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^                                      typename traits<Rhs>::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
StorageIndex	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseLU
StorageIndex	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  typedef typename IndexVector::Scalar StorageIndex; $/;"	t	struct:Eigen::internal::LU_GlobalLU_t
StorageIndex	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
StorageIndex	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typedef typename IndexVector::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::column_dfs_traits
StorageIndex	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  typedef typename IndexVector::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::panel_dfs_traits
StorageIndex	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseQR
StorageIndex	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename ReturnType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::SuperLU
StorageIndex	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SuperLUBase
StorageIndex	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::UmfPackLU
StorageIndex	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef typename PermutationType::StorageIndex StorageIndex; $/;"	t	class:Eigen::IncompleteCholesky
StorageIndex	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^  typedef typename promote_index_type<typename Lhs::StorageIndex, typename Rhs::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::BlockSparseMatrix
StorageIndex	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    typedef typename SparseMatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::RandomSetter
StorageKind	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::ArrayBase
StorageKind	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^                                              BinaryOp>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseBase
StorageKind	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseCoeffsBase
StorageKind	tools/eigen/Eigen/src/Core/Diagonal.h	/^  typedef typename MatrixType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalBase
StorageKind	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalMatrix
StorageKind	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  typedef DiagonalShape StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/EigenBase.h	/^  typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	struct:Eigen::EigenBase
StorageKind	tools/eigen/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MapBase
StorageKind	tools/eigen/Eigen/src/Core/Matrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MatrixBase
StorageKind	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^  typedef PermutationStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::PlainObjectBase
StorageKind	tools/eigen/Eigen/src/Core/Product.h	/^                                                internal::product_type<Lhs,Rhs>::ret>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/Select.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/Transpositions.h	/^  typedef TranspositionsStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularBase
StorageKind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularView
StorageKind	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularViewType>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularViewImpl
StorageKind	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::traits<MatrixType>::StorageKind StorageKind;$/;"	t	class:Eigen::FullPivLU
StorageKind	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    typedef typename internal::traits<MatrixType>::StorageKind StorageKind;$/;"	t	class:Eigen::PartialPivLU
StorageKind	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::SparseMatrixBase
StorageKind	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename ReturnType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    typedef typename internal::traits<Self>::StorageKind StorageKind;$/;"	t	class:Eigen::Tensor
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::internal::traits<TensorIndexTupleOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorIndexTupleOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename Eigen::internal::traits<TensorTupleReducerOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorTupleReducerOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename Eigen::internal::traits<TensorAssignOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorAssignOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename traits<LhsXprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename Eigen::internal::traits<TensorBroadcastingOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorBroadcastingOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename Eigen::internal::traits<TensorChippingOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorChippingOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^                                        typename traits<RhsXprType>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    typedef typename internal::traits<TensorConcatenationOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorConcatenationOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^                                        typename traits<RhsXprType>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename Eigen::internal::traits<TensorContractionOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorContractionOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typedef typename internal::traits<TensorConversionOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorConversionOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename traits<XprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^                                        typename traits<KernelXprType>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename Eigen::internal::traits<TensorConvolutionOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorConvolutionOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^                                        typename traits<RhsXprType>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename XprType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomBinaryOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorCustomBinaryOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename internal::traits<TensorCustomUnaryOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorCustomUnaryOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename Eigen::internal::traits<TensorEvalToOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorEvalToOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^                                        typename traits<ElseXprType>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^      typename traits<RhsXprType>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseBinaryOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorCwiseBinaryOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseNullaryOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorCwiseNullaryOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorCwiseUnaryOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorCwiseUnaryOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typedef typename Eigen::internal::traits<TensorSelectOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorSelectOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    typedef typename internal::traits<Self>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorFixedSize
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename Eigen::internal::traits<TensorForcedEvalOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorForcedEvalOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename traits<XprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename Eigen::internal::traits<TensorGeneratorOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorGeneratorOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename Eigen::internal::traits<TensorImagePatchOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorImagePatchOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename Eigen::internal::traits<TensorInflationOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorInflationOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename Eigen::internal::traits<TensorLayoutSwapOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorLayoutSwapOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    typedef typename internal::traits<PlainObjectType>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorMap
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::traits<TensorReshapingOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorReshapingOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename Eigen::internal::traits<TensorSlicingOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorSlicingOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename Eigen::internal::traits<TensorPaddingOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorPaddingOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename Eigen::internal::traits<TensorPatchOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorPatchOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typedef typename Eigen::internal::traits<TensorReductionOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorReductionOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef typename traits<XprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    typedef typename internal::traits<PlainObjectType>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorRef
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^                                                                    StorageKind;$/;"	t	class:Eigen::TensorReverseOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename Eigen::internal::traits<TensorShufflingOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorShufflingOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename Eigen::internal::traits<TensorStridingOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorStridingOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef typename BaseTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename Eigen::internal::traits<TensorVolumePatchOp>::StorageKind StorageKind;$/;"	t	class:Eigen::TensorVolumePatchOp
StorageKind	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename XprTraits::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^  typedef typename cwise_promote_storage_type<typename traits<Lhs>::StorageKind, typename traits<Rhs>::StorageKind, scalar_product_op<typename Lhs::Scalar, typename Rhs::Scalar> >::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::SkylineMatrixBase
StorageKind	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef Sparse StorageKind; \/\/ FIXME Where is it used ??$/;"	t	struct:Eigen::internal::traits
StorageKind	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageOrder	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    StorageOrder = int(Rhs::Flags) & RowMajorBit ? RowMajor : ColMajor$/;"	e	enum:Eigen::internal::product_evaluator::__anon387
StorageOrder	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  enum { StorageOrder = int(Lhs::Flags) & RowMajorBit ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::product_evaluator::__anon388
StorageOrderMatch	tools/eigen/Eigen/src/Core/Ref.h	/^      StorageOrderMatch = PlainObjectType::IsVectorAtCompileTime || Derived::IsVectorAtCompileTime || ((PlainObjectType::Flags&RowMajorBit)==(Derived::Flags&RowMajorBit)),$/;"	e	enum:Eigen::internal::traits::match::__anon616
StorageOrderMatch	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^      StorageOrderMatch = PlainObjectType::IsVectorAtCompileTime || Derived::IsVectorAtCompileTime || ((PlainObjectType::Flags&RowMajorBit)==(Derived::Flags&RowMajorBit)),$/;"	e	enum:Eigen::internal::traits::match::__anon200
StorageOrdersAgree	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    StorageOrdersAgree = (int(DstIsRowMajor) == int(SrcIsRowMajor)),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon641
StorageOrdersAgree	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      StorageOrdersAgree = (int(Dst::IsRowMajor) == int(Src::IsRowMajor)),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
StorageOrdersAgree	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    StorageOrdersAgree = (int(LhsFlags)&RowMajorBit)==(int(RhsFlags)&RowMajorBit),$/;"	e	enum:Eigen::internal::binary_evaluator::__anon655
StorageOrdersMatch	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon171
StorageOrdersMatch	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon172
StreamInterface	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^class StreamInterface {$/;"	c	namespace:Eigen
StreamPrecision	tools/eigen/Eigen/src/Core/IO.h	/^enum { StreamPrecision = -1,$/;"	e	enum:Eigen::__anon378
StreamWriter	tools/SimpleIni.h	/^        StreamWriter(std::ostream & a_ostream) : m_ostream(a_ostream) { }$/;"	f	class:CSimpleIniTempl::StreamWriter
StreamWriter	tools/SimpleIni.h	/^    class StreamWriter : public OutputWriter {$/;"	c	class:CSimpleIniTempl
StrictlyLower	tools/eigen/Eigen/src/Core/util/Constants.h	/^  StrictlyLower=ZeroDiag|Lower, $/;"	e	enum:Eigen::__anon492
StrictlyUpper	tools/eigen/Eigen/src/Core/util/Constants.h	/^  StrictlyUpper=ZeroDiag|Upper,$/;"	e	enum:Eigen::__anon492
Stride	tools/eigen/Eigen/src/Core/Stride.h	/^    Stride()$/;"	f	class:Eigen::Stride
Stride	tools/eigen/Eigen/src/Core/Stride.h	/^    Stride(Index outerStride, Index innerStride)$/;"	f	class:Eigen::Stride
Stride	tools/eigen/Eigen/src/Core/Stride.h	/^    Stride(const Stride& other)$/;"	f	class:Eigen::Stride
Stride	tools/eigen/Eigen/src/Core/Stride.h	/^class Stride$/;"	c	namespace:Eigen
StrideBase	tools/eigen/Eigen/src/Core/Ref.h	/^  typedef Stride<StrideType::OuterStrideAtCompileTime,StrideType::InnerStrideAtCompileTime> StrideBase;$/;"	t	class:Eigen::RefBase
StrideDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef array<Index, NumDims> StrideDims;$/;"	t	struct:Eigen::TensorEvaluator
StrideType	tools/eigen/Eigen/src/Core/Ref.h	/^  typedef _StrideType StrideType;$/;"	t	struct:Eigen::internal::traits
StrideType	tools/eigen/Eigen/src/Core/Ref.h	/^  typedef typename internal::traits<Derived>::StrideType StrideType;$/;"	t	class:Eigen::RefBase
StridedAlignedMapType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, AlignedMax, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstAlignedMapType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, AlignedMax, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstMapType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedMapType	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedVectorType	tools/eigen/blas/common.h	/^typedef Map<Matrix<Scalar,Dynamic,1>, 0, InnerStride<Dynamic> > StridedVectorType;$/;"	t
StringWriter	tools/SimpleIni.h	/^        StringWriter(std::string & a_string) : m_string(a_string) { }$/;"	f	class:CSimpleIniTempl::StringWriter
StringWriter	tools/SimpleIni.h	/^    class StringWriter : public OutputWriter {$/;"	c	class:CSimpleIniTempl
SubDiagonalReturnType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type SubDiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
SubDiagonalType	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename TridiagonalizationType::SubDiagonalType SubDiagonalType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
SubDiagonalType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<RealScalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> SubDiagonalType;$/;"	t	class:Eigen::Tridiagonalization
SubMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorContractionSubMapper<Scalar, Index, side, Tensor, nocontract_t, contract_t, 1, inner_dim_contiguous, inner_dim_reordered, Alignment> SubMapper;$/;"	t	class:Eigen::internal::TensorContractionInputMapper
SubMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorContractionSubMapper<Scalar, Index, side, Tensor, nocontract_t, contract_t, packet_size, inner_dim_contiguous, inner_dim_reordered, Alignment> SubMapper;$/;"	t	class:Eigen::internal::TensorContractionInputMapper
SubVector	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^                               typename ExpressionType::RowXpr>::type SubVector;$/;"	t	class:Eigen::VectorwiseOp
Subs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      Subs   = internal::traits<Derived>::Subs,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
Subs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon623
Subs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon624
Success	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Success = 0,        $/;"	e	enum:Eigen::ComputationInfo
SumReducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> struct SumReducer$/;"	s	namespace:Eigen::internal
SumReturnType	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_sum>::Type SumReturnType;$/;"	t	class:Eigen::VectorwiseOp
SuperDiagVectorType	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTimeMinusOne, 1> SuperDiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
SuperILU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU() : Base() { init(); }$/;"	f	class:Eigen::SuperILU
SuperILU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(SuperILU& ) { }$/;"	f	class:Eigen::SuperILU
SuperILU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperILU
SuperILU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperILU : public SuperLUBase<_MatrixType,SuperILU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU() : Base() { init(); }$/;"	f	class:Eigen::SuperLU
SuperLU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU(SuperLU& ) { }$/;"	f	class:Eigen::SuperLU
SuperLU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    explicit SuperLU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperLU
SuperLU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLU : public SuperLUBase<_MatrixType,SuperLU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLUBase	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase() {}$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase(SuperLUBase& ) { }$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLUBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
Supers	tools/eigen/Eigen/src/Core/BandMatrix.h	/^      Supers = internal::traits<Derived>::Supers,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon620
Supers	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon623
Supers	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon624
SupportedAccessPatterns	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon222
SupportedAccessPatterns	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon226
SupportedAccessPatterns	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon23
SupportedAccessPatterns	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    SupportedAccessPatterns = OuterRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon15
SwapStorage	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      SwapStorage = 1 - MapTraits<ScalarWrapper>::IsSorted,$/;"	e	enum:Eigen::RandomSetter::__anon22
SwappedTraits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef gebp_traits<RhsScalar,LhsScalar,ConjugateRhs,ConjugateLhs> SwappedTraits;$/;"	t	struct:Eigen::internal::gebp_kernel
Symmetric	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Symmetric=0x20$/;"	e	enum:Eigen::__anon492
Symmetry	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct Symmetry$/;"	s	namespace:Eigen
T	tools/eigen/doc/snippets/RealSchur_RealSchur_MatrixType.cpp	/^MatrixXd T = schur.matrixT();$/;"	v
T	tools/eigen/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp	/^MatrixXd T = triOfA.matrixT();$/;"	v
T	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^MatrixXd T = triOfA.matrixT();$/;"	v
T	tools/eigen/doc/special_examples/Tutorial_sparse_example.cpp	/^typedef Eigen::Triplet<double> T;$/;"	t	file:
T	tools/eigen/doc/special_examples/Tutorial_sparse_example_details.cpp	/^typedef Eigen::Triplet<double> T;$/;"	t	file:
TENSOR_INTERFACE_HH	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	10;"	d
TESTDSDOT	tools/eigen/blas/testing/dblat1.f	/^      SUBROUTINE TESTDSDOT(/;"	s
TEST_ENABLE_TEMPORARY_TRACKING	tools/eigen/test/cholesky.cpp	14;"	d	file:
TEST_ENABLE_TEMPORARY_TRACKING	tools/eigen/test/permutationmatrices.cpp	10;"	d	file:
TEST_ENABLE_TEMPORARY_TRACKING	tools/eigen/test/product_notemporary.cpp	10;"	d	file:
TEST_ENABLE_TEMPORARY_TRACKING	tools/eigen/test/ref.cpp	15;"	d	file:
TEST_SET_BUT_UNUSED_VARIABLE	tools/eigen/test/main.h	73;"	d
THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIRD_PARTY_EIGEN3_TENSOR_BENCHMARKS_H_	tools/eigen/bench/tensors/tensor_benchmarks.h	2;"	d
THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_INNER_OR_LAZY_PRODUCTS	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_INNER_OR_LAZY_PRODUCTS,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
THRESH	tools/eigen/blas/testing/cblat2.f	/^      REAL               EPS, ERR, THRESH$/;"	v	program:CBLAT2
THRESH	tools/eigen/blas/testing/cblat3.f	/^      REAL               EPS, ERR, THRESH$/;"	v	program:CBLAT3
THRESH	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   EPS, ERR, THRESH$/;"	v	program:DBLAT2
THRESH	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   EPS, ERR, THRESH$/;"	v	program:DBLAT3
THRESH	tools/eigen/blas/testing/sblat2.f	/^      REAL               EPS, ERR, THRESH$/;"	v	program:SBLAT2
THRESH	tools/eigen/blas/testing/sblat3.f	/^      REAL               EPS, ERR, THRESH$/;"	v	program:SBLAT3
THRESH	tools/eigen/blas/testing/zblat2.f	/^      DOUBLE PRECISION   EPS, ERR, THRESH$/;"	v	program:ZBLAT2
THRESH	tools/eigen/blas/testing/zblat3.f	/^      DOUBLE PRECISION   EPS, ERR, THRESH$/;"	v	program:ZBLAT3
TINY_BLITZ_INTERFACE_HH	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	21;"	d
TINY_MV_MAX_SIZE	tools/eigen/bench/btl/generic_bench/bench_parameter.hh	46;"	d
TKeyVal	tools/SimpleIni.h	/^    typedef std::multimap<Entry,const SI_CHAR *,typename Entry::KeyOrder> TKeyVal;$/;"	t	class:CSimpleIniTempl
TMATV	tools/eigen/bench/benchGeometry.cpp	/^    TMATV,$/;"	e	enum:func_opt	file:
TMATVMAT	tools/eigen/bench/benchGeometry.cpp	/^    TMATVMAT,$/;"	e	enum:func_opt	file:
TM_FLY_PAN	tools/eigen/demos/opengl/quaternion_demo.h	/^      TM_LOCAL_ROTATE, TM_FLY_Z, TM_FLY_PAN$/;"	e	enum:RenderingWidget::TrackMode
TM_FLY_Z	tools/eigen/demos/opengl/quaternion_demo.h	/^      TM_LOCAL_ROTATE, TM_FLY_Z, TM_FLY_PAN$/;"	e	enum:RenderingWidget::TrackMode
TM_LOCAL_ROTATE	tools/eigen/demos/opengl/quaternion_demo.h	/^      TM_LOCAL_ROTATE, TM_FLY_Z, TM_FLY_PAN$/;"	e	enum:RenderingWidget::TrackMode
TM_NO_TRACK	tools/eigen/demos/opengl/quaternion_demo.h	/^      TM_NO_TRACK=0, TM_ROTATE_AROUND, TM_ZOOM,$/;"	e	enum:RenderingWidget::TrackMode
TM_ROTATE_AROUND	tools/eigen/demos/opengl/quaternion_demo.h	/^      TM_NO_TRACK=0, TM_ROTATE_AROUND, TM_ZOOM,$/;"	e	enum:RenderingWidget::TrackMode
TM_ZOOM	tools/eigen/demos/opengl/quaternion_demo.h	/^      TM_NO_TRACK=0, TM_ROTATE_AROUND, TM_ZOOM,$/;"	e	enum:RenderingWidget::TrackMode
TNamesDepend	tools/SimpleIni.h	/^    typedef std::list<Entry> TNamesDepend;$/;"	t	class:CSimpleIniTempl
TPlainObjectType	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseMatrix<MatScalar,MatOptions,MatIndex> TPlainObjectType;$/;"	t	class:Eigen::Ref
TR	tools/eigen/blas/common.h	26;"	d
TRACE	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,/;"	v	program:CBLAT2
TRACE	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,/;"	v	program:CBLAT3
TRACE	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,/;"	v	program:DBLAT2
TRACE	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,/;"	v	program:DBLAT3
TRACE	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,/;"	v	program:SBLAT2
TRACE	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,/;"	v	program:SBLAT3
TRACE	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,/;"	v	program:ZBLAT2
TRACE	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,/;"	v	program:ZBLAT3
TRACK	tools/eigen/test/main.h	129;"	d
TRANS	tools/eigen/blas/testing/cblat2.f	/^      CHARACTER*1        TRANS$/;"	v	program:CBLAT2
TRANS	tools/eigen/blas/testing/dblat2.f	/^      CHARACTER*1        TRANS$/;"	v	program:DBLAT2
TRANS	tools/eigen/blas/testing/sblat2.f	/^      CHARACTER*1        TRANS$/;"	v	program:SBLAT2
TRANS	tools/eigen/blas/testing/zblat2.f	/^      CHARACTER*1        TRANS$/;"	v	program:ZBLAT2
TRANSA	tools/eigen/blas/testing/cblat3.f	/^      CHARACTER*1        TRANSA,/;"	v	program:CBLAT3
TRANSA	tools/eigen/blas/testing/dblat3.f	/^      CHARACTER*1        TRANSA,/;"	v	program:DBLAT3
TRANSA	tools/eigen/blas/testing/sblat3.f	/^      CHARACTER*1        TRANSA,/;"	v	program:SBLAT3
TRANSA	tools/eigen/blas/testing/zblat3.f	/^      CHARACTER*1        TRANSA,/;"	v	program:ZBLAT3
TRANSB	tools/eigen/blas/testing/cblat3.f	/^      CHARACTER*1        TRANSA, TRANSB$/;"	v	program:CBLAT3
TRANSB	tools/eigen/blas/testing/dblat3.f	/^      CHARACTER*1        TRANSA, TRANSB$/;"	v	program:DBLAT3
TRANSB	tools/eigen/blas/testing/sblat3.f	/^      CHARACTER*1        TRANSA, TRANSB$/;"	v	program:SBLAT3
TRANSB	tools/eigen/blas/testing/zblat3.f	/^      CHARACTER*1        TRANSA, TRANSB$/;"	v	program:ZBLAT3
TRIES	tools/eigen/bench/benchCholesky.cpp	23;"	d	file:
TRIES	tools/eigen/bench/benchEigenSolver.cpp	24;"	d	file:
TRIES	tools/eigen/bench/bench_reverse.cpp	12;"	d	file:
TSTERR	tools/eigen/blas/testing/cblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,$/;"	v	program:CBLAT2
TSTERR	tools/eigen/blas/testing/cblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,$/;"	v	program:CBLAT3
TSTERR	tools/eigen/blas/testing/dblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,$/;"	v	program:DBLAT2
TSTERR	tools/eigen/blas/testing/dblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,$/;"	v	program:DBLAT3
TSTERR	tools/eigen/blas/testing/sblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,$/;"	v	program:SBLAT2
TSTERR	tools/eigen/blas/testing/sblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,$/;"	v	program:SBLAT3
TSTERR	tools/eigen/blas/testing/zblat2.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,$/;"	v	program:ZBLAT2
TSTERR	tools/eigen/blas/testing/zblat3.f	/^      LOGICAL            FATAL, LTESTT, REWI, SAME, SFATAL, TRACE,$/;"	v	program:ZBLAT3
TSection	tools/SimpleIni.h	/^    typedef std::map<Entry,TKeyVal,typename Entry::KeyOrder> TSection;$/;"	t	class:CSimpleIniTempl
TV	tools/eigen/bench/benchGeometry.cpp	/^    TV,$/;"	e	enum:func_opt	file:
TVMET_INTERFACE_HH	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	21;"	d
TYPE	tools/eigen/bench/benchFFT.cpp	31;"	d	file:
TailType	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef Tail TailType;$/;"	t	struct:Eigen::internal::type_list
TanReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_tan_op<Scalar>, const Derived> TanReturnType;$/;"	t
TanhReturnType	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_tanh_op<Scalar>, const Derived> TanhReturnType;$/;"	t
Target	tools/eigen/Eigen/src/Core/util/Constants.h	/^    Target = SSE$/;"	e	enum:Eigen::Architecture::Type
TargetRowMajor	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      TargetRowMajor = (SparseMatrixType::Flags & RowMajorBit) ? 1 : 0,$/;"	e	enum:Eigen::RandomSetter::__anon22
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Tensor()$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Tensor(const Self& other)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Tensor(const TensorBase<OtherDerived, ReadOnlyAccessors>& other)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Tensor(const TensorBase<OtherDerived, WriteAccessors>& other)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline Tensor(Index firstDimension, IndexTypes... otherDimensions)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline explicit Tensor(Index dim1)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline explicit Tensor(Index dim1, Index dim2)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline explicit Tensor(Index dim1, Index dim2, Index dim3)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline explicit Tensor(Index dim1, Index dim2, Index dim3, Index dim4)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline explicit Tensor(Index dim1, Index dim2, Index dim3, Index dim4, Index dim5)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline explicit Tensor(const array<Index, NumIndices>& dimensions)$/;"	f	class:Eigen::Tensor
Tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^class Tensor : public TensorBase<Tensor<Scalar_, NumIndices_, Options_, IndexType_> >$/;"	c	namespace:Eigen
TensorAssignOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorAssignOp(LhsXprType& lhs, const RhsXprType& rhs)$/;"	f	class:Eigen::TensorAssignOp
TensorAssignOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^class TensorAssignOp : public TensorBase<TensorAssignOp<LhsXprType, RhsXprType> >$/;"	c	namespace:Eigen
TensorBase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^class TensorBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorBase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^class TensorBase<Derived, WriteAccessors> : public TensorBase<Derived, ReadOnlyAccessors> {$/;"	c	namespace:Eigen
TensorBroadcastingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorBroadcastingOp(const XprType& expr, const Broadcast& broadcast)$/;"	f	class:Eigen::TensorBroadcastingOp
TensorBroadcastingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^class TensorBroadcastingOp : public TensorBase<TensorBroadcastingOp<Broadcast, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorChippingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorChippingOp(const XprType& expr, const Index offset, const Index dim)$/;"	f	class:Eigen::TensorChippingOp
TensorChippingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^class TensorChippingOp : public TensorBase<TensorChippingOp<DimId, XprType> >$/;"	c	namespace:Eigen
TensorConcatenationOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorConcatenationOp(const LhsXprType& lhs, const RhsXprType& rhs, Axis axis)$/;"	f	class:Eigen::TensorConcatenationOp
TensorConcatenationOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^class TensorConcatenationOp : public TensorBase<TensorConcatenationOp<Axis, LhsXprType, RhsXprType>, WriteAccessors>$/;"	c	namespace:Eigen
TensorContractionEvaluatorBase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  TensorContractionEvaluatorBase(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
TensorContractionEvaluatorBase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^struct TensorContractionEvaluatorBase$/;"	s	namespace:Eigen
TensorContractionInputMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  TensorContractionInputMapper(const Tensor& tensor,$/;"	f	class:Eigen::internal::TensorContractionInputMapper
TensorContractionInputMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^class TensorContractionInputMapper$/;"	c	namespace:Eigen::internal
TensorContractionInputMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^class TensorContractionInputMapper<Scalar, Index, side, Tensor, nocontract_t, contract_t, 1, inner_dim_contiguous, inner_dim_reordered, Alignment>$/;"	c	namespace:Eigen::internal
TensorContractionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorContractionOp($/;"	f	class:Eigen::TensorContractionOp
TensorContractionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^class TensorContractionOp : public TensorBase<TensorContractionOp<Indices, LhsXprType, RhsXprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorContractionSubMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC TensorContractionSubMapper(const ParentMapper& base_mapper, Index vert_offset, Index horiz_offset)$/;"	f	class:Eigen::internal::TensorContractionSubMapper
TensorContractionSubMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^class TensorContractionSubMapper {$/;"	c	namespace:Eigen::internal
TensorConversionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorConversionOp(const XprType& xpr)$/;"	f	class:Eigen::TensorConversionOp
TensorConversionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^class TensorConversionOp : public TensorBase<TensorConversionOp<TargetType, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorConvolutionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorConvolutionOp(const InputXprType& input, const KernelXprType& kernel, const Indices& dims)$/;"	f	class:Eigen::TensorConvolutionOp
TensorConvolutionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^class TensorConvolutionOp : public TensorBase<TensorConvolutionOp<Indices, InputXprType, KernelXprType> >$/;"	c	namespace:Eigen
TensorCustomBinaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorCustomBinaryOp(const LhsXprType& lhs, const RhsXprType& rhs, const CustomBinaryFunc& func)$/;"	f	class:Eigen::TensorCustomBinaryOp
TensorCustomBinaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^class TensorCustomBinaryOp : public TensorBase<TensorCustomBinaryOp<CustomBinaryFunc, LhsXprType, RhsXprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorCustomUnaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorCustomUnaryOp(const XprType& expr, const CustomUnaryFunc& func)$/;"	f	class:Eigen::TensorCustomUnaryOp
TensorCustomUnaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^class TensorCustomUnaryOp : public TensorBase<TensorCustomUnaryOp<CustomUnaryFunc, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorCwiseBinaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorCwiseBinaryOp(const LhsXprType& lhs, const RhsXprType& rhs, const BinaryOp& func = BinaryOp())$/;"	f	class:Eigen::TensorCwiseBinaryOp
TensorCwiseBinaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^class TensorCwiseBinaryOp : public TensorBase<TensorCwiseBinaryOp<BinaryOp, LhsXprType, RhsXprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorCwiseNullaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorCwiseNullaryOp(const XprType& xpr, const NullaryOp& func = NullaryOp())$/;"	f	class:Eigen::TensorCwiseNullaryOp
TensorCwiseNullaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^class TensorCwiseNullaryOp : public TensorBase<TensorCwiseNullaryOp<NullaryOp, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorCwiseUnaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorCwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp())$/;"	f	class:Eigen::TensorCwiseUnaryOp
TensorCwiseUnaryOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^class TensorCwiseUnaryOp : public TensorBase<TensorCwiseUnaryOp<UnaryOp, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    TensorDevice(const DeviceType& device, ExpressionType& expression) : m_device(device), m_expression(expression) {}$/;"	f	class:Eigen::TensorDevice
TensorDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    TensorDevice(const GpuDevice& device, ExpressionType& expression) : m_device(device), m_expression(expression) {}$/;"	f	class:Eigen::TensorDevice
TensorDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    TensorDevice(const ThreadPoolDevice& device, ExpressionType& expression) : m_device(device), m_expression(expression) {}$/;"	f	class:Eigen::TensorDevice
TensorDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^template <typename ExpressionType, typename DeviceType> class TensorDevice {$/;"	c	namespace:Eigen
TensorDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^template <typename ExpressionType> class TensorDevice<ExpressionType, GpuDevice>$/;"	c	namespace:Eigen
TensorDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^template <typename ExpressionType> class TensorDevice<ExpressionType, ThreadPoolDevice> {$/;"	c	namespace:Eigen
TensorEvalToOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvalToOp(CoeffReturnType* buffer, const XprType& expr)$/;"	f	class:Eigen::TensorEvalToOp
TensorEvalToOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^class TensorEvalToOp : public TensorBase<TensorEvalToOp<XprType> >$/;"	c	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^struct TensorEvaluator<const TensorIndexTupleOp<ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^struct TensorEvaluator<const TensorTupleReducerOp<ReduceOp, Dims, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC TensorEvaluator(const XprType& op, const Device& device) :$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^struct TensorEvaluator<const TensorAssignOp<LeftArgType, RightArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^struct TensorEvaluator<const TensorBroadcastingOp<Broadcast, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^struct TensorEvaluator<TensorChippingOp<DimId, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^struct TensorEvaluator<const TensorChippingOp<DimId, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  struct TensorEvaluator<TensorConcatenationOp<Axis, LeftArgType, RightArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^struct TensorEvaluator<const TensorConcatenationOp<Axis, LeftArgType, RightArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC TensorEvaluator(const XprType& op, const Device& device) :$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^struct TensorEvaluator<const TensorContractionOp<Indices, LeftArgType, RightArgType>, Device> :$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  EIGEN_DEVICE_FUNC TensorEvaluator(const XprType& op, const Device& device) :$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^struct TensorEvaluator<const TensorContractionOp<Indices, LeftArgType, RightArgType>, GpuDevice> :$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  TensorEvaluator(const XprType& op, const Device& device) :$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^struct TensorEvaluator<const TensorContractionOp<Indices, LeftArgType, RightArgType>, ThreadPoolDevice> :$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^struct TensorEvaluator<const TensorConversionOp<TargetType, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC TensorEvaluator(const XprType& op, const GpuDevice& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^struct TensorEvaluator<const TensorConvolutionOp<Indices, InputArgType, KernelArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^struct TensorEvaluator<const TensorConvolutionOp<Indices, InputArgType, KernelArgType>, GpuDevice>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const ArgType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^struct TensorEvaluator<const TensorCustomBinaryOp<CustomBinaryFunc, LhsXprType, RhsXprType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^struct TensorEvaluator<const TensorCustomUnaryOp<CustomUnaryFunc, XprType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^struct TensorEvaluator<const TensorEvalToOp<ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const Derived& m, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^struct TensorEvaluator$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^struct TensorEvaluator<const Derived, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^struct TensorEvaluator<const TensorCwiseBinaryOp<BinaryOp, LeftArgType, RightArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^struct TensorEvaluator<const TensorCwiseNullaryOp<NullaryOp, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^struct TensorEvaluator<const TensorCwiseUnaryOp<UnaryOp, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^struct TensorEvaluator<const TensorSelectOp<IfArgType, ThenArgType, ElseArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  EIGEN_DEVICE_FUNC TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^struct TensorEvaluator<const TensorForcedEvalOp<ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^struct TensorEvaluator<const TensorGeneratorOp<Generator, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^struct TensorEvaluator<const TensorImagePatchOp<Rows, Cols, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^struct TensorEvaluator<const TensorInflationOp<Strides, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  struct TensorEvaluator<TensorLayoutSwapOp<ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^struct TensorEvaluator<const TensorLayoutSwapOp<ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  struct TensorEvaluator<TensorReshapingOp<NewDimensions, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct TensorEvaluator<TensorSlicingOp<StartIndices, Sizes, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct TensorEvaluator<const TensorReshapingOp<NewDimensions, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct TensorEvaluator<const TensorSlicingOp<StartIndices, Sizes, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^struct TensorEvaluator<const TensorPaddingOp<PaddingDimensions, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^struct TensorEvaluator<const TensorPatchOp<PatchDim, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct TensorEvaluator<const TensorReductionOp<Op, Dims, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(TensorRef<Derived>& m, const Device& d) : Base(m, d)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const TensorRef<Derived>& m, const Device&)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^struct TensorEvaluator<TensorRef<Derived>, Device> : public TensorEvaluator<const TensorRef<Derived>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^struct TensorEvaluator<const TensorRef<Derived>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op,$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^struct TensorEvaluator<TensorReverseOp<ReverseDimensions, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^struct TensorEvaluator<const TensorReverseOp<ReverseDimensions, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^struct TensorEvaluator<TensorShufflingOp<Shuffle, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^struct TensorEvaluator<const TensorShufflingOp<Shuffle, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^struct TensorEvaluator<TensorStridingOp<Strides, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^struct TensorEvaluator<const TensorStridingOp<Strides, ArgType>, Device>$/;"	s	namespace:Eigen
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorEvaluator(const XprType& op, const Device& device)$/;"	f	struct:Eigen::TensorEvaluator
TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^struct TensorEvaluator<const TensorVolumePatchOp<Planes, Rows, Cols, ArgType>, Device>$/;"	s	namespace:Eigen
TensorExecutor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^class TensorExecutor$/;"	c	namespace:Eigen::internal
TensorExecutor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^class TensorExecutor<Expression, DefaultDevice, true>$/;"	c	namespace:Eigen::internal
TensorExecutor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^class TensorExecutor<Expression, GpuDevice, false>$/;"	c	namespace:Eigen::internal
TensorExecutor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^class TensorExecutor<Expression, GpuDevice, true>$/;"	c	namespace:Eigen::internal
TensorExecutor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^class TensorExecutor<Expression, ThreadPoolDevice, Vectorizable>$/;"	c	namespace:Eigen::internal
TensorFixedSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE TensorFixedSize()$/;"	f	class:Eigen::TensorFixedSize
TensorFixedSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE TensorFixedSize(const Self& other)$/;"	f	class:Eigen::TensorFixedSize
TensorFixedSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE TensorFixedSize(const TensorBase<OtherDerived, ReadOnlyAccessors>& other)$/;"	f	class:Eigen::TensorFixedSize
TensorFixedSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE TensorFixedSize(const TensorBase<OtherDerived, WriteAccessors>& other)$/;"	f	class:Eigen::TensorFixedSize
TensorFixedSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    inline TensorFixedSize(Self&& other)$/;"	f	class:Eigen::TensorFixedSize
TensorFixedSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^class TensorFixedSize : public TensorBase<TensorFixedSize<Scalar_, Dimensions_, Options_, IndexType> >$/;"	c	namespace:Eigen
TensorForcedEvalOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorForcedEvalOp(const XprType& expr)$/;"	f	class:Eigen::TensorForcedEvalOp
TensorForcedEvalOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^class TensorForcedEvalOp : public TensorBase<TensorForcedEvalOp<XprType> >$/;"	c	namespace:Eigen
TensorGeneratorOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorGeneratorOp(const XprType& expr, const Generator& generator)$/;"	f	class:Eigen::TensorGeneratorOp
TensorGeneratorOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^class TensorGeneratorOp : public TensorBase<TensorGeneratorOp<Generator, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorImagePatchOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorImagePatchOp(const XprType& expr, DenseIndex patch_rows, DenseIndex patch_cols,$/;"	f	class:Eigen::TensorImagePatchOp
TensorImagePatchOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^class TensorImagePatchOp : public TensorBase<TensorImagePatchOp<Rows, Cols, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorIndex	tools/eigen/bench/tensors/tensor_benchmarks.h	/^typedef int TensorIndex;$/;"	t
TensorIndexTupleOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorIndexTupleOp(const XprType& expr)$/;"	f	class:Eigen::TensorIndexTupleOp
TensorIndexTupleOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^class TensorIndexTupleOp : public TensorBase<TensorIndexTupleOp<XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorInflationOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorInflationOp(const XprType& expr, const Strides& strides)$/;"	f	class:Eigen::TensorInflationOp
TensorInflationOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^class TensorInflationOp : public TensorBase<TensorInflationOp<Strides, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorIntDivisor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorIntDivisor() {$/;"	f	class:Eigen::internal::TensorIntDivisor
TensorIntDivisor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorIntDivisor() {$/;"	f	struct:Eigen::internal::TensorIntDivisor
TensorIntDivisor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorIntDivisor(const T divider) {$/;"	f	struct:Eigen::internal::TensorIntDivisor
TensorIntDivisor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC TensorIntDivisor(int32_t divider)  {$/;"	f	class:Eigen::internal::TensorIntDivisor
TensorIntDivisor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^class TensorIntDivisor<int32_t> {$/;"	c	namespace:Eigen::internal
TensorIntDivisor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^struct TensorIntDivisor {$/;"	s	namespace:Eigen::internal
TensorLayoutSwapOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorLayoutSwapOp(const XprType& expr)$/;"	f	class:Eigen::TensorLayoutSwapOp
TensorLayoutSwapOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^class TensorLayoutSwapOp : public TensorBase<TensorLayoutSwapOp<XprType>, WriteAccessors>$/;"	c	namespace:Eigen
TensorLazyBaseEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  TensorLazyBaseEvaluator() : m_refcount(0) { }$/;"	f	class:Eigen::internal::TensorLazyBaseEvaluator
TensorLazyBaseEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^class TensorLazyBaseEvaluator {$/;"	c	namespace:Eigen::internal
TensorLazyEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  TensorLazyEvaluator(const Expr& expr, const Device& device) : Base(expr, device) {$/;"	f	class:Eigen::internal::TensorLazyEvaluator
TensorLazyEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^class TensorLazyEvaluator : public internal::conditional<bool(internal::is_lvalue<Expr>::value),$/;"	c	namespace:Eigen::internal
TensorLazyEvaluatorReadOnly	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  TensorLazyEvaluatorReadOnly(const Expr& expr, const Device& device) : m_impl(expr, device), m_dummy(Scalar(0)) {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorReadOnly
TensorLazyEvaluatorReadOnly	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^class TensorLazyEvaluatorReadOnly : public TensorLazyBaseEvaluator<Dimensions, typename TensorEvaluator<Expr, Device>::Scalar> {$/;"	c	namespace:Eigen::internal
TensorLazyEvaluatorWritable	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  TensorLazyEvaluatorWritable(const Expr& expr, const Device& device) : Base(expr, device) {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorWritable
TensorLazyEvaluatorWritable	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^class TensorLazyEvaluatorWritable : public TensorLazyEvaluatorReadOnly<Dimensions, Expr, Device> {$/;"	c	namespace:Eigen::internal
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE TensorMap(PointerArgType dataPtr, Index dim1, Index dim2) : m_data(dataPtr), m_dimensions(dim1, dim2) {$/;"	f	class:Eigen::TensorMap
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE TensorMap(PointerArgType dataPtr, Index dim1, Index dim2, Index dim3) : m_data(dataPtr), m_dimensions(dim1, dim2, dim3) {$/;"	f	class:Eigen::TensorMap
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE TensorMap(PointerArgType dataPtr, Index dim1, Index dim2, Index dim3, Index dim4) : m_data(dataPtr), m_dimensions(dim1, dim2, dim3, dim4) {$/;"	f	class:Eigen::TensorMap
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE TensorMap(PointerArgType dataPtr, Index dim1, Index dim2, Index dim3, Index dim4, Index dim5) : m_data(dataPtr), m_dimensions(dim1, dim2, dim3, dim4, dim5) {$/;"	f	class:Eigen::TensorMap
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE TensorMap(PointerArgType dataPtr, Index firstDimension) : m_data(dataPtr), m_dimensions(firstDimension) {$/;"	f	class:Eigen::TensorMap
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE TensorMap(PointerArgType dataPtr, Index firstDimension, IndexTypes... otherDimensions) : m_data(dataPtr), m_dimensions(firstDimension, otherDimensions...) {$/;"	f	class:Eigen::TensorMap
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE TensorMap(PointerArgType dataPtr, const Dimensions& dimensions)$/;"	f	class:Eigen::TensorMap
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^   inline TensorMap(PointerArgType dataPtr, const array<Index, NumIndices>& dimensions)$/;"	f	class:Eigen::TensorMap
TensorMap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^template<typename PlainObjectType, int Options_> class TensorMap : public TensorBase<TensorMap<PlainObjectType, Options_> >$/;"	c	namespace:Eigen
TensorPaddingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorPaddingOp(const XprType& expr, const PaddingDimensions& padding_dims)$/;"	f	class:Eigen::TensorPaddingOp
TensorPaddingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^class TensorPaddingOp : public TensorBase<TensorPaddingOp<PaddingDimensions, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorPatchOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorPatchOp(const XprType& expr, const PatchDim& patch_dims)$/;"	f	class:Eigen::TensorPatchOp
TensorPatchOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^class TensorPatchOp : public TensorBase<TensorPatchOp<PatchDim, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorReductionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    TensorReductionOp(const XprType& expr, const Dims& dims) : m_expr(expr), m_dims(dims)$/;"	f	class:Eigen::TensorReductionOp
TensorReductionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    TensorReductionOp(const XprType& expr, const Dims& dims, const Op& reducer) : m_expr(expr), m_dims(dims), m_reducer(reducer)$/;"	f	class:Eigen::TensorReductionOp
TensorReductionOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^class TensorReductionOp : public TensorBase<TensorReductionOp<Op, Dims, XprType>, ReadOnlyAccessors> {$/;"	c	namespace:Eigen
TensorRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE TensorRef() : m_evaluator(NULL) {$/;"	f	class:Eigen::TensorRef
TensorRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE TensorRef(const Expression& expr) : m_evaluator(new internal::TensorLazyEvaluator<Dimensions, Expression, DefaultDevice>(expr, DefaultDevice())) {$/;"	f	class:Eigen::TensorRef
TensorRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    TensorRef(const TensorRef& other) : m_evaluator(other.m_evaluator) {$/;"	f	class:Eigen::TensorRef
TensorRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^template<typename PlainObjectType> class TensorRef : public TensorBase<TensorRef<PlainObjectType> >$/;"	c	namespace:Eigen
TensorReshapingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorReshapingOp(const XprType& expr, const NewDimensions& dims)$/;"	f	class:Eigen::TensorReshapingOp
TensorReshapingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^class TensorReshapingOp : public TensorBase<TensorReshapingOp<NewDimensions, XprType>, WriteAccessors>$/;"	c	namespace:Eigen
TensorReverseOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorReverseOp($/;"	f	class:Eigen::TensorReverseOp
TensorReverseOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^class TensorReverseOp : public TensorBase<TensorReverseOp<ReverseDimensions,$/;"	c	namespace:Eigen
TensorSelectOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    TensorSelectOp(const IfXprType& a_condition,$/;"	f	class:Eigen::TensorSelectOp
TensorSelectOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^class TensorSelectOp : public TensorBase<TensorSelectOp<IfXprType, ThenXprType, ElseXprType> >$/;"	c	namespace:Eigen
TensorShufflingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorShufflingOp(const XprType& expr, const Shuffle& shuffle)$/;"	f	class:Eigen::TensorShufflingOp
TensorShufflingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^class TensorShufflingOp : public TensorBase<TensorShufflingOp<Shuffle, XprType> >$/;"	c	namespace:Eigen
TensorSlicingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorSlicingOp(const XprType& expr, const StartIndices& indices, const Sizes& sizes)$/;"	f	class:Eigen::TensorSlicingOp
TensorSlicingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^class TensorSlicingOp : public TensorBase<TensorSlicingOp<StartIndices, Sizes, XprType> >$/;"	c	namespace:Eigen
TensorStorage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC TensorStorage() : m_data(0), m_dimensions() {}$/;"	f	class:Eigen::TensorStorage
TensorStorage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC TensorStorage(Index size, const array<Index, NumIndices_>& dimensions)$/;"	f	class:Eigen::TensorStorage
TensorStorage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC TensorStorage(const Self& other)$/;"	f	class:Eigen::TensorStorage
TensorStorage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC TensorStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::TensorStorage
TensorStorage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  EIGEN_STRONG_INLINE TensorStorage() {$/;"	f	class:Eigen::TensorStorage
TensorStorage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^class TensorStorage<T, DSizes<IndexType, NumIndices_>, Options_>$/;"	c	namespace:Eigen
TensorStorage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^class TensorStorage<T, FixedDimensions, Options_>$/;"	c	namespace:Eigen
TensorStridingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorStridingOp(const XprType& expr, const Strides& dims)$/;"	f	class:Eigen::TensorStridingOp
TensorStridingOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^class TensorStridingOp : public TensorBase<TensorStridingOp<Strides, XprType> >$/;"	c	namespace:Eigen
TensorTupleReducerOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorTupleReducerOp(const XprType& expr,$/;"	f	class:Eigen::TensorTupleReducerOp
TensorTupleReducerOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^class TensorTupleReducerOp : public TensorBase<TensorTupleReducerOp<ReduceOp, Dims, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TensorVolumePatchOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TensorVolumePatchOp(const XprType& expr, DenseIndex patch_planes, DenseIndex patch_rows, DenseIndex patch_cols,$/;"	f	class:Eigen::TensorVolumePatchOp
TensorVolumePatchOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^class TensorVolumePatchOp : public TensorBase<TensorVolumePatchOp<Planes, Rows, Cols, XprType>, ReadOnlyAccessors>$/;"	c	namespace:Eigen
TestFunc1	tools/eigen/unsupported/test/autodiff.cpp	/^  TestFunc1() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:TestFunc1
TestFunc1	tools/eigen/unsupported/test/autodiff.cpp	/^  TestFunc1(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:TestFunc1
TestFunc1	tools/eigen/unsupported/test/autodiff.cpp	/^struct TestFunc1$/;"	s	file:
TestFunc1	tools/eigen/unsupported/test/forward_adolc.cpp	/^  TestFunc1() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:TestFunc1
TestFunc1	tools/eigen/unsupported/test/forward_adolc.cpp	/^  TestFunc1(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:TestFunc1
TestFunc1	tools/eigen/unsupported/test/forward_adolc.cpp	/^struct TestFunc1$/;"	s	file:
TestNew1	tools/eigen/test/unalignedassert.cpp	/^  TestNew1() : m(20,20) {}$/;"	f	struct:TestNew1
TestNew1	tools/eigen/test/unalignedassert.cpp	/^struct TestNew1$/;"	s	file:
TestNew2	tools/eigen/test/unalignedassert.cpp	/^struct TestNew2$/;"	s	file:
TestNew3	tools/eigen/test/unalignedassert.cpp	/^struct TestNew3$/;"	s	file:
TestNew4	tools/eigen/test/unalignedassert.cpp	/^struct TestNew4$/;"	s	file:
TestNew5	tools/eigen/test/unalignedassert.cpp	/^struct TestNew5$/;"	s	file:
TestNew6	tools/eigen/test/unalignedassert.cpp	/^struct TestNew6$/;"	s	file:
TgtCoeffRatio	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon260
TgtCoeffRatio	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon357
TgtCoeffRatio	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon358
TgtCoeffRatio	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon330
TgtCoeffRatio	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon331
TgtCoeffRatio	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon332
TgtCoeffRatio	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 2$/;"	e	enum:Eigen::internal::type_casting_traits::__anon333
ThenMatrixNested	tools/eigen/Eigen/src/Core/Select.h	/^  typedef typename ThenMatrixType::Nested ThenMatrixNested;$/;"	t	struct:Eigen::internal::traits
ThenNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename ThenXprType::Nested ThenNested;$/;"	t	struct:Eigen::internal::traits
ThreadPool	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  explicit ThreadPool(int num_threads) {$/;"	f	class:Eigen::ThreadPool
ThreadPool	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^class ThreadPool : public ThreadPoolInterface {$/;"	c	namespace:Eigen
ThreadPoolDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  ThreadPoolDevice(ThreadPoolInterface* pool, size_t num_cores) : pool_(pool), num_threads_(num_cores) { }$/;"	f	struct:Eigen::ThreadPoolDevice
ThreadPoolDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^struct ThreadPoolDevice {$/;"	s	namespace:Eigen
ThreadPoolInterface	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^class ThreadPoolInterface {$/;"	c	namespace:Eigen
Three	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t Three = tensor_symmetry_num_indices<Sym...>::value;$/;"	m	struct:Eigen::internal::tensor_symmetry_num_indices
Through	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::Hyperplane
Through	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1, const VectorType& p2)$/;"	f	class:Eigen::Hyperplane
Through	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  static inline ParametrizedLine Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::ParametrizedLine
TimeLine	tools/eigen/demos/opengl/quaternion_demo.h	/^    typedef std::map<float,Frame> TimeLine;$/;"	t	class:RenderingWidget
TmpFlags	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    TmpFlags = _MatrixTypeNested::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon691
TmpMatrixType	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1, Options, MaxRowsAtCompileTime, 1> TmpMatrixType;$/;"	t	class:Eigen::LDLT
ToRotationMatrixWrapper	tools/eigen/bench/geometry.cpp	/^  ToRotationMatrixWrapper(const T& o) : object(o) {}$/;"	f	struct:ToRotationMatrixWrapper
ToRotationMatrixWrapper	tools/eigen/bench/geometry.cpp	/^template<typename T> struct ToRotationMatrixWrapper$/;"	s	file:
TolTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        TolTooSmall = 3,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
TooManyFunctionEvaluation	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        TooManyFunctionEvaluation = 5,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
TooManyFunctionEvaluation	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        TooManyFunctionEvaluation = 2,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
TooManyFunctionEvaluation	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        TooManyFunctionEvaluation = 5,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
Top	Top-scalable.cc	/^Top::Top(int _d, int _k_g, int _k_h, val _decay, val _C, val _tol, val _alpha, val _beta, val _pcgTol, int _pcgIter)$/;"	f	class:Top
Top	Top.cc	/^Top::Top(int _d, val _C, val _tol, val _alpha, val _beta, int _pcgIter)$/;"	f	class:Top
Top	Top.hh	/^class Top$/;"	c
TopLeft	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopLeft	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftCeil	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftFloor	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRight	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopRight	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightCeil	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightFloor	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TotalSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE DenseIndex TotalSize() const {$/;"	f	struct:Eigen::DSizes
TotalSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::ptrdiff_t TotalSize() {$/;"	f	struct:Eigen::Sizes
TrackMode	tools/eigen/demos/opengl/quaternion_demo.h	/^    enum TrackMode {$/;"	g	class:RenderingWidget
Trackball	tools/eigen/demos/opengl/trackball.h	/^    Trackball() : mpCamera(0) {}$/;"	f	class:Trackball
Trackball	tools/eigen/demos/opengl/trackball.h	/^class Trackball$/;"	c
Traits	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef internal::LDLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LDLT
Traits	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    typedef internal::LLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LLT
Traits	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^  typedef typename Derived::ExpressionTraits Traits;$/;"	t	struct:Eigen::internal::all_unroller
Traits	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^  typedef typename Derived::ExpressionTraits Traits;$/;"	t	struct:Eigen::internal::any_unroller
Traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::PermutationBase
Traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationMatrix> Traits;$/;"	t	class:Eigen::PermutationMatrix
Traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationType> Traits;$/;"	t	class:Eigen::Transpose
Traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationWrapper> Traits;$/;"	t	class:Eigen::PermutationWrapper
Traits	tools/eigen/Eigen/src/Core/Ref.h	/^    typedef internal::traits<Ref> Traits;$/;"	t	class:Eigen::Ref
Traits	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::TranspositionsBase
Traits	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Transpositions> Traits;$/;"	t	class:Eigen::Transpositions
Traits	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<TranspositionsWrapper> Traits;$/;"	t	class:Eigen::TranspositionsWrapper
Traits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjugateLhs,ConjugateRhs> Traits;$/;"	t	struct:Eigen::internal::gebp_kernel
Traits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename GebpKernel::Traits Traits;$/;"	t	struct:Eigen::internal::PossiblyRotatingKernelHelper
Traits	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef gebp_traits<LhsScalar,RhsScalar> Traits;$/;"	t	class:Eigen::internal::gemm_blocking_space
Traits	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef gebp_traits<RhsScalar,LhsScalar> Traits;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
Traits	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Gemm::Traits Traits;$/;"	t	struct:Eigen::internal::gemm_functor
Traits	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^typedef gebp_traits<LhsScalar,RhsScalar> Traits;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
Traits	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjLhs,ConjRhs> Traits;$/;"	t	struct:Eigen::internal::tribb_kernel
Traits	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  typedef gebp_traits<Scalar,Scalar> Traits;$/;"	t	struct:Eigen::internal::product_triangular_matrix_matrix
Traits	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef internal::pardiso_traits<Derived> Traits;$/;"	t	class:Eigen::PardisoImpl
Traits	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialCholesky> Traits;$/;"	t	class:Eigen::SimplicialCholesky
Traits	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT> Traits;$/;"	t	class:Eigen::SimplicialLDLT
Traits	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT> Traits;$/;"	t	class:Eigen::SimplicialLLT
Traits	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    typedef internal::traits<Ref> Traits;$/;"	t	class:Eigen::Ref
Traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef typename internal::gebp_traits<LhsScalar, RhsScalar> Traits;$/;"	t	struct:Eigen::TensorEvaluator
Traits	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    typedef typename internal::traits<Derived> Traits;$/;"	t	class:Eigen::KroneckerProductBase
TraitsBase	tools/eigen/Eigen/src/Core/Map.h	/^  typedef traits<PlainObjectType> TraitsBase;$/;"	t	struct:Eigen::internal::traits
TraitsBase	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    typedef traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> > TraitsBase;$/;"	t	struct:Eigen::internal::traits
TraitsBase	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^  typedef traits<PlainObjectType> TraitsBase;$/;"	t	struct:Eigen::internal::traits
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  Transform(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform()$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform& other)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform<Scalar,Dim,Mode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform<Scalar,Dim,OtherMode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const RotationBase<Derived, Dim>& r)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const Transform<OtherScalarType,Dim,Mode,Options>& other)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const TranslationType& t)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QMatrix& other)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QTransform& other)$/;"	f	class:Eigen::Transform
Transform	tools/eigen/Eigen/src/Geometry/Transform.h	/^class Transform$/;"	c	namespace:Eigen
TransformTimeDiagonalMode	tools/eigen/Eigen/src/Geometry/Transform.h	/^  enum { TransformTimeDiagonalMode = ((Mode==int(Isometry))?Affine:int(Mode)) };$/;"	e	enum:Eigen::Transform::__anon706
TransformTimeDiagonalReturnType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,TransformTimeDiagonalMode> TransformTimeDiagonalReturnType;$/;"	t	class:Eigen::Transform
TransformTraits	tools/eigen/Eigen/src/Core/util/Constants.h	/^enum TransformTraits {$/;"	g	namespace:Eigen
TransformType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Mode, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Projective, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar,Dim,Mode,Options> TransformType;$/;"	t	struct:Eigen::internal::generic_product_impl
TransformType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,AffineCompact,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
TransformType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Mode,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
Translation	tools/eigen/Eigen/src/Geometry/Translation.h	/^  Translation() {}$/;"	f	class:Eigen::Translation
Translation	tools/eigen/Eigen/src/Geometry/Translation.h	/^  explicit inline Translation(const VectorType& vector) : m_coeffs(vector) {}$/;"	f	class:Eigen::Translation
Translation	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Translation
Translation	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Translation
Translation	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline explicit Translation(const Translation<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Translation
Translation	tools/eigen/Eigen/src/Geometry/Translation.h	/^class Translation$/;"	c	namespace:Eigen
Translation2d	tools/eigen/Eigen/src/Geometry/Translation.h	/^typedef Translation<double,2> Translation2d;$/;"	t	namespace:Eigen
Translation2f	tools/eigen/Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 2> Translation2f;$/;"	t	namespace:Eigen
Translation3d	tools/eigen/Eigen/src/Geometry/Translation.h	/^typedef Translation<double,3> Translation3d;$/;"	t	namespace:Eigen
Translation3f	tools/eigen/Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 3> Translation3f;$/;"	t	namespace:Eigen
TranslationPart	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,1,!(internal::traits<MatrixType>::Flags & RowMajorBit)> TranslationPart;$/;"	t	class:Eigen::Transform
TranslationType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Transform
Transpose	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Transpose(const PermutationType& p) : m_permutation(p) {}$/;"	f	class:Eigen::Transpose
Transpose	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^class Transpose<PermutationBase<Derived> >$/;"	c	namespace:Eigen
Transpose	tools/eigen/Eigen/src/Core/Transpose.h	/^    explicit inline Transpose(MatrixType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::Transpose
Transpose	tools/eigen/Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class Transpose$/;"	c	namespace:Eigen
Transpose	tools/eigen/Eigen/src/Core/Transpositions.h	/^    explicit Transpose(const TranspositionType& t) : m_transpositions(t) {}$/;"	f	class:Eigen::Transpose
Transpose	tools/eigen/Eigen/src/Core/Transpositions.h	/^class Transpose<TranspositionsBase<TranspositionsDerived> >$/;"	c	namespace:Eigen
Transpose	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon279
Transpose	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon277
TransposeImpl	tools/eigen/Eigen/src/Core/Transpose.h	/^class TransposeImpl$/;"	c	namespace:Eigen
TransposeImpl	tools/eigen/Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Dense>$/;"	c	namespace:Eigen
TransposeImpl	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>$/;"	c	namespace:Eigen
TransposeImpl_base	tools/eigen/Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base$/;"	s	namespace:Eigen::internal
TransposeImpl_base	tools/eigen/Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base<MatrixType, false>$/;"	s	namespace:Eigen::internal
TransposeMode	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^      TransposeMode = (Mode & Upper ? Lower : 0)$/;"	e	enum:Eigen::TriangularView::__anon299
TransposeReturnType	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef Transpose<Derived> TransposeReturnType;$/;"	t	class:Eigen::DenseBase
TransposeReturnType	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typedef Transpose<PermutationBase> TransposeReturnType;$/;"	t	class:Eigen::PermutationBase
TransposeReturnType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<typename MatrixType::TransposeReturnType,TransposeMode> TransposeReturnType;$/;"	t	class:Eigen::TriangularView
TransposeReturnType	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Transpose<Derived> TransposeReturnType;$/;"	t	class:Eigen::SparseMatrixBase
TransposeTypeWithSameStorageOrder	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^          TransposeTypeWithSameStorageOrder;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
TransposedSkylineMatrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    typedef SkylineMatrix<Scalar, (Flags&~RowMajorBit) | (IsRowMajor ? RowMajorBit : 0) > TransposedSkylineMatrix;$/;"	t	class:Eigen::SkylineMatrix
TransposedSparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef SparseMatrix<Scalar,(Flags&~RowMajorBit)|(IsRowMajor?RowMajorBit:0)> TransposedSparseMatrix;$/;"	t	class:Eigen::SparseMatrix
TransposedSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    typedef DynamicSparseMatrix<Scalar,(Flags&~RowMajorBit)|(IsRowMajor?RowMajorBit:0), StorageIndex> TransposedSparseMatrix;$/;"	t	class:Eigen::DynamicSparseMatrix
TranspositionType	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::LDLT
TranspositionType	tools/eigen/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsDerived TranspositionType;$/;"	t	class:Eigen::Transpose
TranspositionType	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::PartialPivLU
Transpositions	tools/eigen/Eigen/src/Core/Transpositions.h	/^    explicit inline Transpositions(const MatrixBase<Other>& indices) : m_indices(indices)$/;"	f	class:Eigen::Transpositions
Transpositions	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline Transpositions() {}$/;"	f	class:Eigen::Transpositions
Transpositions	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(Index size) : m_indices(size)$/;"	f	class:Eigen::Transpositions
Transpositions	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const Transpositions& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::Transpositions
Transpositions	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
Transpositions	tools/eigen/Eigen/src/Core/Transpositions.h	/^class Transpositions : public TranspositionsBase<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex> >$/;"	c	namespace:Eigen
TranspositionsBase	tools/eigen/Eigen/src/Core/Transpositions.h	/^class TranspositionsBase$/;"	c	namespace:Eigen
TranspositionsShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct TranspositionsShape    { static std::string debugName() { return "TranspositionsShape"; } };$/;"	s	namespace:Eigen
TranspositionsStorage	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct TranspositionsStorage {};$/;"	s	namespace:Eigen
TranspositionsWrapper	tools/eigen/Eigen/src/Core/Transpositions.h	/^    explicit inline TranspositionsWrapper(IndicesType& indices)$/;"	f	class:Eigen::TranspositionsWrapper
TranspositionsWrapper	tools/eigen/Eigen/src/Core/Transpositions.h	/^class TranspositionsWrapper$/;"	c	namespace:Eigen
Traversal	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    Traversal = int(MayInnerVectorize)   ? int(InnerVectorizedTraversal)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon642
Traversal	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      Traversal = MightLinearize ? LinearTraversal : DefaultTraversal$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon585
Traversal	tools/eigen/Eigen/src/Core/Redux.h	/^    Traversal = int(MayLinearVectorize) ? int(LinearVectorizedTraversal)$/;"	e	enum:Eigen::internal::redux_traits::__anon629
TraversalSize	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^    TraversalSize = Direction==int(Vertical) ? int(ArgType::RowsAtCompileTime) :  int(XprType::ColsAtCompileTime)$/;"	e	enum:Eigen::internal::evaluator::__anon665
TraversalSize	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    TraversalSize = Direction==Vertical ? MatrixType::RowsAtCompileTime :  MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon577
TreeTest	tools/eigen/unsupported/test/BVH.cpp	/^struct TreeTest$/;"	s	file:
Triangular2Dense	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Triangular2Dense         {};$/;"	s	namespace:Eigen::internal
Triangular2Triangular	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct Triangular2Triangular    {};$/;"	s	namespace:Eigen::internal
TriangularBase	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularBase() { eigen_assert(!((Mode&UnitDiag) && (Mode&ZeroDiag))); }$/;"	f	class:Eigen::TriangularBase
TriangularBase	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<typename Derived> class TriangularBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
TriangularShape	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct TriangularShape        { static std::string debugName() { return "TriangularShape"; } };$/;"	s	namespace:Eigen
TriangularView	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    explicit inline TriangularView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::TriangularView
TriangularView	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<typename _MatrixType, unsigned int _Mode> class TriangularView$/;"	c	namespace:Eigen
TriangularViewImpl	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^template<typename _MatrixType, unsigned int _Mode> class TriangularViewImpl<_MatrixType,_Mode,Dense>$/;"	c	namespace:Eigen
TriangularViewImpl	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^template<typename MatrixType, unsigned int Mode> class TriangularViewImpl<MatrixType,Mode,Sparse>$/;"	c	namespace:Eigen
TriangularViewReturnType	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
TriangularViewType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<_MatrixType, _Mode> TriangularViewType;$/;"	t	class:Eigen::TriangularViewImpl
TriangularViewType	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef TriangularView<MatrixType,Mode> TriangularViewType;$/;"	t	class:Eigen::TriangularViewImpl
TridiagonalMatrix	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    explicit TridiagonalMatrix(Index size = Size) : Base(size,size,Options&SelfAdjoint?0:1,1) {}$/;"	f	class:Eigen::internal::TridiagonalMatrix
TridiagonalMatrix	tools/eigen/Eigen/src/Core/BandMatrix.h	/^class TridiagonalMatrix : public BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor>$/;"	c	namespace:Eigen::internal
Tridiagonalization	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    explicit Tridiagonalization(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    explicit Tridiagonalization(const MatrixType& matrix)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename _MatrixType> class Tridiagonalization$/;"	c	namespace:Eigen
TridiagonalizationMatrixTReturnType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    TridiagonalizationMatrixTReturnType(const MatrixType& mat) : m_matrix(mat) { }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
TridiagonalizationMatrixTReturnType	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename MatrixType> struct TridiagonalizationMatrixTReturnType$/;"	s	namespace:Eigen::internal
TridiagonalizationType	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Tridiagonalization<MatrixType> TridiagonalizationType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Triplet	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  Triplet() : m_row(0), m_col(0), m_value(0) {}$/;"	f	class:Eigen::Triplet
Triplet	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  Triplet(const StorageIndex& i, const StorageIndex& j, const Scalar& v = Scalar(0))$/;"	f	class:Eigen::Triplet
Triplet	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^class Triplet$/;"	c	namespace:Eigen
Triplet	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef typename Iterator::value_type Triplet;$/;"	t	struct:Eigen::internal::TripletComp
TripletComp	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^struct TripletComp$/;"	s	namespace:Eigen::internal
Tuple	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  Tuple() : first(), second() {}$/;"	f	struct:Eigen::Tuple
Tuple	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  Tuple(const U& f, const V& s) : first(f), second(s) {}$/;"	f	struct:Eigen::Tuple
Tuple	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^template <typename U, typename V> struct Tuple {$/;"	s	namespace:Eigen
TupleType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename TensorIndexTupleOp<ArgType>::CoeffReturnType TupleType;$/;"	t	struct:Eigen::TensorEvaluator
Two	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int Two = Two_;$/;"	m	struct:Eigen::AntiHermiticity
Two	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int Two = Two_;$/;"	m	struct:Eigen::AntiSymmetry
Two	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int Two = Two_;$/;"	m	struct:Eigen::Hermiticity
Two	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static int Two = Two_;$/;"	m	struct:Eigen::Symmetry
Two	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t Two = static_cast<std::size_t>(Two_);$/;"	m	struct:Eigen::internal::tensor_symmetry_num_indices
Type	tools/eigen/Eigen/src/Core/BandMatrix.h	/^                 BuildType>::type Type;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
Type	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstDiagonalIndexReturnType
Type	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::DiagonalIndexReturnType
Type	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstTriangularViewReturnType
Type	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::TriangularViewReturnType
Type	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstSelfAdjointViewReturnType
Type	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::SelfAdjointViewReturnType
Type	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReduxReturnType
Type	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReturnType
Type	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^                        isHorizontal ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::ExtendedType
Type	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^                        isVertical   ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::OppositeExtendedType
Type	tools/eigen/Eigen/src/Core/util/Constants.h	/^  enum Type {$/;"	g	namespace:Eigen::Architecture
Type	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^                 0, MatrixType::MaxRowsAtCompileTime, MatrixType::MaxColsAtCompileTime> Type;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
Type	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SparseSelfAdjointView<const Derived, UpLo> Type; };$/;"	t	struct:Eigen::SparseMatrixBase::ConstSelfAdjointViewReturnType
Type	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SparseSelfAdjointView<Derived, UpLo> Type; };$/;"	t	struct:Eigen::SparseMatrixBase::SelfAdjointViewReturnType
Type	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:ConstNColsBlockXpr
Type	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:ConstNRowsBlockXpr
Type	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:NColsBlockXpr
Type	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:NRowsBlockXpr
Type	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	t	struct:ConstFixedSegmentReturnType
Type	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	t	struct:FixedSegmentReturnType
Type	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^template<class NewType> struct CastXpr { typedef typename internal::cast_return_type<Derived,const CwiseUnaryOp<internal::scalar_cast_op<Scalar, NewType>, const Derived> >::type Type; };$/;"	t	struct:CastXpr
Type	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef SkylineProduct<LhsNested, RhsNested, ProductMode> Type;$/;"	t	struct:Eigen::SkylineProductReturnType
Type	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef google::dense_hash_map<KeyType,Scalar> Type;$/;"	t	struct:Eigen::GoogleDenseHashMapTraits
Type	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef google::sparse_hash_map<KeyType,Scalar> Type;$/;"	t	struct:Eigen::GoogleSparseHashMapTraits
Type	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef std::map<KeyType,Scalar> Type;$/;"	t	struct:Eigen::StdMapTraits
Type	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef std::unordered_map<KeyType,Scalar> Type;$/;"	t	struct:Eigen::StdUnorderedMapTraits
U	Top.hh	/^    mat U;$/;"	m	class:Top
U	tools/eigen/doc/snippets/RealSchur_RealSchur_MatrixType.cpp	/^MatrixXd U = schur.matrixU();$/;"	v
UBLAS_INTERFACE_HH	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	21;"	d
UBlasSparse	tools/eigen/bench/BenchSparseUtil.h	/^typedef boost::numeric::ublas::compressed_matrix<Scalar,boost::numeric::ublas::column_major> UBlasSparse;$/;"	t
UCOL	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon180
ULVL	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon180
UMatrixType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType,  Upper>          UMatrixType;$/;"	t	class:Eigen::SuperLU
UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
UNIT	tools/eigen/blas/common.h	36;"	d
UNI_MAX_BMP	tools/ConvertUTF.h	97;"	d
UNI_MAX_LEGAL_UTF32	tools/ConvertUTF.h	100;"	d
UNI_MAX_UTF16	tools/ConvertUTF.h	98;"	d
UNI_MAX_UTF32	tools/ConvertUTF.h	99;"	d
UNI_REPLACEMENT_CHAR	tools/ConvertUTF.h	96;"	d
UP	tools/eigen/blas/common.h	32;"	d
UPLO	tools/eigen/blas/common.h	49;"	d
USEC_IN_SEC	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	31;"	d
USUB	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon180
UTF16	tools/ConvertUTF.h	/^typedef unsigned short	UTF16;	\/* at least 16 bits *\/$/;"	t
UTF32	tools/ConvertUTF.h	/^typedef unsigned int	UTF32;	\/* at least 32 bits *\/$/;"	t
UTF8	tools/ConvertUTF.h	/^typedef unsigned char	UTF8;	\/* typically 8 bits *\/$/;"	t
UTILITIES_H	tools/eigen/bench/btl/generic_bench/utils/utilities.h	13;"	d
UmfPackLU	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU()$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU(UmfPackLU& ) { }$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    explicit UmfPackLU(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^class UmfPackLU : public SparseSolverBase<UmfPackLU<_MatrixType> >$/;"	c	namespace:Eigen
UmfpackMatrixRef	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Ref<const UmfpackMatrixType, StandardCompressedFormat> UmfpackMatrixRef;$/;"	t	class:Eigen::UmfPackLU
UmfpackMatrixType	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar,ColMajor,int> UmfpackMatrixType;$/;"	t	class:Eigen::UmfPackLU
Unaligned	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Unaligned=0,        \/**< Data pointer has no specific alignment. *\/$/;"	e	enum:Eigen::__anon493
UniformRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  UniformRandomGenerator(bool deterministic = true) : m_deterministic(deterministic) {$/;"	f	class:Eigen::internal::UniformRandomGenerator
UniformRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  UniformRandomGenerator(const UniformRandomGenerator& other) {$/;"	f	class:Eigen::internal::UniformRandomGenerator
UniformRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  UniformRandomGenerator(const UniformRandomGenerator<double>& other) {$/;"	f	class:Eigen::internal::UniformRandomGenerator
UniformRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  UniformRandomGenerator(const UniformRandomGenerator<float>& other) {$/;"	f	class:Eigen::internal::UniformRandomGenerator
UniformRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <> class UniformRandomGenerator<double> {$/;"	c	namespace:Eigen::internal
UniformRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <> class UniformRandomGenerator<float> {$/;"	c	namespace:Eigen::internal
UniformRandomGenerator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^template <typename T> class UniformRandomGenerator {$/;"	c	namespace:Eigen::internal
UniformScaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  UniformScaling() {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  explicit inline UniformScaling(const Scalar& s) : m_factor(s) {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline explicit UniformScaling(const UniformScaling<OtherScalarType>& other)$/;"	f	class:Eigen::UniformScaling
UniformScaling	tools/eigen/Eigen/src/Geometry/Scaling.h	/^class UniformScaling$/;"	c	namespace:Eigen
Unit	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index i)$/;"	f	class:Eigen::MatrixBase
Unit	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index newSize, Index i)$/;"	f	class:Eigen::MatrixBase
UnitDiag	tools/eigen/Eigen/src/Core/util/Constants.h	/^  UnitDiag=0x4, $/;"	e	enum:Eigen::__anon492
UnitLower	tools/eigen/Eigen/src/Core/util/Constants.h	/^  UnitLower=UnitDiag|Lower, $/;"	e	enum:Eigen::__anon492
UnitUpper	tools/eigen/Eigen/src/Core/util/Constants.h	/^  UnitUpper=UnitDiag|Upper,$/;"	e	enum:Eigen::__anon492
UnitW	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitW()$/;"	f	class:Eigen::MatrixBase
UnitX	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitX()$/;"	f	class:Eigen::MatrixBase
UnitY	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitY()$/;"	f	class:Eigen::MatrixBase
UnitZ	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitZ()$/;"	f	class:Eigen::MatrixBase
Unroll	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    Unroll = CoeffReadCost != Dynamic && CoeffReadCost <= EIGEN_UNROLLING_LIMIT,$/;"	e	enum:Eigen::internal::product_evaluator::__anon384
Unrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    Unrolling = (int(Traversal) == int(InnerVectorizedTraversal) || int(Traversal) == int(DefaultTraversal))$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon644
Unrolling	tools/eigen/Eigen/src/Core/Redux.h	/^    Unrolling = Cost != Dynamic && Cost <= UnrollingLimit$/;"	e	enum:Eigen::internal::redux_traits::__anon631
Unrolling	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^      Unrolling   = (RhsIsVectorAtCompileTime && Rhs::SizeAtCompileTime != Dynamic && Rhs::SizeAtCompileTime <= 8)$/;"	e	enum:Eigen::internal::trsolve_traits::__anon648
UnrollingLimit	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    UnrollingLimit      = EIGEN_UNROLLING_LIMIT * (Vectorized ? int(PacketSize) : 1),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon643
UnrollingLimit	tools/eigen/Eigen/src/Core/Redux.h	/^    UnrollingLimit = EIGEN_UNROLLING_LIMIT * (int(Traversal) == int(DefaultTraversal) ? 1 : int(PacketSize))$/;"	e	enum:Eigen::internal::redux_traits::__anon630
UnsignedTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  struct UnsignedTraits {$/;"	s	namespace:Eigen::internal::__anon66
UnsignedType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  typedef typename DividerTraits<T>::type UnsignedType;$/;"	t	struct:Eigen::internal::TensorIntDivisor
Unusable	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^      Unusable(const Unusable&) {}$/;"	f	class:Eigen::ReturnByValue::Unusable
Unusable	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    class Unusable{$/;"	c	class:Eigen::ReturnByValue
Unusable	tools/eigen/Eigen/src/Core/ReturnByValue.h	68;"	d
Unusable	tools/eigen/Eigen/src/Core/ReturnByValue.h	77;"	d
UpLo	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LDLT::__anon243
UpLo	tools/eigen/Eigen/src/Cholesky/LLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LLT::__anon245
UpLo	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::CholmodBase::__anon175
UpLo	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^    UpLo = _UpLo$/;"	e	enum:Eigen::ConjugateGradient::__anon154
UpLo	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLDLT::__anon174
UpLo	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLLT::__anon173
UpLo	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = Options&(Upper|Lower) };$/;"	e	enum:Eigen::PardisoLDLT::__anon719
UpLo	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PardisoLLT::__anon718
UpLo	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialCholesky::__anon151
UpLo	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLDLT::__anon150
UpLo	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLLT::__anon149
UpLo	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = internal::traits<Derived>::UpLo };$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon145
UpLo	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon146
UpLo	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon147
UpLo	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon148
UpLo	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::IncompleteCholesky::__anon13
UpLo	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        enum {UpLo = _UpLo};$/;"	e	enum:Eigen::MINRES::__anon14
Upper	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Upper=0x2,                      $/;"	e	enum:Eigen::__anon492
UpperBidiagonalization	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    UpperBidiagonalization() : m_householder(), m_bidiagonal(), m_isInitialized(false) {}$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    explicit UpperBidiagonalization(const MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^template<typename _MatrixType> class UpperBidiagonalization$/;"	c	namespace:Eigen::internal
UpperTriangularType	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    typedef Matrix< Scalar, Dynamic, Dynamic > UpperTriangularType;$/;"	t	class:Eigen::HybridNonLinearSolver
UseRotatingKernel	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  static const bool UseRotatingKernel =$/;"	m	struct:Eigen::internal::gebp_kernel
UserAsked	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        UserAsked = 9$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
UserAsked	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        UserAsked = 6$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
UserAsked	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        UserAsked = 9$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
UserReducer	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^  UserReducer(float offset) : offset_(offset) {}$/;"	f	struct:UserReducer
UserReducer	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^struct UserReducer {$/;"	s	file:
UsingSpaces	tools/SimpleIni.h	/^    bool UsingSpaces() const { return m_bSpaces; }$/;"	f	class:CSimpleIniTempl
V	Top.hh	/^    mat V;$/;"	m	class:Top
V	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^MatrixXcd V = es.eigenvectors();$/;"	v
V	tools/eigen/doc/snippets/EigenSolver_pseudoEigenvectors.cpp	/^MatrixXd V = es.pseudoEigenvectors();$/;"	v
V	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^MatrixXd V = es.eigenvectors();$/;"	v
VECSIZE	tools/eigen/bench/benchmarkXcwise.cpp	14;"	d	file:
VECTYPE	tools/eigen/bench/benchmarkXcwise.cpp	10;"	d	file:
VERIFY	tools/eigen/test/main.h	272;"	d
VERIFY_ALIGNED_UNALIGNED_COUNT	tools/eigen/test/unalignedcount.cpp	20;"	d	file:
VERIFY_EVALUATION_COUNT	tools/eigen/test/main.h	86;"	d
VERIFY_EVALUATION_COUNT	tools/eigen/test/sparse_ref.cpp	27;"	d	file:
VERIFY_IS_APPROX	tools/eigen/test/integer_types.cpp	14;"	d	file:
VERIFY_IS_APPROX	tools/eigen/test/integer_types.cpp	15;"	d	file:
VERIFY_IS_APPROX	tools/eigen/test/main.h	276;"	d
VERIFY_IS_APPROX_ABS	tools/eigen/unsupported/test/matrix_function.cpp	15;"	d	file:
VERIFY_IS_APPROX_EVALUATOR	tools/eigen/test/evaluators.cpp	78;"	d	file:
VERIFY_IS_APPROX_EVALUATOR2	tools/eigen/test/evaluators.cpp	79;"	d	file:
VERIFY_IS_APPROX_OR_LESS_THAN	tools/eigen/test/main.h	280;"	d
VERIFY_IS_EQUAL	tools/eigen/test/main.h	274;"	d
VERIFY_IS_MUCH_SMALLER_THAN	tools/eigen/test/main.h	278;"	d
VERIFY_IS_NOT_APPROX	tools/eigen/test/integer_types.cpp	16;"	d	file:
VERIFY_IS_NOT_APPROX	tools/eigen/test/integer_types.cpp	17;"	d	file:
VERIFY_IS_NOT_APPROX	tools/eigen/test/main.h	277;"	d
VERIFY_IS_NOT_APPROX_OR_LESS_THAN	tools/eigen/test/main.h	281;"	d
VERIFY_IS_NOT_EQUAL	tools/eigen/test/main.h	275;"	d
VERIFY_IS_NOT_MUCH_SMALLER_THAN	tools/eigen/test/main.h	279;"	d
VERIFY_IS_UNITARY	tools/eigen/test/main.h	283;"	d
VERIFY_MATRIX	tools/eigen/unsupported/test/openglsupport.cpp	20;"	d	file:
VERIFY_META_SQRT	tools/eigen/test/meta.cpp	80;"	d	file:
VERIFY_RAISES_ASSERT	tools/eigen/test/main.h	190;"	d
VERIFY_RAISES_ASSERT	tools/eigen/test/main.h	236;"	d
VERIFY_THROWS_BADALLOC	tools/eigen/test/sizeoverflow.cpp	12;"	d	file:
VERIFY_TRSM	tools/eigen/test/product_trsolve.cpp	12;"	d	file:
VERIFY_TRSM_ONTHERIGHT	tools/eigen/test/product_trsolve.cpp	21;"	d	file:
VERIFY_UNIFORM	tools/eigen/unsupported/test/openglsupport.cpp	31;"	d	file:
VERIFY_UNIFORMi	tools/eigen/unsupported/test/openglsupport.cpp	44;"	d	file:
VIPair	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef internal::vector_int_pair<Scalar, Dim> VIPair;$/;"	t	class:Eigen::KdBVH
VIPairList	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef std::vector<VIPair, aligned_allocator<VIPair> > VIPairList;$/;"	t	class:Eigen::KdBVH
VSX	tools/eigen/Eigen/src/Core/util/Constants.h	/^    VSX = 0x3,$/;"	e	enum:Eigen::Architecture::Type
ValueType	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename Functor::ValueType ValueType;$/;"	t	class:Eigen::AutoDiffJacobian
ValueType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef Matrix<Scalar,Dynamic,1> ValueType;$/;"	t	struct:Eigen::SparseFunctor
ValueType	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:Eigen::DenseFunctor
ValueType	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef typename Functor::ValueType ValueType;$/;"	t	class:Eigen::NumericalDiff
ValueType	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:Functor	file:
ValueType	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:Functor	file:
ValueType	tools/eigen/unsupported/test/autodiff.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:TestFunc1	file:
ValueType	tools/eigen/unsupported/test/forward_adolc.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:TestFunc1	file:
Values	tools/eigen/bench/sparse_setter.cpp	/^typedef std::vector<float> Values;$/;"	t	file:
ValuesAtCompileTime	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^    ValuesAtCompileTime = Functor::ValuesAtCompileTime$/;"	e	enum:Eigen::AutoDiffJacobian::__anon10
ValuesAtCompileTime	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    ValuesAtCompileTime = Dynamic$/;"	e	enum:Eigen::SparseFunctor::__anon2
ValuesAtCompileTime	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    ValuesAtCompileTime = NY$/;"	e	enum:Eigen::DenseFunctor::__anon1
ValuesAtCompileTime	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        ValuesAtCompileTime = Functor::ValuesAtCompileTime$/;"	e	enum:Eigen::NumericalDiff::__anon3
ValuesAtCompileTime	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    ValuesAtCompileTime = NY$/;"	e	enum:Functor::__anon129	file:
ValuesAtCompileTime	tools/eigen/unsupported/test/NumericalDiff.cpp	/^    ValuesAtCompileTime = NY$/;"	e	enum:Functor::__anon123	file:
ValuesAtCompileTime	tools/eigen/unsupported/test/autodiff.cpp	/^    ValuesAtCompileTime = NY$/;"	e	enum:TestFunc1::__anon128	file:
ValuesAtCompileTime	tools/eigen/unsupported/test/forward_adolc.cpp	/^    ValuesAtCompileTime = NY$/;"	e	enum:TestFunc1::__anon127	file:
Vec	tools/eigen/bench/vdw_new.cpp	/^typedef Matrix<SCALAR, Eigen::Dynamic, 1> Vec;$/;"	t	file:
Vector	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::DiagonalPreconditioner
Vector	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::IncompleteLUT
Vector	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::PastixBase
Vector	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::SuperLUBase
Vector	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::UmfPackLU
Vector	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::IncompleteLU
Vector10d	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<double,10,1> Vector10d;$/;"	t	file:
Vector12d	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<double,12,1> Vector12d;$/;"	t	file:
Vector12f	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<float, 12,1> Vector12f;$/;"	t	file:
Vector2	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Vector2	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	class:Eigen::Rotation2D
Vector2s	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,2,1> Vector2s;$/;"	t	class:Eigen::RealQZ
Vector3	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::AngleAxis
Vector3	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::QuaternionBase
Vector3	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:EulerAngles	file:
Vector3s	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealQZ
Vector3s	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealSchur
Vector5d	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<double, 5,1> Vector5d;$/;"	t	file:
Vector6d	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<double, 6,1> Vector6d;$/;"	t	file:
Vector6f	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<float,  6,1> Vector6f;$/;"	t	file:
Vector7d	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<double, 7,1> Vector7d;$/;"	t	file:
Vector8d	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<double, 8,1> Vector8d;$/;"	t	file:
Vector8f	tools/eigen/test/dynalloc.cpp	/^typedef Matrix<float,8,1> Vector8f;$/;"	t	file:
Vector8f	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<float,  8,1> Vector8f;$/;"	t	file:
Vector9d	tools/eigen/test/unalignedassert.cpp	/^typedef Matrix<double, 9,1> Vector9d;$/;"	t	file:
VectorBlock	tools/eigen/Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start)$/;"	f	class:Eigen::VectorBlock
VectorBlock	tools/eigen/Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start, Index size)$/;"	f	class:Eigen::VectorBlock
VectorBlock	tools/eigen/Eigen/src/Core/VectorBlock.h	/^template<typename VectorType, int Size> class VectorBlock$/;"	c	namespace:Eigen
VectorComparator	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^    VectorComparator(int inDim) : dim(inDim) {}$/;"	f	struct:Eigen::KdBVH::VectorComparator
VectorComparator	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  struct VectorComparator \/\/compares vectors, or, more specificall, VIPairs along a particular dimension$/;"	s	class:Eigen::KdBVH
VectorI	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::IncompleteLUT
VectorI	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SimplicialCholeskyBase
VectorI	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSelfAdjointView
VectorI	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
VectorIx	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef Matrix<StorageIndex,Dynamic, 1> VectorIx;$/;"	t	class:Eigen::IncompleteCholesky
VectorList	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef std::vector<std::list<StorageIndex> > VectorList; $/;"	t	class:Eigen::IncompleteCholesky
VectorMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef BlasVectorMapper<Scalar, Index> VectorMapper;$/;"	t	class:Eigen::internal::blas_data_mapper
VectorMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef SubMapper VectorMapper;$/;"	t	class:Eigen::internal::TensorContractionInputMapper
VectorRx	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef Matrix<RealScalar,Dynamic,1> VectorRx;$/;"	t	class:Eigen::IncompleteCholesky
VectorSx	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorSx;$/;"	t	class:Eigen::IncompleteCholesky
VectorType	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> VectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
VectorType	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, 1, Size, Options | RowMajor, 1, MaxSize> VectorType;$/;"	t	class:Eigen::HessenbergDecomposition
VectorType	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::RealVectorType VectorType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
VectorType	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1>  VectorType;$/;"	t	class:Eigen::AlignedBox
VectorType	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::Hyperplane
VectorType	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename plain_matrix_type<Derived>::type VectorType;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
VectorType	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1,Options> VectorType;$/;"	t	class:Eigen::ParametrizedLine
VectorType	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::RotationBase
VectorType	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Transform
VectorType	tools/eigen/Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Translation
VectorType	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::PardisoImpl
VectorType	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<RealScalar, Dynamic, 1> VectorType;$/;"	t	class:Eigen::BDCSVD
VectorType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholesky
VectorType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholeskyBase
VectorType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLDLT
VectorType	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLLT
VectorType	tools/eigen/test/denseLM.cpp	/^  typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	struct:DenseLM	file:
VectorType	tools/eigen/test/sparseLM.cpp	/^  typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	struct:sparseGaussianTest	file:
VectorType	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef Matrix<Scalar, Dim, 1> VectorType;$/;"	t	class:Eigen::KdBVH
VectorType	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef Matrix<Scalar, Dim, 1> VectorType;$/;"	t	struct:Eigen::internal::vector_int_pair
VectorType	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType; $/;"	t	class:Eigen::MatrixMarketIterator
VectorType	tools/eigen/unsupported/test/BVH.cpp	/^  typedef Matrix<double, Dim, 1> VectorType;$/;"	t	struct:Ball	file:
VectorType	tools/eigen/unsupported/test/BVH.cpp	/^  typedef Matrix<double, Dim, 1> VectorType;$/;"	t	struct:BallPointStuff	file:
VectorType	tools/eigen/unsupported/test/BVH.cpp	/^  typedef Matrix<double, Dim, 1> VectorType;$/;"	t	struct:TreeTest	file:
VectorType	tools/eigen/unsupported/test/FFTW.cpp	/^template<typename Scalar> struct VectorType<EigenVectorContainer,Scalar>$/;"	s	file:
VectorType	tools/eigen/unsupported/test/FFTW.cpp	/^template<typename Scalar> struct VectorType<StdVectorContainer,Scalar>$/;"	s	file:
VectorTypeList	tools/eigen/unsupported/test/BVH.cpp	/^  typedef std::vector<VectorType, aligned_allocator<VectorType> > VectorTypeList;$/;"	t	struct:TreeTest	file:
VectorX	tools/eigen/bench/sparse_lu.cpp	/^typedef Matrix<Scalar,Dynamic,1> VectorX;$/;"	t	file:
Vectorizable	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    Vectorizable = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon258
Vectorizable	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
Vectorizable	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
Vectorizable	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
Vectorizable	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon367
Vectorizable	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
Vectorizable	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
Vectorizable	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
Vectorizable	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon325
Vectorizable	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon328
Vectorizable	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
Vectorizable	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
Vectorizable	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
Vectorizable	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
Vectorizable	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon351
Vectorizable	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon352
Vectorizable	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
Vectorizable	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
Vectorizable	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
Vectorizable	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
Vectorizable	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon342
Vectorizable	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon343
Vectorizable	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Vectorizable = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasDiv && packet_traits<RhsScalar>::HasDiv$/;"	e	enum:Eigen::internal::scalar_quotient_op::__anon411
Vectorizable	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^    Vectorizable = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasMul && packet_traits<RhsScalar>::HasMul$/;"	e	enum:Eigen::internal::scalar_product_op::__anon401
Vectorizable	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable  = Traits::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon274
Vectorizable	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
Vectorizable	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
Vectorizable	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
Vectorizable	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
Vectorizable	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon266
Vectorizable	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon267
Vectorized	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    Vectorized = int(Traversal) == InnerVectorizedTraversal$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon642
VectorizedCast	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon260
VectorizedCast	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon357
VectorizedCast	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon358
VectorizedCast	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon330
VectorizedCast	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon331
VectorizedCast	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon332
VectorizedCast	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon333
VectorizedSize	tools/eigen/Eigen/src/Core/Redux.h	/^    VectorizedSize = (Size \/ PacketSize) * PacketSize$/;"	e	enum:Eigen::internal::redux_impl::__anon636
VectorwiseOp	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    explicit inline VectorwiseOp(ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::VectorwiseOp
VectorwiseOp	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^template<typename ExpressionType, int Direction> class VectorwiseOp$/;"	c	namespace:Eigen
Vertical	tools/eigen/Eigen/src/Core/util/Constants.h	/^  Vertical, $/;"	e	enum:Eigen::DirectionType
VmlSize	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^      VmlSize = MightLinearize ? MaxSizeAtCompileTime : InnerMaxSize,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon584
Volume	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef AlignedBox<Scalar, Dim> Volume;$/;"	t	class:Eigen::KdBVH
VolumeIterator	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef const int *VolumeIterator; \/\/the iterators are just pointers into the tree's vectors$/;"	t	class:Eigen::KdBVH
VolumeList	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef std::vector<Volume, aligned_allocator<Volume> > VolumeList;$/;"	t	class:Eigen::KdBVH
W	tools/eigen/blas/testing/cblat3.f	/^     $                   CC( NMAX*NMAX ), CS( NMAX*NMAX ), CT( NMAX ),$/;"	v	program:CBLAT3
W	tools/eigen/blas/testing/dblat3.f	/^     $                   G( NMAX ), W(/;"	v	program:DBLAT3
W	tools/eigen/blas/testing/sblat3.f	/^     $                   G( NMAX ), W(/;"	v	program:SBLAT3
W	tools/eigen/blas/testing/zblat3.f	/^     $                   CC( NMAX*NMAX ), CS( NMAX*NMAX ), CT( NMAX ),$/;"	v	program:ZBLAT3
WIN32_LEAN_AND_MEAN	tools/eigen/bench/BenchTimer.h	184;"	d
WIN32_LEAN_AND_MEAN	tools/eigen/bench/BenchTimer.h	20;"	d
WORK	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	108;"	d
WORK	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	148;"	d
WORK	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	205;"	d
WORK	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	245;"	d
WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
WaitForNotification	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  void WaitForNotification() {$/;"	f	class:Eigen::Notification
Waiter	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  struct Waiter {$/;"	s	class:Eigen::ThreadPool
WithFormat	tools/eigen/Eigen/src/Core/IO.h	/^    WithFormat(const ExpressionType& matrix, const IOFormat& format)$/;"	f	class:Eigen::WithFormat
WithFormat	tools/eigen/Eigen/src/Core/IO.h	/^class WithFormat$/;"	c	namespace:Eigen
WorkMatrixType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^            WorkMatrixType;$/;"	t	class:Eigen::JacobiSVD
WorkVectorType	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^                 MatrixType::MaxRowsAtCompileTime> WorkVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
WorkerLoop	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  void WorkerLoop() {$/;"	f	class:Eigen::ThreadPool
WorkspaceType	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typedef Matrix<Scalar, 1, RowsAtCompileTime, RowMajor, 1, MaxRowsAtCompileTime> WorkspaceType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Write	tools/SimpleIni.h	/^        void Write(const char * a_pBuf) {$/;"	f	class:CSimpleIniTempl::FileWriter
Write	tools/SimpleIni.h	/^        void Write(const char * a_pBuf) {$/;"	f	class:CSimpleIniTempl::StreamWriter
Write	tools/SimpleIni.h	/^        void Write(const char * a_pBuf) {$/;"	f	class:CSimpleIniTempl::StringWriter
WriteAccessors	tools/eigen/Eigen/src/Core/util/Constants.h	/^  WriteAccessors, $/;"	e	enum:Eigen::AccessorLevels
X	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_aat_product
X	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_ata_product
X	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::gene_vector X;$/;"	m	class:Action_atv_product
X	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::gene_vector X;$/;"	m	class:Action_axpby
X	tools/eigen/bench/btl/actions/action_axpy.hh	/^  typename Interface::gene_vector X;$/;"	m	class:Action_axpy
X	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_cholesky
X	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::gene_vector X;$/;"	m	class:Action_ger
X	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_hessenberg
X	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_tridiagonalization
X	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_lu_decomp
X	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_matrix_matrix_product
X	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::gene_vector X;$/;"	m	class:Action_matrix_vector_product
X	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_partial_lu
X	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::gene_vector X;$/;"	m	class:Action_symv
X	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::gene_vector X;$/;"	m	class:Action_syr2
X	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  typename Interface::gene_vector X;$/;"	m	class:Action_trisolve
X	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_trisolve_matrix
X	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::gene_matrix X;$/;"	m	class:Action_trmm
X	tools/eigen/blas/testing/cblat2.f	/^     $                   ALF( NALMAX /;"	v	program:CBLAT2
X	tools/eigen/blas/testing/dblat2.f	/^     $                   G( NMAX /;"	v	program:DBLAT2
X	tools/eigen/blas/testing/sblat2.f	/^     $                   G( NMAX /;"	v	program:SBLAT2
X	tools/eigen/blas/testing/zblat2.f	/^     $                   ALF( NALMAX /;"	v	program:ZBLAT2
X	tools/eigen/demos/opengl/icosphere.cpp	20;"	d	file:
X	tools/eigen/doc/snippets/PartialPivLU_solve.cpp	/^MatrixXd X = A.lu().solve(B);$/;"	v
X	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver.cpp	/^Matrix4f X = Matrix4f::Random(4,4);$/;"	v
X	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^MatrixXd X = MatrixXd::Random(5,5);$/;"	v
X	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^MatrixXd X = MatrixXd::Random(5,5);$/;"	v
X	tools/eigen/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType.cpp	/^MatrixXf X = MatrixXf::Random(4,4);$/;"	v
X	tools/eigen/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType2.cpp	/^MatrixXd X = MatrixXd::Random(5,5);$/;"	v
X	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorInverseSqrt.cpp	/^MatrixXd X = MatrixXd::Random(4,4);$/;"	v
X	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorSqrt.cpp	/^MatrixXd X = MatrixXd::Random(4,4);$/;"	v
X	tools/eigen/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp	/^MatrixXd X = MatrixXd::Random(5,5);$/;"	v
X	tools/eigen/doc/snippets/Tridiagonalization_compute.cpp	/^MatrixXf X = MatrixXf::Random(4,4);$/;"	v
X	tools/eigen/doc/snippets/Tridiagonalization_decomposeInPlace.cpp	/^MatrixXd X = MatrixXd::Random(5,5);$/;"	v
X	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^MatrixXcd X = MatrixXcd::Random(4,4);$/;"	v
X	tools/eigen/doc/snippets/Tridiagonalization_householderCoefficients.cpp	/^Matrix4d X = Matrix4d::Random(4,4);$/;"	v
X	tools/eigen/doc/snippets/Tridiagonalization_packedMatrix.cpp	/^Matrix4d X = Matrix4d::Random(4,4);$/;"	v
X	tools/eigen/doc/snippets/Tutorial_solve_multiple_rhs.cpp	/^Matrix<float,3,2> X;$/;"	v
X86_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/x86_perf_analyzer.hh	/^  X86_Perf_Analyzer( const X86_Perf_Analyzer & ){$/;"	f	class:X86_Perf_Analyzer
X86_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/x86_perf_analyzer.hh	/^  X86_Perf_Analyzer( unsigned long long nb_sample=DEFAULT_NB_SAMPLE):_nb_sample(nb_sample),_chronos()$/;"	f	class:X86_Perf_Analyzer
X86_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/x86_perf_analyzer.hh	/^class X86_Perf_Analyzer{$/;"	c
X86_Timer	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  X86_Timer( void ):_frequency(FREQUENCY),_nb_sample(0)$/;"	f	class:X86_Timer
X86_Timer	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^class X86_Timer {$/;"	c
XERBLA	tools/eigen/blas/testing/cblat2.f	/^      SUBROUTINE XERBLA(/;"	s
XERBLA	tools/eigen/blas/testing/cblat3.f	/^      SUBROUTINE XERBLA(/;"	s
XERBLA	tools/eigen/blas/testing/dblat2.f	/^      SUBROUTINE XERBLA(/;"	s
XERBLA	tools/eigen/blas/testing/dblat3.f	/^      SUBROUTINE XERBLA(/;"	s
XERBLA	tools/eigen/blas/testing/sblat2.f	/^      SUBROUTINE XERBLA(/;"	s
XERBLA	tools/eigen/blas/testing/sblat3.f	/^      SUBROUTINE XERBLA(/;"	s
XERBLA	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE XERBLA(/;"	s
XERBLA	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE XERBLA(/;"	s
XS	tools/eigen/blas/testing/cblat2.f	/^     $                   X( NMAX ), XS(/;"	v	program:CBLAT2
XS	tools/eigen/blas/testing/dblat2.f	/^     $                   G( NMAX ), X( NMAX ), XS(/;"	v	program:DBLAT2
XS	tools/eigen/blas/testing/sblat2.f	/^     $                   G( NMAX ), X( NMAX ), XS(/;"	v	program:SBLAT2
XS	tools/eigen/blas/testing/zblat2.f	/^     $                   X( NMAX ), XS(/;"	v	program:ZBLAT2
XX	tools/eigen/blas/testing/cblat2.f	/^     $                   X( NMAX ), XS( NMAX*INCMAX ),$/;"	v	program:CBLAT2
XX	tools/eigen/blas/testing/dblat2.f	/^     $                   G( NMAX ), X( NMAX ), XS( NMAX*INCMAX ),$/;"	v	program:DBLAT2
XX	tools/eigen/blas/testing/sblat2.f	/^     $                   G( NMAX ), X( NMAX ), XS( NMAX*INCMAX ),$/;"	v	program:SBLAT2
XX	tools/eigen/blas/testing/zblat2.f	/^     $                   X( NMAX ), XS( NMAX*INCMAX ),$/;"	v	program:ZBLAT2
XY_FILE_HH	tools/eigen/bench/btl/generic_bench/utils/xy_file.hh	21;"	d
X_ref	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_aat_product
X_ref	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_ata_product
X_ref	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::gene_vector X_ref;$/;"	m	class:Action_atv_product
X_ref	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::gene_vector X_ref;$/;"	m	class:Action_axpby
X_ref	tools/eigen/bench/btl/actions/action_axpy.hh	/^  typename Interface::gene_vector X_ref;$/;"	m	class:Action_axpy
X_ref	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_cholesky
X_ref	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::gene_vector X_ref;$/;"	m	class:Action_ger
X_ref	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_hessenberg
X_ref	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_tridiagonalization
X_ref	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_lu_decomp
X_ref	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_matrix_matrix_product
X_ref	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::gene_vector X_ref;$/;"	m	class:Action_matrix_vector_product
X_ref	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_partial_lu
X_ref	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::gene_vector X_ref;$/;"	m	class:Action_symv
X_ref	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::gene_vector X_ref;$/;"	m	class:Action_syr2
X_ref	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_trisolve_matrix
X_ref	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::gene_matrix X_ref;$/;"	m	class:Action_trmm
X_stl	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_aat_product
X_stl	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_ata_product
X_stl	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::stl_vector X_stl;$/;"	m	class:Action_atv_product
X_stl	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::stl_vector X_stl;$/;"	m	class:Action_axpby
X_stl	tools/eigen/bench/btl/actions/action_axpy.hh	/^  typename Interface::stl_vector X_stl;$/;"	m	class:Action_axpy
X_stl	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_cholesky
X_stl	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::stl_vector X_stl;$/;"	m	class:Action_ger
X_stl	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_hessenberg
X_stl	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_tridiagonalization
X_stl	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_lu_decomp
X_stl	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_matrix_matrix_product
X_stl	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::stl_vector X_stl;$/;"	m	class:Action_matrix_vector_product
X_stl	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_partial_lu
X_stl	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::stl_vector X_stl;$/;"	m	class:Action_symv
X_stl	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::stl_vector X_stl;$/;"	m	class:Action_syr2
X_stl	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  typename Interface::stl_vector X_stl;$/;"	m	class:Action_trisolve
X_stl	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_trisolve_matrix
X_stl	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::stl_matrix X_stl;$/;"	m	class:Action_trmm
Xpr	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef CwiseBinaryOp<internal::scalar_sum_op<typename Lhs::Scalar>, const LinearProduct, const ConstantBlock> Xpr;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
Xpr	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef CwiseBinaryOp<internal::scalar_sum_op<typename Lhs::Scalar>, const LinearProduct, const ConstantBlock> Xpr;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
XprBase	tools/eigen/Eigen/src/Core/Array.h	/^  typedef ArrayBase<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > XprBase;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/Array.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename traits<Ancestor>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename traits<DiagonalVectorType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/Matrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/Product.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef traits<LhsXprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef traits<ThenXprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprTraits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef traits<XprType> XprTraits;$/;"	t	struct:Eigen::internal::traits
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Array<Scalar, Rows, Cols, Options, MaxRows, MaxCols> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef ArrayWrapper<TArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::block_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseNullaryOp<NullaryOp,PlainObjectType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseUnaryOp<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseUnaryView<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Derived  XprType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Diagonal<ArgType, DiagIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef EvalToTemp<ArgType>                   XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Map<PlainObjectType, MapOptions, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Matrix<Scalar, Rows, Cols, Options, MaxRows, MaxCols> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef MatrixWrapper<TArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef PartialReduxExpr<ArgType, MemberOp, Direction> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Ref<PlainObjectType, RefOptions, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Replicate<ArgType, RowFactor, ColFactor> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Reverse<ArgType, Direction> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef Transpose<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef CwiseUnaryOp<internal::scalar_multiple_op<Scalar>, const Product<Lhs, Rhs, DefaultProduct> > XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef Diagonal<const Product<Lhs, Rhs, DefaultProduct>, DiagIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, LazyProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, Options> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, Options> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, ProductKind> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/Core/Redux.h	/^  typedef _XprType XprType;$/;"	t	class:Eigen::internal::redux_evaluator
XprType	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^  typedef ReturnByValue<Derived> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  typedef TriangularView<MatrixType,Mode> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_multiple_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Direction> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<Lhs, Rhs, LazyProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^  typedef MappedSparseMatrix<_Scalar,_Options,_StorageIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<ArgType,BlockRows,BlockCols,InnerPanel> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  typedef Block<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  typedef Block<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryOp<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryView<ViewOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Product<Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef Product<Lhs, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^  typedef Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^  typedef Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef Product<Lhs, Rhs, AliasFreeProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^  typedef SparseView<Product<Lhs, Rhs, Options> > XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef Product<Lhs, RhsView, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef Product<LhsView, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef Transpose<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef TriangularView<ArgType,Mode> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    typedef SparseView<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef TensorIndexTupleOp<ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef TensorTupleReducerOp<ReduceOp, Dims, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef TensorAssignOp<LeftArgType, RightArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef TensorBroadcastingOp<Broadcast, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef TensorChippingOp<DimId, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef TensorConcatenationOp<Axis, LeftArgType, RightArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorContractionOp<Indices, LeftArgType, RightArgType> XprType;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorContractionOp<Indices, LeftArgType, RightArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef TensorContractionOp<Indices, LeftArgType, RightArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef TensorContractionOp<Indices, LeftArgType, RightArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef TensorConversionOp<TargetType, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef TensorConvolutionOp<Indices, InputArgType, KernelArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef TensorCustomBinaryOp<CustomBinaryFunc, LhsXprType, RhsXprType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef TensorEvalToOp<ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef TensorCwiseBinaryOp<BinaryOp, LeftArgType, RightArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef TensorCwiseNullaryOp<NullaryOp, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef TensorCwiseUnaryOp<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  typedef TensorSelectOp<IfArgType, ThenArgType, ElseArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef TensorForcedEvalOp<ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef TensorGeneratorOp<Generator, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef TensorImagePatchOp<Rows, Cols, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef TensorInflationOp<Strides, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef TensorLayoutSwapOp<ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef TensorReshapingOp<NewDimensions, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef TensorSlicingOp<StartIndices, Sizes, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef TensorPaddingOp<PaddingDimensions, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef TensorPatchOp<PatchDim, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef TensorReductionOp<Op, Dims, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef TensorReverseOp<ReverseDimensions, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef TensorShufflingOp<Shuffle, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef TensorStridingOp<Strides, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprType	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef TensorVolumePatchOp<Planes, Rows, Cols, ArgType> XprType;$/;"	t	struct:Eigen::TensorEvaluator
XprTypeIsRowMajor	tools/eigen/Eigen/src/Core/Block.h	/^      XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0$/;"	e	enum:Eigen::internal::BlockImpl_dense::__anon247
XprTypeIsRowMajor	tools/eigen/Eigen/src/Core/Block.h	/^    XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::traits::__anon246
XprTypeNested	tools/eigen/Eigen/src/Core/Block.h	/^  typedef typename ref_selector<XprType>::type XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNested	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename XprType::Nested XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNested	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef typename internal::ref_selector<XprType>::type      XprTypeNested;$/;"	t	class:Eigen::Inverse
XprTypeNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename XprType::Nested XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNestedCleaned	tools/eigen/Eigen/src/Core/Inverse.h	/^  typedef typename internal::remove_all<XprTypeNested>::type  XprTypeNestedCleaned;$/;"	t	class:Eigen::Inverse
XtolTooSmall	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^        XtolTooSmall = 7,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
XtolTooSmall	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        XtolTooSmall = 7,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
Y	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::gene_vector Y;$/;"	m	class:Action_axpby
Y	tools/eigen/bench/btl/actions/action_axpy.hh	/^  typename Interface::gene_vector Y;$/;"	m	class:Action_axpy
Y	tools/eigen/blas/testing/cblat2.f	/^     $                   XX( NMAX*INCMAX ), Y(/;"	v	program:CBLAT2
Y	tools/eigen/blas/testing/dblat2.f	/^     $                   XX( NMAX*INCMAX ), Y(/;"	v	program:DBLAT2
Y	tools/eigen/blas/testing/sblat2.f	/^     $                   XX( NMAX*INCMAX ), Y(/;"	v	program:SBLAT2
Y	tools/eigen/blas/testing/zblat2.f	/^     $                   XX( NMAX*INCMAX ), Y(/;"	v	program:ZBLAT2
YOU_ALREADY_SPECIFIED_THIS_STRIDE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_ALREADY_SPECIFIED_THIS_STRIDE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_CANNOT_MIX_ARRAYS_AND_MATRICES	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CANNOT_MIX_ARRAYS_AND_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_MADE_A_PROGRAMMING_MISTAKE	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MADE_A_PROGRAMMING_MISTAKE,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^        YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX,$/;"	e	enum:Eigen::internal::static_assertion::__anon558
YS	tools/eigen/blas/testing/cblat2.f	/^     $                   XX( NMAX*INCMAX ), Y( NMAX ),$/;"	v	program:CBLAT2
YS	tools/eigen/blas/testing/dblat2.f	/^     $                   XX( NMAX*INCMAX ), Y( NMAX ),$/;"	v	program:DBLAT2
YS	tools/eigen/blas/testing/sblat2.f	/^     $                   XX( NMAX*INCMAX ), Y( NMAX ),$/;"	v	program:SBLAT2
YS	tools/eigen/blas/testing/zblat2.f	/^     $                   XX( NMAX*INCMAX ), Y( NMAX ),$/;"	v	program:ZBLAT2
YT	tools/eigen/blas/testing/cblat2.f	/^     $                   YS( NMAX*INCMAX ), YT(/;"	v	program:CBLAT2
YT	tools/eigen/blas/testing/dblat2.f	/^     $                   YS( NMAX*INCMAX ), YT(/;"	v	program:DBLAT2
YT	tools/eigen/blas/testing/sblat2.f	/^     $                   YS( NMAX*INCMAX ), YT(/;"	v	program:SBLAT2
YT	tools/eigen/blas/testing/zblat2.f	/^     $                   YS( NMAX*INCMAX ), YT(/;"	v	program:ZBLAT2
YY	tools/eigen/blas/testing/cblat2.f	/^     $                   YS( NMAX*INCMAX ), YT( NMAX ),$/;"	v	program:CBLAT2
YY	tools/eigen/blas/testing/dblat2.f	/^     $                   YS( NMAX*INCMAX ), YT( NMAX ),$/;"	v	program:DBLAT2
YY	tools/eigen/blas/testing/sblat2.f	/^     $                   YS( NMAX*INCMAX ), YT( NMAX ),$/;"	v	program:SBLAT2
YY	tools/eigen/blas/testing/zblat2.f	/^     $                   YS( NMAX*INCMAX ), YT( NMAX ),$/;"	v	program:ZBLAT2
Y_ref	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::gene_vector Y_ref;$/;"	m	class:Action_axpby
Y_ref	tools/eigen/bench/btl/actions/action_axpy.hh	/^  typename Interface::gene_vector Y_ref;$/;"	m	class:Action_axpy
Y_stl	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::stl_vector Y_stl;$/;"	m	class:Action_axpby
Y_stl	tools/eigen/bench/btl/actions/action_axpy.hh	/^  typename Interface::stl_vector Y_stl;$/;"	m	class:Action_axpy
Z	tools/eigen/blas/testing/cblat2.f	/^     $                   YY( NMAX*INCMAX ), Z(/;"	v	program:CBLAT2
Z	tools/eigen/blas/testing/dblat2.f	/^     $                   YY( NMAX*INCMAX ), Z(/;"	v	program:DBLAT2
Z	tools/eigen/blas/testing/sblat2.f	/^     $                   YY( NMAX*INCMAX ), Z(/;"	v	program:SBLAT2
Z	tools/eigen/blas/testing/zblat2.f	/^     $                   YY( NMAX*INCMAX ), Z(/;"	v	program:ZBLAT2
Z	tools/eigen/demos/opengl/icosphere.cpp	21;"	d	file:
ZBEG	tools/eigen/blas/testing/zblat2.f	/^      COMPLEX*16 FUNCTION ZBEG(/;"	f
ZBEG	tools/eigen/blas/testing/zblat3.f	/^      COMPLEX*16     FUNCTION ZBEG(/;"	f
ZBLAT1	tools/eigen/blas/testing/zblat1.f	/^      PROGRAM ZBLAT1$/;"	p
ZBLAT2	tools/eigen/blas/testing/zblat2.f	/^      PROGRAM ZBLAT2$/;"	p
ZBLAT3	tools/eigen/blas/testing/zblat3.f	/^      PROGRAM ZBLAT3$/;"	p
ZCHK1	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZCHK1(/;"	s
ZCHK1	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE ZCHK1(/;"	s
ZCHK2	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZCHK2(/;"	s
ZCHK2	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE ZCHK2(/;"	s
ZCHK3	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZCHK3(/;"	s
ZCHK3	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE ZCHK3(/;"	s
ZCHK4	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZCHK4(/;"	s
ZCHK4	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE ZCHK4(/;"	s
ZCHK5	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZCHK5(/;"	s
ZCHK5	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE ZCHK5(/;"	s
ZCHK6	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZCHK6(/;"	s
ZCHKE	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZCHKE(/;"	s
ZCHKE	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE ZCHKE(/;"	s
ZDOTC	tools/eigen/blas/fortran/complexdots.f	/^      DOUBLE COMPLEX FUNCTION ZDOTC(/;"	f
ZDOTU	tools/eigen/blas/fortran/complexdots.f	/^      DOUBLE COMPLEX FUNCTION ZDOTU(/;"	f
ZERO	tools/eigen/blas/testing/cblat2.f	/^      COMPLEX            ZERO,/;"	v	program:CBLAT2
ZERO	tools/eigen/blas/testing/cblat3.f	/^      COMPLEX            ZERO,/;"	v	program:CBLAT3
ZERO	tools/eigen/blas/testing/dblat2.f	/^      DOUBLE PRECISION   ZERO,/;"	v	program:DBLAT2
ZERO	tools/eigen/blas/testing/dblat3.f	/^      DOUBLE PRECISION   ZERO,/;"	v	program:DBLAT3
ZERO	tools/eigen/blas/testing/sblat2.f	/^      REAL               ZERO,/;"	v	program:SBLAT2
ZERO	tools/eigen/blas/testing/sblat3.f	/^      REAL               ZERO,/;"	v	program:SBLAT3
ZERO	tools/eigen/blas/testing/zblat2.f	/^      COMPLEX*16         ZERO,/;"	v	program:ZBLAT2
ZERO	tools/eigen/blas/testing/zblat3.f	/^      COMPLEX*16         ZERO,/;"	v	program:ZBLAT3
ZLACGV	tools/eigen/lapack/zlacgv.f	/^      SUBROUTINE ZLACGV(/;"	s
ZLADIV	tools/eigen/lapack/zladiv.f	/^      COMPLEX*16     FUNCTION ZLADIV(/;"	f
ZLARF	tools/eigen/lapack/zlarf.f	/^      SUBROUTINE ZLARF(/;"	s
ZLARFB	tools/eigen/lapack/zlarfb.f	/^      SUBROUTINE ZLARFB(/;"	s
ZLARFG	tools/eigen/lapack/zlarfg.f	/^      SUBROUTINE ZLARFG(/;"	s
ZLARFT	tools/eigen/lapack/zlarft.f	/^      SUBROUTINE ZLARFT(/;"	s
ZMAKE	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZMAKE(/;"	s
ZMAKE	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE ZMAKE(/;"	s
ZMMCH	tools/eigen/blas/testing/zblat3.f	/^      SUBROUTINE ZMMCH(/;"	s
ZMVCH	tools/eigen/blas/testing/zblat2.f	/^      SUBROUTINE ZMVCH(/;"	s
Zero	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero()$/;"	f	class:Eigen::DenseBase
Zero	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Zero	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index size)$/;"	f	class:Eigen::DenseBase
ZeroDiag	tools/eigen/Eigen/src/Core/util/Constants.h	/^  ZeroDiag=0x8,$/;"	e	enum:Eigen::__anon492
ZeroSign	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
_BENCH_FIXED_SIZE_HH_	tools/eigen/bench/btl/generic_bench/static/intel_bench_fixed_size.hh	21;"	d
_EIGEN_ACCUMULATE_PACKETS	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	100;"	d
_EIGEN_ACCUMULATE_PACKETS	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	321;"	d
_EIGEN_ACCUMULATE_PACKETS	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	377;"	d
_EIGEN_ACCUMULATE_PACKETS	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	612;"	d
_EIGEN_ALIGNED_PTR	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	93;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4f	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	44;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4i	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	47;"	d
_EIGEN_DECLARE_CONST_Packet2d	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	56;"	d
_EIGEN_DECLARE_CONST_Packet2d	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	82;"	d
_EIGEN_DECLARE_CONST_Packet2l	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	59;"	d
_EIGEN_DECLARE_CONST_Packet4d	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	42;"	d
_EIGEN_DECLARE_CONST_Packet4f	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	50;"	d
_EIGEN_DECLARE_CONST_Packet4f	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	43;"	d
_EIGEN_DECLARE_CONST_Packet4f	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	79;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	62;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	46;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	85;"	d
_EIGEN_DECLARE_CONST_Packet4i	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	53;"	d
_EIGEN_DECLARE_CONST_Packet4i	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	49;"	d
_EIGEN_DECLARE_CONST_Packet4i	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	88;"	d
_EIGEN_DECLARE_CONST_Packet8f	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	39;"	d
_EIGEN_DECLARE_CONST_Packet8f_FROM_INT	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	45;"	d
_EIGEN_DECLARE_CONST_Packet8i	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	48;"	d
_EIGEN_MASK_ALIGNMENT	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	88;"	d
_EIGEN_MASK_ALIGNMENT	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	90;"	d
_EIGEN_SKYLINE_GENERIC_PUBLIC_INTERFACE	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	52;"	d
_EIGEN_SPARSE_PUBLIC_INTERFACE	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	43;"	d
_ExtractType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType> _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_ExtractType	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  typedef XprType _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_FLOAT	tools/eigen/bench/benchBlasGemm.cpp	7;"	d	file:
_Flags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^          _Flags = traits<T>::Flags$/;"	e	enum:Eigen::internal::eval::__anon37
_GENERATE_HEADER	tools/eigen/bench/basicbenchmark.cpp	15;"	d	file:
_HasDirectAccess	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^      _HasDirectAccess = (int(Flags)&DirectAccessBit) ? 1 : 0 \/\/ workaround sunCC$/;"	e	enum:Eigen::SparseMatrixBase::__anon221
_Lhs	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Lhs>::type _Lhs;$/;"	t	struct:Eigen::internal::product_type
_LhsNested	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_LhsNested	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename internal::remove_all<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename traits<SkylineProduct>::_LhsNested _LhsNested;$/;"	t	class:Eigen::internal::SkylineProduct
_LhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_LhsPacket	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_LinearAccessMask	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    _LinearAccessMask = (MatrixType::RowsAtCompileTime==1 || MatrixType::ColsAtCompileTime==1) ? LinearAccessBit : 0,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
_MIXED_PERF_ANALYSER_HH	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	21;"	d
_MatrixType	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename internal::pastix_traits<Derived>::MatrixType _MatrixType;$/;"	t	class:Eigen::PastixBase
_MatrixTypeNested	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	tools/eigen/Eigen/src/Core/Diagonal.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	tools/eigen/Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::Replicate
_MatrixTypeNested	tools/eigen/Eigen/src/Core/Replicate.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	tools/eigen/Eigen/src/Core/Reverse.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::traits<PartialReduxExpr>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::PartialReduxExpr
_MatrixTypeNested	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::remove_all<typename SparseMatrixType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
_MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::remove_all<typename XprType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::BlockImpl
_MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
_MatrixTypeNested	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseView
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef typename remove_reference<Nested>::type _Nested;$/;"	t	struct:Eigen::internal::traits
_Options	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^    enum { _Options = ((traits<T>::Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::sparse_eval::__anon231
_Options	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  enum { _Options = ((evaluator<T>::Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::plain_matrix_type::__anon232
_PORTABLE_PERF_ANALYZER_HH	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	22;"	d
_PORTABLE_PERF_ANALYZER_HH	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	21;"	d
_PORTABLE_TIMER_HH	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	23;"	d
_PROBLEM_HH_	problem.hh	2;"	d
_REDSVD_MODULE_HH_	tools/RedSVD.hh	27;"	d
_RUN_BENCH	tools/eigen/bench/basicbenchmark.cpp	23;"	d	file:
_ResPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
_ResPacket	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_Rhs	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Rhs>::type _Rhs;$/;"	t	struct:Eigen::internal::product_type
_RhsNested	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_RhsNested	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename internal::remove_all<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename traits<SkylineProduct>::_RhsNested _RhsNested;$/;"	t	class:Eigen::internal::SkylineProduct
_RhsPacket	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_RhsPacket	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_STATIC_SIZE_GENERATOR_HH	tools/eigen/bench/btl/generic_bench/static/static_size_generator.hh	21;"	d
_STL_PERF_ANALYSER_HH	tools/eigen/bench/btl/generic_bench/timers/STL_perf_analyzer.hh	21;"	d
_SameTypes	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    _SameTypes = is_same<typename MatrixType::Scalar, typename DiagonalType::Scalar>::value,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
_Scalar	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::sparse_eval
_Scalar	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::plain_matrix_type
_Scalar	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^    typedef typename traits<T>::Scalar _Scalar;$/;"	t	class:Eigen::internal::eval
_ScalarAccessOnDiag	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    _ScalarAccessOnDiag =  !((int(_StorageOrder) == ColMajor && int(ProductOrder) == OnTheLeft)$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
_StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::StorageIndex _StorageIndex;$/;"	t	struct:Eigen::internal::sparse_eval
_StorageIndex	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::StorageIndex _StorageIndex;$/;"	t	struct:Eigen::internal::plain_matrix_type
_StorageOrder	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    _StorageOrder = MatrixFlags & RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
_TOP_HH_	Top.hh	2;"	d
_Vectorizable	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    _Vectorizable = bool(int(MatrixFlags)&PacketAccessBit) && _SameTypes && (_ScalarAccessOnDiag || (bool(int(DiagFlags)&PacketAccessBit))),$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon386
_X86_PERF_ANALYSER_HH	tools/eigen/bench/btl/generic_bench/timers/x86_perf_analyzer.hh	21;"	d
_X86_TIMER_HH	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	21;"	d
_XprTypeNested	tools/eigen/Eigen/src/Core/Block.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
_XprTypeNested	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
_XprTypeNested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
__DBL_EPSILON__	tools/eigen/Eigen/src/Core/util/Meta.h	122;"	d
__EIGEN_DATATYPES_H__	tools/eigen/blas/f2c/datatypes.h	6;"	d
__FLT_EPSILON__	tools/eigen/Eigen/src/Core/util/Meta.h	121;"	d
__MPREAL_H__	tools/eigen/unsupported/test/mpreal/mpreal.h	48;"	d
__has_feature	tools/eigen/Eigen/src/Core/util/Macros.h	333;"	d
__has_feature	tools/eigen/unsupported/test/mpreal/mpreal.h	86;"	d
__init__	tools/eigen/debug/gdb/printers.py	/^		def __init__ (self, dataPtr):$/;"	m	class:EigenQuaternionPrinter._iterator
__init__	tools/eigen/debug/gdb/printers.py	/^		def __init__ (self, rows, cols, dataPtr, rowMajor):$/;"	m	class:EigenMatrixPrinter._iterator
__init__	tools/eigen/debug/gdb/printers.py	/^	def __init__(self, val):$/;"	m	class:EigenQuaternionPrinter
__init__	tools/eigen/debug/gdb/printers.py	/^	def __init__(self, variety, val):$/;"	m	class:EigenMatrixPrinter
__iter__	tools/eigen/debug/gdb/printers.py	/^		def __iter__ (self):$/;"	m	class:EigenMatrixPrinter._iterator	file:
__iter__	tools/eigen/debug/gdb/printers.py	/^		def __iter__ (self):$/;"	m	class:EigenQuaternionPrinter._iterator	file:
__next__	tools/eigen/debug/gdb/printers.py	/^		def __next__(self):$/;"	m	class:EigenMatrixPrinter._iterator	file:
__next__	tools/eigen/debug/gdb/printers.py	/^		def __next__(self):$/;"	m	class:EigenQuaternionPrinter._iterator	file:
_ac4r	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  > _ac4r;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
_alpha	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::real_type _alpha;$/;"	m	class:Action_axpby
_assignProduct	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^TriangularView<MatrixType,UpLo>& TriangularViewImpl<MatrixType,UpLo,Dense>::_assignProduct(const ProductType& prod, const Scalar& alpha)$/;"	f	class:Eigen::TriangularViewImpl
_beta	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::real_type _beta;$/;"	m	class:Action_axpby
_check_template_params	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::PlainObjectBase
_check_template_params	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::Quaternion
_chronos	tools/eigen/bench/btl/generic_bench/timers/STL_perf_analyzer.hh	/^  STL_Timer _chronos;$/;"	m	class:STL_Perf_Analyzer
_chronos	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  Portable_Timer _chronos;$/;"	m	class:Portable_Perf_Analyzer
_chronos	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  Portable_Timer _chronos;$/;"	m	class:Portable_Perf_Analyzer
_chronos	tools/eigen/bench/btl/generic_bench/timers/x86_perf_analyzer.hh	/^  X86_Timer _chronos;$/;"	m	class:X86_Perf_Analyzer
_cil	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef contained_in_list_gf<Equality, first_generator, elements> _cil;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
_cil	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef contained_in_list_gf<Equality, new_coset_rep, elements> _cil;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
_click_start	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  } _click_start;$/;"	m	class:X86_Timer	typeref:union:X86_Timer::__anon734
_click_stop	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  } _click_stop;$/;"	m	class:X86_Timer	typeref:union:X86_Timer::__anon735
_coef	tools/eigen/bench/btl/actions/action_axpy.hh	/^  typename Interface::real_type _coef;$/;"	m	class:Action_axpy
_compute	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^void HessenbergDecomposition<MatrixType>::_compute(MatrixType& matA, CoeffVectorType& hCoeffs, VectorType& temp)$/;"	f	class:Eigen::HessenbergDecomposition
_cost	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  double _cost;$/;"	m	class:Action_cholesky
_cost	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  double _cost;$/;"	m	class:Action_hessenberg
_cost	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  double _cost;$/;"	m	class:Action_tridiagonalization
_cost	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  double _cost;$/;"	m	class:Action_lu_decomp
_cost	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  double _cost;$/;"	m	class:Action_partial_lu
_cost	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  double _cost;$/;"	m	class:Action_trisolve
_cost	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  double _cost;$/;"	m	class:Action_trisolve_matrix
_cost	tools/eigen/bench/btl/actions/action_trmm.hh	/^  double _cost;$/;"	m	class:Action_trmm
_counted_clicks	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  map<unsigned long long,unsigned long long> _counted_clicks;$/;"	m	class:X86_Timer
_data	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Storage& _data() { return m_data; }$/;"	f	class:Eigen::SparseVector
_data	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED const Storage& _data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
_data	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    const std::vector<internal::CompressedStorage<Scalar,StorageIndex> >& _data() const { return m_data; }$/;"	f	class:Eigen::DynamicSparseMatrix
_data	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    std::vector<internal::CompressedStorage<Scalar,StorageIndex> >& _data() { return m_data; }$/;"	f	class:Eigen::DynamicSparseMatrix
_diagPtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* _diagPtr() {$/;"	f	class:Eigen::SkylineMatrix
_diagPtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Scalar* _diagPtr() const {$/;"	f	class:Eigen::SkylineMatrix
_expression	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& _expression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
_expression	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    inline const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::VectorwiseOp
_frequency	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  double _frequency ;$/;"	m	class:X86_Timer
_helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  > _helper;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
_helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  > _helper;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
_helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  > _helper;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_generator
_helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  > _helper;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
_helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  > _helper;$/;"	t	struct:Eigen::internal::group_theory::enumerate_group_elements_noid
_history_mean_clicks	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  vector<double> _history_mean_clicks;$/;"	m	class:X86_Timer
_history_most_occured_clicks	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  vector<double> _history_most_occured_clicks;$/;"	m	class:X86_Timer
_history_shortest_clicks	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  vector<double> _history_shortest_clicks;$/;"	m	class:X86_Timer
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(Index size, typename internal::enable_if<    (Base::SizeAtCompileTime!=1 || !internal::is_convertible<T, Scalar>::value)$/;"	f	class:Eigen::PlainObjectBase
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const DenseBase<OtherDerived>& other){$/;"	f	class:Eigen::PlainObjectBase
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const EigenBase<OtherDerived>& other){$/;"	f	class:Eigen::PlainObjectBase
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Index& val0,$/;"	f	class:Eigen::PlainObjectBase
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::PlainObjectBase
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar& val0, typename internal::enable_if<Base::SizeAtCompileTime==1 && internal::is_convertible<T, Scalar>::value,T>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar& val0,$/;"	f	class:Eigen::PlainObjectBase
_init1	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar* data){$/;"	f	class:Eigen::PlainObjectBase
_init2	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(Index rows, Index cols, typename internal::enable_if<Base::SizeAtCompileTime!=2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_init2	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(const Index& val0, const Index& val1,$/;"	f	class:Eigen::PlainObjectBase
_init2	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(const Scalar& val0, const Scalar& val1, typename internal::enable_if<Base::SizeAtCompileTime==2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_iterator	tools/eigen/debug/gdb/printers.py	/^	class _iterator:$/;"	c	class:EigenMatrixPrinter
_iterator	tools/eigen/debug/gdb/printers.py	/^	class _iterator:$/;"	c	class:EigenQuaternionPrinter
_lib_name	tools/eigen/bench/btl/data/mean.cxx	/^  string _lib_name;$/;"	m	class:Lib_Mean	file:
_lowerProfilePtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index* _lowerProfilePtr() {$/;"	f	class:Eigen::SkylineMatrix
_lowerProfilePtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Index* _lowerProfilePtr() const {$/;"	f	class:Eigen::SkylineMatrix
_lowerPtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* _lowerPtr() {$/;"	f	class:Eigen::SkylineMatrix
_lowerPtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Scalar* _lowerPtr() const {$/;"	f	class:Eigen::SkylineMatrix
_mean_in_cache	tools/eigen/bench/btl/data/mean.cxx	/^  double _mean_in_cache;$/;"	m	class:Lib_Mean	file:
_mean_out_of_cache	tools/eigen/bench/btl/data/mean.cxx	/^  double _mean_out_of_cache;$/;"	m	class:Lib_Mean	file:
_mm256_setr_m128	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	15;"	d
_nb_calc	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  unsigned long long _nb_calc;$/;"	m	class:Portable_Perf_Analyzer
_nb_calc	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  unsigned long long _nb_calc;$/;"	m	class:Portable_Perf_Analyzer
_nb_init	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  unsigned long long _nb_init;$/;"	m	class:Portable_Perf_Analyzer
_nb_sample	tools/eigen/bench/btl/generic_bench/timers/STL_perf_analyzer.hh	/^  unsigned long long _nb_sample;$/;"	m	class:STL_Perf_Analyzer
_nb_sample	tools/eigen/bench/btl/generic_bench/timers/x86_perf_analyzer.hh	/^  unsigned long long _nb_sample;$/;"	m	class:X86_Perf_Analyzer
_nb_sample	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  unsigned long long _nb_sample;$/;"	m	class:X86_Timer
_next_iter	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  > _next_iter;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
_ppa	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	/^  Portable_Perf_Analyzer<Action> _ppa;$/;"	m	class:Mixed_Perf_Analyzer
_resize_to_match	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _resize_to_match(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set_noalias	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set_noalias(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_size	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  int _size;$/;"	m	class:Action_aat_product
_size	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  int _size;$/;"	m	class:Action_ata_product
_size	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  int _size;$/;"	m	class:Action_atv_product
_size	tools/eigen/bench/btl/actions/action_axpby.hh	/^  int _size;$/;"	m	class:Action_axpby
_size	tools/eigen/bench/btl/actions/action_axpy.hh	/^  int _size;$/;"	m	class:Action_axpy
_size	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  int _size;$/;"	m	class:Action_cholesky
_size	tools/eigen/bench/btl/actions/action_ger.hh	/^  int _size;$/;"	m	class:Action_ger
_size	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  int _size;$/;"	m	class:Action_hessenberg
_size	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  int _size;$/;"	m	class:Action_tridiagonalization
_size	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  int _size;$/;"	m	class:Action_lu_decomp
_size	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  int _size;$/;"	m	class:Action_matrix_matrix_product
_size	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  int _size;$/;"	m	class:Action_matrix_vector_product
_size	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  int _size;$/;"	m	class:Action_partial_lu
_size	tools/eigen/bench/btl/actions/action_rot.hh	/^  int _size;$/;"	m	class:Action_rot
_size	tools/eigen/bench/btl/actions/action_symv.hh	/^  int _size;$/;"	m	class:Action_symv
_size	tools/eigen/bench/btl/actions/action_syr2.hh	/^  int _size;$/;"	m	class:Action_syr2
_size	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  int _size;$/;"	m	class:Action_trisolve
_size	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  int _size;$/;"	m	class:Action_trisolve_matrix
_size	tools/eigen/bench/btl/actions/action_trmm.hh	/^  int _size;$/;"	m	class:Action_trmm
_solve_impl	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^void LDLT<_MatrixType,_UpLo>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::LDLT
_solve_impl	tools/eigen/Eigen/src/Cholesky/LLT.h	/^void LLT<_MatrixType,_UpLo>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::LLT
_solve_impl	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve_impl	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve_impl(const SparseMatrix<RhsScalar,RhsOptions,RhsIndex> &b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve_impl	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::TriangularViewImpl
_solve_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::DiagonalPreconditioner
_solve_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solve_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteLUT
_solve_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void _solve_impl(const Rhs& b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::IterativeSolverBase
_solve_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::LeastSquaresConjugateGradient
_solve_impl	tools/eigen/Eigen/src/LU/FullPivLU.h	/^void FullPivLU<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::FullPivLU
_solve_impl	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::PartialPivLU
_solve_impl	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^bool PastixBase<Base>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &x) const$/;"	f	class:Eigen::PastixBase
_solve_impl	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^void PardisoImpl<Derived>::_solve_impl(const MatrixBase<BDerived> &b, MatrixBase<XDerived>& x) const$/;"	f	class:Eigen::PardisoImpl
_solve_impl	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^void ColPivHouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::ColPivHouseholderQR
_solve_impl	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^void FullPivHouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::FullPivHouseholderQR
_solve_impl	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^void HouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::HouseholderQR
_solve_impl	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SPQR
_solve_impl	tools/eigen/Eigen/src/SVD/SVDBase.h	/^void SVDBase<Derived>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::SVDBase
_solve_impl	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholesky
_solve_impl	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_solve_impl	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholesky
_solve_impl	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_solve_impl	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SparseSolverBase
_solve_impl	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::TriangularViewImpl
_solve_impl	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    bool _solve_impl(const MatrixBase<Rhs> &B, MatrixBase<Dest> &X_base) const$/;"	f	class:Eigen::SparseLU
_solve_impl	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    bool _solve_impl(const MatrixBase<Rhs> &B, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SparseQR
_solve_impl	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperILU
_solve_impl	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperLU
_solve_impl	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^bool UmfPackLU<MatrixType>::_solve_impl(const MatrixBase<BDerived> &b, MatrixBase<XDerived> &x) const$/;"	f	class:Eigen::UmfPackLU
_solve_impl	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  void _solve_impl(const Rhs& b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::DGMRES
_solve_impl	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  void _solve_impl(const Rhs& b, MatrixBase<Dest> &x) const$/;"	f	class:Eigen::GMRES
_solve_impl	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteCholesky
_solve_impl	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteLU
_solve_impl	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        void _solve_impl(const Rhs& b, MatrixBase<Dest> &x) const$/;"	f	class:Eigen::MINRES
_solve_with_guess_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solve_with_guess_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve_with_guess_impl	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::LeastSquaresConjugateGradient
_solve_with_guess_impl	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::DGMRES
_solve_with_guess_impl	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::GMRES
_solve_with_guess_impl	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::MINRES
_sort_matrix_Q	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    inline void _sort_matrix_Q()$/;"	f	class:Eigen::SparseQR
_subdivide	tools/eigen/demos/opengl/icosphere.cpp	/^void IcoSphere::_subdivide(void)$/;"	f	class:IcoSphere
_transformVector	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::_transformVector(const Vector3& v) const$/;"	f	class:Eigen::QuaternionBase
_transformVector	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline VectorType _transformVector(const OtherVectorType& v) const$/;"	f	class:Eigen::RotationBase
_upperProfilePtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index* _upperProfilePtr() {$/;"	f	class:Eigen::SkylineMatrix
_upperProfilePtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Index* _upperProfilePtr() const {$/;"	f	class:Eigen::SkylineMatrix
_upperPtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* _upperPtr() {$/;"	f	class:Eigen::SkylineMatrix
_upperPtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Scalar* _upperPtr() const {$/;"	f	class:Eigen::SkylineMatrix
_use_ppa	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	/^  bool _use_ppa;$/;"	m	class:Mixed_Perf_Analyzer
_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double _x[11];$/;"	m	struct:MGH09_functor	file:
_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double _x[37];$/;"	m	struct:thurber_functor	file:
_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double MGH09_functor::_x[11] = { 4., 2., 1., 5.E-1 , 2.5E-01, 1.670000E-01, 1.250000E-01,  1.E-01, 8.330000E-02, 7.140000E-02, 6.250000E-02 };$/;"	m	class:MGH09_functor	file:
_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double thurber_functor::_x[37] = { -3.067E0, -2.981E0, -2.921E0, -2.912E0, -2.840E0, -2.797E0, -2.702E0, -2.699E0, -2.633E0, -2.481E0, -2.363E0, -2.322E0, -1.501E0, -1.460E0, -1.274E0, -1.212E0, -1.100E0, -1.046E0, -0.915E0, -0.714E0, -0.566E0, -0.545E0, -0.400E0, -0.309E0, -0.109E0, -0.103E0, 0.010E0, 0.119E0, 0.377E0, 0.790E0, 0.963E0, 1.006E0, 1.115E0, 1.572E0, 1.841E0, 2.047E0, 2.200E0 };$/;"	m	class:thurber_functor	file:
_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double _x[11];$/;"	m	struct:MGH09_functor	file:
_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double _x[37];$/;"	m	struct:thurber_functor	file:
_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double MGH09_functor::_x[11] = { 4., 2., 1., 5.E-1 , 2.5E-01, 1.670000E-01, 1.250000E-01,  1.E-01, 8.330000E-02, 7.140000E-02, 6.250000E-02 };$/;"	m	class:MGH09_functor	file:
_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double thurber_functor::_x[37] = { -3.067E0, -2.981E0, -2.921E0, -2.912E0, -2.840E0, -2.797E0, -2.702E0, -2.699E0, -2.633E0, -2.481E0, -2.363E0, -2.322E0, -1.501E0, -1.460E0, -1.274E0, -1.212E0, -1.100E0, -1.046E0, -0.915E0, -0.714E0, -0.566E0, -0.545E0, -0.400E0, -0.309E0, -0.109E0, -0.103E0, 0.010E0, 0.119E0, 0.377E0, 0.790E0, 0.963E0, 1.006E0, 1.115E0, 1.572E0, 1.841E0, 2.047E0, 2.200E0 };$/;"	m	class:thurber_functor	file:
_x86pa	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	/^  X86_Perf_Analyzer<Action> _x86pa;$/;"	m	class:Mixed_Perf_Analyzer
_y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double _y[37];$/;"	m	struct:thurber_functor	file:
_y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double thurber_functor::_y[37] = { 80.574E0, 84.248E0, 87.264E0, 87.195E0, 89.076E0, 89.608E0, 89.868E0, 90.101E0, 92.405E0, 95.854E0, 100.696E0, 101.060E0, 401.672E0, 390.724E0, 567.534E0, 635.316E0, 733.054E0, 759.087E0, 894.206E0, 990.785E0, 1090.109E0, 1080.914E0, 1122.643E0, 1178.351E0, 1260.531E0, 1273.514E0, 1288.339E0, 1327.543E0, 1353.863E0, 1414.509E0, 1425.208E0, 1421.384E0, 1442.962E0, 1464.350E0, 1468.705E0, 1447.894E0, 1457.628E0};$/;"	m	class:thurber_functor	file:
_y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double _y[37];$/;"	m	struct:thurber_functor	file:
_y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double thurber_functor::_y[37] = { 80.574E0, 84.248E0, 87.264E0, 87.195E0, 89.076E0, 89.608E0, 89.868E0, 90.101E0, 92.405E0, 95.854E0, 100.696E0, 101.060E0, 401.672E0, 390.724E0, 567.534E0, 635.316E0, 733.054E0, 759.087E0, 894.206E0, 990.785E0, 1090.109E0, 1080.914E0, 1122.643E0, 1178.351E0, 1260.531E0, 1273.514E0, 1288.339E0, 1327.543E0, 1353.863E0, 1414.509E0, 1425.208E0, 1421.384E0, 1442.962E0, 1464.350E0, 1468.705E0, 1447.894E0, 1457.628E0};$/;"	m	class:thurber_functor	file:
a	tools/eigen/Eigen/src/Core/util/Meta.h	/^  struct no  {int a[2];};$/;"	m	struct:Eigen::internal::is_convertible_impl::no
a	tools/eigen/Eigen/src/Core/util/Meta.h	/^  struct yes {int a[1];};$/;"	m	struct:Eigen::internal::is_convertible_impl::yes
a	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	m	struct:Eigen::internal::has_none
a	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	m	struct:Eigen::internal::has_std_result_type
a	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	m	struct:Eigen::internal::has_tr1_result
a	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  enum { a = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon156
a	tools/eigen/doc/snippets/Cwise_product.cpp	/^Array33i a = Array33i::Random(), b = Array33i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_bottomRows_int.cpp	/^Array44i a = Array44i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_cwiseProduct.cpp	/^Matrix3i a = Matrix3i::Random(), b = Matrix3i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_leftCols_int.cpp	/^Array44i a = Array44i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_noalias.cpp	/^Matrix2d a, b, c; a << 1,2,3,4; b << 5,6,7,8;$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_rightCols_int.cpp	/^Array44i a = Array44i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_template_int_bottomRows.cpp	/^Array44i a = Array44i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_template_int_leftCols.cpp	/^Array44i a = Array44i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_template_int_rightCols.cpp	/^Array44i a = Array44i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_template_int_topRows.cpp	/^Array44i a = Array44i::Random();$/;"	v
a	tools/eigen/doc/snippets/MatrixBase_topRows_int.cpp	/^Array44i a = Array44i::Random();$/;"	v
a	tools/eigen/doc/snippets/tut_arithmetic_transpose_aliasing.cpp	/^Matrix2i a; a << 1, 2, 3, 4;$/;"	v
a	tools/eigen/doc/snippets/tut_arithmetic_transpose_conjugate.cpp	/^MatrixXcf a = MatrixXcf::Random(2,2);$/;"	v
a1	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^Array33f a1 = Array33f::Zero();$/;"	v
a1	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^std::cout << a1 << "\\n\\n";$/;"	v
a2	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^ArrayXf a2 = ArrayXf::Zero(3);$/;"	v
a2	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^std::cout << a2 << "\\n\\n";$/;"	v
a3	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^ArrayXXf a3 = ArrayXXf::Zero(3, 4);$/;"	v
a3	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^std::cout << a3 << "\\n";$/;"	v
a_	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  float* a_;$/;"	m	class:BenchmarkSuite
aat_product	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void aat_product(gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:blas_interface
aat_product	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void aat_product(const gene_matrix & A, gene_matrix & X, int N)$/;"	f	class:STL_interface
aat_product	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void aat_product(const gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:blaze_interface
aat_product	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void aat_product(const gene_matrix & A, gene_matrix & X, int N)$/;"	f	class:blitz_interface
aat_product	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void aat_product(const gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:eigen2_interface
aat_product	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void aat_product(const gene_matrix & A, gene_matrix & X, int  \/*N*\/){$/;"	f	class:eigen3_interface
aat_product	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void aat_product(const gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:gmm_interface
aat_product	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void aat_product(const gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:mtl4_interface
aat_product	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void aat_product(gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:ublas_interface
abs	tools/eigen/Eigen/src/Core/MathFunctions.h	/^double      abs(double      x) { return (fabs(x));  }$/;"	f	namespace:Eigen
abs	tools/eigen/Eigen/src/Core/MathFunctions.h	/^float       abs(float       x) { return (fabsf(x)); }$/;"	f	namespace:Eigen
abs	tools/eigen/Eigen/src/Core/MathFunctions.h	/^long        abs(long        x) { return (labs(x));  }$/;"	f	namespace:Eigen
abs	tools/eigen/Eigen/src/Core/MathFunctions.h	/^long double abs(long double x) { return (fabsl(x)); }$/;"	f	namespace:Eigen
abs	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs() const$/;"	f
abs	tools/eigen/blas/f2c/datatypes.h	17;"	d
abs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    abs() const {$/;"	f	class:Eigen::TensorBase
abs	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal abs   (const mpreal& x, mp_rnd_t r)                             {   MPREAL_UNARY_MATH_FUNCTION_BODY(abs  );    }$/;"	f	namespace:mpfr
abs2	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(abs2, Scalar) abs2(const Scalar& x)$/;"	f	namespace:Eigen::numext
abs2	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs2() const$/;"	f
abs2_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl$/;"	s	namespace:Eigen::internal
abs2_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl<std::complex<RealScalar> >$/;"	s	namespace:Eigen::internal
abs2_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct abs2_retval$/;"	s	namespace:Eigen::internal
absDeterminant	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
absDeterminant	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
absDeterminant	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::HouseholderQR
absDeterminant	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    Scalar absDeterminant()$/;"	f	class:Eigen::SparseLU
absDiagIndex	tools/eigen/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index absDiagIndex() const { return m_index.value()>0 ? m_index.value() : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
absDistance	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar absDistance(const VectorType& p) const { using std::abs; return abs(signedDistance(p)); }$/;"	f	class:Eigen::Hyperplane
absGreatestRealRoot	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& absGreatestRealRoot($/;"	f	class:Eigen::PolynomialSolverBase
absSmallestRealRoot	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& absSmallestRealRoot($/;"	f	class:Eigen::PolynomialSolverBase
abs_knowing_score	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar, typename=void> struct abs_knowing_score$/;"	s	namespace:Eigen::internal
abs_knowing_score	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct abs_knowing_score<Scalar, typename scalar_score_coeff_op<Scalar>::Score_is_abs>$/;"	s	namespace:Eigen::internal
acc	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const AccPacket& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const DoublePacketType& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const ResPacketHalf& c, const ResPacketHalf& alpha, ResPacketHalf& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const Scalar& c, const Scalar& alpha, Scalar& r) const { r += alpha * c; }$/;"	f	class:Eigen::internal::gebp_traits
accessors_level	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct accessors_level$/;"	s	namespace:Eigen::internal
accum_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  CoeffReturnType accum_;$/;"	m	class:Eigen::internal::BlockReducer
accum_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typename Self::CoeffReturnType accum_;$/;"	m	class:Eigen::internal::BlockReducer
acos	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^acos() const$/;"	f
acos	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acos  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(acos );    }$/;"	f	namespace:mpfr
acosh	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acosh (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(acosh);    }$/;"	f	namespace:mpfr
acot	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acot  (const mpreal& v, mp_rnd_t r = mpreal::get_default_rnd()) {   return atan (1\/v, r);                      }$/;"	f	namespace:mpfr
acoth	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acoth (const mpreal& v, mp_rnd_t r = mpreal::get_default_rnd()) {   return atanh(1\/v, r);                      }$/;"	f	namespace:mpfr
acsc	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acsc  (const mpreal& v, mp_rnd_t r = mpreal::get_default_rnd()) {   return asin (1\/v, r);                      }$/;"	f	namespace:mpfr
acsch	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acsch (const mpreal& v, mp_rnd_t r = mpreal::get_default_rnd()) {   return asinh(1\/v, r);                      }$/;"	f	namespace:mpfr
action_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^struct action_t$/;"	s	file:
activateGL	tools/eigen/demos/opengl/camera.cpp	/^void Camera::activateGL(void)$/;"	f	class:Camera
actred	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar actred, prered;$/;"	m	class:Eigen::HybridNonLinearSolver
actred	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
actualDim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE DenseIndex actualDim() const {$/;"	f	struct:Eigen::internal::DimensionId
actual_alignment	tools/eigen/Eigen/src/Core/Matrix.h	/^      actual_alignment = ((_Options&DontAlign)==0) ? default_alignment : 0,$/;"	e	enum:Eigen::internal::traits::__anon292
actual_df	tools/eigen/unsupported/test/NumericalDiff.cpp	/^    int actual_df(const VectorXd &x, MatrixXd &fjac) const$/;"	f	struct:my_functor
actual_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  const DenseIndex actual_dim;$/;"	m	struct:Eigen::internal::DimensionId
add	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
add	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline void add(Gen_) { add(Gen_::One, Gen_::Two, Gen_::Flags); }$/;"	f	class:Eigen::DynamicSGroup
add	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^inline void DynamicSGroup::add(int one, int two, int flags)$/;"	f	class:Eigen::DynamicSGroup
addAntiHermiticity	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline void addAntiHermiticity(int one, int two) { add(one, two, NegationFlag | ConjugationFlag); }$/;"	f	class:Eigen::DynamicSGroup
addAntiSymmetry	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline void addAntiSymmetry(int one, int two) { add(one, two, NegationFlag); }$/;"	f	class:Eigen::DynamicSGroup
addHermiticity	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline void addHermiticity(int one, int two) { add(one, two, ConjugationFlag); }$/;"	f	class:Eigen::DynamicSGroup
addSymmetry	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline void addSymmetry(int one, int two) { add(one, two, 0); }$/;"	f	class:Eigen::DynamicSGroup
addTo	tools/eigen/Eigen/src/Core/EigenBase.h	/^  inline void addTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
addTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static inline void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
addTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
addTo	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
add_all	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline void add_all(internal::type_list<>)$/;"	f	class:Eigen::DynamicSGroupFromTemplateArgs
add_all	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline void add_all(internal::type_list<Gen1, GenNext...>)$/;"	f	class:Eigen::DynamicSGroupFromTemplateArgs
add_assign_op	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename Scalar> struct add_assign_op {$/;"	s	namespace:Eigen::internal
add_assign_using_evaluator	tools/eigen/test/evaluators.cpp	/^  void add_assign_using_evaluator(const DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen
add_const	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	s	namespace:Eigen::internal
add_const	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type_if_arithmetic	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^template<typename T> struct add_const_on_value_type_if_arithmetic$/;"	s	namespace:Eigen::internal
add_coset	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static bool add_coset = !_cil::value;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
add_get_click	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  void  add_get_click( void ){$/;"	f	class:X86_Timer
add_online_info_into_contributors_list	tools/eigen/scripts/eigen_gen_credits.cpp	/^void add_online_info_into_contributors_list(list<contributor>& contributors_list, const char *filename)$/;"	f
add_vals	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	648;"	d
add_vals	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	688;"	d
add_vals	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	996;"	d
adds	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    explicit adds(const Scalar& s) : m_scale(s) {}$/;"	f	struct:Eigen::internal::generic_product_impl::adds
adds	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  struct adds {$/;"	s	struct:Eigen::internal::generic_product_impl
adjoint	tools/eigen/Eigen/src/Core/Transpose.h	/^MatrixBase<Derived>::adjoint() const$/;"	f	class:Eigen::MatrixBase
adjoint	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline const AdjointReturnType adjoint() const$/;"	f	class:Eigen::TriangularView
adjoint	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType adjoint() const$/;"	f	class:Eigen::HouseholderSequence
adjoint	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation adjoint() const { using numext::conj; return JacobiRotation(conj(m_c), -m_s); }$/;"	f	class:Eigen::JacobiRotation
adjoint	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType<SPQRType> adjoint() const$/;"	f	struct:Eigen::SPQRMatrixQReturnType
adjoint	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    const AdjointReturnType adjoint() const { return AdjointReturnType(transpose()); }$/;"	f	class:Eigen::SparseMatrixBase
adjoint	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType<SparseQRType> adjoint() const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
adjoint	tools/eigen/test/adjoint.cpp	/^template<typename MatrixType> void adjoint(const MatrixType& m)$/;"	f
adjointInPlace	tools/eigen/Eigen/src/Core/Transpose.h	/^inline void MatrixBase<Derived>::adjointInPlace()$/;"	f	class:Eigen::MatrixBase
adjoint_specific	tools/eigen/test/adjoint.cpp	/^template<> struct adjoint_specific<false> {$/;"	s	file:
adjoint_specific	tools/eigen/test/adjoint.cpp	/^template<> struct adjoint_specific<true> {$/;"	s	file:
adolc_forward_jacobian	tools/eigen/unsupported/test/forward_adolc.cpp	/^template<typename Func> void adolc_forward_jacobian(const Func& f)$/;"	f
affine	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline AffinePart affine() { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
affine	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline ConstAffinePart affine() const { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
agm	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal agm (const mpreal& v1, const mpreal& v2, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
ai	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal ai      (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(ai);          }$/;"	f	namespace:mpfr
algebraicFunc	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void algebraicFunc(int num_iters) {$/;"	f	class:BenchmarkSuite
aligned	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  bool aligned(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
aligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  bool aligned(Index \/*i*\/) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
aligned_allocator	tools/eigen/Eigen/src/Core/util/Memory.h	/^  aligned_allocator() : std::allocator<T>() {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	tools/eigen/Eigen/src/Core/util/Memory.h	/^  aligned_allocator(const aligned_allocator& other) : std::allocator<T>(other) {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	tools/eigen/Eigen/src/Core/util/Memory.h	/^  aligned_allocator(const aligned_allocator<U>& other) : std::allocator<T>(other) {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	tools/eigen/Eigen/src/Core/util/Memory.h	/^class aligned_allocator : public std::allocator<T>$/;"	c	namespace:Eigen
aligned_allocator_indirection	tools/eigen/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	tools/eigen/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<T>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	tools/eigen/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	tools/eigen/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection& ) : EIGEN_ALIGNED_ALLOCATOR<T>() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	tools/eigen/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	tools/eigen/Eigen/src/StlSupport/details.h	/^  class aligned_allocator_indirection : public EIGEN_ALIGNED_ALLOCATOR<T>$/;"	c	namespace:Eigen
aligned_bit	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    aligned_bit =$/;"	e	enum:Eigen::internal::compute_tensor_flags::__anon107
aligned_delete	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline void aligned_delete(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
aligned_free	tools/eigen/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
aligned_malloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void* aligned_malloc(size_t size)$/;"	f	namespace:Eigen::internal
aligned_new	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline T* aligned_new(size_t size)$/;"	f	namespace:Eigen::internal
aligned_realloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void* aligned_realloc(void *ptr, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
aligned_stack_memory_handler	tools/eigen/Eigen/src/Core/util/Memory.h	/^    aligned_stack_memory_handler(T* ptr, size_t size, bool dealloc)$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
aligned_stack_memory_handler	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> class aligned_stack_memory_handler : noncopyable$/;"	c	namespace:Eigen::internal
alignedbox	tools/eigen/test/geo_alignedbox.cpp	/^template<typename BoxType> void alignedbox(const BoxType& _box)$/;"	f
alignedboxCastTests	tools/eigen/test/geo_alignedbox.cpp	/^void alignedboxCastTests(const BoxType& _box)$/;"	f
alignedvector3	tools/eigen/unsupported/test/alignedvector3.cpp	/^void alignedvector3()$/;"	f
alignment	tools/eigen/Eigen/src/Core/Redux.h	/^    alignment = Derived::Alignment$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon635
alignment	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon362
alignment	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon360
alignment	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon369
alignment	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon368
alignment	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon370
alignment	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon323
alignment	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon321
alignment	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon329
alignment	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon326
alignment	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon327
alignment	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon319
alignment	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon318
alignment	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon350
alignment	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon348
alignment	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon356
alignment	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon353
alignment	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon354
alignment	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon337
alignment	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon335
alignment	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon345
alignment	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon344
alignment	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon346
all	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::all() const$/;"	f	class:Eigen::DenseBase
all	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const AllReturnType all() const$/;"	f	class:Eigen::VectorwiseOp
allFinite	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::allFinite() const$/;"	f	class:Eigen::DenseBase
all_indices_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct all_indices_known_statically<DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
all_indices_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct all_indices_known_statically<const DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
all_indices_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct all_indices_known_statically {$/;"	s	namespace:Eigen::internal
all_indices_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct all_indices_known_statically<IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
all_indices_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct all_indices_known_statically<const IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
all_pot_sizes	tools/eigen/bench/analyze-blocking-sizes.cpp	/^    all_pot_sizes,$/;"	m	class:inputfile_t::type_t	file:
all_unroller	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller$/;"	s	namespace:Eigen::internal
all_unroller	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, 0>$/;"	s	namespace:Eigen::internal
all_unroller	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, Dynamic>$/;"	s	namespace:Eigen::internal
all_values_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool all_values_known_statically() const {$/;"	f	struct:Eigen::IndexList
allocate	tools/eigen/Eigen/src/Core/util/Memory.h	/^  pointer allocate(size_type num, const void* \/*hint*\/ = 0)$/;"	f	class:Eigen::aligned_allocator
allocate	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::BDCSVD
allocate	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, QRPreconditioner>&) {}$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^void JacobiSVD<MatrixType, QRPreconditioner>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
allocate	tools/eigen/Eigen/src/SVD/SVDBase.h	/^bool SVDBase<MatrixType>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::SVDBase
allocate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void* allocate(size_t num_bytes) const {$/;"	f	struct:Eigen::DefaultDevice
allocate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void* allocate(size_t num_bytes) const {$/;"	f	struct:Eigen::GpuDevice
allocate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE void* allocate(size_t num_bytes) const {$/;"	f	struct:Eigen::ThreadPoolDevice
allocate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  virtual void* allocate(size_t num_bytes) const {$/;"	f	class:Eigen::CudaStreamDevice
allocateA	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateA() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateA	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateA()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateAll() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateAll()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateB() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateB()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocatedSize	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index allocatedSize() const { return m_allocatedSize; }$/;"	f	class:Eigen::internal::CompressedStorage
allocatedSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index allocatedSize() const {$/;"	f	class:Eigen::SkylineStorage
alpha	Top.hh	/^    val alpha;$/;"	m	class:Top
alphas	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType alphas() const$/;"	f	class:Eigen::GeneralizedEigenSolver
alt_prod	tools/eigen/bench/product_threshold.cpp	/^template<int M, int N,int K> struct alt_prod$/;"	s	file:
always_search_subsets_of_size_at_least	tools/eigen/bench/analyze-blocking-sizes.cpp	/^const size_t always_search_subsets_of_size_at_least = 2;$/;"	v
always_void	tools/eigen/Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	s	namespace:Eigen::internal
amax_	tools/eigen/blas/level1_impl.h	/^int EIGEN_CAT(EIGEN_CAT(i,SCALAR_SUFFIX),amax_)(int *n, RealScalar *px, int *incx)$/;"	f
amd_flip	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_flip(const T& i) { return -i-2; }$/;"	f	namespace:Eigen::internal
amd_mark	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline void amd_mark(const T0* w, const T1& j) { return w[j] = amd_flip(w[j]); }$/;"	f	namespace:Eigen::internal
amd_marked	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline bool amd_marked(const T0* w, const T1& j) { return w[j]<0; }$/;"	f	namespace:Eigen::internal
amd_unflip	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_unflip(const T& i) { return i<0 ? amd_flip(i) : i; }$/;"	f	namespace:Eigen::internal
amin_	tools/eigen/blas/level1_impl.h	/^int EIGEN_CAT(EIGEN_CAT(i,SCALAR_SUFFIX),amin_)(int *n, RealScalar *px, int *incx)$/;"	f
analyzePattern	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
analyzePattern	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& analyzePattern(const MatType& )$/;"	f	class:Eigen::DiagonalPreconditioner
analyzePattern	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& analyzePattern(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
analyzePattern	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& analyzePattern(const MatType& )$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
analyzePattern	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::analyzePattern(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
analyzePattern	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& analyzePattern(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
analyzePattern	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
analyzePattern	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
analyzePattern	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
analyzePattern	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::analyzePattern(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
analyzePattern	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
analyzePattern	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
analyzePattern	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
analyzePattern	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
analyzePattern	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
analyzePattern	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^void SparseLU<MatrixType, OrderingType>::analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::SparseLU
analyzePattern	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^void SparseQR<MatrixType,OrderingType>::analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
analyzePattern	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& \/*matrix*\/)$/;"	f	class:Eigen::SuperLUBase
analyzePattern	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperILU
analyzePattern	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLU
analyzePattern	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void analyzePattern(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
analyzePattern	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    void analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::IncompleteCholesky
analyzePattern_impl	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void analyzePattern_impl()$/;"	f	class:Eigen::UmfPackLU
analyzePattern_preordered	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^void SimplicialCholeskyBase<Derived>::analyzePattern_preordered(const CholMatrixType& ap, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
angle	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angularDistance	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::angularDistance(const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
animate	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::animate()$/;"	f	class:RenderingWidget
any	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::any() const$/;"	f	class:Eigen::DenseBase
any	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const AnyReturnType any() const$/;"	f	class:Eigen::VectorwiseOp
any_conversion	tools/eigen/Eigen/src/Core/util/Meta.h	/^  struct any_conversion$/;"	s	struct:Eigen::internal::is_convertible_impl
any_unroller	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller$/;"	s	namespace:Eigen::internal
any_unroller	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, 0>$/;"	s	namespace:Eigen::internal
any_unroller	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, Dynamic>$/;"	s	namespace:Eigen::internal
ap	eval.py	/^        ap = sum_precision\/len(ltruth)$/;"	v
append	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    void append(const Scalar& v, Index i)$/;"	f	class:Eigen::internal::CompressedStorage
apply	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline RV apply(const std::array<Index, N>& idx, RV initial, Args&&... args) const$/;"	f	class:Eigen::DynamicSGroup
apply	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline RV apply(const std::vector<Index>& idx, RV initial, Args&&... args) const$/;"	f	class:Eigen::DynamicSGroup
apply	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    static inline RV apply(const std::array<Index, N>& idx, RV initial, Args&&... args)$/;"	f	class:Eigen::StaticSGroup
apply	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    static inline RV apply(const std::vector<Index>& idx, RV initial, Args&&... args)$/;"	f	class:Eigen::StaticSGroup
applyHouseholderOnTheLeft	tools/eigen/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheLeft($/;"	f	class:Eigen::MatrixBase
applyHouseholderOnTheRight	tools/eigen/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheRight($/;"	f	class:Eigen::MatrixBase
applyOP	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  static inline void applyOP(MatrixSolver &OP, const MatrixType &A, int n, Scalar *in, Scalar *out)$/;"	f	struct:Eigen::internal::OP
applyOnTheLeft	tools/eigen/Eigen/src/Core/MatrixBase.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	tools/eigen/Eigen/src/Core/MatrixBase.h	/^inline void MatrixBase<Derived>::applyOnTheRight(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheRight(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyThisOnTheLeft	tools/eigen/Eigen/src/Core/EigenBase.h	/^  EIGEN_DEVICE_FUNC inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheLeft	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheLeft(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheLeft	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	tools/eigen/Eigen/src/Core/EigenBase.h	/^  EIGEN_DEVICE_FUNC inline void applyThisOnTheRight(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheRight	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheRight(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheRight(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyTranspositionOnTheLeft	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheLeft(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
applyTranspositionOnTheRight	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheRight(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
apply_block_householder_on_the_left	tools/eigen/Eigen/src/Householder/BlockHouseholder.h	/^void apply_block_householder_on_the_left(MatrixType& mat, const VectorsType& vectors, const CoeffsType& hCoeffs, bool forward)$/;"	f	namespace:Eigen::internal
apply_op_from_left	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct apply_op_from_left { typedef decltype(h_apply_op<true, op, additional_param>::helper(a())) type; };$/;"	s	namespace:Eigen::internal
apply_op_from_right	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct apply_op_from_right { typedef decltype(h_apply_op<false, op, additional_param>::helper(a())) type; };$/;"	s	namespace:Eigen::internal
apply_rotation_in_the_plane	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^void \/*EIGEN_DONT_INLINE*\/ apply_rotation_in_the_plane(DenseBase<VectorX>& xpr_x, DenseBase<VectorY>& xpr_y, const JacobiRotation<OtherScalar>& j)$/;"	f	namespace:Eigen::internal
aps	eval.py	/^    aps = []$/;"	v
areApprox	tools/eigen/test/packetmath.cpp	/^template<typename Scalar> bool areApprox(const Scalar* a, const Scalar* b, int size)$/;"	f
areApproxAbs	tools/eigen/test/packetmath.cpp	/^template<typename Scalar> bool areApproxAbs(const Scalar* a, const Scalar* b, int size, const typename NumTraits<Scalar>::Real& refvalue)$/;"	f
areNotApprox	tools/eigen/test/product.h	/^bool areNotApprox(const MatrixBase<Derived1>& m1, const MatrixBase<Derived2>& m2, typename Derived1::RealScalar epsilon = NumTraits<typename Derived1::RealScalar>::dummy_precision())$/;"	f
are_inner_most_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct are_inner_most_dims {$/;"	s	namespace:Eigen::internal
are_inner_most_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct are_inner_most_dims<ReducedDims, NumTensorDims, ColMajor>{$/;"	s	namespace:Eigen::internal
are_inner_most_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct are_inner_most_dims<ReducedDims, NumTensorDims, RowMajor>{$/;"	s	namespace:Eigen::internal
arg	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const ArgType& arg() const$/;"	f	class:Eigen::internal::EvalToTemp
arg	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(arg, Scalar) arg(const Scalar& x)$/;"	f	namespace:Eigen::numext
arg	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^arg() const$/;"	f
arg_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  struct arg_default_impl$/;"	s	namespace:Eigen::internal
arg_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  struct arg_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
arg_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  struct arg_impl {$/;"	s	namespace:Eigen::internal
arg_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  template<typename Scalar> struct arg_impl : arg_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
arg_prod	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template <> struct arg_prod<empty_list> {$/;"	s	namespace:Eigen::internal
arg_prod	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template <class NList> struct arg_prod {$/;"	s	namespace:Eigen::internal
arg_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct arg_retval$/;"	s	namespace:Eigen::internal
argmax	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    argmax() const {$/;"	f	class:Eigen::TensorBase
argmax	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    argmax(const int return_dim) const {$/;"	f	class:Eigen::TensorBase
argmin	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    argmin() const {$/;"	f	class:Eigen::TensorBase
argmin	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    argmin(const int return_dim) const {$/;"	f	class:Eigen::TensorBase
arpack_wrapper	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^template <> struct arpack_wrapper<double, double>$/;"	s	namespace:Eigen::internal
arpack_wrapper	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^template <> struct arpack_wrapper<float, float>$/;"	s	namespace:Eigen::internal
arpack_wrapper	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^template<typename Scalar, typename RealScalar> struct arpack_wrapper$/;"	s	namespace:Eigen::internal
arr	tools/eigen/doc/snippets/TopicAliasing_cwise.cpp	/^ArrayXXf arr = mat;$/;"	v
array	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    ArrayBase<Derived>& array() { return *this; }$/;"	f	class:Eigen::ArrayBase
array	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    const ArrayBase<Derived>& array() const { return *this; }$/;"	f	class:Eigen::ArrayBase
array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(16) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(32) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(64) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(8) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  T array[1];$/;"	m	struct:Eigen::internal::plain_array
array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE ArrayWrapper<Derived> array() { return ArrayWrapper<Derived>(derived()); }$/;"	f	class:Eigen::MatrixBase
array	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const ArrayWrapper<const Derived> array() const { return ArrayWrapper<const Derived>(derived()); }$/;"	f	class:Eigen::MatrixBase
array	tools/eigen/doc/snippets/Map_general_stride.cpp	/^int array[24];$/;"	v
array	tools/eigen/doc/snippets/Map_inner_stride.cpp	/^int array[12];$/;"	v
array	tools/eigen/doc/snippets/Map_outer_stride.cpp	/^int array[12];$/;"	v
array	tools/eigen/doc/snippets/Map_simple.cpp	/^int array[9];$/;"	v
array	tools/eigen/doc/snippets/Tutorial_Map_rowmajor.cpp	/^int array[8];$/;"	v
array	tools/eigen/test/array.cpp	/^template<typename ArrayType> void array(const ArrayType& m)$/;"	f
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE array($/;"	f	class:Eigen::array
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE array() { }$/;"	f	class:Eigen::array
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE array(const T& v) {$/;"	f	class:Eigen::array
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE array(const T& v1, const T& v2) {$/;"	f	class:Eigen::array
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE array(const T& v1, const T& v2, const T& v3) {$/;"	f	class:Eigen::array
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE array(const T& v1, const T& v2, const T& v3, const T& v4,$/;"	f	class:Eigen::array
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE array(const T& v1, const T& v2, const T& v3,$/;"	f	class:Eigen::array
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  array(std::initializer_list<T> l) {$/;"	f	class:Eigen::array
array	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template <typename T, size_t n> class array {$/;"	c	namespace:Eigen
array_apply_and_reduce	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^inline bool array_apply_and_reduce(const array<A, N>& a) {$/;"	f	namespace:Eigen::internal
array_complex	tools/eigen/test/array.cpp	/^template<typename ArrayType> void array_complex(const ArrayType& m)$/;"	f
array_for_matrix	tools/eigen/test/array_for_matrix.cpp	/^template<typename MatrixType> void array_for_matrix(const MatrixType& m)$/;"	f
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^template<std::size_t I, class T, std::size_t N> constexpr inline T const& array_get(std::array<T,N> const& a) { return (T const&) STD_GET_ARR_HACK; }$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^template<std::size_t I, class T, std::size_t N> constexpr inline T&       array_get(std::array<T,N>&       a) { return (T&)       STD_GET_ARR_HACK; }$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^template<std::size_t I, class T, std::size_t N> constexpr inline T&&      array_get(std::array<T,N>&&      a) { return (T&&)      STD_GET_ARR_HACK; }$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^template<std::size_t I, class T> constexpr inline T const& array_get(std::vector<T> const& a) { return a[I]; }$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^template<std::size_t I, class T> constexpr inline T&       array_get(std::vector<T>&       a) { return a[I]; }$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^template<std::size_t I, class T> constexpr inline T&&      array_get(std::vector<T>&&      a) { return a[I]; }$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T& array_get(array<T,N>& a) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T& array_get(std::vector<T>& a) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const T& array_get(const array<T,N>& a) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const T& array_get(const std::vector<T>& a) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE typename Head::type array_get(const type_list<Head, Tail>&) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE typename Head::type array_get(type_list<Head, Tail>&) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^template<DenseIndex n, typename Index, std::size_t Rank> const Index array_get(DimensionList<Index, Rank>&) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^template<DenseIndex n, typename Index, std::size_t Rank> const Index array_get(const DimensionList<Index, Rank>&) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <std::ptrdiff_t n, typename std::ptrdiff_t... Indices> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::ptrdiff_t array_get(const Sizes<Indices...>&) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <std::size_t n, std::size_t V1, std::size_t V2, std::size_t V3, std::size_t V4, std::size_t V5> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::size_t array_get(const Sizes<V1,V2,V3,V4,V5>&) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^template<DenseIndex n, typename FirstType, typename... OtherTypes> constexpr DenseIndex array_get(IndexList<FirstType, OtherTypes...>& a) {$/;"	f	namespace:Eigen::internal
array_get	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^template<DenseIndex n, typename FirstType, typename... OtherTypes> constexpr DenseIndex array_get(const IndexList<FirstType, OtherTypes...>& a) {$/;"	f	namespace:Eigen::internal
array_prod	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE t array_prod(const array<t, 0>& \/*a*\/) {$/;"	f	namespace:Eigen::internal
array_prod	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE t array_prod(const array<t, n>& a) {$/;"	f	namespace:Eigen::internal
array_prod	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE t array_prod(const std::vector<t>& a) {$/;"	f	namespace:Eigen::internal
array_prod	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE typename NList::HeadType::type array_prod(const NList&) {$/;"	f	namespace:Eigen::internal
array_prod	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::ptrdiff_t array_prod(const Sizes<Indices...>&) {$/;"	f	namespace:Eigen::internal
array_prod	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^template<typename FirstType, typename... OtherTypes> size_t array_prod(const IndexList<FirstType, OtherTypes...>& sizes) {$/;"	f	namespace:Eigen::internal
array_real	tools/eigen/test/array.cpp	/^template<typename ArrayType> void array_real(const ArrayType& m)$/;"	f
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^template<class T, std::size_t N> struct array_size<const std::array<T,N> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^template<class T, std::size_t N> struct array_size<std::array<T,N> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<class T, std::size_t N> struct array_size<array<T,N> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<class T, std::size_t N> struct array_size<array<T,N>& > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<class T, std::size_t N> struct array_size<const array<T,N> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<class T, std::size_t N> struct array_size<const array<T,N>& > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^template<typename Index, std::size_t Rank> struct array_size<DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^template<typename Index, std::size_t Rank> struct array_size<const DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <std::size_t V1, std::size_t V2, std::size_t V3, std::size_t V4, std::size_t V5> struct array_size<Sizes<V1,V2,V3,V4,V5> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <std::size_t V1, std::size_t V2, std::size_t V3, std::size_t V4, std::size_t V5> struct array_size<const Sizes<V1,V2,V3,V4,V5> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <typename DenseIndex, std::size_t NumDims> struct array_size<DSizes<DenseIndex, NumDims> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <typename DenseIndex, std::size_t NumDims> struct array_size<const DSizes<DenseIndex, NumDims> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <typename std::ptrdiff_t... Indices> struct array_size<Sizes<Indices...> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template <typename std::ptrdiff_t... Indices> struct array_size<const Sizes<Indices...> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^template<typename FirstType, typename... OtherTypes> struct array_size<IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
array_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^template<typename FirstType, typename... OtherTypes> struct array_size<const IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
array_zip_and_reduce	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^inline bool array_zip_and_reduce(const array<A, N>& a, const array<B, N>& b) {$/;"	f	namespace:Eigen::internal
asDiagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^MatrixBase<Derived>::asDiagonal() const$/;"	f	class:Eigen::MatrixBase
asPermutation	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^const PermutationWrapper<const Derived> MatrixBase<Derived>::asPermutation() const$/;"	f	class:Eigen::MatrixBase
asSluMatrix	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^SluMatrix asSluMatrix(MatrixType& mat)$/;"	f	namespace:Eigen::internal
asec	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal asec  (const mpreal& v, mp_rnd_t r = mpreal::get_default_rnd()) {   return acos (1\/v, r);                      }$/;"	f	namespace:mpfr
asech	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal asech (const mpreal& v, mp_rnd_t r = mpreal::get_default_rnd()) {   return acosh(1\/v, r);                      }$/;"	f	namespace:mpfr
asin	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^asin() const$/;"	f
asin	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal asin  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(asin );    }$/;"	f	namespace:mpfr
asinh	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal asinh (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(asinh);    }$/;"	f	namespace:mpfr
assignCoeff	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC void assignCoeff(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignCoeff	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignCoeff	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignCoeff	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignCoeff	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a *= b; }$/;"	f	struct:Eigen::internal::mul_assign_op
assignCoeff	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Scalar& a, const Scalar& b) const { a += b; }$/;"	f	struct:Eigen::internal::add_assign_op
assignCoeff	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Scalar& a, const Scalar& b) const { a -= b; }$/;"	f	struct:Eigen::internal::sub_assign_op
assignCoeff	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Scalar& a, const Scalar& b) const { a = b; }$/;"	f	struct:Eigen::internal::assign_op
assignCoeff	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Scalar& a, const Scalar& b) const { a \/= b; }$/;"	f	struct:Eigen::internal::div_assign_op
assignCoeff	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Scalar& a, const Scalar& b) const$/;"	f	struct:Eigen::internal::swap_assign_op
assignCoeffByOuterInner	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC void assignCoeffByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignDiagonalCoeff	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignDiagonalCoeff(Index id)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignDiagonalCoeff	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignDiagonalCoeff(Index id)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignGeneric	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline void assignGeneric(const OtherDerived& other) {$/;"	f	class:Eigen::SkylineMatrixBase
assignOppositeCoeff	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignOppositeCoeff(Index, Index)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignOppositeCoeff	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignOppositeCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignPacket	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC void assignPacket(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC void assignPacket(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	tools/eigen/Eigen/src/Core/Swap.h	/^  void assignPacket(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	tools/eigen/Eigen/src/Core/Swap.h	/^  void assignPacket(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::mul_assign_op
assignPacket	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(Scalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::add_assign_op
assignPacket	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(Scalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::assign_op
assignPacket	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(Scalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::div_assign_op
assignPacket	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(Scalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::sub_assign_op
assignPacketByOuterInner	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC void assignPacketByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacketByOuterInner	tools/eigen/Eigen/src/Core/Swap.h	/^  void assignPacketByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignProduct	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    void assignProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationBase
assignTranspose	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    void assignTranspose(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
assign_conj_scalar_eig2mkl	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^inline void assign_conj_scalar_eig2mkl<MKL_Complex16,dcomplex>(MKL_Complex16& mklScalar, const dcomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_conj_scalar_eig2mkl	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^inline void assign_conj_scalar_eig2mkl<MKL_Complex8,scomplex>(MKL_Complex8& mklScalar, const scomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_conj_scalar_eig2mkl	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^static inline void assign_conj_scalar_eig2mkl(MKLType& mklScalar, const EigenType& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_op	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename Scalar> struct assign_op {$/;"	s	namespace:Eigen::internal
assign_scalar_eig2mkl	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^inline void assign_scalar_eig2mkl<MKL_Complex16,dcomplex>(MKL_Complex16& mklScalar, const dcomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_scalar_eig2mkl	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^inline void assign_scalar_eig2mkl<MKL_Complex8,scomplex>(MKL_Complex8& mklScalar, const scomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_scalar_eig2mkl	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^static inline void assign_scalar_eig2mkl(MKLType& mklScalar, const EigenType& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_sparse_to_sparse	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^void assign_sparse_to_sparse(DstXprType &dst, const SrcXprType &src)$/;"	f	namespace:Eigen::internal
asum	tools/eigen/blas/level1_real_impl.h	/^RealScalar EIGEN_BLAS_FUNC(asum)(int *n, RealScalar *px, int *incx)$/;"	f
asum_	tools/eigen/blas/level1_cplx_impl.h	/^RealScalar EIGEN_CAT(EIGEN_CAT(REAL_SCALAR_SUFFIX,SCALAR_SUFFIX),asum_)(int *n, RealScalar *px, int *incx)$/;"	f
at	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar at(Index key, const Scalar& defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atInRange	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar atInRange(Index start, Index end, Index key, const Scalar &defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atWithInsertion	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& atWithInsertion(Index key, const Scalar& defaultValue = Scalar(0))$/;"	f	class:Eigen::internal::CompressedStorage
ata_product	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void ata_product(const gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:blaze_interface
ata_product	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void ata_product(const gene_matrix & A, gene_matrix & X, int N)$/;"	f	class:blitz_interface
ata_product	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void ata_product(const gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:eigen2_interface
ata_product	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void ata_product(const gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:gmm_interface
ata_product	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void ata_product(gene_matrix & A, gene_matrix & X, int N){$/;"	f	class:ublas_interface
atan	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^atan() const$/;"	f
atan	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal atan  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(atan );    }$/;"	f	namespace:mpfr
atan2	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^atan2(const AutoDiffScalar<DerTypeA>& a, const AutoDiffScalar<DerTypeB>& b)$/;"	f	namespace:Eigen
atan2	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal atan2 (const mpreal& y, const mpreal& x, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
atanh	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal atanh (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(atanh);    }$/;"	f	namespace:mpfr
atomicReduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^__device__ EIGEN_ALWAYS_INLINE void atomicReduce(T* output, T accum, R& reducer) {$/;"	f	namespace:Eigen::internal
atomicReduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^__device__ inline void atomicReduce(T* output, T accum, SumReducer<T>&) {$/;"	f	namespace:Eigen::internal
atv_product	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:blas_interface
atv_product	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N)$/;"	f	class:STL_interface
atv_product	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:blaze_interface
atv_product	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N)$/;"	f	class:blitz_interface
atv_product	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:eigen2_interface
atv_product	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int  \/*N*\/){$/;"	f	class:eigen3_interface
atv_product	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:gmm_interface
atv_product	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:mtl4_interface
atv_product	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:tvmet_interface
atv_product	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void atv_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:ublas_interface
auto_diff_special_op	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct auto_diff_special_op<_DerType, false>$/;"	s	namespace:Eigen::internal
auto_diff_special_op	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct auto_diff_special_op<_DerType, true>$/;"	s	namespace:Eigen::internal
aux_evalSolver	tools/eigen/unsupported/test/polynomialsolver.cpp	/^bool aux_evalSolver( const POLYNOMIAL& pols, SOLVER& psolve )$/;"	f
avec	tools/eigen/test/dynalloc.cpp	/^    Vector8f avec;$/;"	m	class:MyClassA	file:
avec	tools/eigen/test/dynalloc.cpp	/^  Vector8f avec;$/;"	m	struct:MyStruct	file:
axis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  Vector3& axis() { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  const Vector3& axis() const { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    EIGEN_DEVICE_FUNC const Axis& axis() const { return m_axis; }$/;"	f	class:Eigen::TensorConcatenationOp
axpby	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void axpby(SCALAR a, const gene_vector & X, SCALAR b, gene_vector & Y, int N){$/;"	f	class:blas_interface
axpby	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void axpby(real a, const gene_vector & X, real b, gene_vector & Y, int N){$/;"	f	class:STL_interface
axpby	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void axpby(real a, const gene_vector & X, real b, gene_vector & Y, int N){$/;"	f	class:blaze_interface
axpby	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void axpby(real a, const gene_vector & X, real b, gene_vector & Y, int N){$/;"	f	class:eigen2_interface
axpby	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void axpby(real a, const gene_vector & X, real b, gene_vector & Y, int  \/*N*\/){$/;"	f	class:eigen3_interface
axpby	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void axpby(real a, const gene_vector & X, real b, gene_vector & Y, int N){$/;"	f	class:gmm_interface
axpby	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void axpby(real a, const gene_vector & X, real b, gene_vector & Y, int N){$/;"	f	class:mtl4_interface
axpby	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static inline void axpby(real a, const gene_vector & X, real b, gene_vector & Y, int  \/*N*\/){$/;"	f	class:tensor_interface
axpby	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void axpby(real a, const gene_vector & X, real b, gene_vector & Y, int N){$/;"	f	class:ublas_interface
axpy	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void axpy(SCALAR coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:blas_interface
axpy	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void axpy(real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:STL_interface
axpy	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void axpy(const real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:blaze_interface
axpy	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void axpy(const real coef, const gene_vector & X, gene_vector & Y, int N)$/;"	f	class:blitz_interface
axpy	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void axpy(const real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:tiny_blitz_interface
axpy	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void axpy(real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:eigen2_interface
axpy	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void axpy(real coef, const gene_vector & X, gene_vector & Y, int  \/*N*\/){$/;"	f	class:eigen3_interface
axpy	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void axpy(const real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:gmm_interface
axpy	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void axpy(const real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:mtl4_interface
axpy	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static inline void axpy(real coef, const gene_vector & X, gene_vector & Y, int  \/*N*\/){$/;"	f	class:tensor_interface
axpy	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void axpy(const real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:tvmet_interface
axpy	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void axpy(const real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:ublas_interface
axpy	tools/eigen/blas/level1_impl.h	/^int EIGEN_BLAS_FUNC(axpy)(int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *py, int *incy)$/;"	f
axpy_slow	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void axpy_slow(const real coef, const gene_vector & X, gene_vector & Y, int N){$/;"	f	class:ublas_interface
b	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^         b = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon156
b	tools/eigen/doc/snippets/Cwise_product.cpp	/^Array33i a = Array33i::Random(), b = Array33i::Random();$/;"	v
b	tools/eigen/doc/snippets/LeastSquaresNormalEquations.cpp	/^VectorXf b = VectorXf::Random(3);$/;"	v
b	tools/eigen/doc/snippets/LeastSquaresQR.cpp	/^VectorXf b = VectorXf::Random(3);$/;"	v
b	tools/eigen/doc/snippets/MatrixBase_cwiseProduct.cpp	/^Matrix3i a = Matrix3i::Random(), b = Matrix3i::Random();$/;"	v
b	tools/eigen/doc/snippets/MatrixBase_noalias.cpp	/^Matrix2d a, b, c; a << 1,2,3,4; b << 5,6,7,8;$/;"	v
b	tools/eigen/doc/snippets/Tutorial_solve_matrix_inverse.cpp	/^Vector3f b;$/;"	v
b	tools/eigen/doc/snippets/Tutorial_solve_reuse_decomposition.cpp	/^Vector3f b;$/;"	v
b	tools/eigen/doc/snippets/Tutorial_solve_singular.cpp	/^Vector3f b;$/;"	v
b	tools/eigen/doc/snippets/Tutorial_solve_triangular.cpp	/^Vector3f b;$/;"	v
b	tools/eigen/doc/snippets/Tutorial_solve_triangular_inplace.cpp	/^A.triangularView<Upper>().solveInPlace(b);$/;"	v
b	tools/eigen/doc/snippets/Tutorial_solve_triangular_inplace.cpp	/^Vector3f b;$/;"	v
b_	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  float* b_;$/;"	m	class:BenchmarkSuite
balance	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^void companion<_Scalar,_Deg>::balance()$/;"	f	class:Eigen::internal::companion
balanced	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^bool companion<_Scalar,_Deg>::balanced( Scalar colNorm, Scalar rowNorm,$/;"	f	class:Eigen::internal::companion
balancedR	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^bool companion<_Scalar,_Deg>::balancedR( Scalar colNorm, Scalar rowNorm,$/;"	f	class:Eigen::internal::companion
band_solve_triangular_selector	tools/eigen/blas/BandTriangularSolver.h	/^struct band_solve_triangular_selector<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ColMajor>$/;"	s	namespace:internal
band_solve_triangular_selector	tools/eigen/blas/BandTriangularSolver.h	/^struct band_solve_triangular_selector<Index,Mode,LhsScalar,ConjLhs,RhsScalar,RowMajor>$/;"	s	namespace:internal
bandmatrix	tools/eigen/test/bandmatrix.cpp	/^template<typename MatrixType> void bandmatrix(const MatrixType& _m)$/;"	f
base	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    Base& base() { return *static_cast<Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    const Base& base() const { return *static_cast<const Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline Self& base()             { return *this; }$/;"	f	class:Eigen::Tensor
base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline const Self& base() const { return *this; }$/;"	f	class:Eigen::Tensor
base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    inline Self& base()             { return *this; }$/;"	f	class:Eigen::TensorFixedSize
base	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    inline const Self& base() const { return *this; }$/;"	f	class:Eigen::TensorFixedSize
baseline	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  bool baseline;$/;"	m	class:STL_Timer
baseline_time	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  double baseline_time;$/;"	m	class:STL_Timer
basicStuff	tools/eigen/test/basicstuff.cpp	/^template<typename MatrixType> void basicStuff(const MatrixType& m)$/;"	f
basicStuffComplex	tools/eigen/test/basicstuff.cpp	/^template<typename MatrixType> void basicStuffComplex(const MatrixType& m)$/;"	f
basisFunctionDerivatives	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    Spline<_Scalar, _Dim, _Degree>::basisFunctionDerivatives(Scalar u, DenseIndex order) const$/;"	f	class:Eigen::Spline
basisFunctions	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    Spline<_Scalar, _Dim, _Degree>::basisFunctions(Scalar u) const$/;"	f	class:Eigen::Spline
bdcSvd	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^MatrixBase<Derived>::bdcSvd(unsigned int computationOptions) const$/;"	f	class:Eigen::MatrixBase
bdcsvd	tools/eigen/test/bdcsvd.cpp	/^void bdcsvd(const MatrixType& a = MatrixType(), bool pickrandom = true)$/;"	f
bdcsvd_method	tools/eigen/test/bdcsvd.cpp	/^void bdcsvd_method()$/;"	f
beginsWith	tools/eigen/bench/btl/generic_bench/btl.hh	/^    bool beginsWith(const BtlString& str) const$/;"	f	class:BtlString
bench	tools/eigen/bench/benchFFT.cpp	/^void bench(int nfft,bool fwd,bool unscaled=false, bool halfspec=false)$/;"	f
bench	tools/eigen/bench/btl/generic_bench/bench.hh	/^BTL_DONT_INLINE void bench( int size_min, int size_max, int nb_point )$/;"	f
bench	tools/eigen/bench/btl/generic_bench/bench.hh	/^BTL_DONT_INLINE void bench( int size_min, int size_max, int nb_point ){$/;"	f
bench	tools/eigen/bench/dense_solvers.cpp	/^void bench(int id, int size = Size)$/;"	f
bench	tools/eigen/bench/geometry.cpp	/^EIGEN_DONT_INLINE void bench(const std::string& msg, const Transformation& t)$/;"	f
bench	tools/eigen/bench/perf_monitoring/gemm/gemm.cpp	/^double bench(long m, long n, long k)$/;"	f
bench	tools/eigen/bench/quatmul.cpp	/^template<typename Quat> void bench(const std::string& label)$/;"	f
benchBasic	tools/eigen/bench/basicbenchmark.h	/^double benchBasic(const MatrixType& mat, int iterations, int tries)$/;"	f
benchBasic_loop	tools/eigen/bench/basicbenchmark.h	/^void benchBasic_loop(const MatrixType& I, MatrixType& m, int iterations)$/;"	f
benchEigenSolver	tools/eigen/bench/benchEigenSolver.cpp	/^__attribute__ ((noinline)) void benchEigenSolver(const MatrixType& m)$/;"	f
benchLLT	tools/eigen/bench/benchCholesky.cpp	/^__attribute__ ((noinline)) void benchLLT(const MatrixType& m)$/;"	f
benchVec	tools/eigen/bench/benchVecAdd.cpp	/^void benchVec(MatrixXf& a, MatrixXf& b, MatrixXf& c)$/;"	f
benchVec	tools/eigen/bench/benchVecAdd.cpp	/^void benchVec(Scalar* a, Scalar* b, Scalar* c, int size)$/;"	f
benchVec	tools/eigen/bench/benchVecAdd.cpp	/^void benchVec(VectorXf& a, VectorXf& b, VectorXf& c)$/;"	f
bench_eigengemm	tools/eigen/bench/benchBlasGemm.cpp	/^void bench_eigengemm(MyMatrix& mc, const MyMatrix& ma, const MyMatrix& mb, int nbloops)$/;"	f
bench_fixed_size	tools/eigen/bench/btl/generic_bench/static/intel_bench_fixed_size.hh	/^double bench_fixed_size(int size, unsigned long long  & nb_calc,unsigned long long & nb_init)$/;"	f
bench_impl	tools/eigen/bench/geometry.cpp	/^struct bench_impl$/;"	s	file:
bench_impl	tools/eigen/bench/geometry.cpp	/^struct bench_impl<Transformation,0>$/;"	s	file:
bench_printhelp	tools/eigen/bench/spbench/spbenchsolver.cpp	/^void bench_printhelp()$/;"	f
bench_prod	tools/eigen/bench/product_threshold.cpp	/^EIGEN_DONT_INLINE void bench_prod()$/;"	f
bench_reverse	tools/eigen/bench/bench_reverse.cpp	/^__attribute__ ((noinline)) void bench_reverse(const MatrixType& m)$/;"	f
bench_static	tools/eigen/bench/btl/generic_bench/static/bench_static.hh	/^BTL_DONT_INLINE  void bench_static(void)$/;"	f
bench_svd	tools/eigen/unsupported/bench/bench_svd.cpp	/^void bench_svd(const MatrixType& a = MatrixType())$/;"	f
besselj0	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal besselj0(const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(j0     );    }$/;"	f	namespace:mpfr
besselj1	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal besselj1(const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(j1     );    }$/;"	f	namespace:mpfr
besseljn	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal besseljn (long n, const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
bessely0	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal bessely0(const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(y0     );    }$/;"	f	namespace:mpfr
bessely1	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal bessely1(const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(y1     );    }$/;"	f	namespace:mpfr
besselyn	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal besselyn (long n, const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
best	tools/eigen/bench/BenchTimer.h	/^  inline double best(int TIMER = CPU_TIMER) const$/;"	f	class:Eigen::BenchTimer
best_pot_block_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^    uint16_t best_pot_block_size;$/;"	m	struct:evaluate_defaults_action_t::results_entry_t	file:
best_pot_gflops	tools/eigen/bench/analyze-blocking-sizes.cpp	/^    float best_pot_gflops;$/;"	m	struct:evaluate_defaults_action_t::results_entry_t	file:
best_time_id	tools/eigen/bench/spbench/spbenchsolver.h	/^int best_time_id; \/\/  id of the best solver for the current system $/;"	v
best_time_val	tools/eigen/bench/spbench/spbenchsolver.h	/^double best_time_val; \/\/ Current best time overall solvers $/;"	v
beta	Top.hh	/^    val beta;$/;"	m	class:Top
betas	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    VectorType betas() const$/;"	f	class:Eigen::GeneralizedEigenSolver
bfly2	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly2( Complex * Fout, const size_t fstride, int m)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
bfly3	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly3( Complex * Fout, const size_t fstride, const size_t m)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
bfly4	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly4( Complex * Fout, const size_t fstride, const size_t m)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
bfly5	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly5( Complex * Fout, const size_t fstride, const size_t m)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
bfly_generic	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly_generic($/;"	f	struct:Eigen::internal::kiss_cpx_fft
bicgstab	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^bool bicgstab(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
bidiagonal	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    const BidiagonalType& bidiagonal() const { return m_bidiagonal; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
big_sparse_triplet	tools/eigen/test/sparse_basic.cpp	/^void big_sparse_triplet(Index rows, Index cols, double density) {$/;"	f
binaryExpr	tools/eigen/Eigen/src/plugins/CommonCwiseBinaryOps.h	/^binaryExpr(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other, const CustomBinaryOp& func = CustomBinaryOp()) const$/;"	f
binaryExpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    binaryExpr(const OtherDerived& other, const CustomBinaryOp& func) const {$/;"	f	class:Eigen::TensorBase
binary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit binary_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::binary_evaluator
binary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IndexBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  explicit binary_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::binary_evaluator
binary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T>, Lhs, Rhs>, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T>, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T>, Lhs, Rhs>, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_result_of_select	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef ArgType0 type;};$/;"	s	namespace:Eigen::internal
binary_result_of_select	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_std_result_type)>$/;"	s	namespace:Eigen::internal
binary_result_of_select	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_tr1_result)>$/;"	s	namespace:Eigen::internal
binom	tools/eigen/unsupported/test/matrix_exponential.cpp	/^double binom(int n, int k)$/;"	f
bits2digits	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int bits2digits(mp_prec_t b)$/;"	f	namespace:mpfr
bl2passNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar bl2passNorm(T& v)$/;"	f
blas_PRODUIT_MATRICE_VECTEUR_HH	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	21;"	d
blas_data_mapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE blas_data_mapper(Scalar* data, Index stride) : m_data(data), m_stride(stride) {}$/;"	f	class:Eigen::internal::blas_data_mapper
blas_data_mapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^class blas_data_mapper {$/;"	c	namespace:Eigen::internal
blas_gemm	tools/eigen/bench/bench_gemm.cpp	/^EIGEN_DONT_INLINE void blas_gemm(const MatrixXd& a, const MatrixXd& b, MatrixXd& c)$/;"	f
blas_gemm	tools/eigen/bench/bench_gemm.cpp	/^void blas_gemm(const MatrixXcd& a, const MatrixXcd& b, MatrixXcd& c)$/;"	f
blas_gemm	tools/eigen/bench/bench_gemm.cpp	/^void blas_gemm(const MatrixXcf& a, const MatrixXcf& b, MatrixXcf& c)$/;"	f
blas_gemm	tools/eigen/bench/bench_gemm.cpp	/^void blas_gemm(const MatrixXf& a, const MatrixXf& b, MatrixXf& c)$/;"	f
blas_interface	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^template<> class blas_interface<SCALAR> : public c_interface_base<SCALAR>$/;"	c
blas_traits	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_multiple_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<Transpose<NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<const T>$/;"	s	namespace:Eigen::internal
blas_traits	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename XprType> struct blas_traits$/;"	s	namespace:Eigen::internal
blaze_interface	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^class blaze_interface {$/;"	c
blitz_LU_solve_interface	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^class blitz_LU_solve_interface : public blitz_interface<real>$/;"	c
blitz_LU_solve_interface	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^class blitz_LU_solve_interface : public blitz_interface<real>$/;"	c
blitz_LU_solve_interface	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^class blitz_LU_solve_interface : public blitz_interface<real>$/;"	c
blitz_interface	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^class blitz_interface{$/;"	c
block	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, BlockRows, BlockCols> block(Index startRow, Index startCol)$/;"	f
block	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, BlockRows, BlockCols> block(Index startRow, Index startCol, $/;"	f
block	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f
block	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, BlockRows, BlockCols> block(Index startRow, Index startCol) const$/;"	f
block	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, BlockRows, BlockCols> block(Index startRow, Index startCol,$/;"	f
block	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols) const$/;"	f
block	tools/eigen/test/block.cpp	/^template<typename MatrixType> void block(const MatrixType& m)$/;"	f
blockA	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline LhsScalar* blockA() { return m_blockA; }$/;"	f	class:Eigen::internal::level3_blocking
blockA	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  LhsScalar* blockA;$/;"	m	struct:Eigen::internal::packLhsArg
blockAs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const std::vector<LhsScalar*>* blockAs;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
blockB	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline RhsScalar* blockB() { return m_blockB; }$/;"	f	class:Eigen::internal::level3_blocking
blockB	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  RhsScalar* blockB;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
blockCols	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::BlockImpl
blockCols	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
blockCols	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::BlockImpl
blockCols	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index blockCols() const$/;"	f	class:Eigen::BlockSparseMatrix
blockColsIndex	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index blockColsIndex(Index bj) const$/;"	f	class:Eigen::BlockSparseMatrix
blockDim	tools/eigen/test/cuda_common.h	/^dim3 threadIdx, blockDim, blockIdx;$/;"	v
blockIdx	tools/eigen/test/cuda_common.h	/^dim3 threadIdx, blockDim, blockIdx;$/;"	v
blockInnerIndex	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index blockInnerIndex(Index bi) const$/;"	f	class:Eigen::BlockSparseMatrix
blockInnerSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index blockInnerSize(Index bi) const$/;"	f	class:Eigen::BlockSparseMatrix
blockOuterIndex	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index blockOuterIndex(Index bj) const$/;"	f	class:Eigen::BlockSparseMatrix
blockOuterSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index blockOuterSize(Index bj) const$/;"	f	class:Eigen::BlockSparseMatrix
blockPtr	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index blockPtr(Index id) const$/;"	f	class:Eigen::BlockSparseMatrix
blockRows	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::BlockImpl
blockRows	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
blockRows	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::BlockImpl
blockRows	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index blockRows() const$/;"	f	class:Eigen::BlockSparseMatrix
blockRowsIndex	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index blockRowsIndex(Index bi) const$/;"	f	class:Eigen::BlockSparseMatrix
block_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit block_evaluator(const XprType& block)$/;"	f	struct:Eigen::internal::block_evaluator
block_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, \/* HasDirectAccess *\/ true>$/;"	s	namespace:Eigen::internal
block_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, \/*HasDirectAccess*\/ false>$/;"	s	namespace:Eigen::internal
block_evaluator_type	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  typedef block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel> block_evaluator_type;$/;"	t	struct:Eigen::internal::evaluator
block_real_only	tools/eigen/test/block.cpp	/^block_real_only(const MatrixType &, Index, Index, Index, Index, const Scalar&) {$/;"	f
block_real_only	tools/eigen/test/block.cpp	/^block_real_only(const MatrixType &m1, Index r1, Index r2, Index c1, Index c2, const Scalar& s1) {$/;"	f
block_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  uint16_t block_size;$/;"	m	struct:preprocessed_inputfile_entry_t	file:
blocked	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE Index blocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
blocked	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static Index blocked(MatrixType& m)$/;"	f	struct:Eigen::internal::llt_inplace
blocked_lu	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  static Index blocked_lu(Index rows, Index cols, Scalar* lu_data, Index luStride, PivIndex* row_transpositions, PivIndex& nb_transpositions, Index maxBlockSize=256)$/;"	f	struct:Eigen::internal::partial_lu_impl
blueNorm	tools/eigen/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::MatrixBase
blueNorm	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const BlueNormReturnType blueNorm() const$/;"	f	class:Eigen::VectorwiseOp
blueNorm	tools/eigen/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::SparseMatrixBase
blueNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar blueNorm(T& v)$/;"	f
blueNorm_impl	tools/eigen/Eigen/src/Core/StableNorm.h	/^blueNorm_impl(const EigenBase<Derived>& _vec)$/;"	f	namespace:Eigen::internal
bottomLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomLeftCorner()$/;"	f
bottomLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomLeftCorner(Index cRows, Index cCols)$/;"	f
bottomLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> bottomLeftCorner(Index cRows, Index cCols)$/;"	f
bottomLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomLeftCorner() const$/;"	f
bottomLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomLeftCorner(Index cRows, Index cCols) const$/;"	f
bottomLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> bottomLeftCorner(Index cRows, Index cCols) const$/;"	f
bottomRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomRightCorner()$/;"	f
bottomRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomRightCorner(Index cRows, Index cCols)$/;"	f
bottomRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> bottomRightCorner(Index cRows, Index cCols)$/;"	f
bottomRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomRightCorner() const$/;"	f
bottomRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomRightCorner(Index cRows, Index cCols) const$/;"	f
bottomRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> bottomRightCorner(Index cRows, Index cCols) const$/;"	f
bottomRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr bottomRows(Index n) const$/;"	f
bottomRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr bottomRows(Index n)$/;"	f
bottomRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type bottomRows(Index n = N) const$/;"	f
bottomRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type bottomRows(Index n = N)$/;"	f
bounded_acos	tools/eigen/test/geo_quaternion.cpp	/^template<typename T> T bounded_acos(T v)$/;"	f
bounding_box	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^        Box2d bounding_box(const Vector2d &v) { return Box2d(v, v); } \/\/compute the bounding box of a single point$/;"	f	namespace:Eigen::internal
bounding_box	tools/eigen/unsupported/test/BVH.cpp	/^template<int Dim> AlignedBox<double, Dim> bounding_box(const Ball<Dim> &b)$/;"	f
bounding_box	tools/eigen/unsupported/test/BVH.cpp	/^template<typename Scalar, int Dim> AlignedBox<Scalar, Dim> bounding_box(const Matrix<Scalar, Dim, 1> &v) { return AlignedBox<Scalar, Dim>(v); }$/;"	f	namespace:Eigen
boxes	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  VolumeList boxes;$/;"	m	class:Eigen::KdBVH
broadcast	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    broadcast(const Broadcast& broadcast) const {$/;"	f	class:Eigen::TensorBase
broadcast	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^    const Broadcast& broadcast() const { return m_broadcast; }$/;"	f	class:Eigen::TensorBroadcastingOp
broadcastRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, DoublePacketType& b0, DoublePacketType& b1)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, RhsPacket& b0, RhsPacket& b1, RhsPacket& b2, RhsPacket& b3)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, RhsScalar& b0, RhsScalar& b1)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  void broadcastRhs(const RhsScalar* b, RhsPacket& b0, RhsPacket& b1, RhsPacket& b2, RhsPacket& b3)$/;"	f	class:Eigen::internal::gebp_traits
broadcasting	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void broadcasting(int num_iters) {$/;"	f	class:BenchmarkSuite
broadcasting	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(broadcasting);$/;"	v
bruteforce_det3_helper	tools/eigen/Eigen/src/LU/Determinant.h	/^inline const typename Derived::Scalar bruteforce_det3_helper$/;"	f	namespace:Eigen::internal
bruteforce_det4_helper	tools/eigen/Eigen/src/LU/Determinant.h	/^const typename Derived::Scalar bruteforce_det4_helper$/;"	f	namespace:Eigen::internal
buffer	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    unsigned char *buffer;$/;"	m	class:MandelbrotWidget
buffer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    EIGEN_DEVICE_FUNC CoeffReturnType* buffer() const { return m_buffer; }$/;"	f	class:Eigen::TensorEvalToOp
bug890	tools/eigen/test/permutationmatrices.cpp	/^void bug890()$/;"	f
bug987	tools/eigen/test/diagonalmatrices.cpp	/^void bug987()$/;"	f
bug_1014	tools/eigen/test/eigensolver_selfadjoint.cpp	/^void bug_1014()$/;"	f
bug_127	tools/eigen/test/product_extra.cpp	/^void bug_127()$/;"	f
bug_159	tools/eigen/test/selfadjoint.cpp	/^void bug_159()$/;"	f
bug_159	tools/eigen/test/triangular.cpp	/^void bug_159()$/;"	f
bug_817	tools/eigen/test/product_extra.cpp	/^template<int> void bug_817()$/;"	f
bug_854	tools/eigen/test/eigensolver_selfadjoint.cpp	/^void bug_854()$/;"	f
bug_942	tools/eigen/test/sparse_product.cpp	/^void bug_942()$/;"	f
build	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  void build(VIPairList &objCenters, int from, int to, const VolumeList &objBoxes, int dim)$/;"	f	class:Eigen::KdBVH
buildProblem	tools/eigen/doc/special_examples/Tutorial_sparse_example_details.cpp	/^void buildProblem(std::vector<T>& coefficients, Eigen::VectorXd& b, int n)$/;"	f
build_eigen_dictionary	tools/eigen/debug/gdb/printers.py	/^def build_eigen_dictionary ():$/;"	f
c	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    Scalar c() const { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    Scalar& c() { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	tools/eigen/doc/snippets/Cwise_product.cpp	/^Array33i c = a * b;$/;"	v
c	tools/eigen/doc/snippets/MatrixBase_cwiseProduct.cpp	/^Matrix3i c = a.cwiseProduct(b);$/;"	v
c	tools/eigen/doc/snippets/MatrixBase_noalias.cpp	/^Matrix2d a, b, c; a << 1,2,3,4; b << 5,6,7,8;$/;"	v
c	tools/eigen/unsupported/test/cxx11_meta.cpp	/^  int c;$/;"	m	struct:dummy_inst	file:
c_	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  float* c_;$/;"	m	class:BenchmarkSuite
c_interface_base	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^template<class real> class c_interface_base$/;"	c
c_to_eigen	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^inline Map<MatrixXd>& c_to_eigen(C_Map_MatrixXd* ptr)$/;"	f
c_to_eigen	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^inline MatrixXd& c_to_eigen(C_MatrixXd* ptr)$/;"	f
c_to_eigen	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^inline const Map<MatrixXd>& c_to_eigen(const C_Map_MatrixXd* ptr)$/;"	f
c_to_eigen	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^inline const MatrixXd& c_to_eigen(const C_MatrixXd* ptr)$/;"	f
c_to_fortran_numbering	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void c_to_fortran_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
calcMagic	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC void calcMagic(int32_t d) {$/;"	f	class:Eigen::internal::TensorIntDivisor
calculate	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_aat_product
calculate	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_ata_product
calculate	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  BTL_DONT_INLINE void calculate( void ) {$/;"	f	class:Action_atv_product
calculate	tools/eigen/bench/btl/actions/action_axpby.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_axpby
calculate	tools/eigen/bench/btl/actions/action_axpy.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_axpy
calculate	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_cholesky
calculate	tools/eigen/bench/btl/actions/action_ger.hh	/^  BTL_DONT_INLINE void calculate( void ) {$/;"	f	class:Action_ger
calculate	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_hessenberg
calculate	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_tridiagonalization
calculate	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_lu_decomp
calculate	tools/eigen/bench/btl/actions/action_lu_solve.hh	/^  static double calculate( int nb_calc, int size ) {$/;"	f	class:Action_lu_solve
calculate	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_matrix_matrix_product
calculate	tools/eigen/bench/btl/actions/action_matrix_matrix_product_bis.hh	/^  static double calculate( int nb_calc, int size ) {$/;"	f	class:Action_matrix_matrix_product_bis
calculate	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  BTL_DONT_INLINE void calculate( void ) {$/;"	f	class:Action_matrix_vector_product
calculate	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_partial_lu
calculate	tools/eigen/bench/btl/actions/action_rot.hh	/^  BTL_DONT_INLINE void calculate( void ) {$/;"	f	class:Action_rot
calculate	tools/eigen/bench/btl/actions/action_symv.hh	/^  BTL_DONT_INLINE void calculate( void ) {$/;"	f	class:Action_symv
calculate	tools/eigen/bench/btl/actions/action_syr2.hh	/^  BTL_DONT_INLINE void calculate( void ) {$/;"	f	class:Action_syr2
calculate	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_trisolve
calculate	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_trisolve_matrix
calculate	tools/eigen/bench/btl/actions/action_trmm.hh	/^  inline void calculate( void ) {$/;"	f	class:Action_trmm
call_assignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment(Dst& dst, const Src& src, const Func& func, typename enable_if<evaluator_traits<Src>::AssumeAliasing==0, void*>::type = 0)$/;"	f	namespace:Eigen::internal
call_assignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment(Dst& dst, const Src& src, const Func& func, typename enable_if<evaluator_traits<Src>::AssumeAliasing==1, void*>::type = 0)$/;"	f	namespace:Eigen::internal
call_assignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment(NoAlias<Dst,StorageBase>& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_assignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment(const Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment(const NoAlias<Dst,StorageBase>& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment_no_alias(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment_no_alias(Dst& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias_no_transpose	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment_no_alias_no_transpose(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias_no_transpose	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_assignment_no_alias_no_transpose(Dst& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_dense_assignment_loop(const DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen::internal
call_dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC void call_dense_assignment_loop(const DstXprType& dst, const SrcXprType& src, const Functor &func)$/;"	f	namespace:Eigen::internal
call_directsolver	tools/eigen/bench/spbench/spbenchsolver.h	/^void call_directsolver(Solver& solver, const int solver_id, const typename Solver::MatrixType& A, const Matrix<Scalar, Dynamic, 1>& b, const Matrix<Scalar, Dynamic, 1>& refX, std::string& statFile)$/;"	f
call_itersolver	tools/eigen/bench/spbench/spbenchsolver.h	/^void call_itersolver(Solver &solver, const int solver_id, const typename Solver::MatrixType& A, const Matrix<Scalar, Dynamic, 1>& b, const Matrix<Scalar, Dynamic, 1>& refX, std::string& statFile)$/;"	f
call_ref	tools/eigen/failtest/ref_1.cpp	/^void call_ref(Ref<VectorXf> a) { }$/;"	f
call_ref	tools/eigen/failtest/ref_2.cpp	/^void call_ref(Ref<VectorXf> a) { }$/;"	f
call_ref	tools/eigen/failtest/ref_3.cpp	/^void call_ref(Ref<VectorXf> a) { }$/;"	f
call_ref	tools/eigen/failtest/ref_4.cpp	/^void call_ref(Ref<MatrixXf,0,OuterStride<> > a) {}$/;"	f
call_ref	tools/eigen/failtest/ref_5.cpp	/^void call_ref(Ref<VectorXf> a) { }$/;"	f
call_ref	tools/eigen/failtest/sparse_ref_1.cpp	/^void call_ref(Ref<SparseMatrix<float> > a) { }$/;"	f
call_ref	tools/eigen/failtest/sparse_ref_2.cpp	/^void call_ref(Ref<SparseMatrix<float> > a) { }$/;"	f
call_ref	tools/eigen/failtest/sparse_ref_3.cpp	/^void call_ref(Ref<SparseMatrix<float> > a) { }$/;"	f
call_ref	tools/eigen/failtest/sparse_ref_4.cpp	/^void call_ref(Ref<SparseMatrix<float> > a) {}$/;"	f
call_ref	tools/eigen/failtest/sparse_ref_5.cpp	/^void call_ref(Ref<SparseMatrix<float> > a) { }$/;"	f
call_ref	tools/eigen/test/ref.cpp	/^void call_ref()$/;"	f
call_ref	tools/eigen/test/sparse_ref.cpp	/^void call_ref()$/;"	f
call_ref_1	tools/eigen/test/ref.cpp	/^EIGEN_DONT_INLINE void call_ref_1(Ref<VectorXf> a, const B &b) { VERIFY_IS_EQUAL(a,b); }$/;"	f
call_ref_1	tools/eigen/test/sparse_ref.cpp	/^EIGEN_DONT_INLINE void call_ref_1(Ref<SparseMatrix<float> > a, const B &b) { VERIFY_IS_EQUAL(a.toDense(),b.toDense()); }$/;"	f
call_ref_2	tools/eigen/test/ref.cpp	/^EIGEN_DONT_INLINE void call_ref_2(const Ref<const VectorXf>& a, const B &b) { VERIFY_IS_EQUAL(a,b); }$/;"	f
call_ref_2	tools/eigen/test/sparse_ref.cpp	/^EIGEN_DONT_INLINE void call_ref_2(const Ref<const SparseMatrix<float> >& a, const B &b) { VERIFY_IS_EQUAL(a.toDense(),b.toDense()); }$/;"	f
call_ref_3	tools/eigen/test/ref.cpp	/^EIGEN_DONT_INLINE void call_ref_3(Ref<VectorXf,0,InnerStride<> > a, const B &b) { VERIFY_IS_EQUAL(a,b); }$/;"	f
call_ref_3	tools/eigen/test/sparse_ref.cpp	/^EIGEN_DONT_INLINE void call_ref_3(const Ref<const SparseMatrix<float>, StandardCompressedFormat>& a, const B &b) {$/;"	f
call_ref_4	tools/eigen/test/ref.cpp	/^EIGEN_DONT_INLINE void call_ref_4(const Ref<const VectorXf,0,InnerStride<> >& a, const B &b) { VERIFY_IS_EQUAL(a,b); }$/;"	f
call_ref_5	tools/eigen/test/ref.cpp	/^EIGEN_DONT_INLINE void call_ref_5(Ref<MatrixXf,0,OuterStride<> > a, const B &b) { VERIFY_IS_EQUAL(a,b); }$/;"	f
call_ref_6	tools/eigen/test/ref.cpp	/^EIGEN_DONT_INLINE void call_ref_6(const Ref<const MatrixXf,0,OuterStride<> >& a, const B &b) { VERIFY_IS_EQUAL(a,b); }$/;"	f
call_ref_7	tools/eigen/test/ref.cpp	/^EIGEN_DONT_INLINE void call_ref_7(Ref<Matrix<float,Dynamic,3> > a, const B &b) { VERIFY_IS_EQUAL(a,b); }$/;"	f
call_solver	tools/eigen/bench/spbench/spbenchsolver.h	/^void call_solver(Solver &solver, const int solver_id, const typename Solver::MatrixType& A, const Matrix<Scalar, Dynamic, 1>& b, const Matrix<Scalar, Dynamic, 1>& refX,std::ofstream& statbuf)$/;"	f
call_triangular_assignment_loop	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^EIGEN_DEVICE_FUNC void call_triangular_assignment_loop(const DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen::internal
call_triangular_assignment_loop	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^EIGEN_DEVICE_FUNC void call_triangular_assignment_loop(const DstXprType& dst, const SrcXprType& src, const Functor &func)$/;"	f	namespace:Eigen::internal
calls	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^  int calls;$/;"	m	struct:PointPointMinimizer	file:
calls	tools/eigen/unsupported/test/BVH.cpp	/^  int calls;$/;"	m	struct:BallPointStuff	file:
cast	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline NewType cast(const OldType& x)$/;"	f	namespace:Eigen::internal
cast	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^           AlignedBox<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::AlignedBox
cast	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  inline typename internal::cast_return_type<AngleAxis,AngleAxis<NewScalarType> >::type cast() const$/;"	f	class:Eigen::AngleAxis
cast	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^           Hyperplane<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::Hyperplane
cast	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^           ParametrizedLine<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::ParametrizedLine
cast	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline typename internal::cast_return_type<Derived,Quaternion<NewScalarType> >::type cast() const$/;"	f	class:Eigen::QuaternionBase
cast	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline typename internal::cast_return_type<Rotation2D,Rotation2D<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Rotation2D
cast	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling<NewScalarType> cast() const$/;"	f	class:Eigen::UniformScaling
cast	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline typename internal::cast_return_type<Transform,Transform<NewScalarType,Dim,Mode,Options> >::type cast() const$/;"	f	class:Eigen::Transform
cast	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline typename internal::cast_return_type<Translation,Translation<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Translation
cast	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^cast() const$/;"	f
cast	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    cast() const {$/;"	f	class:Eigen::TensorBase
cast_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct cast_impl$/;"	s	namespace:Eigen::internal
cast_to_pointer_type	tools/eigen/Eigen/src/Core/Map.h	/^    inline PointerType cast_to_pointer_type(PointerArgType ptr) { return ptr; }$/;"	f	class:Eigen::Map
casting	tools/eigen/test/basicstuff.cpp	/^void casting()$/;"	f
cauchy_max_bound	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^typename NumTraits<typename Polynomial::Scalar>::Real cauchy_max_bound( const Polynomial& poly )$/;"	f	namespace:Eigen
cauchy_min_bound	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^typename NumTraits<typename Polynomial::Scalar>::Real cauchy_min_bound( const Polynomial& poly )$/;"	f	namespace:Eigen
cbrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal cbrt  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(cbrt );    }$/;"	f	namespace:mpfr
cdiv	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^std::complex<Scalar> cdiv(const Scalar& xr, const Scalar& xi, const Scalar& yr, const Scalar& yi)$/;"	f	namespace:Eigen
cdone	tools/eigen/bench/bench_gemm.cpp	/^static std::complex<double> cdone = 1;$/;"	v	file:
cdotc_	tools/eigen/blas/f2c/complexdots.c	/^complex cdotc_(integer *n, complex *cx, integer $/;"	f
cdotu_	tools/eigen/blas/f2c/complexdots.c	/^complex cdotu_(integer *n, complex *cx, integer $/;"	f
cdzero	tools/eigen/bench/bench_gemm.cpp	/^static std::complex<double> cdzero = 0;$/;"	v	file:
ceil	tools/eigen/Eigen/src/Core/MathFunctions.h	/^T (ceil)(const T& x)$/;"	f	namespace:Eigen::numext
ceil	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^ceil() const$/;"	f
ceil	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  static unsigned int ceil(unsigned int num, unsigned int denom) {$/;"	f	struct:Eigen::TensorEvaluator
ceil	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal ceil(const mpreal& v)$/;"	f	namespace:mpfr
center	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  center() const$/;"	f	class:Eigen::AlignedBox
center	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    Eigen::Vector2d center;$/;"	m	class:MandelbrotWidget
center	tools/eigen/unsupported/test/BVH.cpp	/^  VectorType center;$/;"	m	struct:Ball	file:
centered_smooth_curve	tools/eigen/bench/btl/data/smooth.cxx	/^void centered_smooth_curve(const vector<double> & tab_mflops, vector<double> & smooth_tab_mflops,int window_half_width){$/;"	f
ces	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^ComplexEigenSolver<MatrixXcf> ces;$/;"	v
cfone	tools/eigen/bench/bench_gemm.cpp	/^static std::complex<float> cfone = 1;$/;"	v	file:
cfzero	tools/eigen/bench/bench_gemm.cpp	/^static std::complex<float> cfzero = 0;$/;"	v	file:
changedlines	tools/eigen/scripts/eigen_gen_credits.cpp	/^  int changedlines;$/;"	m	struct:contributor	file:
changesets	tools/eigen/scripts/eigen_gen_credits.cpp	/^  int changesets;$/;"	m	struct:contributor	file:
chbmv_	tools/eigen/blas/f2c/chbmv.c	/^\/* Subroutine *\/ int chbmv_(char *uplo, integer *n, integer *k, complex *$/;"	f
check	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  bool check()$/;"	f	class:STL_Timer
checkChildrenData	tools/eigen/doc/eigen_navtree_hacks.js	/^function checkChildrenData(node) {$/;"	f
checkIdx	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^struct checkIdx {$/;"	s	file:
checkIndexRange	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    bool checkIndexRange(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::Tensor
checkIndexRange	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE bool checkIndexRange(const array<Index, NumIndices>& \/*indices*\/) const$/;"	f	class:Eigen::TensorFixedSize
checkResults	tools/eigen/bench/btl/generic_bench/btl.hh	/^  bool checkResults;$/;"	m	class:BtlConfig
checkSanity	tools/eigen/Eigen/src/Core/MapBase.h	/^    void checkSanity() const$/;"	f	class:Eigen::MapBase
checkTransposeAliasing_impl	tools/eigen/Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl$/;"	s	namespace:Eigen::internal
checkTransposeAliasing_impl	tools/eigen/Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl<Derived, OtherDerived, false>$/;"	s	namespace:Eigen::internal
check_DenseIndex_is_signed	tools/eigen/Eigen/src/Core/DenseBase.h	/^static inline void check_DenseIndex_is_signed() {$/;"	f	namespace:Eigen::internal
check_accuracy	tools/eigen/bench/bench_norm.cpp	/^void check_accuracy(double basef, double based, int s)$/;"	f
check_accuracy_var	tools/eigen/bench/bench_norm.cpp	/^void check_accuracy_var(int ef0, int ef1, int ed0, int ed1, int s)$/;"	f
check_aligned_malloc	tools/eigen/test/dynalloc.cpp	/^void check_aligned_malloc()$/;"	f
check_aligned_new	tools/eigen/test/dynalloc.cpp	/^void check_aligned_new()$/;"	f
check_aligned_stack_alloc	tools/eigen/test/dynalloc.cpp	/^void check_aligned_stack_alloc()$/;"	f
check_all_files_in_same_exact_order	tools/eigen/bench/analyze-blocking-sizes.cpp	/^void check_all_files_in_same_exact_order($/;"	f
check_all_in_range	tools/eigen/test/rand.cpp	/^template<typename Scalar> void check_all_in_range(Scalar x, Scalar y)$/;"	f
check_all_var	tools/eigen/test/geo_eulerangles.cpp	/^template<typename Scalar> void check_all_var(const Matrix<Scalar,3,1>& ea)$/;"	f
check_atan2	tools/eigen/unsupported/test/autodiff_scalar.cpp	/^template<typename Scalar> void check_atan2()$/;"	f
check_const_correctness	tools/eigen/test/geo_quaternion.cpp	/^template<typename PlainObjectType> void check_const_correctness(const PlainObjectType&)$/;"	f
check_const_correctness	tools/eigen/test/mapped_matrix.cpp	/^template<typename PlainObjectType> void check_const_correctness(const PlainObjectType&)$/;"	f
check_const_correctness	tools/eigen/test/ref.cpp	/^template<typename PlainObjectType> void check_const_correctness(const PlainObjectType&)$/;"	f
check_const_correctness	tools/eigen/test/sparse_ref.cpp	/^template<typename PlainObjectType> void check_const_correctness(const PlainObjectType&)$/;"	f
check_coordinates	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index , Index ) const {}$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_custom_new_delete	tools/eigen/test/dynalloc.cpp	/^template<typename T> void check_custom_new_delete()$/;"	f
check_dimension	tools/eigen/unsupported/test/kronecker_product.cpp	/^void check_dimension(const MatrixType& ab, const int rows,  const int cols)$/;"	f
check_dynaligned	tools/eigen/test/dynalloc.cpp	/^template<typename T> void check_dynaligned()$/;"	f
check_for_aliasing	tools/eigen/Eigen/src/Core/Transpose.h	/^void check_for_aliasing(const Dst &dst, const Src &src)$/;"	f	namespace:Eigen::internal
check_global_interpolation2d	tools/eigen/unsupported/test/splines.cpp	/^void check_global_interpolation2d()$/;"	f
check_global_interpolation_with_derivatives2d	tools/eigen/unsupported/test/splines.cpp	/^void check_global_interpolation_with_derivatives2d()$/;"	f
check_handmade_aligned_malloc	tools/eigen/test/dynalloc.cpp	/^void check_handmade_aligned_malloc()$/;"	f
check_in_range	tools/eigen/test/rand.cpp	/^template<typename Scalar> Scalar check_in_range(Scalar x, Scalar y)$/;"	f
check_is_convertible	tools/eigen/test/meta.cpp	/^bool check_is_convertible(const From&, const To&)$/;"	f
check_kronecker_product	tools/eigen/unsupported/test/kronecker_product.cpp	/^void check_kronecker_product(const MatrixType& ab)$/;"	f
check_op	tools/eigen/blas/common.h	/^inline bool check_op(const char* op)$/;"	f
check_product	tools/eigen/bench/benchBlasGemm.cpp	/^void check_product(int M, int N, int K)$/;"	f
check_product	tools/eigen/bench/benchBlasGemm.cpp	/^void check_product(void)$/;"	f
check_qtvector_matrix	tools/eigen/test/qtvector.cpp	/^void check_qtvector_matrix(const MatrixType& m)$/;"	f
check_qtvector_quaternion	tools/eigen/test/qtvector.cpp	/^void check_qtvector_quaternion(const QuaternionType&)$/;"	f
check_qtvector_transform	tools/eigen/test/qtvector.cpp	/^void check_qtvector_transform(const TransformType&)$/;"	f
check_range	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::check_range (int t, mp_rnd_t rnd_mode)$/;"	f	class:mpfr::mpreal
check_result	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  void check_result( void ){$/;"	f	class:Action_aat_product
check_result	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  void check_result( void ){$/;"	f	class:Action_ata_product
check_result	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  void check_result( void )$/;"	f	class:Action_atv_product
check_result	tools/eigen/bench/btl/actions/action_axpby.hh	/^  void check_result( void ){$/;"	f	class:Action_axpby
check_result	tools/eigen/bench/btl/actions/action_axpy.hh	/^  void check_result( void ){$/;"	f	class:Action_axpy
check_result	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  void check_result( void ){$/;"	f	class:Action_cholesky
check_result	tools/eigen/bench/btl/actions/action_ger.hh	/^  BTL_DONT_INLINE void check_result( void ){$/;"	f	class:Action_ger
check_result	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  void check_result( void ){$/;"	f	class:Action_hessenberg
check_result	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  void check_result( void ){$/;"	f	class:Action_tridiagonalization
check_result	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  void check_result( void ){$/;"	f	class:Action_lu_decomp
check_result	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  void check_result( void ){$/;"	f	class:Action_matrix_matrix_product
check_result	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  BTL_DONT_INLINE void check_result( void ){$/;"	f	class:Action_matrix_vector_product
check_result	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  void check_result( void ){$/;"	f	class:Action_partial_lu
check_result	tools/eigen/bench/btl/actions/action_rot.hh	/^  BTL_DONT_INLINE void check_result( void ){$/;"	f	class:Action_rot
check_result	tools/eigen/bench/btl/actions/action_symv.hh	/^  BTL_DONT_INLINE void check_result( void ){$/;"	f	class:Action_symv
check_result	tools/eigen/bench/btl/actions/action_syr2.hh	/^  BTL_DONT_INLINE void check_result( void ){$/;"	f	class:Action_syr2
check_result	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  void check_result(){$/;"	f	class:Action_trisolve
check_result	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  void check_result( void ){$/;"	f	class:Action_trisolve_matrix
check_result	tools/eigen/bench/btl/actions/action_trmm.hh	/^  void check_result( void ){$/;"	f	class:Action_trmm
check_rows_cols_for_overflow	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^template<> struct check_rows_cols_for_overflow<Dynamic> {$/;"	s	namespace:Eigen::internal
check_rows_cols_for_overflow	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^template<int MaxSizeAtCompileTime> struct check_rows_cols_for_overflow {$/;"	s	namespace:Eigen::internal
check_side	tools/eigen/blas/common.h	/^inline bool check_side(const char* side)$/;"	f
check_size_for_overflow	tools/eigen/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void check_size_for_overflow(size_t size)$/;"	f	namespace:Eigen::internal
check_slerp	tools/eigen/test/geo_quaternion.cpp	/^template<typename QuatType> void check_slerp(const QuatType& q0, const QuatType& q1)$/;"	f
check_sparse_abs_determinant	tools/eigen/test/sparse_solver.h	/^void check_sparse_abs_determinant(Solver& solver, const typename Solver::MatrixType& A, const DenseMat& dA)$/;"	f
check_sparse_determinant	tools/eigen/test/sparse_solver.h	/^void check_sparse_determinant(Solver& solver, const typename Solver::MatrixType& A, const DenseMat& dA)$/;"	f
check_sparse_kronecker_product	tools/eigen/unsupported/test/kronecker_product.cpp	/^void check_sparse_kronecker_product(const MatrixType& ab)$/;"	f
check_sparse_leastsquare_solving	tools/eigen/test/sparse_solver.h	/^template<typename Solver> void check_sparse_leastsquare_solving(Solver& solver)$/;"	f
check_sparse_solving	tools/eigen/test/sparse_solver.h	/^void check_sparse_solving(Solver& solver, const typename Solver::MatrixType& A, const Rhs& b, const DenseMat& dA, const DenseRhs& db)$/;"	f
check_sparse_solving_real_cases	tools/eigen/test/sparse_solver.h	/^void check_sparse_solving_real_cases(Solver& solver, const typename Solver::MatrixType& A, const Rhs& b, const typename Solver::MatrixType& fullA, const Rhs& refX)$/;"	f
check_sparse_spd_determinant	tools/eigen/test/sparse_solver.h	/^template<typename Solver> void check_sparse_spd_determinant(Solver& solver)$/;"	f
check_sparse_spd_solving	tools/eigen/test/sparse_solver.h	/^template<typename Solver> void check_sparse_spd_solving(Solver& solver, int maxSize = 300, int maxRealWorldSize = 100000)$/;"	f
check_sparse_square_abs_determinant	tools/eigen/test/sparse_solver.h	/^template<typename Solver> void check_sparse_square_abs_determinant(Solver& solver)$/;"	f
check_sparse_square_determinant	tools/eigen/test/sparse_solver.h	/^template<typename Solver> void check_sparse_square_determinant(Solver& solver)$/;"	f
check_sparse_square_solving	tools/eigen/test/sparse_solver.h	/^template<typename Solver> void check_sparse_square_solving(Solver& solver, int maxSize = 300, int maxRealWorldSize = 100000, bool checkDeficient = false)$/;"	f
check_static_allocation_size	tools/eigen/Eigen/src/Core/DenseStorage.h	/^void check_static_allocation_size()$/;"	f	namespace:Eigen::internal
check_stddeque_matrix	tools/eigen/test/stddeque.cpp	/^void check_stddeque_matrix(const MatrixType& m)$/;"	f
check_stddeque_quaternion	tools/eigen/test/stddeque.cpp	/^void check_stddeque_quaternion(const QuaternionType&)$/;"	f
check_stddeque_transform	tools/eigen/test/stddeque.cpp	/^void check_stddeque_transform(const TransformType&)$/;"	f
check_stdlist_matrix	tools/eigen/test/stdlist.cpp	/^void check_stdlist_matrix(const MatrixType& m)$/;"	f
check_stdlist_quaternion	tools/eigen/test/stdlist.cpp	/^void check_stdlist_quaternion(const QuaternionType&)$/;"	f
check_stdlist_transform	tools/eigen/test/stdlist.cpp	/^void check_stdlist_transform(const TransformType&)$/;"	f
check_stdvector_matrix	tools/eigen/test/stdvector.cpp	/^void check_stdvector_matrix(const MatrixType& m)$/;"	f
check_stdvector_matrix	tools/eigen/test/stdvector_overload.cpp	/^void check_stdvector_matrix(const MatrixType& m)$/;"	f
check_stdvector_quaternion	tools/eigen/test/stdvector.cpp	/^void check_stdvector_quaternion(const QuaternionType&)$/;"	f
check_stdvector_quaternion	tools/eigen/test/stdvector_overload.cpp	/^void check_stdvector_quaternion(const QuaternionType&)$/;"	f
check_stdvector_transform	tools/eigen/test/stdvector.cpp	/^void check_stdvector_transform(const TransformType&)$/;"	f
check_stdvector_transform	tools/eigen/test/stdvector_overload.cpp	/^void check_stdvector_transform(const TransformType&)$/;"	f
check_template_parameters	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::LDLT
check_template_parameters	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::LLT
check_template_parameters	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::ComplexEigenSolver
check_template_parameters	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::EigenSolver
check_template_parameters	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::GeneralizedEigenSolver
check_template_parameters	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::SelfAdjointEigenSolver
check_template_parameters	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::FullPivLU
check_template_parameters	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::PartialPivLU
check_template_parameters	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::ColPivHouseholderQR
check_template_parameters	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::FullPivHouseholderQR
check_template_parameters	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::HouseholderQR
check_template_parameters	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  static void check_template_parameters()$/;"	f	class:Eigen::SVDBase
check_template_parameters	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  static void check_template_parameters()$/;"	f	class:Eigen::SparseMatrix
check_template_parameters	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::SparseVector
check_template_params	tools/eigen/Eigen/src/Geometry/Transform.h	/^    static EIGEN_STRONG_INLINE void check_template_params()$/;"	f	class:Eigen::Transform
check_that_malloc_is_allowed	tools/eigen/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void check_that_malloc_is_allowed()$/;"	f	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	tools/eigen/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	tools/eigen/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector<DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	tools/eigen/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	tools/eigen/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector<Scalar,DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
check_unalignedassert_good	tools/eigen/test/unalignedassert.cpp	/^void check_unalignedassert_good()$/;"	f
check_uplo	tools/eigen/blas/common.h	/^inline bool check_uplo(const char* uplo)$/;"	f
children	tools/eigen/debug/gdb/printers.py	/^	def children(self):$/;"	m	class:EigenMatrixPrinter
children	tools/eigen/debug/gdb/printers.py	/^	def children(self):$/;"	m	class:EigenQuaternionPrinter
children	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  std::vector<int> children; \/\/children of x are children[2x] and children[2x+1], indices bigger than boxes.size() index into objects.$/;"	m	class:Eigen::KdBVH
chip	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    chip(const Index offset) const {$/;"	f	class:Eigen::TensorBase
chip	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    chip(const Index offset) {$/;"	f	class:Eigen::TensorBase
chip	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    chip(const Index offset, const Index dim) const {$/;"	f	class:Eigen::TensorBase
chip	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    chip(const Index offset, const Index dim) {$/;"	f	class:Eigen::TensorBase
chkder	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/chkder.h	/^void chkder($/;"	f	namespace:Eigen::internal
chkder_factor	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/chkder.h	2;"	d
chkder_log10e	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/chkder.h	1;"	d
cholesky	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void cholesky(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:blas_interface
cholesky	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void cholesky(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:eigen2_interface
cholesky	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void cholesky(const gene_matrix & X, gene_matrix & C, int  \/*N*\/){$/;"	f	class:eigen3_interface
cholesky	tools/eigen/test/cholesky.cpp	/^template<typename MatrixType> void cholesky(const MatrixType& m)$/;"	f
cholesky_bug241	tools/eigen/test/cholesky.cpp	/^template<typename MatrixType> void cholesky_bug241(const MatrixType& m)$/;"	f
cholesky_cplx	tools/eigen/test/cholesky.cpp	/^template<typename MatrixType> void cholesky_cplx(const MatrixType& m)$/;"	f
cholesky_definiteness	tools/eigen/test/cholesky.cpp	/^template<typename MatrixType> void cholesky_definiteness(const MatrixType& m)$/;"	f
cholesky_verify_assert	tools/eigen/test/cholesky.cpp	/^template<typename MatrixType> void cholesky_verify_assert()$/;"	f
cholmod	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_common& cholmod() { return m_cholmod; }$/;"	f	class:Eigen::CholmodBase
cholmodCommon	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    cholmod_common *cholmodCommon() const { return &m_cc; }$/;"	f	class:Eigen::SPQR
cholmod_configure_matrix	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^void cholmod_configure_matrix(CholmodType& mat)$/;"	f	namespace:Eigen::internal
choose	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^const T1& choose(Cond<true>, const T1& first, const T2&) {$/;"	f	namespace:Eigen
choose	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^const T2& choose(Cond<false>, const T1&, const T2& second) {$/;"	f	namespace:Eigen
chpmv_	tools/eigen/blas/f2c/chpmv.c	/^\/* Subroutine *\/ int chpmv_(char *uplo, integer *n, complex *alpha, complex *$/;"	f
chwirut2_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    chwirut2_functor(void) : Functor<double>(3,54) {}$/;"	f	struct:chwirut2_functor
chwirut2_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct chwirut2_functor : Functor<double>$/;"	s	file:
chwirut2_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    chwirut2_functor(void) : DenseFunctor<double>(3,54) {}$/;"	f	struct:chwirut2_functor
chwirut2_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct chwirut2_functor : DenseFunctor<double>$/;"	s	file:
cj	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<LhsScalar,RhsScalar,ConjLhs,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,ConjLhs,false> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,false,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
clamp	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& clamp(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
clean	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void clean()$/;"	f	class:Eigen::PastixBase
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup()$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup()$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() { }$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() { }$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
cleanup	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void cleanup() {$/;"	f	struct:Eigen::TensorEvaluator
clear	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline void clear() { m_size = 0; }$/;"	f	class:Eigen::internal::CompressedStorage
clear	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  void clear( void )$/;"	f	class:X86_Timer
clear	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void clear() $/;"	f	struct:Eigen::internal::fftw_impl
clear	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  void clear() $/;"	f	struct:Eigen::internal::kissfft_impl
clear	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline void clear() {$/;"	f	class:Eigen::SkylineStorage
clear	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::clear(::mpfr_ptr x)$/;"	f	class:mpfr::mpreal
clearFactors	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void clearFactors()$/;"	f	class:Eigen::SuperLUBase
clear_mark	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline  IndexType clear_mark  \/* return the new value for tag_mark *\/$/;"	f	namespace:internal
closed_spline2d	tools/eigen/unsupported/test/splines.cpp	/^Spline<double, 2, Dynamic> closed_spline2d()$/;"	f
cmp_EQ	tools/eigen/Eigen/src/Core/util/Constants.h	/^  cmp_EQ = 0,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_LE	tools/eigen/Eigen/src/Core/util/Constants.h	/^  cmp_LE = 2,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_LT	tools/eigen/Eigen/src/Core/util/Constants.h	/^  cmp_LT = 1,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_NEQ	tools/eigen/Eigen/src/Core/util/Constants.h	/^  cmp_NEQ = 4$/;"	e	enum:Eigen::internal::ComparisonName
cmp_UNORD	tools/eigen/Eigen/src/Core/util/Constants.h	/^  cmp_UNORD = 3,$/;"	e	enum:Eigen::internal::ComparisonName
cmpabs	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int cmpabs(const mpreal& a,const mpreal& b)$/;"	f	namespace:mpfr
coeff	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::ArrayWrapper
coeff	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::MatrixWrapper
coeff	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::ArrayWrapper
coeff	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::MatrixWrapper
coeff	tools/eigen/Eigen/src/Core/Block.h	/^    EIGEN_STRONG_INLINE const CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeff	tools/eigen/Eigen/src/Core/Block.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::binary_evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::unary_evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::binary_evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::unary_evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  inline EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  inline EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CwiseNullaryOp
coeff	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::CwiseNullaryOp
coeff	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    coeff(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index idx) const$/;"	f	class:Eigen::Diagonal
coeff	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeff	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index index) const$/;"	f	class:Eigen::MapBase
coeff	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
coeff	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::NestByValue
coeff	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
coeff	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeff	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
coeff	tools/eigen/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC Scalar coeff(Index i) const$/;"	f	class:Eigen::ProductImpl
coeff	tools/eigen/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::ProductImpl
coeff	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar coeff(Index idx) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
coeff	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC const CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC const CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	tools/eigen/Eigen/src/Core/Redux.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::internal::redux_evaluator
coeff	tools/eigen/Eigen/src/Core/Redux.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::redux_evaluator
coeff	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index,Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	tools/eigen/Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i) const$/;"	f	class:Eigen::Select
coeff	tools/eigen/Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i, Index j) const$/;"	f	class:Eigen::Select
coeff	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SelfAdjointView
coeff	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& coeff(Index i) const { return indices().coeff(i); }$/;"	f	class:Eigen::TranspositionsBase
coeff	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const  { return derived().coeff(row,col); }$/;"	f	class:Eigen::TriangularBase
coeff	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::TriangularViewImpl
coeff	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar coeff(Index i, Index j) const$/;"	f	class:Eigen::PartialReduxExpr
coeff	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::PartialReduxExpr
coeff	tools/eigen/Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::visitor_evaluator
coeff	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_StorageIndex>::coeff(Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeff	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index index) const$/;"	f	class:Eigen::BlockImpl
coeff	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index index) const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeff	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::BlockImpl
coeff	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeff	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  Scalar coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseMapBase
coeff	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseMatrix
coeff	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index i) const$/;"	f	class:Eigen::SparseVector
coeff	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseVector
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const$/;"	f	class:Eigen::Tensor
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar& coeff(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::Tensor
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC inline const Scalar& coeff(Index firstIndex, Index secondIndex, IndexTypes... otherIndices) const$/;"	f	class:Eigen::Tensor
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const {$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const {$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const {$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const {$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(const array<DenseIndex, NumCoords>& coords) const {$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const$/;"	f	class:Eigen::TensorFixedSize
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::TensorFixedSize
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    inline const Scalar& coeff(Index firstIndex, IndexTypes... otherIndices) const$/;"	f	class:Eigen::TensorFixedSize
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(const array<Index, NumDims>& coords) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(const array<Index, NumDims>& coords)$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(const array<Index, NumDims>& coords) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(const array<Index, NumDims>& coords) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::TensorRef
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::TensorRef
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const {$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC virtual const Scalar coeff(DenseIndex index) const {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorReadOnly
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff($/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeff(const array<Index, NumDims>& coords) const$/;"	f	struct:Eigen::TensorEvaluator
coeff	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    Scalar coeff(Index i) const$/;"	f	class:Eigen::KroneckerProductBase
coeff	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::KroneckerProductBase
coeff	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar coeff(Index row, Index col) const {$/;"	f	class:Eigen::SkylineMatrix
coeff	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Map<const BlockScalar> coeff(Index brow, Index bcol) const$/;"	f	class:Eigen::BlockSparseMatrix
coeff	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Scalar coeff(Index row, Index col)$/;"	f	class:Eigen::BlockSparseMatrixView
coeff	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Scalar coeff(Index bi) const$/;"	f	class:Eigen::BlockVectorView
coeff	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Scalar coeff(Index bi, Index j) const$/;"	f	class:Eigen::BlockVectorView
coeff	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::DynamicSparseMatrix
coeff	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  Scalar coeff(Index row, Index col) const { return m_matrix->coeff(row,col); }$/;"	f	struct:Eigen::internal::evaluator
coeffByOuterInner	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeffByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
coeffByOuterInner	tools/eigen/Eigen/src/Core/Redux.h	/^  CoeffReturnType coeffByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::internal::redux_evaluator
coeffColMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeffColMajor(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeffDiag	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar coeffDiag(Index idx) const {$/;"	f	class:Eigen::SkylineMatrix
coeffExistLower	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline bool coeffExistLower(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffExistUpper	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline bool coeffExistUpper(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffLower	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar coeffLower(Index row, Index col) const {$/;"	f	class:Eigen::SkylineMatrix
coeffRef	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::ArrayWrapper
coeffRef	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::MatrixWrapper
coeffRef	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::ArrayWrapper
coeffRef	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::MatrixWrapper
coeffRef	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	tools/eigen/Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	tools/eigen/Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	tools/eigen/Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	tools/eigen/Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Scalar& coeffRef(Index row, Index)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC typename XprType::Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRef(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index idx)$/;"	f	class:Eigen::Diagonal
coeffRef	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index row, Index)$/;"	f	class:Eigen::Diagonal
coeffRef	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index idx) const$/;"	f	class:Eigen::Diagonal
coeffRef	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeffRef	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index index)$/;"	f	class:Eigen::MapBase
coeffRef	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index row, Index col)$/;"	f	class:Eigen::MapBase
coeffRef	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MapBase
coeffRef	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
coeffRef	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::NestByValue
coeffRef	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::NestByValue
coeffRef	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index,Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SelfAdjointView
coeffRef	tools/eigen/Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	tools/eigen/Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& coeffRef(Index i) { return indices().coeffRef(i); }$/;"	f	class:Eigen::TranspositionsBase
coeffRef	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col) { return derived().coeffRef(row,col); }$/;"	f	class:Eigen::TriangularBase
coeffRef	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::TriangularViewImpl
coeffRef	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_StorageIndex>::coeffRef(Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeffRef	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::BlockImpl
coeffRef	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::BlockImpl
coeffRef	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeffRef	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseMapBase
coeffRef	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
coeffRef	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index i)$/;"	f	class:Eigen::SparseVector
coeffRef	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseVector
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::Tensor
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& coeffRef(const array<Index, NumIndices>& indices)$/;"	f	class:Eigen::Tensor
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline Scalar& coeffRef(Index firstIndex, Index secondIndex, IndexTypes... otherIndices)$/;"	f	class:Eigen::Tensor
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType& coeffRef(Index index)$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType& coeffRef(Index index)$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& coeffRef(Index index) {$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& coeffRef(const array<DenseIndex, NumCoords>& coords) {$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::TensorFixedSize
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(const array<Index, NumIndices>& indices)$/;"	f	class:Eigen::TensorFixedSize
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    inline Scalar& coeffRef(Index firstIndex, IndexTypes... otherIndices)$/;"	f	class:Eigen::TensorFixedSize
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType& coeffRef(Index index)$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType& coeffRef(Index index)$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType& coeffRef(const array<Index, NumDims>& coords)$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index firstIndex, IndexTypes... otherIndices)$/;"	f	class:Eigen::TensorRef
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index i0, Index i1)$/;"	f	class:Eigen::TensorRef
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index i0, Index i1, Index i2)$/;"	f	class:Eigen::TensorRef
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index i0, Index i1, Index i2, Index i3, Index i4)$/;"	f	class:Eigen::TensorRef
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::TensorRef
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(const array<Index, NumIndices>& indices)$/;"	f	class:Eigen::TensorRef
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& coeffRef(Index index) {$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC virtual Scalar& coeffRef(DenseIndex \/*index*\/) {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorReadOnly
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC virtual Scalar& coeffRef(DenseIndex index) {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorWritable
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& coeffRef(Index index) {$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType& coeffRef(Index index)$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::TensorEvaluator
coeffRef	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    CoeffType coeffRef(Index i) { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
coeffRef	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    const CoeffType coeffRef(Index i) const { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
coeffRef	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffRef	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Ref<BlockScalar> coeffRef(Index brow, Index bcol)$/;"	f	class:Eigen::BlockSparseMatrix
coeffRef	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Scalar coeffRef(Index row, Index col)$/;"	f	class:Eigen::BlockSparseMatrixView
coeffRef	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Scalar coeffRef(Index bi)$/;"	f	class:Eigen::BlockVectorReturn
coeffRef	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Scalar coeffRef(Index bi, Index j)$/;"	f	class:Eigen::BlockVectorReturn
coeffRef	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
coeffRefByOuterInner	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRefByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRefDiag	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& coeffRefDiag(Index idx) {$/;"	f	class:Eigen::SkylineMatrix
coeffRefLower	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& coeffRefLower(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffRefUpper	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& coeffRefUpper(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffRowMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType coeffRowMajor(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
coeffSeparator	tools/eigen/Eigen/src/Core/IO.h	/^  std::string coeffSeparator;$/;"	m	struct:Eigen::IOFormat
coeffUpper	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar coeffUpper(Index row, Index col) const {$/;"	f	class:Eigen::SkylineMatrix
coeffWiseOp	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void coeffWiseOp(int num_iters) {$/;"	f	class:BenchmarkSuite
coeffWiseOp	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(coeffWiseOp);$/;"	v
coeff_visitor	tools/eigen/Eigen/src/Core/Visitor.h	/^struct coeff_visitor$/;"	s	namespace:Eigen::internal
coeffs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrixWrapper
coeffs	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Map
coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Coefficients& coeffs() { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline const typename internal::traits<Derived>::Coefficients& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline typename internal::traits<Derived>::Coefficients& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
coeffs	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  Vector3& coeffs() { return m_angles; }$/;"	f	class:EulerAngles
coeffs	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  const Vector3& coeffs() const { return m_angles; }$/;"	f	class:EulerAngles
cofactor_3x3	tools/eigen/Eigen/src/LU/InverseImpl.h	/^inline typename MatrixType::Scalar cofactor_3x3(const MatrixType& m)$/;"	f	namespace:Eigen::internal
cofactor_4x4	tools/eigen/Eigen/src/LU/InverseImpl.h	/^inline typename MatrixType::Scalar cofactor_4x4(const MatrixType& matrix)$/;"	f	namespace:Eigen::internal
col	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,Dynamic,1> col(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
col	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::all_unroller::__anon625
col	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::any_unroller::__anon626
col	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index col() const             { return m_iter.col(); }$/;"	f	class:Eigen::InnerIterator
col	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::internal::inner_iterator_selector
col	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    col = (UnrollCount-1) \/ DstXprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_loop::__anon301
col	tools/eigen/Eigen/src/Core/Visitor.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::visitor_impl::__anon310
col	tools/eigen/Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
col	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index col()    const { return EvalIterator::col()   - m_block.startCol(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index col()    const { return IsRowMajor ? index() : 0; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return Lhs::IsRowMajor ? index() : m_lhsIter.col(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_lhsIter.col(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_rhsIter.col(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index col()   const { return NeedToTranspose ? LhsIterator::index() : m_outer; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index col() const    { return SparseXprType::IsRowMajor ? m_sparseIter.index() : m_sparseIter.outer(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^      Index col() const { return EvalIterator::row(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^      Index col() const { return EvalReverseIterator::row(); }$/;"	f	class:Eigen::internal::unary_evaluator::ReverseInnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index col() const { return (MatrixType::Flags&RowMajorBit ? this->index() : Base::outer()); }$/;"	f	class:Eigen::TriangularViewImpl::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index col() const { return Base::col(); }$/;"	f	class:Eigen::TriangularViewImpl::ReverseInnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  const StorageIndex& col() const { return m_col; }$/;"	f	class:Eigen::Triplet
col	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Index col() const { return IsColVector ? 0 : index(); }$/;"	f	class:Eigen::SparseVector::InnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Index col() const { return IsColVector ? 0 : index(); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
col	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
col	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index col() const { return m_outer; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
col	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ColXpr col(Index i)$/;"	f
col	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstColXpr col(Index i) const$/;"	f
col	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index col() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
col	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index col() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
col	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index col() const {return outer(); }$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
col	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index col() const {return outer(); }$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
col	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? Base::index() : m_outer; }$/;"	f	class:Eigen::DynamicSparseMatrix::InnerIterator
col	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? Base::index() : m_outer; }$/;"	f	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
colIndexByOuterInner	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static Index colIndexByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
colIndexByOuterInner	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
colIndexPtr	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* colIndexPtr()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colIndexPtr	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* colIndexPtr() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colInflateStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index colInflateStride() const { return m_col_inflate_strides; }$/;"	f	struct:Eigen::TensorEvaluator
colInflateStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index colInflateStride() const { return m_col_inflate_strides; }$/;"	f	struct:Eigen::TensorEvaluator
colOffset	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value() > 0 ? m_index.value() : 0; }$/;"	f	struct:Eigen::internal::evaluator
colOffset	tools/eigen/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value()>0 ? m_index.value() : 0; }$/;"	f	class:Eigen::Diagonal
colPaddingLeft	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index colPaddingLeft() const { return m_colPaddingLeft; }$/;"	f	struct:Eigen::TensorEvaluator
colPaddingLeft	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index colPaddingLeft() const { return m_colPaddingLeft; }$/;"	f	struct:Eigen::TensorEvaluator
colPivHouseholderQr	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^MatrixBase<Derived>::colPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
colStride	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index colStride() const$/;"	f	class:Eigen::DenseCoeffsBase
colToSup	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* colToSup()  { return m_col_to_sup; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colToSup	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* colToSup() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
col_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex col_inflate_strides() const { return m_col_inflate_strides; }$/;"	f	class:Eigen::TensorImagePatchOp
col_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex col_inflate_strides() const { return m_col_inflate_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex col_strides() const { return m_col_strides; }$/;"	f	class:Eigen::TensorImagePatchOp
col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex col_strides() const { return m_col_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
colamd	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static bool colamd(IndexType n_row, IndexType n_col, IndexType Alen, IndexType *A, IndexType *p, double knobs[COLAMD_KNOBS], IndexType stats[COLAMD_STATS])$/;"	f	namespace:internal
colamd_c	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType colamd_c(IndexType n_col) $/;"	f	namespace:internal
colamd_col	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^struct colamd_col$/;"	s	namespace:internal
colamd_r	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType  colamd_r(IndexType n_row)$/;"	f	namespace:internal
colamd_recommended	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType colamd_recommended ( IndexType nnz, IndexType n_row, IndexType n_col)$/;"	f	namespace:internal
colamd_set_defaults	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline void colamd_set_defaults(double knobs[COLAMD_KNOBS])$/;"	f	namespace:internal
colblk	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index colblk; \/\/ The minimum column dimension for 2-D blocking to be used;$/;"	m	struct:Eigen::internal::perfvalues
coletree	tools/eigen/Eigen/src/SparseCore/SparseColEtree.h	/^int coletree(const MatrixType& mat, IndexVector& parent, IndexVector& firstRowElt, typename MatrixType::StorageIndex *perm=0)$/;"	f	namespace:Eigen::internal
cols	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LDLT
cols	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LLT
cols	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline StorageIndex cols() const { return internal::convert_index<StorageIndex, Index>(m_cholmodFactor->n); }$/;"	f	class:Eigen::CholmodBase
cols	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ArrayWrapper
cols	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::MatrixWrapper
cols	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index cols() const        { return m_dstExpr.cols(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
cols	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrix
cols	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
cols	tools/eigen/Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::internal::BlockImpl_dense
cols	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  Index cols() const $/;"	f	class:Eigen::internal::EvalToTemp
cols	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::CwiseBinaryOp
cols	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
cols	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::CwiseUnaryOp
cols	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::CwiseUnaryView
cols	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols() const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols(void) const {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols(void) const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC static Index cols(void) {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline Index cols() const { return 1; }$/;"	f	class:Eigen::Diagonal
cols	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline Index cols() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
cols	tools/eigen/Eigen/src/Core/EigenBase.h	/^  inline Index cols() const { return derived().cols(); }$/;"	f	struct:Eigen::EigenBase
cols	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ForceAlignedAccess
cols	tools/eigen/Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::Inverse
cols	tools/eigen/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::MapBase
cols	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::NestByValue
cols	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline Index cols() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
cols	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline Index cols() const { return m_permutation.cols(); }$/;"	f	class:Eigen::Transpose
cols	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_storage.cols(); }$/;"	f	class:Eigen::PlainObjectBase
cols	tools/eigen/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::Product
cols	tools/eigen/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::internal::redux_evaluator
cols	tools/eigen/Eigen/src/Core/Replicate.h	/^    inline Index cols() const { return m_matrix.cols() * m_colFactor.value(); }$/;"	f	class:Eigen::Replicate
cols	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return static_cast<const Derived*>(this)->cols(); }$/;"	f	class:Eigen::ReturnByValue
cols	tools/eigen/Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Reverse
cols	tools/eigen/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC Index cols() const { return m_condition.cols(); }$/;"	f	class:Eigen::Select
cols	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SelfAdjointView
cols	tools/eigen/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::Solve
cols	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
cols	tools/eigen/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Transpose
cols	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Index cols() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
cols	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Index cols() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
cols	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::TriangularBase
cols	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::TriangularView
cols	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    Index cols() const { return (Direction==Horizontal ? 1 : m_matrix.cols()); }$/;"	f	class:Eigen::PartialReduxExpr
cols	tools/eigen/Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::internal::visitor_evaluator
cols	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index cols() const { return m_hess.packedMatrix().cols(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
cols	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
cols	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    inline Index cols() const { return m_matrix.cols() + (int(Direction)==Horizontal ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
cols	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
cols	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
cols	tools/eigen/Eigen/src/Geometry/Transform.h	/^  Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Transform
cols	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    Index cols() const { return rows(); }$/;"	f	class:Eigen::HouseholderSequence
cols	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index cols() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
cols	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::IncompleteLUT
cols	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index cols() const { return mp_matrix.cols(); }$/;"	f	class:Eigen::IterativeSolverBase
cols	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::SolveWithGuess
cols	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::FullPivLU
cols	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::PartialPivLU
cols	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PastixBase
cols	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
cols	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::ColPivHouseholderQR
cols	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::FullPivHouseholderQR
cols	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  Index cols() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
cols	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::HouseholderQR
cols	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline Index cols() const { return m_cR->ncol; }$/;"	f	class:Eigen::SPQR
cols	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  inline Index cols() const { return m_other.cols(); }$/;"	f	struct:Eigen::SPQR_QProduct
cols	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  inline Index cols() const { return m_cols; }$/;"	f	class:Eigen::SVDBase
cols	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
cols	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::BlockImpl
cols	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
cols	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::BlockImpl
cols	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::SparseMapBase
cols	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
cols	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::SparseMatrixBase
cols	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSelfAdjointView
cols	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
cols	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsColVector ? 1 : m_size; }$/;"	f	class:Eigen::SparseVector
cols	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseView
cols	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    inline Index cols() const { return m_mat.cols(); }$/;"	f	class:Eigen::SparseLU
cols	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  Index cols() { return m_mapL.cols(); }$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
cols	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  Index cols() { return m_mapL.cols(); }$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
cols	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index cols() { return m_col; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
cols	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    inline Index cols() const { return m_pmat.cols();}$/;"	f	class:Eigen::SparseQR
cols	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  inline Index cols() const { return (std::min)(m_qr.rows(),m_qr.cols()); }$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
cols	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  inline Index cols() const { return m_other.cols(); }$/;"	f	struct:Eigen::SparseQR_QProduct
cols	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SuperLUBase
cols	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index cols() const { return mp_matrix.cols(); }$/;"	f	class:Eigen::UmfPackLU
cols	tools/eigen/Eigen/src/misc/Image.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::image_retval_base
cols	tools/eigen/Eigen/src/misc/Kernel.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::kernel_retval_base
cols	tools/eigen/doc/snippets/Tutorial_commainit_02.cpp	/^int rows=5, cols=5;$/;"	v
cols	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    Index cols() const { return m_L.cols(); }$/;"	f	class:Eigen::IncompleteCholesky
cols	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::IncompleteLU
cols	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    inline Index cols() const { return m_A.cols() * m_B.cols(); }$/;"	f	class:Eigen::KroneckerProductBase
cols	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    Index cols() const { return m_src.cols(); }$/;"	f	struct:Eigen::MatrixExponentialReturnValue
cols	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    Index cols() const { return m_A.cols(); }$/;"	f	class:Eigen::MatrixFunctionReturnValue
cols	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  Index cols() const { return m_A.cols(); }$/;"	f	class:Eigen::MatrixLogarithmReturnValue
cols	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index cols() const { return m_A.cols(); }$/;"	f	class:Eigen::MatrixComplexPowerReturnValue
cols	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index cols() const { return m_A.cols(); }$/;"	f	class:Eigen::MatrixPower
cols	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index cols() const { return m_A.cols(); }$/;"	f	class:Eigen::MatrixPowerReturnValue
cols	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index cols() const { return m_pow.cols(); }$/;"	f	class:Eigen::MatrixPowerParenthesesReturnValue
cols	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    Index cols() const { return m_src.cols(); }$/;"	f	class:Eigen::MatrixSquareRootReturnValue
cols	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index cols() const {$/;"	f	class:Eigen::SkylineMatrix
cols	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Index cols() const {$/;"	f	class:Eigen::SkylineMatrixBase
cols	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::internal::SkylineProduct
cols	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index cols() const$/;"	f	class:Eigen::BlockSparseMatrixView
cols	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index cols() const { return (m_mat.m_blockSize==Dynamic) ? (m_mat.m_outerOffset[m_outer+1]-m_mat.m_outerOffset[m_outer]) : m_mat.m_blockSize;}$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
cols	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index cols() const$/;"	f	class:Eigen::BlockSparseMatrix
cols	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index cols() const$/;"	f	class:Eigen::BlockVectorView
cols	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : outerSize(); }$/;"	f	class:Eigen::DynamicSparseMatrix
colsPermutation	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::ColPivHouseholderQR
colsPermutation	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::FullPivHouseholderQR
colsPermutation	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    PermutationType colsPermutation() const$/;"	f	class:Eigen::SPQR
colsPermutation	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    inline const PermutationType& colsPermutation() const$/;"	f	class:Eigen::SparseLU
colsPermutation	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::SparseQR
cols_select	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    cols_select = product_size_category<Cols,MaxCols>::value,$/;"	e	enum:Eigen::internal::product_type::__anon591
column_bmod	tools/eigen/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^Index SparseLUImpl<Scalar,StorageIndex>::column_bmod(const Index jcol, const Index nseg, BlockScalarVector dense, ScalarVector& tempv,$/;"	f	class:Eigen::internal::SparseLUImpl
column_dfs	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^Index SparseLUImpl<Scalar,StorageIndex>::column_dfs(const Index m, const Index jcol, IndexVector& perm_r, Index maxsuper, Index& nseg,$/;"	f	class:Eigen::internal::SparseLUImpl
column_dfs_traits	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  column_dfs_traits(Index jcol, Index& jsuper, typename SparseLUImpl<Scalar, StorageIndex>::GlobalLU_t& glu, SparseLUImpl<Scalar, StorageIndex>& luImpl)$/;"	f	struct:Eigen::internal::column_dfs_traits
column_dfs_traits	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^struct column_dfs_traits : no_assignment_operator$/;"	s	namespace:Eigen::internal
colwise	tools/eigen/Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC inline ConstColwiseReturnType colwise() const {$/;"	f	class:Eigen::DenseBase
colwise	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::colwise()$/;"	f	class:Eigen::DenseBase
compact_size_triple	tools/eigen/bench/analyze-blocking-sizes.cpp	/^uint16_t compact_size_triple(size_t k, size_t m, size_t n)$/;"	f
companion	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    companion( const VectorType& poly ){$/;"	f	class:Eigen::internal::companion
companion	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^class companion$/;"	c	namespace:Eigen::internal
compare_bdc_jacobi	tools/eigen/test/bdcsvd.cpp	/^void compare_bdc_jacobi(const MatrixType& a = MatrixType(), unsigned int computationOptions = 0)$/;"	f
compare_using_data_and_stride	tools/eigen/test/block.cpp	/^void compare_using_data_and_stride(const MatrixType& m)$/;"	f
comparisons	tools/eigen/test/array.cpp	/^template<typename ArrayType> void comparisons(const ArrayType& m)$/;"	f
comparisons	tools/eigen/test/array_for_matrix.cpp	/^template<typename MatrixType> void comparisons(const MatrixType& m)$/;"	f
complex	tools/eigen/blas/f2c/datatypes.h	/^typedef struct { real r, i; } complex;$/;"	t	typeref:struct:__anon135
complex_schur_reduce_to_hessenberg	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg$/;"	s	namespace:Eigen::internal
complex_schur_reduce_to_hessenberg	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg<MatrixType, false>$/;"	s	namespace:Eigen::internal
complex_type	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef fftw_complex complex_type;$/;"	t	struct:Eigen::internal::fftw_plan
complex_type	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef fftwf_complex complex_type;$/;"	t	struct:Eigen::internal::fftw_plan
complex_type	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef fftwl_complex complex_type;$/;"	t	struct:Eigen::internal::fftw_plan
components	tools/RedSVD.hh	/^		DenseMatrix components() const$/;"	f	class:RedSVD::RedPCA
compute	tools/RedSVD.hh	/^		void compute(const DenseMatrix& A, const Index rank)$/;"	f	class:RedSVD::RedPCA
compute	tools/RedSVD.hh	/^		void compute(const MatrixType& A, const Index rank)$/;"	f	class:RedSVD::RedSVD
compute	tools/RedSVD.hh	/^		void compute(const MatrixType& A, const Index rank)$/;"	f	class:RedSVD::RedSymEigen
compute	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::compute(const MatrixType& a)$/;"	f	class:Eigen::LDLT
compute	tools/eigen/Eigen/src/Cholesky/LLT.h	/^LLT<MatrixType,_UpLo>& LLT<MatrixType,_UpLo>::compute(const MatrixType& a)$/;"	f	class:Eigen::LLT
compute	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& compute(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
compute	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^ComplexEigenSolver<MatrixType>::compute(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
compute	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::compute(const MatrixType& matrix, bool computeU)$/;"	f	class:Eigen::ComplexSchur
compute	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^EigenSolver<MatrixType>::compute(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::EigenSolver
compute	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^GeneralizedEigenSolver<MatrixType>::compute(const MatrixType& A, const MatrixType& B, bool computeEigenvectors)$/;"	f	class:Eigen::GeneralizedEigenSolver
compute	tools/eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^compute(const MatrixType& matA, const MatrixType& matB, int options)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
compute	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition& compute(const MatrixType& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
compute	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^    RealQZ<MatrixType>& RealQZ<MatrixType>::compute(const MatrixType& A_in, const MatrixType& B_in, bool computeQZ)$/;"	f	class:Eigen::RealQZ
compute	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::compute(const MatrixType& matrix, bool computeU)$/;"	f	class:Eigen::RealSchur
compute	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::compute(const MatrixType& matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization& compute(const MatrixType& matrix)$/;"	f	class:Eigen::Tridiagonalization
compute	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& compute(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
compute	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& compute(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
compute	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& compute(const MatType& mat)$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
compute	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT& compute(const MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
compute	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& compute(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
compute	tools/eigen/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>& FullPivLU<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivLU
compute	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>& PartialPivLU<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::PartialPivLU
compute	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
compute	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
compute	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
compute	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::compute(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
compute	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::compute(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
compute	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^ColPivHouseholderQR<MatrixType>& ColPivHouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
compute	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^FullPivHouseholderQR<MatrixType>& FullPivHouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
compute	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^HouseholderQR<MatrixType>& HouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::HouseholderQR
compute	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void compute(const _MatrixType& matrix)$/;"	f	class:Eigen::SPQR
compute	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  BDCSVD& compute(const MatrixType& matrix)$/;"	f	class:Eigen::BDCSVD
compute	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^BDCSVD<MatrixType>& BDCSVD<MatrixType>::compute(const MatrixType& matrix, unsigned int computationOptions) $/;"	f	class:Eigen::BDCSVD
compute	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD& compute(const MatrixType& matrix)$/;"	f	class:Eigen::JacobiSVD
compute	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType& matrix, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
compute	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^UpperBidiagonalization<_MatrixType>& UpperBidiagonalization<_MatrixType>::compute(const _MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
compute	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
compute	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
compute	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
compute	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
compute	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
compute	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    void compute(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
compute	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLUBase
compute	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void compute(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
compute	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^::compute(const MatrixType& A, Index nbrEigenvalues,$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
compute	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^::compute(const MatrixType& A, const MatrixType& B, Index nbrEigenvalues,$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
compute	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::IncompleteCholesky
compute	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    IncompleteLU& compute(const MatrixType& mat)$/;"	f	class:Eigen::IncompleteLU
compute	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    void compute (const MatrixType& mat)$/;"	f	class:Eigen::IterScaling
compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^MatrixType MatrixFunctionAtomic<MatrixType>::compute(const MatrixType& A)$/;"	f	class:Eigen::internal::MatrixFunctionAtomic
compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^MatrixType MatrixLogarithmAtomic<MatrixType>::compute(const MatrixType& A)$/;"	f	class:Eigen::internal::MatrixLogarithmAtomic
compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPower<MatrixType>::compute(ResultType& res, RealScalar p)$/;"	f	class:Eigen::MatrixPower
compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPowerAtomic<MatrixType>::compute(ResultType& res) const$/;"	f	class:Eigen::MatrixPowerAtomic
compute	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    void compute( const OtherPolynomial& poly )$/;"	f	class:Eigen::PolynomialSolver
compute	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^void SkylineInplaceLU<MatrixType>::compute() {$/;"	f	class:Eigen::SkylineInplaceLU
compute2x2	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPowerAtomic<MatrixType>::compute2x2(ResultType& res, RealScalar p) const$/;"	f	class:Eigen::MatrixPowerAtomic
computeBig	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPowerAtomic<MatrixType>::computeBig(ResultType& res) const$/;"	f	class:Eigen::MatrixPowerAtomic
computeCol	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	345;"	d
computeCol	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	381;"	d
computeDirect	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::computeDirect(const MatrixType& matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
computeFracPower	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPower<MatrixType>::computeFracPower(ResultType& res, RealScalar p)$/;"	f	class:Eigen::MatrixPower
computeFromHessenberg	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::computeFromHessenberg(const HessMatrixType& matrixH, const OrthMatrixType& matrixQ, bool computeU)$/;"	f	class:Eigen::ComplexSchur
computeFromHessenberg	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::computeFromHessenberg(const HessMatrixType& matrixH, const OrthMatrixType& matrixQ,  bool computeU)$/;"	f	class:Eigen::RealSchur
computeFromTridiagonal	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::computeFromTridiagonal(const RealVectorType& diag, const SubDiagonalType& subdiag , int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
computeFromTridiagonal_impl	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^ComputationInfo computeFromTridiagonal_impl(DiagType& diag, SubDiagType& subdiag, const Index maxIterations, bool computeEigenvectors, MatrixType& eivec)$/;"	f	namespace:Eigen::internal
computeIndex	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE Index computeIndex(Index row, Index col) const {$/;"	f	class:Eigen::internal::BaseTensorContractionMapper
computeIndexPair	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE IndexPair<Index> computeIndexPair(Index row, Index col, const Index distance) const {$/;"	f	class:Eigen::internal::BaseTensorContractionMapper
computeIntPower	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPower<MatrixType>::computeIntPower(ResultType& res, RealScalar p)$/;"	f	class:Eigen::MatrixPower
computeInverseAndDetWithCheck	tools/eigen/Eigen/src/LU/InverseImpl.h	/^inline void MatrixBase<Derived>::computeInverseAndDetWithCheck($/;"	f	class:Eigen::MatrixBase
computeInverseWithCheck	tools/eigen/Eigen/src/LU/InverseImpl.h	/^inline void MatrixBase<Derived>::computeInverseWithCheck($/;"	f	class:Eigen::MatrixBase
computeMultiplier	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^    static EIGEN_ALWAYS_INLINE uint64_t computeMultiplier(const int log_div, const T divider) {$/;"	f	struct:Eigen::internal::__anon66::DividerHelper
computeMultiplier	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^    static EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE uint32_t computeMultiplier (const int log_div, const T divider) {$/;"	f	struct:Eigen::internal::__anon66::DividerHelper
computeNormOfT	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^inline typename MatrixType::Scalar RealSchur<MatrixType>::computeNormOfT()$/;"	f	class:Eigen::RealSchur
computeNorms	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::computeNorms()$/;"	f	class:Eigen::RealQZ
computePade	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPowerAtomic<MatrixType>::computePade(int degree, const MatrixType& IminusT, ResultType& res) const$/;"	f	class:Eigen::MatrixPowerAtomic
computePass	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	355;"	d
computePass	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	382;"	d
computeProductBlockingSizes	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void computeProductBlockingSizes(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
computeProductBlockingSizes	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^void computeProductBlockingSizes(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
computeRef	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    void computeRef (MatrixType& mat)$/;"	f	class:Eigen::IterScaling
computeRoots	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void computeRoots(const MatrixType& m, VectorType& roots)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
computeRoots	tools/eigen/bench/eig33.cpp	/^inline void computeRoots(const Matrix& m, Roots& roots)$/;"	f
computeRotationScaling	tools/eigen/Eigen/src/Geometry/Transform.h	/^void Transform<Scalar,Dim,Mode,Options>::computeRotationScaling(RotationMatrixType *rotation, ScalingMatrixType *scaling) const$/;"	f	class:Eigen::Transform
computeRowMajor	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^void SkylineInplaceLU<MatrixType>::computeRowMajor() {$/;"	f	class:Eigen::SkylineInplaceLU
computeSVDofM	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSVDofM(Index firstCol, Index n, MatrixXr& U, VectorType& singVals, MatrixXr& V)$/;"	f	class:Eigen::BDCSVD
computeScalingRotation	tools/eigen/Eigen/src/Geometry/Transform.h	/^void Transform<Scalar,Dim,Mode,Options>::computeScalingRotation(ScalingMatrixType *scaling, RotationMatrixType *rotation) const$/;"	f	class:Eigen::Transform
computeShift	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^typename ComplexSchur<MatrixType>::ComplexScalar ComplexSchur<MatrixType>::computeShift(Index iu, Index iter)$/;"	f	class:Eigen::ComplexSchur
computeShift	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::computeShift(Index iu, Index iter, Scalar& exshift, Vector3s& shiftInfo)$/;"	f	class:Eigen::RealSchur
computeSingVals	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSingVals(const ArrayRef& col0, const ArrayRef& diag, const IndicesRef &perm,$/;"	f	class:Eigen::BDCSVD
computeSingVecs	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSingVecs$/;"	f	class:Eigen::BDCSVD
computeSuperDiag	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^MatrixPowerAtomic<MatrixType>::computeSuperDiag(RealScalar curr, RealScalar prev, RealScalar p)$/;"	f	class:Eigen::MatrixPowerAtomic
computeSuperDiag	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^MatrixPowerAtomic<MatrixType>::computeSuperDiag(const ComplexScalar& curr, const ComplexScalar& prev, RealScalar p)$/;"	f	class:Eigen::MatrixPowerAtomic
computeU	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  inline bool computeU() const { return m_computeFullU || m_computeThinU; }$/;"	f	class:Eigen::SVDBase
computeUnblocked	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^UpperBidiagonalization<_MatrixType>& UpperBidiagonalization<_MatrixType>::computeUnblocked(const _MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
computeV	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  inline bool computeV() const { return m_computeFullV || m_computeThinV; }$/;"	f	class:Eigen::SVDBase
compute_block_size	tools/eigen/test/product_extra.cpp	/^Index compute_block_size()$/;"	f
compute_default_alignment	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T, int Size> struct compute_default_alignment {$/;"	s	struct:Eigen::internal::promote_index_type
compute_default_alignment	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct compute_default_alignment<T,Dynamic> {$/;"	s	struct:Eigen::internal::promote_index_type
compute_default_alignment_helper	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^struct compute_default_alignment_helper$/;"	s	struct:Eigen::internal::promote_index_type
compute_default_alignment_helper	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^struct compute_default_alignment_helper<ArrayBytes, AlignmentBytes, false, true> \/\/ Try-half$/;"	s	struct:Eigen::internal::promote_index_type
compute_default_alignment_helper	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^struct compute_default_alignment_helper<ArrayBytes, AlignmentBytes, true, TryHalf> \/\/ Match$/;"	s	struct:Eigen::internal::promote_index_type
compute_inverse	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse$/;"	s	namespace:Eigen::internal
compute_inverse	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check { \/* nothing! general case not supported. *\/ };$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_size2_helper	tools/eigen/Eigen/src/LU/InverseImpl.h	/^inline void compute_inverse_size2_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size3_helper	tools/eigen/Eigen/src/LU/InverseImpl.h	/^inline void compute_inverse_size3_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size4	tools/eigen/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_size4$/;"	s	namespace:Eigen::internal
compute_inverse_size4	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, double, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
compute_inverse_size4	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, float, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
compute_matrix_flags	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^class compute_matrix_flags$/;"	c	struct:Eigen::internal::promote_index_type
compute_tensor_flags	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^class compute_tensor_flags$/;"	c	namespace:Eigen::internal
concat	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T... as, T... bs>   struct concat<numeric_list<T, as...>, numeric_list<T, bs...> > { typedef numeric_list<T, as..., bs...> type; };$/;"	s	namespace:Eigen::internal
concat	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename... as, typename... bs> struct concat<type_list<as...>,       type_list<bs...>>        { typedef type_list<as..., bs...> type; };$/;"	s	namespace:Eigen::internal
concatenate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    concatenate(const OtherDerived& other, Axis axis) const {$/;"	f	class:Eigen::TensorBase
concatenate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    concatenate(const OtherDerived& other, const Axis& axis) const {$/;"	f	class:Eigen::TensorBase
concatenate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    concatenate(const OtherDerived& other, const Axis& axis) {$/;"	f	class:Eigen::TensorBase
conditionMatrix	tools/eigen/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ConditionMatrixType& conditionMatrix() const$/;"	f	class:Eigen::Select
conditional	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	s	namespace:Eigen::internal
conditional	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	s	namespace:Eigen::internal
conditional_aligned_delete	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_delete(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_delete_auto	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_delete_auto(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<> EIGEN_DEVICE_FUNC inline void conditional_aligned_free<false>(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<> EIGEN_DEVICE_FUNC inline void* conditional_aligned_malloc<false>(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<bool Align> EIGEN_DEVICE_FUNC inline void* conditional_aligned_malloc(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_new(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new_auto	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_new_auto(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<> inline void* conditional_aligned_realloc<false>(void* ptr, size_t new_size, size_t)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void* conditional_aligned_realloc(void* ptr, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_realloc_new(T* pts, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new_auto	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_realloc_new_auto(T* pts, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conj	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(conj, Scalar) conj(const Scalar& x)$/;"	f	namespace:Eigen::numext
conj	tools/eigen/test/exceptions.cpp	/^ScalarWithExceptions conj(const ScalarWithExceptions &x) { return x; }$/;"	f
conj	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline const AutoDiffScalar<DerType>& conj(const AutoDiffScalar<DerType>& x)  { return x; }$/;"	f	namespace:Eigen
conj_expr_if	tools/eigen/Eigen/src/Core/products/SelfadjointRank2Update.h	/^template<bool Cond, typename T> struct conj_expr_if$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet4d, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet8f, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4d, Packet2cd, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet8f, Packet4cf, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet2d, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet4f, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2d, Packet1cd, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet4f, Packet2cf, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<RealScalar, std::complex<RealScalar>, false,Conj>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<std::complex<RealScalar>, RealScalar, Conj,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct conj_helper<Scalar,Scalar,false,false>$/;"	s	namespace:Eigen::internal
conj_if	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<false> {$/;"	s	namespace:Eigen::internal
conj_if	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<true> {$/;"	s	namespace:Eigen::internal
conj_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct conj_impl$/;"	s	namespace:Eigen::internal
conj_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct conj_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
conj_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct conj_retval$/;"	s	namespace:Eigen::internal
conjugate	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline const ConjugateReturnType conjugate() const$/;"	f	class:Eigen::TriangularView
conjugate	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::conjugate() const$/;"	f	class:Eigen::QuaternionBase
conjugate	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType conjugate() const$/;"	f	class:Eigen::HouseholderSequence
conjugate	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^conjugate() const$/;"	f
conjugate_gradient	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^void conjugate_gradient(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
conservativeResize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index size, Index, Index cols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index, Index rows, Index cols) { m_rows = rows; m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index, Index rows, Index) { m_rows = rows; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
conservativeResize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index size, Index rows, Index)$/;"	f	class:Eigen::DenseStorage
conservativeResize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index, Index, Index cols) { m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index rows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index size)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(NoChange_t, Index cols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    void conservativeResize(Index rows, Index cols) $/;"	f	class:Eigen::SparseMatrix
conservativeResizeLike	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResizeLike(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
conservative_resize_like_impl	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl$/;"	s	namespace:Eigen::internal
conservative_resize_like_impl	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl<Derived,OtherDerived,true>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_impl	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^static void conservative_sparse_sparse_product_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res, bool sortedInsertion = false)$/;"	f	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
const_blas_data_mapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE const_blas_data_mapper(const Scalar *data, Index stride) : blas_data_mapper<const Scalar, Index, StorageOrder>(data, stride) {}$/;"	f	class:Eigen::internal::const_blas_data_mapper
const_blas_data_mapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^class const_blas_data_mapper : public blas_data_mapper<const Scalar, Index, StorageOrder> {$/;"	c	namespace:Eigen::internal
const_cast_derived	tools/eigen/Eigen/src/Core/EigenBase.h	/^  inline Derived& const_cast_derived() const$/;"	f	struct:Eigen::EigenBase
const_cast_derived	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& const_cast_derived() const$/;"	f	class:Eigen::SparseMatrixBase
const_cast_derived	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Derived& const_cast_derived() const {$/;"	f	class:Eigen::SkylineMatrixBase
const_catalan	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_catalan (mp_prec_t p = mpreal::get_default_prec(), mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
const_derived	tools/eigen/Eigen/src/Core/EigenBase.h	/^  inline const Derived& const_derived() const$/;"	f	struct:Eigen::EigenBase
const_euler	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_euler (mp_prec_t p = mpreal::get_default_prec(), mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
const_infinity	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_infinity (int sign = 1, mp_prec_t p = mpreal::get_default_prec())$/;"	f	namespace:mpfr
const_log2	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_log2 (mp_prec_t p = mpreal::get_default_prec(), mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
const_pi	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_pi (mp_prec_t p = mpreal::get_default_prec(), mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
const_pointer	tools/eigen/Eigen/src/Core/util/Memory.h	/^  typedef const T*        const_pointer;$/;"	t	class:Eigen::aligned_allocator
const_pointer	tools/eigen/Eigen/src/StlSupport/details.h	/^    typedef const T*  const_pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
const_ptr	tools/eigen/test/mapstaticmethods.cpp	/^const float *const_ptr;$/;"	v
const_reference	tools/eigen/Eigen/src/Core/util/Memory.h	/^  typedef const T&        const_reference;$/;"	t	class:Eigen::aligned_allocator
const_reference	tools/eigen/Eigen/src/StlSupport/details.h	/^    typedef const T&  const_reference;$/;"	t	class:Eigen::aligned_allocator_indirection
constant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    constant(const Scalar& value) const {$/;"	f	class:Eigen::TensorBase
constrained_cg	tools/eigen/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	/^void constrained_cg(const TMatrix& A, const CMatrix& C, VectorX& x,$/;"	f	namespace:Eigen::internal
construct	tools/eigen/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC void construct(const Expression& expr, internal::false_type)$/;"	f	class:Eigen::Ref
construct	tools/eigen/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC void construct(const Expression& expr,internal::true_type)$/;"	f	class:Eigen::Ref
construct	tools/eigen/Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC void construct(Expression& expr)$/;"	f	class:Eigen::RefBase
construct	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    void construct(const Expression& expr, internal::false_type)$/;"	f	class:Eigen::Ref
construct	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    void construct(const Expression& expr,internal::true_type)$/;"	f	class:Eigen::Ref
construct	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  void construct(Expression& expr)$/;"	f	class:Eigen::internal::SparseRefBase
construct_at_boundary	tools/eigen/test/unalignedassert.cpp	/^void construct_at_boundary(int boundary)$/;"	f
construct_elements_of_array	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline T* construct_elements_of_array(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
constructor_without_unaligned_array_assert	tools/eigen/Eigen/src/Core/DenseStorage.h	/^struct constructor_without_unaligned_array_assert {};$/;"	s	namespace:Eigen::internal
contained_in_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list<test, check_against, h_list, true>$/;"	s	namespace:Eigen::internal
contained_in_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list<test, check_against, type_list<EIGEN_TPL_PP_SPEC_HACK_USE(empty)>, false> { constexpr static bool value = false; };$/;"	s	namespace:Eigen::internal
contained_in_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list<test, check_against, type_list<a, as...>, false> : contained_in_list<test, check_against, type_list<as...>, test<check_against, a>::value> {};$/;"	s	namespace:Eigen::internal
contained_in_list_gf	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list_gf<test, check_against, h_list, default_flags, true, last_check_flags>$/;"	s	namespace:Eigen::internal
contained_in_list_gf	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list_gf<test, check_against, type_list<EIGEN_TPL_PP_SPEC_HACK_USE(empty)>, default_flags, false, last_check_flags> { constexpr static bool value = false; constexpr static int global_flags = default_flags; };$/;"	s	namespace:Eigen::internal
contained_in_list_gf	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list_gf<test, check_against, type_list<a, as...>, default_flags, false, last_check_flags> : contained_in_list_gf<test, check_against, type_list<as...>, default_flags, test<check_against, a>::value, test<check_against, a>::global_flags> {};$/;"	s	namespace:Eigen::internal
contains	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline bool contains(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
contains	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline bool contains(const MatrixBase<Derived>& p) const$/;"	f	class:Eigen::AlignedBox
contains	tools/eigen/bench/btl/generic_bench/btl.hh	/^    bool contains(const BtlString& str) const$/;"	f	class:BtlString
contract	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    contract(const OtherDerived& other, const Dimensions& dims) const {$/;"	f	class:Eigen::TensorBase
contract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, ContractDims> contract_t;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
contract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, ContractDims> contract_t;$/;"	t	struct:Eigen::TensorEvaluator
contract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef array<Index, ContractDims> contract_t;$/;"	t	struct:Eigen::TensorEvaluator
contract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef array<Index, ContractDims> contract_t;$/;"	t	struct:Eigen::TensorEvaluator
contraction	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void contraction(int num_iters) {$/;"	f	class:BenchmarkSuite
contributor	tools/eigen/scripts/eigen_gen_credits.cpp	/^  contributor() : changedlines(0), changesets(0) {}$/;"	f	struct:contributor
contributor	tools/eigen/scripts/eigen_gen_credits.cpp	/^struct contributor$/;"	s	file:
contributor_name	tools/eigen/scripts/eigen_gen_credits.cpp	/^std::string contributor_name(const std::string& line)$/;"	f
contributors_map_from_churn_output	tools/eigen/scripts/eigen_gen_credits.cpp	/^map<string,int> contributors_map_from_churn_output(const char *filename)$/;"	f
converged	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool converged() const { return m_res <= m_rhsn * m_resmax; }$/;"	f	class:Eigen::IterationController
converged	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool converged(double nr)$/;"	f	class:Eigen::IterationController
converged	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    template<typename VectorType> bool converged(const VectorType &v)$/;"	f	class:Eigen::IterationController
conversionOK	tools/ConvertUTF.h	/^	conversionOK, 		\/* conversion successful *\/$/;"	e	enum:__anon739
conversion_overflow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^class conversion_overflow : public std::exception {$/;"	c	namespace:mpfr
convert_index	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^inline IndexDest convert_index(const IndexSrc& idx) {$/;"	f	namespace:Eigen::internal
convert_index	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex convert_index(Index idx)$/;"	f	class:Eigen::internal::AmbiVector
convert_index	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    static inline StorageIndex convert_index(const Index idx) {$/;"	f	class:Eigen::SparseMatrixBase
convolution	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void convolution(int num_iters, int kernel_x, int kernel_y) {$/;"	f	class:BenchmarkSuite
convolve	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    convolve(const KernelDerived& kernel, const Dimensions& dims) const {$/;"	f	class:Eigen::TensorBase
convolve	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC void convolve(Index firstIndex, Index firstKernel, int DimIndex, CoeffReturnType& accum) const {$/;"	f	struct:Eigen::TensorEvaluator
convolvePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC void convolvePacket(Index firstIndex, Index firstKernel, int DimIndex, Packet& accum) const {$/;"	f	struct:Eigen::TensorEvaluator
coo_tocsr	tools/eigen/bench/sparse_setter.cpp	/^void coo_tocsr(const int n_row,$/;"	f
copy	tools/eigen/blas/level1_impl.h	/^int EIGEN_BLAS_FUNC(copy)(int *n, RealScalar *px, int *incx, RealScalar *py, int *incy)$/;"	f
copy	tools/eigen/test/stable_norm.cpp	/^template<typename T> EIGEN_DONT_INLINE T copy(const T& x)$/;"	f
copyCoeff	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, Other& other)$/;"	f	class:Eigen::TriangularBase
copyUV	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::copyUV(const HouseholderU &householderU, const HouseholderV &householderV, const NaiveU &naiveU, const NaiveV &naiveV)$/;"	f	class:Eigen::BDCSVD
copyUpperTriangularPart	tools/eigen/doc/examples/TemplateKeyword_flexible.cpp	/^void copyUpperTriangularPart(MatrixBase<Derived1>& dst, const MatrixBase<Derived2>& src)$/;"	f
copyUpperTriangularPart	tools/eigen/doc/examples/TemplateKeyword_simple.cpp	/^void copyUpperTriangularPart(MatrixXf& dst, const MatrixXf& src)$/;"	f
copy_back	tools/eigen/blas/common.h	/^T* copy_back(T* x_cpy, T* x, int n, int incx)$/;"	f
copy_bool	tools/eigen/Eigen/src/Core/util/Macros.h	/^    inline bool copy_bool(bool b) { return b; }$/;"	f	namespace:Eigen::internal
copy_matrix	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:c_interface_base
copy_matrix	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:STL_interface
copy_matrix	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:blaze_interface
copy_matrix	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:blitz_interface
copy_matrix	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:tiny_blitz_interface
copy_matrix	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:eigen2_interface
copy_matrix	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static EIGEN_DONT_INLINE void copy_matrix(const gene_matrix & source, gene_matrix & cible, int  \/*N*\/){$/;"	f	class:eigen3_interface
copy_matrix	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:gmm_interface
copy_matrix	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:mtl4_interface
copy_matrix	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static EIGEN_DONT_INLINE void copy_matrix(const gene_matrix & source, gene_matrix & cible, int  \/*N*\/){$/;"	f	class:tensor_interface
copy_matrix	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:tvmet_interface
copy_matrix	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void copy_matrix(const gene_matrix & source, gene_matrix & cible, int N){$/;"	f	class:ublas_interface
copy_to_ucol	tools/eigen/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^Index SparseLUImpl<Scalar,StorageIndex>::copy_to_ucol(const Index jcol, const Index nseg, IndexVector& segrep,$/;"	f	class:Eigen::internal::SparseLUImpl
copy_using_evaluator	tools/eigen/test/evaluators.cpp	/^  DstXprType& copy_using_evaluator(const EigenBase<DstXprType> &dst, const SrcXprType &src)$/;"	f	namespace:Eigen
copy_using_evaluator	tools/eigen/test/evaluators.cpp	/^  DstXprType& copy_using_evaluator(const PlainObjectBase<DstXprType> &dst, const SrcXprType &src)$/;"	f	namespace:Eigen
copy_using_evaluator	tools/eigen/test/evaluators.cpp	/^  const DstXprType& copy_using_evaluator(const NoAlias<DstXprType, StorageBase>& dst, const SrcXprType &src)$/;"	f	namespace:Eigen
copy_using_evaluator_DefaultTraversal_CompleteUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_CompleteUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_InnerUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_InnerUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_InnerUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_InnerUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_LinearTraversal_CompleteUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_LinearTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_LinearTraversal_CompleteUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_CompleteUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_CompleteUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_InnerUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_InnerUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_InnerUnrolling	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_InnerUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_traits	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_traits$/;"	s	namespace:Eigen::internal
copy_vector	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:c_interface_base
copy_vector	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:STL_interface
copy_vector	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:blaze_interface
copy_vector	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:blitz_interface
copy_vector	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:tiny_blitz_interface
copy_vector	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:eigen2_interface
copy_vector	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static EIGEN_DONT_INLINE void copy_vector(const gene_vector & source, gene_vector & cible, int  \/*N*\/){$/;"	f	class:eigen3_interface
copy_vector	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:gmm_interface
copy_vector	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:mtl4_interface
copy_vector	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static EIGEN_DONT_INLINE void copy_vector(const gene_vector & source, gene_vector & cible, int  \/*N*\/){$/;"	f	class:tensor_interface
copy_vector	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:tvmet_interface
copy_vector	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void copy_vector(const gene_vector & source, gene_vector & cible, int N){$/;"	f	class:ublas_interface
corner	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType corner(CornerType corner) const$/;"	f	class:Eigen::AlignedBox
corners	tools/eigen/test/corners.cpp	/^template<typename MatrixType> void corners(const MatrixType& m)$/;"	f
corners_fixedsize	tools/eigen/test/corners.cpp	/^template<typename MatrixType, int CRows, int CCols, int SRows, int SCols> void corners_fixedsize()$/;"	f
correct	eval.py	/^                correct = correct + 1$/;"	v
correct	eval.py	/^        correct = 0.0$/;"	v
cos	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cos() const$/;"	f
cos	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::cos() const$/;"	f	class:Eigen::MatrixBase
cos	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal cos   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(cos  );    }$/;"	f	namespace:mpfr
coset_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  >::type coset_elements;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
cosh	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cosh() const$/;"	f
cosh	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::cosh() const$/;"	f	class:Eigen::MatrixBase
cosh	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal cosh  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(cosh );    }$/;"	f	namespace:mpfr
cot	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal cot   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(cot  );    }$/;"	f	namespace:mpfr
coth	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal coth  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(coth );    }$/;"	f	namespace:mpfr
count	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^inline Eigen::Index DenseBase<Derived>::count() const$/;"	f	class:Eigen::DenseBase
count	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const CountReturnType count() const$/;"	f	class:Eigen::VectorwiseOp
count	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  unsigned long count;$/;"	m	class:STL_Timer
count	tools/eigen/doc/snippets/MatrixBase_cwiseEqual.cpp	/^int count = m.cwiseEqual(MatrixXi::Identity(2,2)).count();$/;"	v
count	tools/eigen/doc/snippets/MatrixBase_cwiseNotEqual.cpp	/^int count = m.cwiseNotEqual(MatrixXi::Identity(2,2)).count();$/;"	v
count	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct numeric_list { constexpr static std::size_t count = sizeof...(nn); };$/;"	m	struct:Eigen::internal::numeric_list
count	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct numeric_list<T, n, nn...> { constexpr static std::size_t count = sizeof...(nn) + 1; constexpr static T first_value = n; };$/;"	m	struct:Eigen::internal::numeric_list
count	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct type_list { constexpr static int count = sizeof...(tt); };$/;"	m	struct:Eigen::internal::type_list
count	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct type_list<t, tt...> { constexpr static int count = sizeof...(tt) + 1; typedef t first_type; };$/;"	m	struct:Eigen::internal::type_list
count	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const std::size_t count = 1 + Tail::count;$/;"	m	struct:Eigen::internal::type_list
count	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct empty_list { static const std::size_t count = 0; };$/;"	m	struct:Eigen::internal::empty_list
count	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static const std::size_t count = NumDims;$/;"	m	struct:Eigen::DSizes
count	tools/eigen/unsupported/test/BVH.cpp	/^  int count;$/;"	m	struct:BallPointStuff	file:
count_leading_zeros	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE int count_leading_zeros(const T val)$/;"	f	namespace:Eigen::internal::__anon66
countdown	tools/eigen/test/exceptions.cpp	/^    static int countdown;$/;"	m	class:ScalarWithExceptions	file:
countdown	tools/eigen/test/exceptions.cpp	/^int ScalarWithExceptions::countdown = 0;$/;"	m	class:ScalarWithExceptions	file:
countnz	tools/eigen/Eigen/src/SparseLU/SparseLU_Utils.h	/^void SparseLUImpl<Scalar,StorageIndex>::countnz(const Index n, Index& nnzL, Index& nnzU, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
cout	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_LinSpaced.cpp	/^std::cout << "  Degrees   Radians      Sine    Cosine\\n";$/;"	m	class:std	file:
cout	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^std::cout << "A fixed-size array:\\n";$/;"	m	class:std	file:
cout	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^std::cout << "A one-dimensional dynamic-size array:\\n";$/;"	m	class:std	file:
cout	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp	/^std::cout << "A two-dimensional dynamic-size array:\\n";$/;"	m	class:std	file:
covar	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMcovar.h	/^void covar($/;"	f	namespace:Eigen::internal
covar	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/covar.h	/^void covar($/;"	f	namespace:Eigen::internal
cpu_device_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::DefaultDevice cpu_device_;$/;"	m	struct:CPUContext	file:
cpuid_is_vendor	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline bool cpuid_is_vendor(int abcd[4], const int vendor[3])$/;"	f	namespace:Eigen::internal
createIndent	tools/eigen/doc/eigen_navtree_hacks.js	/^function createIndent(o,domNode,node,level)$/;"	f
createNavigationControlWidget	tools/eigen/demos/opengl/quaternion_demo.cpp	/^QWidget* RenderingWidget::createNavigationControlWidget()$/;"	f	class:RenderingWidget
createRandomPIMatrixOfRank	tools/eigen/test/main.h	/^void createRandomPIMatrixOfRank(Index desired_rank, Index rows, Index cols, MatrixType& m)$/;"	f	namespace:Eigen
createShader	tools/eigen/unsupported/test/openglsupport.cpp	/^GLint createShader(const char* vtx, const char* frg)$/;"	f
cross	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^VectorwiseOp<ExpressionType,Direction>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
cross3	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross3(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross3_impl	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^struct cross3_impl {$/;"	s	namespace:Eigen::internal
cross3_impl	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct cross3_impl<Architecture::SSE,VectorLhs,VectorRhs,float,true>$/;"	s	namespace:Eigen::internal
cross_product_return_type	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> struct cross_product_return_type {$/;"	s	class:Eigen::MatrixBase
cs_sorted_multiply	tools/eigen/bench/sparse_dense_product.cpp	/^cs* cs_sorted_multiply(const cs* a, const cs* b)$/;"	f
cs_sorted_multiply	tools/eigen/bench/sparse_product.cpp	/^cs* cs_sorted_multiply(const cs* a, const cs* b)$/;"	f
cs_sorted_multiply2	tools/eigen/bench/sparse_product.cpp	/^cs* cs_sorted_multiply2(const cs* a, const cs* b)$/;"	f
cs_tdfs	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^StorageIndex cs_tdfs(StorageIndex j, StorageIndex k, StorageIndex *head, const StorageIndex *next, StorageIndex *post, StorageIndex *stack)$/;"	f	namespace:Eigen::internal
cs_wclear	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^static StorageIndex cs_wclear (StorageIndex mark, StorageIndex lemax, StorageIndex *w, StorageIndex n)$/;"	f	namespace:Eigen::internal
csc	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal csc   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(csc  );    }$/;"	f	namespace:mpfr
csch	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal csch  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(csch );    }$/;"	f	namespace:mpfr
csr_sort_indices	tools/eigen/bench/sparse_setter.cpp	/^void csr_sort_indices(const I n_row,$/;"	f
csr_sum_duplicates	tools/eigen/bench/sparse_setter.cpp	/^void csr_sum_duplicates(const I n_row,$/;"	f
ctbmv_	tools/eigen/blas/f2c/ctbmv.c	/^\/* Subroutine *\/ int ctbmv_(char *uplo, char *trans, char *diag, integer *n, $/;"	f
ctms_decompositions	tools/eigen/test/nomalloc.cpp	/^void ctms_decompositions()$/;"	f
ctrls	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    const ControlPointVectorType& ctrls() const { return m_ctrls; }$/;"	f	class:Eigen::Spline
cube	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cube() const$/;"	f
cube	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    cube() const {$/;"	f	class:Eigen::TensorBase
customOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    const TensorCustomBinaryOp<const CustomBinaryFunc, const Derived, const OtherDerived> customOp(const OtherDerived& other, const CustomBinaryFunc& op) const {$/;"	f	class:Eigen::TensorBase
customOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    const TensorCustomUnaryOp<const CustomUnaryFunc, const Derived> customOp(const CustomUnaryFunc& op) const {$/;"	f	class:Eigen::TensorBase
cv	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^    std::condition_variable cv;$/;"	m	struct:Eigen::ThreadPool::Waiter
cv_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  std::condition_variable cv_;$/;"	m	class:Eigen::Notification
cwiseAbs	tools/eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs() const { return CwiseAbsReturnType(derived()); }$/;"	f
cwiseAbs2	tools/eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs2() const { return CwiseAbs2ReturnType(derived()); }$/;"	f
cwiseEqual	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseEqual	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseEqual(const Scalar& s) const$/;"	f
cwiseInverse	tools/eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseInverse() const { return CwiseInverseReturnType(derived()); }$/;"	f
cwiseMax	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMax	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const Scalar &other) const$/;"	f
cwiseMax	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    cwiseMax(Scalar threshold) const {$/;"	f	class:Eigen::TensorBase
cwiseMax	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    cwiseMax(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
cwiseMin	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMin	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const Scalar &other) const$/;"	f
cwiseMin	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    cwiseMin(Scalar threshold) const {$/;"	f	class:Eigen::TensorBase
cwiseMin	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    cwiseMin(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
cwiseNotEqual	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseNotEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseProduct	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::cwiseProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
cwiseProduct	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseProduct(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseQuotient	tools/eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseQuotient(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseSqrt	tools/eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseSqrt() const { return CwiseSqrtReturnType(derived()); }$/;"	f
cwise_min_max	tools/eigen/test/array_for_matrix.cpp	/^template<typename MatrixType> void cwise_min_max(const MatrixType& m)$/;"	f
d	Top.hh	/^    int d;$/;"	m	class:Top
d_cnjg	tools/eigen/blas/f2c/d_cnjg.c	/^void d_cnjg(doublecomplex *r, doublecomplex *z) {$/;"	f
dabs	tools/eigen/blas/f2c/datatypes.h	18;"	d
data	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.const_cast_derived().data(); }$/;"	f	class:Eigen::ArrayWrapper
data	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.const_cast_derived().data(); }$/;"	f	class:Eigen::MatrixWrapper
data	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::ArrayWrapper
data	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::MatrixWrapper
data	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Scalar* data() { return &(this->coeffRef(0)); }$/;"	f	class:Eigen::CwiseUnaryViewImpl
data	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return &(this->coeff(0)); }$/;"	f	class:Eigen::CwiseUnaryViewImpl
data	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return 0; }$/;"	f	class:Eigen::DenseStorage
data	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return 0; }$/;"	f	class:Eigen::DenseStorage
data	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline ScalarWithConstIfNotLvalue* data() { return &(m_matrix.const_cast_derived().coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline const Scalar* data() const { return &(m_matrix.const_cast_derived().coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE  Scalar* data() { eigen_internal_assert(false && "should never be called"); return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return m_data.array; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	tools/eigen/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::MapBase
data	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue* data() { return this->m_data; } \/\/ no const-cast here so non-const-correct code will give a compile error$/;"	f	class:Eigen::MapBase
data	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline const Scalar* data() const { return this->m_data; }$/;"	f	class:Eigen::MapBase
data	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar *data()$/;"	f	class:Eigen::PlainObjectBase
data	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar *data() const$/;"	f	class:Eigen::PlainObjectBase
data	tools/eigen/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline ScalarWithConstIfNotLvalue* data() { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	tools/eigen/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::internal::blas_data_mapper
data	tools/eigen/Eigen/src/Geometry/Transform.h	/^  Scalar* data() { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	tools/eigen/Eigen/src/Geometry/Transform.h	/^  const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseVector
data	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
data	tools/eigen/doc/snippets/Map_placement_new.cpp	/^int data[] = {1,2,3,4,5,6,7,8,9};$/;"	v
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar                        *data()                        { return m_storage.data(); }$/;"	f	class:Eigen::Tensor
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar                  *data()                  const { return m_storage.data(); }$/;"	f	class:Eigen::Tensor
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar* data() const {$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType* data() const { return m_result; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return m_data; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC const Scalar* data() const { return m_data; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar                   *data()                        { return m_storage.data(); }$/;"	f	class:Eigen::TensorFixedSize
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar             *data()                  const { return m_storage.data(); }$/;"	f	class:Eigen::TensorFixedSize
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return m_buffer; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return m_impl.data(); }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Scalar* data() { return m_data; }$/;"	f	class:Eigen::TensorMap
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::TensorMap
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType* data() const { return m_impl.data(); }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType* data() const {$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar* data() const { return m_evaluator->data(); }$/;"	f	class:Eigen::TensorRef
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return m_ref.data(); }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC virtual const Scalar* data() const {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorReadOnly
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T *data() { return m_data; }$/;"	f	class:Eigen::TensorStorage
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const T *data() const { return m_data; }$/;"	f	class:Eigen::TensorStorage
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  EIGEN_STRONG_INLINE T *data() { return m_data; }$/;"	f	class:Eigen::TensorStorage
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  EIGEN_STRONG_INLINE const T *data() const { return m_data; }$/;"	f	class:Eigen::TensorStorage
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC Scalar* data() const { return NULL; }$/;"	f	struct:Eigen::TensorEvaluator
data_and_stride	tools/eigen/test/block.cpp	/^void data_and_stride(const MatrixType& m)$/;"	f
dcomplex	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<double> dcomplex;$/;"	t	namespace:Eigen
deallocate	tools/eigen/Eigen/src/Core/util/Memory.h	/^  void deallocate(pointer p, size_type \/*num*\/)$/;"	f	class:Eigen::aligned_allocator
deallocate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void deallocate(void* buffer) const {$/;"	f	struct:Eigen::DefaultDevice
deallocate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void deallocate(void* buffer) const {$/;"	f	struct:Eigen::GpuDevice
deallocate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE void deallocate(void* buffer) const {$/;"	f	struct:Eigen::ThreadPoolDevice
deallocate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  virtual void deallocate(void* buffer) const {$/;"	f	class:Eigen::CudaStreamDevice
debug	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  static void debug()$/;"	f	struct:Eigen::internal::copy_using_evaluator_traits
debug	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  static void debug()$/;"	f	struct:Eigen::internal::product_type
debug	tools/eigen/Eigen/src/Core/Redux.h	/^  static void debug()$/;"	f	struct:Eigen::internal::redux_traits
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct BandShape              { static std::string debugName() { return "BandShape"; } };$/;"	f	struct:Eigen::BandShape
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct DenseShape             { static std::string debugName() { return "DenseShape"; } };$/;"	f	struct:Eigen::DenseShape
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct DiagonalShape          { static std::string debugName() { return "DiagonalShape"; } };$/;"	f	struct:Eigen::DiagonalShape
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct HomogeneousShape       { static std::string debugName() { return "HomogeneousShape"; } };$/;"	f	struct:Eigen::HomogeneousShape
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct PermutationShape       { static std::string debugName() { return "PermutationShape"; } };$/;"	f	struct:Eigen::PermutationShape
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct SelfAdjointShape       { static std::string debugName() { return "SelfAdjointShape"; } };$/;"	f	struct:Eigen::SelfAdjointShape
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct SparseShape            { static std::string debugName() { return "SparseShape"; } };$/;"	f	struct:Eigen::SparseShape
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct TranspositionsShape    { static std::string debugName() { return "TranspositionsShape"; } };$/;"	f	struct:Eigen::TranspositionsShape
debugName	tools/eigen/Eigen/src/Core/util/Constants.h	/^struct TriangularShape        { static std::string debugName() { return "TriangularShape"; } };$/;"	f	struct:Eigen::TriangularShape
debugName	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^struct SparseSelfAdjointShape { static std::string debugName() { return "SparseSelfAdjointShape"; } };$/;"	f	struct:Eigen::internal::SparseSelfAdjointShape
debugName	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^struct SparseTriangularShape  { static std::string debugName() { return "SparseTriangularShape"; } };$/;"	f	struct:Eigen::internal::SparseTriangularShape
dec	tools/eigen/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC const Decomposition& dec() const { return m_dec; }$/;"	f	class:Eigen::Solve
dec	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const Decomposition& dec()   const { return m_dec; }$/;"	f	class:Eigen::SolveWithGuess
dec	tools/eigen/Eigen/src/misc/Image.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::image_retval_base
dec	tools/eigen/Eigen/src/misc/Kernel.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::kernel_retval_base
decay	Top.hh	/^    val decay;$/;"	m	class:Top
decltype	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct equal_op         { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a == b)  { return a == b;  } };$/;"	f	struct:Eigen::internal::equal_op
decltype	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct logical_and_op   { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a && b)  { return a && b;  } };$/;"	f	struct:Eigen::internal::logical_and_op
decltype	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct product_op       { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a * b)   { return a * b;   } };$/;"	f	struct:Eigen::internal::product_op
decomposePathAndFile	tools/eigen/bench/btl/generic_bench/btl.hh	/^    void decomposePathAndFile(BtlString& path, BtlString& filename) const$/;"	f	class:BtlString
decrRefCount	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  void decrRefCount() { --m_refcount; }$/;"	f	class:Eigen::internal::TensorLazyBaseEvaluator
decrement_if_fixed_size	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^struct decrement_if_fixed_size$/;"	s	namespace:Eigen::internal
decrement_size	tools/eigen/Eigen/src/Householder/Householder.h	/^template<int n> struct decrement_size$/;"	s	namespace:Eigen::internal
defaultL1CacheSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL1CacheSize = 16*1024;$/;"	m	namespace:Eigen::internal
defaultL1CacheSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL1CacheSize = 32*1024;$/;"	m	namespace:Eigen::internal
defaultL2CacheSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL2CacheSize = 256*1024;$/;"	m	namespace:Eigen::internal
defaultL2CacheSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL2CacheSize = 512*1024;$/;"	m	namespace:Eigen::internal
defaultL3CacheSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL3CacheSize = 2*1024*1024;$/;"	m	namespace:Eigen::internal
defaultL3CacheSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL3CacheSize = 512*1024;$/;"	m	namespace:Eigen::internal
default_alignment	tools/eigen/Eigen/src/Core/Matrix.h	/^      default_alignment = compute_default_alignment<_Scalar,max_size>::value,$/;"	e	enum:Eigen::internal::traits::__anon292
default_block_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^    size_triple_t default_block_size;$/;"	m	struct:evaluate_defaults_action_t::results_entry_t	file:
default_efficiency	tools/eigen/bench/analyze-blocking-sizes.cpp	/^    float default_efficiency;$/;"	m	struct:evaluate_defaults_action_t::results_entry_t	file:
default_gflops	tools/eigen/bench/analyze-blocking-sizes.cpp	/^    float default_gflops;$/;"	m	struct:evaluate_defaults_action_t::results_entry_t	file:
default_mr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    default_mr = (EIGEN_PLAIN_ENUM_MIN(16,NumberOfRegisters)\/2\/nr)*LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
default_packet_traits	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^struct default_packet_traits$/;"	s	namespace:Eigen::internal
default_precision	tools/eigen/bench/analyze-blocking-sizes.cpp	/^const int default_precision = 4;$/;"	v
default_prunning_func	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    default_prunning_func(const Scalar& ref, const RealScalar& eps) : reference(ref), epsilon(eps) {}$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
default_prunning_func	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  struct default_prunning_func {$/;"	s	class:Eigen::SparseMatrix
default_stream	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^static const cudaStream_t default_stream = cudaStreamDefault;$/;"	m	namespace:Eigen
deflSize	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  int deflSize() {return m_r; }$/;"	f	class:Eigen::DGMRES
deflation	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation(Index firstCol, Index lastCol, Index k, Index firstRowW, Index firstColW, Index shift)$/;"	f	class:Eigen::BDCSVD
deflation43	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation43(Index firstCol, Index shift, Index i, Index size)$/;"	f	class:Eigen::BDCSVD
deflation44	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation44(Index firstColu , Index firstColm, Index firstRowW, Index firstColW, Index i, Index j, Index size)$/;"	f	class:Eigen::BDCSVD
degree	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType degree ;  \/* number of principal & non-principal columns in row *\/$/;"	m	union:internal::Colamd_Row::__anon188
degree	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^  DenseIndex Spline<_Scalar, _Dim, _Degree>::degree() const$/;"	f	class:Eigen::Spline
degree_next	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType degree_next ; \/* next column, if col is in a degree list *\/$/;"	m	union:internal::colamd_col::__anon187
delta	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar delta;$/;"	m	class:Eigen::HybridNonLinearSolver
delta	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar delta;$/;"	m	class:Eigen::LevenbergMarquardt
demangle_flags	tools/eigen/test/vectorization_logic.cpp	/^std::string demangle_flags(int f)$/;"	f
demangle_traversal	tools/eigen/test/vectorization_logic.cpp	/^std::string demangle_traversal(int t)$/;"	f
demangle_unrolling	tools/eigen/test/vectorization_logic.cpp	/^std::string demangle_unrolling(int t)$/;"	f
demo_Map_MatrixXd	tools/eigen/demos/mix_eigen_and_c/example.c	/^void demo_Map_MatrixXd()$/;"	f
demo_MatrixXd	tools/eigen/demos/mix_eigen_and_c/example.c	/^void demo_MatrixXd()$/;"	f
demo_all_types	tools/eigen/unsupported/doc/examples/FFT.cpp	/^void demo_all_types(int nfft)$/;"	f
denorm_min	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static const mpfr::mpreal denorm_min()       { return (min)();                    }$/;"	f	class:std::numeric_limits
denseMatrix	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    DenseCompanionMatrixType denseMatrix() const$/;"	f	class:Eigen::internal::companion
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, InnerUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, InnerUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, SliceVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_product_base	tools/eigen/Eigen/src/Core/Product.h	/^class dense_product_base$/;"	c	namespace:Eigen::internal
dense_product_base	tools/eigen/Eigen/src/Core/Product.h	/^class dense_product_base<Lhs, Rhs, Option, InnerProduct>$/;"	c	namespace:Eigen::internal
dense_storage_assignment	tools/eigen/test/dense_storage.cpp	/^void dense_storage_assignment()$/;"	f
dense_storage_copy	tools/eigen/test/dense_storage.cpp	/^void dense_storage_copy()$/;"	f
dense_xpr_base_dispatcher_for_doxygen	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher_for_doxygen<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
dense_xpr_base_dispatcher_for_doxygen	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher_for_doxygen<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
depth_select	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    depth_select = product_size_category<Depth,MaxDepth>::value$/;"	e	enum:Eigen::internal::product_type::__anon591
deque	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^  class deque<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
deque_base	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^                Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > deque_base;$/;"	t	class:std::deque
derivatives	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline DerType& derivatives() { return m_derivatives; }$/;"	f	class:Eigen::AutoDiffScalar
derivatives	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline const DerType& derivatives() const { return m_derivatives; }$/;"	f	class:Eigen::AutoDiffScalar
derivatives	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    Spline<_Scalar, _Dim, _Degree>::derivatives(Scalar u, DenseIndex order) const$/;"	f	class:Eigen::Spline
derivativesImpl	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^  void derivativesImpl(const SplineType& spline, typename SplineType::Scalar u, DenseIndex order, DerivativeType& der)$/;"	f	namespace:Eigen
derived	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	tools/eigen/Eigen/src/Core/EigenBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	tools/eigen/Eigen/src/Core/EigenBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	tools/eigen/Eigen/src/Core/Transpositions.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SVDBase
derived	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SVDBase
derived	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SparseSolverBase
derived	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SparseSolverBase
derived	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    EIGEN_STRONG_INLINE Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TensorBase
derived	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    EIGEN_STRONG_INLINE const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TensorBase
derived	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  AutoDiffScalar<_DerType>& derived() { return *static_cast<AutoDiffScalar<_DerType>*>(this); }$/;"	f	struct:Eigen::internal::auto_diff_special_op
derived	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  const AutoDiffScalar<_DerType>& derived() const { return *static_cast<const AutoDiffScalar<_DerType>*>(this); }$/;"	f	struct:Eigen::internal::auto_diff_special_op
derived	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Derived& derived() {$/;"	f	class:Eigen::SkylineMatrixBase
derived	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline const Derived& derived() const {$/;"	f	class:Eigen::SkylineMatrixBase
destruct_elements_of_array	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline void destruct_elements_of_array(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
detect_super_cols	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static void detect_super_cols$/;"	f	namespace:internal
determinant	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Index determinant() const$/;"	f	class:Eigen::PermutationBase
determinant	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    Scalar determinant() const$/;"	f	class:Eigen::TriangularView
determinant	tools/eigen/Eigen/src/LU/Determinant.h	/^inline typename internal::traits<Derived>::Scalar MatrixBase<Derived>::determinant() const$/;"	f	class:Eigen::MatrixBase
determinant	tools/eigen/Eigen/src/LU/FullPivLU.h	/^typename internal::traits<MatrixType>::Scalar FullPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::FullPivLU
determinant	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^typename internal::traits<MatrixType>::Scalar PartialPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::PartialPivLU
determinant	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialCholesky
determinant	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLDLT
determinant	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLLT
determinant	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    Scalar determinant()$/;"	f	class:Eigen::SparseLU
determinant	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^typename SuperLU<MatrixType>::Scalar SuperLU<MatrixType>::determinant() const$/;"	f	class:Eigen::SuperLU
determinant	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^typename UmfPackLU<MatrixType>::Scalar UmfPackLU<MatrixType>::determinant() const$/;"	f	class:Eigen::UmfPackLU
determinant	tools/eigen/doc/snippets/MatrixBase_computeInverseAndDetWithCheck.cpp	/^double determinant;$/;"	v
determinant	tools/eigen/test/determinant.cpp	/^template<typename MatrixType> void determinant(const MatrixType& m)$/;"	f
determinant_impl	tools/eigen/Eigen/src/LU/Determinant.h	/^> struct determinant_impl$/;"	s	namespace:Eigen::internal
determinant_impl	tools/eigen/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 1>$/;"	s	namespace:Eigen::internal
determinant_impl	tools/eigen/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 2>$/;"	s	namespace:Eigen::internal
determinant_impl	tools/eigen/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 3>$/;"	s	namespace:Eigen::internal
determinant_impl	tools/eigen/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 4>$/;"	s	namespace:Eigen::internal
device	tools/eigen/Eigen/src/Core/util/Meta.h	/^namespace device {$/;"	n	namespace:Eigen::internal
device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    TensorDevice<Derived, DeviceType> device(const DeviceType& device) {$/;"	f	class:Eigen::TensorBase
device	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::DefaultDevice& device() const { return cpu_device_; }$/;"	f	struct:CPUContext
device	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::GpuDevice& device() const { return gpu_device_; }$/;"	f	struct:GPUContext
deviceProperties	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  const cudaDeviceProp& deviceProperties() const {$/;"	f	class:Eigen::CudaStreamDevice
device_	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  Device device_;$/;"	m	class:BenchmarkSuite
device_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  int device_;$/;"	m	class:Eigen::CudaStreamDevice
df	tools/eigen/test/denseLM.cpp	/^  int df(const VectorType& uv, JacobianType& fjac)$/;"	f	struct:DenseLM
df	tools/eigen/test/sparseLM.cpp	/^  int df(const VectorType& uv, JacobianType& fjac)$/;"	f	struct:sparseGaussianTest
df	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    int df(const InputType& _x, JacobianType &jac) const$/;"	f	class:Eigen::NumericalDiff
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:Bennett5_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:BoxBOD_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH09_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH10_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH17_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:chwirut2_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:eckerle4_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:hahn1_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:lanczos1_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:misra1a_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:misra1d_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:rat42_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:rat43_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:thurber_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &x, MatrixXd &fjac) const$/;"	f	struct:lmder_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &x, MatrixXd &fjac)$/;"	f	struct:hybrj_functor
df	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &x, VectorXd &jac_row, VectorXd::Index rownb)$/;"	f	struct:lmstr_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:Bennett5_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:BoxBOD_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH09_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH10_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH17_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:chwirut2_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:eckerle4_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:hahn1_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:lanczos1_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:misra1a_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:misra1d_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:rat42_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:rat43_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:thurber_functor
df	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int df(const VectorXd &x, MatrixXd &fjac) const$/;"	f	struct:lmder_functor
dfs_kernel	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^void SparseLUImpl<Scalar,StorageIndex>::dfs_kernel(const StorageIndex jj, IndexVector& perm_r,$/;"	f	class:Eigen::internal::SparseLUImpl
dget	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^template<std::size_t n, typename Dimension> struct dget {$/;"	s	namespace:Eigen::internal
dgmres	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^void DGMRES<_MatrixType, _Preconditioner>::dgmres(const MatrixType& mat,const Rhs& rhs, Dest& x,$/;"	f	class:Eigen::DGMRES
dgmresApplyDeflation	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^int DGMRES<_MatrixType, _Preconditioner>::dgmresApplyDeflation(const RhsType &x, DestType &y) const$/;"	f	class:Eigen::DGMRES
dgmresComputeDeflationData	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^int DGMRES<_MatrixType, _Preconditioner>::dgmresComputeDeflationData(const MatrixType& mat, const Preconditioner& precond, const Index& it, Index& neig) const$/;"	f	class:Eigen::DGMRES
dgmresCycle	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^int DGMRES<_MatrixType, _Preconditioner>::dgmresCycle(const MatrixType& mat, const Preconditioner& precond, Dest& x, DenseVector& r0, RealScalar& beta, const RealScalar& normRhs, int& nbIts) const$/;"	f	class:Eigen::DGMRES
dgmresInitDeflation	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^void DGMRES<_MatrixType, _Preconditioner>::dgmresInitDeflation(Index& rows) const$/;"	f	class:Eigen::DGMRES
diag	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^VectorXd diag = triOfA.diagonal();$/;"	v
diag	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType& diag() {return m_diag; }$/;"	f	class:Eigen::LevenbergMarquardt
diag	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::HybridNonLinearSolver
diag	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::LevenbergMarquardt
diag	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Scalar& diag(Index i) {$/;"	f	class:Eigen::SkylineStorage
diag	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Scalar& diag(Index i) const {$/;"	f	class:Eigen::SkylineStorage
diagSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index diagSize() const {$/;"	f	class:Eigen::SkylineStorage
diagonal	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,Dynamic> diagonal(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,SizeAtCompileTime> diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,Dynamic> diagonal(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,SizeAtCompileTime> diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    template<int N> inline const typename DiagonalIntReturnType<N>::Type diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    template<int N> inline typename DiagonalIntReturnType<N>::Type diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	tools/eigen/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal() const$/;"	f	class:Eigen::MatrixBase
diagonal	tools/eigen/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal()$/;"	f	class:Eigen::MatrixBase
diagonal	tools/eigen/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index) const$/;"	f	class:Eigen::MatrixBase
diagonal	tools/eigen/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index)$/;"	f	class:Eigen::MatrixBase
diagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalWrapper
diagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::diagonal() const$/;"	f	class:Eigen::Tridiagonalization
diagonal	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline CwiseBinaryOp< internal::scalar_difference_op<Scalar>, const VectorType, const VectorType> diagonal() const$/;"	f	class:Eigen::AlignedBox
diagonal	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    DiagonalReturnType diagonal() { return DiagonalReturnType(*this); }$/;"	f	class:Eigen::SparseMatrix
diagonal	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    const ConstDiagonalReturnType diagonal() const { return ConstDiagonalReturnType(*this); }$/;"	f	class:Eigen::SparseMatrix
diagonal	tools/eigen/test/diagonal.cpp	/^template<typename MatrixType> void diagonal(const MatrixType& m)$/;"	f
diagonalLength	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index diagonalLength(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonalSize	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    inline Index diagonalSize() const { return (std::min)(rows(),cols()); }$/;"	f	class:Eigen::MatrixBase
diagonal_product_evaluator_base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  diagonal_product_evaluator_base(const MatrixType &mat, const DiagonalType &diag)$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
diagonal_product_evaluator_base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct diagonal_product_evaluator_base$/;"	s	namespace:Eigen::internal
diagonalmatrices	tools/eigen/test/diagonalmatrices.cpp	/^template<typename MatrixType> void diagonalmatrices(const MatrixType& m)$/;"	f
dif_rmse	tools/eigen/unsupported/test/FFTW.cpp	/^    long double dif_rmse( const VT1 buf1,const VT2 buf2)$/;"	f
difference_type	tools/eigen/Eigen/src/Core/util/Memory.h	/^  typedef std::ptrdiff_t  difference_type;$/;"	t	class:Eigen::aligned_allocator
difference_type	tools/eigen/Eigen/src/StlSupport/details.h	/^    typedef ptrdiff_t difference_type;$/;"	t	class:Eigen::aligned_allocator_indirection
digamma	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal digamma (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(digamma);     }$/;"	f	namespace:mpfr
digits	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static int digits()                        {    return int(mpfr::mpreal::get_default_prec());    }$/;"	f	class:std::numeric_limits
digits	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static int digits(const mpfr::mpreal& x)   {    return x.getPrecision();                         }$/;"	f	class:std::numeric_limits
digits	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const int digits       = 53;$/;"	m	class:std::numeric_limits
digits10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static int digits10(const mpfr::mpreal& x)$/;"	f	class:std::numeric_limits
digits10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static int digits10(mp_prec_t precision = mpfr::mpreal::get_default_prec())$/;"	f	class:std::numeric_limits
digits10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const int digits10     = 15;$/;"	m	class:std::numeric_limits
digits2bits	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_prec_t digits2bits(int d)$/;"	f	namespace:mpfr
dim	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_min.size() : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::AlignedBox
dim	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_coeffs.size()-1 : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::Hyperplane
dim	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  inline Index dim() const { return m_direction.size(); }$/;"	f	class:Eigen::ParametrizedLine
dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  const Index dim() const { return m_dim.actualDim(); }$/;"	f	class:Eigen::TensorChippingOp
dim	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^    int dim;$/;"	m	struct:Eigen::KdBVH::VectorComparator
dim	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal dim(const mpreal& a, const mpreal& b, mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
dimension	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index                         dimension(std::size_t n) const { return m_storage.dimensions()[n]; }$/;"	f	class:Eigen::Tensor
dimension	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index                    dimension(std::size_t n) const { return m_storage.dimensions()[n]; }$/;"	f	class:Eigen::TensorFixedSize
dimension	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Index dimension(Index n) const { return m_dimensions[n]; }$/;"	f	class:Eigen::TensorMap
dimension	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Index dimension(Index n) const { return m_evaluator->dimensions()[n]; }$/;"	f	class:Eigen::TensorRef
dimensionOfKernel	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivLU
dimensionOfKernel	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::ColPivHouseholderQR
dimensionOfKernel	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivHouseholderQR
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions&             dimensions()             const { return m_storage.dimensions(); }$/;"	f	class:Eigen::Tensor
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const {$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC const Dimensions& dimensions() const$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_impl.dimensions(); }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC const Dimensions& dimensions() const { return m_impl.dimensions(); }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dims; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC const Dimensions& dimensions() const { return m_argImpl.dimensions(); }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC const Dimensions& dimensions() const$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions&        dimensions()             const { return m_storage.dimensions(); }$/;"	f	class:Eigen::TensorFixedSize
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  EIGEN_DEVICE_FUNC const Dimensions& dimensions() const { return m_impl.dimensions(); }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	class:Eigen::TensorMap
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    const NewDimensions& dimensions() const { return m_dims; }$/;"	f	class:Eigen::TensorReshapingOp
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_evaluator->dimensions(); }$/;"	f	class:Eigen::TensorRef
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_ref.dimensions(); }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC virtual const Dimensions& dimensions() const {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorReadOnly
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  const Dimensions& dimensions() const { return this->m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const {return m_dimensions;}$/;"	f	class:Eigen::TensorStorage
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  EIGEN_STRONG_INLINE const FixedDimensions& dimensions() const { return m_dimensions; }$/;"	f	class:Eigen::TensorStorage
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Dimensions& dimensions() const { return m_dimensions; }$/;"	f	struct:Eigen::TensorEvaluator
dimensions	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^  DSizes<DenseIndex, 2> dimensions(const Tensor<float, 2>& input) const {$/;"	f	struct:InsertZeros
dimensions	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^  DSizes<DenseIndex, 3> dimensions(const Tensor<float, 3>& input1, const Tensor<float, 3>& input2) const {$/;"	f	struct:BatchMatMul
dimensions_match	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^bool dimensions_match(Dims1& dims1, Dims2& dims2) {$/;"	f	namespace:Eigen
dimino_add_all_coset_spaces	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_add_all_coset_spaces$/;"	s	namespace:Eigen::internal::group_theory
dimino_add_all_coset_spaces	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_add_all_coset_spaces<Multiply, Equality, id, sub_group_elements, elements, generators, sub_group_size, rep_pos, true>$/;"	s	namespace:Eigen::internal::group_theory
dimino_add_cosets_for_rep	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_add_cosets_for_rep<Multiply, Equality, id, sub_group_elements, elements, type_list<EIGEN_TPL_PP_SPEC_HACK_USE(empty)>, rep_element, sub_group_size>$/;"	s	namespace:Eigen::internal::group_theory
dimino_add_cosets_for_rep	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_add_cosets_for_rep<Multiply, Equality, id, sub_group_elements, elements, type_list<g, gs...>, rep_element, sub_group_size>$/;"	s	namespace:Eigen::internal::group_theory
dimino_add_generator	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_add_generator$/;"	s	namespace:Eigen::internal::group_theory
dimino_add_generator	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_add_generator<Multiply, Equality, id, elements, generators_done, current_generator, true>$/;"	s	namespace:Eigen::internal::group_theory
dimino_add_remaining_generators	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_add_remaining_generators$/;"	s	namespace:Eigen::internal::group_theory
dimino_add_remaining_generators	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_add_remaining_generators<Multiply, Equality, id, generators_done, type_list<>, elements>$/;"	s	namespace:Eigen::internal::group_theory
dimino_first_step_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_first_step_elements$/;"	s	namespace:Eigen::internal::group_theory
dimino_first_step_elements_helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_first_step_elements_helper :$/;"	s	namespace:Eigen::internal::group_theory
dimino_first_step_elements_helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_first_step_elements_helper<Multiply, Equality, id, g, current_element, elements, true>$/;"	s	namespace:Eigen::internal::group_theory
dimino_get_coset_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_get_coset_elements$/;"	s	namespace:Eigen::internal::group_theory
dimino_get_coset_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct dimino_get_coset_elements<Multiply, sub_group_elements, new_coset_rep, false>$/;"	s	namespace:Eigen::internal::group_theory
dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    const Dims& dims() const { return m_dims; }$/;"	f	class:Eigen::TensorReductionOp
dirder	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
direct_selfadjoint_eigenvalues	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^struct direct_selfadjoint_eigenvalues<SolverType,2,false>$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType,int Size,bool IsComplex> struct direct_selfadjoint_eigenvalues$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType> struct direct_selfadjoint_eigenvalues<SolverType,3,false>$/;"	s	namespace:Eigen::internal
direction	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType& direction() { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  const VectorType& direction() const { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	tools/eigen/demos/opengl/camera.cpp	/^Vector3f Camera::direction(void) const$/;"	f	class:Camera
display_vector	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void display_vector(const stl_vector & A)$/;"	f	class:STL_interface
distance	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  RealScalar distance(const VectorType& p) const { using std::sqrt; return sqrt(squaredDistance(p)); }$/;"	f	class:Eigen::ParametrizedLine
div_2si	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal div_2si(const mpreal& v, long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
div_2ui	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal div_2ui(const mpreal& v, unsigned long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
div_assign_op	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename Scalar> struct div_assign_op {$/;"	s	namespace:Eigen::internal
div_ceil	tools/eigen/Eigen/src/Core/util/Meta.h	/^T div_ceil(const T &a, const T &b)$/;"	f	namespace:numext
divacNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar divacNorm(T& v)$/;"	f
divide	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::divide (Index firstCol, Index lastCol, Index firstRowW, Index firstColW, Index shift)$/;"	f	class:Eigen::BDCSVD
divide	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE int divide(const int32_t n) const {$/;"	f	class:Eigen::internal::TensorIntDivisor
divide	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T divide(const T numerator) const {$/;"	f	struct:Eigen::internal::TensorIntDivisor
divide_assign_using_evaluator	tools/eigen/test/evaluators.cpp	/^  void divide_assign_using_evaluator(const DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen
dmax	tools/eigen/blas/f2c/datatypes.h	22;"	d
dmin	tools/eigen/blas/f2c/datatypes.h	21;"	d
doAssign	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    inline void doAssign(Scalar const& value)$/;"	f	class:Eigen::internal::tensor_symmetry_value_setter
doCheck_	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^  static inline int doCheck_(ArrType e, int flags, int dummy, std::set<uint64_t>& found, std::map<uint64_t, int> const& expected)$/;"	f	struct:checkIdx
doComputeEigenvectors	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::doComputeEigenvectors(const RealScalar& matrixnorm)$/;"	f	class:Eigen::ComplexEigenSolver
doComputeEigenvectors	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^void EigenSolver<MatrixType>::doComputeEigenvectors()$/;"	f	class:Eigen::EigenSolver
doEigen	tools/eigen/bench/sparse_cholesky.cpp	/^void doEigen(const char* name, const EigenSparseSelfAdjointMatrix& sm1, int flags = 0)$/;"	f
doEigen	tools/eigen/bench/sparse_lu.cpp	/^void doEigen(const char* name, const EigenSparseMatrix& sm1, const VectorX& b, VectorX& x, int flags = 0)$/;"	f
dogleg	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/dogleg.h	/^void dogleg($/;"	f	namespace:Eigen::internal
done	tools/eigen/bench/bench_gemm.cpp	/^static double done = 1;$/;"	v	file:
dontalign	tools/eigen/test/dontalign.cpp	/^void dontalign(const MatrixType& m)$/;"	f
dostuff	tools/eigen/bench/sparse_randomsetter.cpp	/^void dostuff(const char* name, EigenSparseMatrix& sm1)$/;"	f
dot	tools/eigen/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
dot	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  template<class OtherDerived> inline Scalar dot(const QuaternionBase<OtherDerived>& other) const { return coeffs().dot(other.coeffs()); }$/;"	f	class:Eigen::QuaternionBase
dot	tools/eigen/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot	tools/eigen/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot	tools/eigen/blas/level1_real_impl.h	/^Scalar EIGEN_BLAS_FUNC(dot)(int *n, RealScalar *px, int *incx, RealScalar *py, int *incy)$/;"	f
dot_nocheck	tools/eigen/Eigen/src/Core/Dot.h	/^struct dot_nocheck$/;"	s	namespace:Eigen::internal
dot_nocheck	tools/eigen/Eigen/src/Core/Dot.h	/^struct dot_nocheck<T, U, true>$/;"	s	namespace:Eigen::internal
dotcw	tools/eigen/blas/level1_cplx_impl.h	/^int EIGEN_BLAS_FUNC(dotcw)(int *n, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar* pres)$/;"	f
dotuw	tools/eigen/blas/level1_cplx_impl.h	/^int EIGEN_BLAS_FUNC(dotuw)(int *n, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar* pres)$/;"	f
doublecomplex	tools/eigen/blas/f2c/datatypes.h	/^typedef struct { doublereal r, i; } doublecomplex;$/;"	t	typeref:struct:__anon136
doublereal	tools/eigen/blas/f2c/datatypes.h	/^typedef double doublereal;$/;"	t
dparm	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<RealScalar,IPARM_SIZE,1>& dparm()$/;"	f	class:Eigen::PastixBase
dparm	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    double& dparm(int idxparam)$/;"	f	class:Eigen::PastixBase
draft	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    int draft;$/;"	m	class:MandelbrotWidget
draw	tools/eigen/demos/opengl/gpuhelper.h	/^inline void GpuHelper::draw(GLenum mode, const std::vector<uint>* pIndexes)$/;"	f	class:GpuHelper
draw	tools/eigen/demos/opengl/gpuhelper.h	/^inline void GpuHelper::draw(GLenum mode, uint nofElement)$/;"	f	class:GpuHelper
draw	tools/eigen/demos/opengl/gpuhelper.h	/^inline void GpuHelper::draw(GLenum mode, uint start, uint end)$/;"	f	class:GpuHelper
draw	tools/eigen/demos/opengl/icosphere.cpp	/^void IcoSphere::draw(int level)$/;"	f	class:IcoSphere
draw	tools/eigen/demos/opengl/quaternion_demo.cpp	/^    void draw()$/;"	f	class:FancySpheres
drawScene	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::drawScene()$/;"	f	class:RenderingWidget
drawUnitCube	tools/eigen/demos/opengl/gpuhelper.cpp	/^void GpuHelper::drawUnitCube(void)$/;"	f	class:GpuHelper
drawUnitSphere	tools/eigen/demos/opengl/gpuhelper.cpp	/^void GpuHelper::drawUnitSphere(int level)$/;"	f	class:GpuHelper
drawVector	tools/eigen/demos/opengl/gpuhelper.cpp	/^void GpuHelper::drawVector(const Vector3f& position, const Vector3f& vec, const Color& color, float aspect \/* = 50.*\/)$/;"	f	class:GpuHelper
drawVectorBox	tools/eigen/demos/opengl/gpuhelper.cpp	/^void GpuHelper::drawVectorBox(const Vector3f& position, const Vector3f& vec, const Color& color, float aspect)$/;"	f	class:GpuHelper
drotm_	tools/eigen/blas/f2c/drotm.c	/^\/* Subroutine *\/ int drotm_(integer *n, doublereal *dx, integer *incx, $/;"	f
drotmg_	tools/eigen/blas/f2c/drotmg.c	/^\/* Subroutine *\/ int drotmg_(doublereal *dd1, doublereal *dd2, doublereal *$/;"	f
dsbmv_	tools/eigen/blas/f2c/dsbmv.c	/^\/* Subroutine *\/ int dsbmv_(char *uplo, integer *n, integer *k, doublereal *$/;"	f
dsdot	tools/eigen/blas/double.cpp	/^double BLASFUNC(dsdot)(int* n, float* x, int* incx, float* y, int* incy)$/;"	f
dspmv_	tools/eigen/blas/f2c/dspmv.c	/^\/* Subroutine *\/ int dspmv_(char *uplo, integer *n, doublereal *alpha, $/;"	f
dstEvaluator	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC DstEvaluatorType& dstEvaluator() { return m_dst; }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
dstExpression	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC DstXprType& dstExpression() const { return m_dstExpr; }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
dtbmv_	tools/eigen/blas/f2c/dtbmv.c	/^\/* Subroutine *\/ int dtbmv_(char *uplo, char *trans, char *diag, integer *n, $/;"	f
dummy	tools/eigen/test/ctorleak.cpp	/^  int dummy;$/;"	m	struct:Foo	file:
dummy_a	tools/eigen/unsupported/test/cxx11_meta.cpp	/^struct dummy_a {};$/;"	s	file:
dummy_b	tools/eigen/unsupported/test/cxx11_meta.cpp	/^struct dummy_b {};$/;"	s	file:
dummy_c	tools/eigen/unsupported/test/cxx11_meta.cpp	/^struct dummy_c {};$/;"	s	file:
dummy_d	tools/eigen/unsupported/test/cxx11_meta.cpp	/^struct dummy_d {};$/;"	s	file:
dummy_e	tools/eigen/unsupported/test/cxx11_meta.cpp	/^struct dummy_e {};$/;"	s	file:
dummy_inst	tools/eigen/unsupported/test/cxx11_meta.cpp	/^  dummy_inst() : c(0) {}$/;"	f	struct:dummy_inst
dummy_inst	tools/eigen/unsupported/test/cxx11_meta.cpp	/^  dummy_inst(int, int) : c(2) {}$/;"	f	struct:dummy_inst
dummy_inst	tools/eigen/unsupported/test/cxx11_meta.cpp	/^  dummy_inst(int, int, int) : c(3) {}$/;"	f	struct:dummy_inst
dummy_inst	tools/eigen/unsupported/test/cxx11_meta.cpp	/^  dummy_inst(int, int, int, int) : c(4) {}$/;"	f	struct:dummy_inst
dummy_inst	tools/eigen/unsupported/test/cxx11_meta.cpp	/^  dummy_inst(int, int, int, int, int) : c(5) {}$/;"	f	struct:dummy_inst
dummy_inst	tools/eigen/unsupported/test/cxx11_meta.cpp	/^  explicit dummy_inst(int) : c(1) {}$/;"	f	struct:dummy_inst
dummy_inst	tools/eigen/unsupported/test/cxx11_meta.cpp	/^struct dummy_inst$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_a, dummy_a> { typedef dummy_e type; };$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_a, dummy_b> { typedef dummy_c type; };$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_a, dummy_c> { typedef dummy_d type; };$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_b, dummy_a> { typedef dummy_d type; };$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_b, dummy_b> { typedef dummy_e type; };$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_b, dummy_c> { typedef dummy_a type; };$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_c, dummy_a> { typedef dummy_b type; };$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_c, dummy_b> { typedef dummy_d type; };$/;"	s	file:
dummy_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_c, dummy_c> { typedef dummy_e type; };$/;"	s	file:
dummy_test	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_a, dummy_a>     { constexpr static bool value = true;  constexpr static int global_flags = 1; };$/;"	s	file:
dummy_test	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_b, dummy_b>     { constexpr static bool value = true;  constexpr static int global_flags = 2; };$/;"	s	file:
dummy_test	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_c, dummy_c>     { constexpr static bool value = true;  constexpr static int global_flags = 4; };$/;"	s	file:
dummy_test	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<typename A, typename B> struct dummy_test { constexpr static bool value = false; constexpr static int global_flags = 0; };$/;"	s	file:
dummychar	tools/eigen/test/dynalloc.cpp	/^    char dummychar;$/;"	m	class:MyClassA	file:
dummychar	tools/eigen/test/dynalloc.cpp	/^  char dummychar;$/;"	m	struct:MyStruct	file:
dumpMemory	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void dumpMemory(Stream& \/*s*\/)$/;"	f	class:Eigen::CholmodBase
dumpMemory	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void dumpMemory(Stream& s)$/;"	f	class:Eigen::SimplicialCholeskyBase
dumpMemory	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void dumpMemory(Stream& \/*s*\/)$/;"	f	class:Eigen::SuperLUBase
dump_history	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  void dump_history(string filemane){$/;"	f	class:X86_Timer
dump_statistics	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  void dump_statistics(string filemane){$/;"	f	class:X86_Timer
dump_table_for_subset	tools/eigen/bench/analyze-blocking-sizes.cpp	/^void dump_table_for_subset($/;"	f
dump_tables	tools/eigen/bench/analyze-blocking-sizes.cpp	/^bool dump_tables = false;$/;"	v
dump_xy_file	tools/eigen/bench/btl/generic_bench/utils/xy_file.hh	/^void dump_xy_file(const Vector_A & X, const Vector_B & Y, const std::string & filename){$/;"	f
eckerle4_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    eckerle4_functor(void) : Functor<double>(3,35) {}$/;"	f	struct:eckerle4_functor
eckerle4_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct eckerle4_functor : Functor<double>$/;"	s	file:
eckerle4_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    eckerle4_functor(void) : DenseFunctor<double>(3,35) {}$/;"	f	struct:eckerle4_functor
eckerle4_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct eckerle4_functor : DenseFunctor<double>$/;"	s	file:
edges	problem.hh	/^    std::vector<triplet> edges;$/;"	m	class:Relation
efficiency	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  float efficiency;$/;"	m	struct:preprocessed_inputfile_entry_t	file:
efficiency_of_partition	tools/eigen/bench/analyze-blocking-sizes.cpp	/^float efficiency_of_partition($/;"	f
efficiency_of_subset	tools/eigen/bench/analyze-blocking-sizes.cpp	/^float efficiency_of_subset($/;"	f
eiToCSparse	tools/eigen/bench/BenchSparseUtil.h	/^void eiToCSparse(const EigenSparseMatrix& src, cs* &dst)$/;"	f
eiToDense	tools/eigen/bench/BenchSparseUtil.h	/^void eiToDense(const EigenSparseMatrix& src, DenseMatrix& dst)$/;"	f
eiToGmm	tools/eigen/bench/BenchSparseUtil.h	/^void eiToGmm(const EigenSparseMatrix& src, GmmSparse& dst)$/;"	f
eiToGmm	tools/eigen/bench/BenchUtil.h	/^void eiToGmm(const EigenMatrixType& src, GmmMatrixType& dst)$/;"	f
eiToGsl	tools/eigen/bench/BenchUtil.h	/^void eiToGsl(const EigenMatrixType& src, gsl_matrix** dst)$/;"	f
eiToMtl	tools/eigen/bench/BenchSparseUtil.h	/^void eiToMtl(const EigenSparseMatrix& src, MtlSparse& dst)$/;"	f
eiToUblas	tools/eigen/bench/BenchSparseUtil.h	/^void eiToUblas(const EigenSparseMatrix& src, UBlasSparse& dst)$/;"	f
eiToUblas	tools/eigen/bench/BenchUtil.h	/^void eiToUblas(const EigenMatrixType& src, UblasMatrixType& dst)$/;"	f
eiToUblasVec	tools/eigen/bench/BenchSparseUtil.h	/^void eiToUblasVec(const EigenType& src, UblasType& dst)$/;"	f
eiToUblasVec	tools/eigen/bench/BenchUtil.h	/^void eiToUblasVec(const EigenType& src, UblasType& dst)$/;"	f
ei_declare_aligned_stack_constructed_variable	tools/eigen/Eigen/src/Core/util/Memory.h	711;"	d
ei_test_init_cuda	tools/eigen/test/cuda_common.h	/^void ei_test_init_cuda()$/;"	f
eigen2_interface	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^class eigen2_interface$/;"	c
eigen2support	tools/eigen/test/eigen2support.cpp	/^template<typename MatrixType> void eigen2support(const MatrixType& m)$/;"	f
eigen33	tools/eigen/bench/eig33.cpp	/^void eigen33(const Matrix& mat, Matrix& evecs, Vector& evals)$/;"	f
eigen3_interface	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^class eigen3_interface$/;"	c
eigen_assert	tools/eigen/Eigen/src/Core/util/Macros.h	490;"	d
eigen_assert	tools/eigen/test/main.h	176;"	d
eigen_assert_exception	tools/eigen/test/main.h	/^      eigen_assert_exception(void) {}$/;"	f	struct:Eigen::eigen_assert_exception
eigen_assert_exception	tools/eigen/test/main.h	/^    struct eigen_assert_exception$/;"	s	namespace:Eigen
eigen_assert_list	tools/eigen/test/main.h	/^      static std::vector<std::string> eigen_assert_list;$/;"	m	namespace:Eigen
eigen_block_size_k	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^int eigen_block_size_k, eigen_block_size_m, eigen_block_size_n;$/;"	v
eigen_block_size_m	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^int eigen_block_size_k, eigen_block_size_m, eigen_block_size_n;$/;"	v
eigen_block_size_n	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^int eigen_block_size_k, eigen_block_size_m, eigen_block_size_n;$/;"	v
eigen_internal_assert	tools/eigen/Eigen/src/Core/util/Macros.h	494;"	d
eigen_packet_wrapper	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper() {}$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
eigen_packet_wrapper	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper(const T &v) : m_val(v) {}$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
eigen_packet_wrapper	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct eigen_packet_wrapper$/;"	s	namespace:Eigen::internal
eigen_pastix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, double *vals, int *perm, int * invp, double *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, float *vals, int *perm, int * invp, float *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<double> *vals, int *perm, int * invp, std::complex<double> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<float> *vals, int *perm, int * invp, std::complex<float> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_plain_assert	tools/eigen/Eigen/src/Core/util/Macros.h	452;"	d
eigen_plain_assert	tools/eigen/Eigen/src/Core/util/Macros.h	460;"	d
eigen_to_c	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^inline C_Map_MatrixXd* eigen_to_c(Map<MatrixXd>& ref)$/;"	f
eigen_to_c	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^inline C_MatrixXd* eigen_to_c(MatrixXd& ref)$/;"	f
eigen_to_c	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^inline const C_Map_MatrixXd* eigen_to_c(const Map<MatrixXd>& ref)$/;"	f
eigen_to_c	tools/eigen/demos/mix_eigen_and_c/binary_library.cpp	/^inline const C_MatrixXd* eigen_to_c(const MatrixXd& ref)$/;"	f
eigen_unaligned_array_assert_workaround_gcc47	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALWAYS_INLINE PtrType eigen_unaligned_array_assert_workaround_gcc47(PtrType array) { return array; }$/;"	f	namespace:Eigen::internal
eigen_use_specific_block_size	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^bool eigen_use_specific_block_size;$/;"	v
eigensolver	tools/eigen/test/eigensolver_complex.cpp	/^template<typename MatrixType> void eigensolver(const MatrixType& m)$/;"	f
eigensolver	tools/eigen/test/eigensolver_generic.cpp	/^template<typename MatrixType> void eigensolver(const MatrixType& m)$/;"	f
eigensolver_verify_assert	tools/eigen/test/eigensolver_complex.cpp	/^template<typename MatrixType> void eigensolver_verify_assert(const MatrixType& m)$/;"	f
eigensolver_verify_assert	tools/eigen/test/eigensolver_generic.cpp	/^template<typename MatrixType> void eigensolver_verify_assert(const MatrixType& m)$/;"	f
eigenvalues	tools/RedSVD.hh	/^		ScalarVector eigenvalues() const$/;"	f	class:RedSVD::RedSymEigen
eigenvalues	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvalues	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::EigenSolver
eigenvalues	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    EigenvalueType eigenvalues() const$/;"	f	class:Eigen::GeneralizedEigenSolver
eigenvalues	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::eigenvalues() const$/;"	f	class:Eigen::MatrixBase
eigenvalues	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::eigenvalues() const$/;"	f	class:Eigen::SelfAdjointView
eigenvalues	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const RealVectorType& eigenvalues() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
eigenvalues	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  const Matrix<Scalar, Dynamic, 1>& eigenvalues() const$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
eigenvalues_selector	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector$/;"	s	namespace:Eigen::internal
eigenvalues_selector	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector<Derived, false>$/;"	s	namespace:Eigen::internal
eigenvectors	tools/RedSVD.hh	/^		DenseMatrix eigenvectors() const$/;"	f	class:RedSVD::RedSymEigen
eigenvectors	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvectorType& eigenvectors() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvectors	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^typename EigenSolver<MatrixType>::EigenvectorsType EigenSolver<MatrixType>::eigenvectors() const$/;"	f	class:Eigen::EigenSolver
eigenvectors	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const EigenvectorsType& eigenvectors() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
eigenvectors	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  const Matrix<Scalar, Dynamic, Dynamic>& eigenvectors() const$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
eint	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal eint    (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(eint   );    }$/;"	f	namespace:mpfr
eivals	tools/eigen/doc/snippets/MatrixBase_eigenvalues.cpp	/^VectorXcd eivals = ones.eigenvalues();$/;"	v
eivals	tools/eigen/doc/snippets/SelfAdjointView_eigenvalues.cpp	/^VectorXd eivals = ones.selfadjointView<Lower>().eigenvalues();$/;"	v
elapsed	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   double elapsed() {$/;"	f	class:Portable_Timer
elapsed	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  double elapsed()$/;"	f	class:Portable_Timer
elevations	tools/eigen/doc/snippets/LLT_solve.cpp	/^VectorXf elevations = 2*samples.col(0) + 3*samples.col(1) + VectorXf::Random(12)*0.1;$/;"	v
elseExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const ElseXprType& elseExpression() const { return m_else; }$/;"	f	class:Eigen::TensorSelectOp
elseMatrix	tools/eigen/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ElseMatrixType& elseMatrix() const$/;"	f	class:Eigen::Select
emptyIdxLU	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^enum {emptyIdxLU = -1};$/;"	e	enum:Eigen::internal::__anon179
empty_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  std::condition_variable empty_;                   \/\/ Signaled on pending_.empty()$/;"	m	class:Eigen::ThreadPool
empty_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct empty_list { static const std::size_t count = 0; };$/;"	s	namespace:Eigen::internal
enable_if	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct enable_if<true,T>$/;"	s	namespace:Eigen::internal
endFill	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void endFill() {}$/;"	f	class:Eigen::SparseVector
endFill	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED void endFill() {}$/;"	f	class:Eigen::DynamicSparseMatrix
endl	tools/eigen/doc/snippets/BiCGSTAB_simple.cpp	/^  std::cout << "#iterations:     " << solver.iterations() << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/BiCGSTAB_simple.cpp	/^  std::cout << "estimated error: " << solver.error()      << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/ColPivHouseholderQR_solve.cpp	/^cout << "Here is a solution x to the equation mx=y:" << endl << x << endl;$/;"	v
endl	tools/eigen/doc/snippets/ColPivHouseholderQR_solve.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/ColPivHouseholderQR_solve.cpp	/^cout << "Here is the matrix y:" << endl << y << endl;$/;"	v
endl	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^cout << "... and A * v = " << endl << A * v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^cout << "Consider the first eigenvalue, lambda = " << lambda << endl;$/;"	v
endl	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^cout << "Here is a random 4x4 matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^cout << "If v is the corresponding eigenvector, then lambda * v = " << endl << lambda * v << endl;$/;"	v
endl	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^cout << "The matrix of eigenvectors, V, is:" << endl << ces.eigenvectors() << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/ComplexSchur_matrixT.cpp	/^cout << "Here is a random 4x4 matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/ComplexSchur_matrixU.cpp	/^cout << "Here is a random 4x4 matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_arg.cpp	/^cout << v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_boolean_not.cpp	/^cout << v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_ceil.cpp	/^cout << v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_floor.cpp	/^cout << v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_isFinite.cpp	/^cout << v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_isInf.cpp	/^cout << v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_isNaN.cpp	/^cout << v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_minus_equal.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_plus.cpp	/^cout << v+5 << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_plus_equal.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_product.cpp	/^cout << "a:\\n" << a << "\\nb:\\n" << b << "\\nc:\\n" << c << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_quotient.cpp	/^cout << v\/w << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_round.cpp	/^cout << v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_slash_equal.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/Cwise_times_equal.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/DenseBase_setLinSpaced.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/DirectionWise_hnormalized.cpp	/^cout << "(P*M).colwise().hnormalized():" << endl << (P*M).colwise().hnormalized() << endl << endl;/;"	v
endl	tools/eigen/doc/snippets/DirectionWise_hnormalized.cpp	/^cout << "M.colwise().hnormalized():" << endl << M.colwise().hnormalized() << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/DirectionWise_hnormalized.cpp	/^cout << "P*M:" << endl << P*M << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/DirectionWise_hnormalized.cpp	/^cout << "The matrix M is:" << endl << M << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/DirectionWise_replicate.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/DirectionWise_replicate.cpp	/^cout << "m.colwise().replicate<3>() = ..." << endl;$/;"	v
endl	tools/eigen/doc/snippets/DirectionWise_replicate_int.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/DirectionWise_replicate_int.cpp	/^cout << "v.rowwise().replicate(5) = ..." << endl;$/;"	v
endl	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^cout << "... and A * v = " << endl << A.cast<complex<double> >() * v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^cout << "Consider the first eigenvalue, lambda = " << lambda << endl;$/;"	v
endl	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^cout << "Here is a random 6x6 matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^cout << "If v is the corresponding eigenvector, then lambda * v = " << endl << lambda * v << endl;$/;"	v
endl	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^cout << "The matrix of eigenvectors, V, is:" << endl << es.eigenvectors() << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/EigenSolver_pseudoEigenvectors.cpp	/^cout << "Here is a random 6x6 matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/EigenSolver_pseudoEigenvectors.cpp	/^cout << "The pseudo-eigenvalue matrix D is:" << endl << D << endl;$/;"	v
endl	tools/eigen/doc/snippets/EigenSolver_pseudoEigenvectors.cpp	/^cout << "The pseudo-eigenvector matrix V is:" << endl << V << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivHouseholderQR_solve.cpp	/^cout << "Here is a solution x to the equation mx=y:" << endl << x << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivHouseholderQR_solve.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivHouseholderQR_solve.cpp	/^cout << "Here is the matrix y:" << endl << y << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivLU_image.cpp	/^     << "columns are linearly dependent." << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivLU_image.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivLU_kernel.cpp	/^     << endl << ker << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivLU_kernel.cpp	/^     << endl << m*ker << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivLU_kernel.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivLU_solve.cpp	/^  cout << "The equation mx=y does not have any solution." << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivLU_solve.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/FullPivLU_solve.cpp	/^cout << "Here is the matrix y:" << endl << y << endl;$/;"	v
endl	tools/eigen/doc/snippets/HessenbergDecomposition_matrixH.cpp	/^cout << "Here is a random 4x4 matrix:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/HessenbergDecomposition_matrixH.cpp	/^cout << "The Hessenberg matrix H is:" << endl << H << endl;$/;"	v
endl	tools/eigen/doc/snippets/HessenbergDecomposition_matrixH.cpp	/^cout << "The orthogonal matrix Q is:" << endl << Q << endl;$/;"	v
endl	tools/eigen/doc/snippets/HessenbergDecomposition_packedMatrix.cpp	/^cout << "Here is a random 4x4 matrix:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/HessenbergDecomposition_packedMatrix.cpp	/^cout << "The packed matrix M is:" << endl << pm << endl;$/;"	v
endl	tools/eigen/doc/snippets/HessenbergDecomposition_packedMatrix.cpp	/^cout << "The vector of Householder coefficients is:" << endl << hc << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderQR_solve.cpp	/^cout << "Here is a solution x to the equation mx=y:" << endl << x << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderQR_solve.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderQR_solve.cpp	/^cout << "Here is the matrix y:" << endl << y << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << "If we construct a HouseholderSequence from v and h" << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << "The first Householder reflection is represented by H_0 = " << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << "The matrix v is:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << "The second Householder reflection is represented by H_1 = " << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << "The third Householder reflection is represented by H_2 = " << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << "Their product is H_0 H_1 H_2 = " << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << "and convert it to a matrix, we get:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << H0 * H1 * H2 << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << H0 << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << H1 << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << H2 << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << hhSeqAsMatrix << endl;$/;"	v
endl	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/JacobiSVD_basic.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/JacobiSVD_basic.cpp	/^cout << "Now consider this rhs vector:" << endl << rhs << endl;$/;"	v
endl	tools/eigen/doc/snippets/Jacobi_makeGivens.cpp	/^cout << "Here is the vector J' * v:" << endl << v << endl;/;"	v
endl	tools/eigen/doc/snippets/Jacobi_makeGivens.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/Jacobi_makeJacobi.cpp	/^cout << "Here is the matrix J' * m * J:" << endl << m << endl;/;"	v
endl	tools/eigen/doc/snippets/Jacobi_makeJacobi.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/LLT_example.cpp	/^cout << "The Cholesky factor L is" << endl << L << endl;$/;"	v
endl	tools/eigen/doc/snippets/LLT_example.cpp	/^cout << "The matrix A is" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/LLT_example.cpp	/^cout << "This should equal the matrix A" << endl;$/;"	v
endl	tools/eigen/doc/snippets/LLT_example.cpp	/^cout << "To check this, let us compute L * L.transpose()" << endl;$/;"	v
endl	tools/eigen/doc/snippets/LLT_solve.cpp	/^cout << xy << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_adjoint.cpp	/^cout << "Here is the 2x2 complex matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_applyOnTheLeft.cpp	/^cout << "After applyOnTheLeft, A = " << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_applyOnTheLeft.cpp	/^cout << "At start, A = " << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_applyOnTheRight.cpp	/^cout << "After A *= B, A = " << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_applyOnTheRight.cpp	/^cout << "After applyOnTheRight, A = " << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_applyOnTheRight.cpp	/^cout << "At start, A = " << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_array.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_block_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_block_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_block_int_int_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_block_int_int_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomLeftCorner_int_int.cpp	/^cout << "Here is m.bottomLeftCorner(2, 2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomLeftCorner_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomLeftCorner_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomRightCorner_int_int.cpp	/^cout << "Here is m.bottomRightCorner(2, 2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomRightCorner_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomRightCorner_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomRows_int.cpp	/^cout << "Here is a.bottomRows(2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomRows_int.cpp	/^cout << "Here is the array a:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_bottomRows_int.cpp	/^cout << "Now the array a is:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_col.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_colwise.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_computeInverseAndDetWithCheck.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_computeInverseAndDetWithCheck.cpp	/^cout << "Its determinant is " << determinant << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_computeInverseWithCheck.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_cwiseEqual.cpp	/^cout << "Comparing m with identity matrix:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_cwiseEqual.cpp	/^cout << "Number of coefficients that are equal: " << count << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_cwiseNotEqual.cpp	/^cout << "Comparing m with identity matrix:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_cwiseNotEqual.cpp	/^cout << "Number of coefficients that are not equal: " << count << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_cwiseProduct.cpp	/^cout << "a:\\n" << a << "\\nb:\\n" << b << "\\nc:\\n" << c << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_diagonal.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_diagonal_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_diagonal_template_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_eigenvalues.cpp	/^cout << "The eigenvalues of the 3x3 matrix of ones are:" << endl << eivals << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_end_int.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_end_int.cpp	/^cout << "Now the vector v is:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_eval.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_eval.cpp	/^cout << "If we do m.col(1) = m.row(0), then m becomes:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_eval.cpp	/^cout << "Now let us instead do m.col(1) = m.row(0).eval(). Then m becomes" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_eval.cpp	/^cout << "Now we want to copy a column into a row." << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_eval.cpp	/^cout << m << endl << "which is right." << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_eval.cpp	/^cout << m << endl << "which is wrong!" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_fixedBlock_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_fixedBlock_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_inverse.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_isDiagonal.cpp	/^cout << "Here's the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_isIdentity.cpp	/^cout << "Here's the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_isOnes.cpp	/^cout << "Here's the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_isOrthogonal.cpp	/^cout << "Here's the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_isOrthogonal.cpp	/^cout << "Here's the vector w:" << endl << w << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_isUnitary.cpp	/^cout << "Here's the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_isZero.cpp	/^cout << "Here's the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_leftCols_int.cpp	/^cout << "Here is a.leftCols(2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_leftCols_int.cpp	/^cout << "Here is the array a:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_leftCols_int.cpp	/^cout << "Now the array a is:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_noalias.cpp	/^cout << c << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_prod.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_replicate.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_replicate.cpp	/^cout << "m.replicate<3,2>() = ..." << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_replicate_int_int.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_replicate_int_int.cpp	/^cout << "v.replicate(2,5) = ..." << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_reverse.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_reverse.cpp	/^cout << "Let us overwrite this coefficient with the value 4." << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_reverse.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_rightCols_int.cpp	/^cout << "Here is a.rightCols(2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_rightCols_int.cpp	/^cout << "Here is the array a:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_rightCols_int.cpp	/^cout << "Now the array a is:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_row.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_rowwise.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_segment_int_int.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_segment_int_int.cpp	/^cout << "Now the vector v is:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_select.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_set.cpp	/^cout << m1 << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_set.cpp	/^cout << m2 << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_set.cpp	/^cout << m2 << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_setIdentity.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_setOnes.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_setRandom.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_setZero.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_start_int.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_start_int.cpp	/^cout << "Now the vector v is:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_bottomRows.cpp	/^cout << "Here is a.bottomRows<2>():" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_bottomRows.cpp	/^cout << "Here is the array a:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_bottomRows.cpp	/^cout << "Now the array a is:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_end.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_end.cpp	/^cout << "Now the vector v is:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_block_int_int_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_block_int_int_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner.cpp	/^cout << "Here is m.bottomLeftCorner<2,2>():" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner_int_int.cpp	/^cout << "Here is m.bottomLeftCorner<2,Dynamic>(2,2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomRightCorner.cpp	/^cout << "Here is m.bottomRightCorner<2,2>():" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomRightCorner.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomRightCorner.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomRightCorner_int_int.cpp	/^cout << "Here is m.bottomRightCorner<2,Dynamic>(2,2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomRightCorner_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomRightCorner_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topLeftCorner.cpp	/^cout << "Here is m.topLeftCorner<2,2>():" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topLeftCorner.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topLeftCorner.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topLeftCorner_int_int.cpp	/^cout << "Here is m.topLeftCorner<2,Dynamic>(2,2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topLeftCorner_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topLeftCorner_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topRightCorner.cpp	/^cout << "Here is m.topRightCorner<2,2>():" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topRightCorner.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topRightCorner.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topRightCorner_int_int.cpp	/^cout << "Here is m.topRightCorner<2,Dynamic>(2,2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topRightCorner_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_int_topRightCorner_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_leftCols.cpp	/^cout << "Here is a.leftCols<2>():" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_leftCols.cpp	/^cout << "Here is the array a:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_leftCols.cpp	/^cout << "Now the array a is:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_rightCols.cpp	/^cout << "Here is a.rightCols<2>():" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_rightCols.cpp	/^cout << "Here is the array a:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_rightCols.cpp	/^cout << "Now the array a is:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_segment.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_segment.cpp	/^cout << "Now the vector v is:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_start.cpp	/^cout << "Here is the vector v:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_start.cpp	/^cout << "Now the vector v is:" << endl << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_topRows.cpp	/^cout << "Here is a.topRows<2>():" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_topRows.cpp	/^cout << "Here is the array a:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_template_int_topRows.cpp	/^cout << "Now the array a is:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topLeftCorner_int_int.cpp	/^cout << "Here is m.topLeftCorner(2, 2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topLeftCorner_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topLeftCorner_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topRightCorner_int_int.cpp	/^cout << "Here is m.topRightCorner(2, 2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topRightCorner_int_int.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topRightCorner_int_int.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topRows_int.cpp	/^cout << "Here is a.topRows(2):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topRows_int.cpp	/^cout << "Here is the array a:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_topRows_int.cpp	/^cout << "Now the array a is:" << endl << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_transpose.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_transpose.cpp	/^cout << "Let us overwrite this coefficient with the value 0." << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_transpose.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/MatrixBase_triangularView.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_resize_int_int.cpp	/^cout << "here's the 2x3 matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_resize_int_int.cpp	/^cout << "here's the 3x2 matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_resize_int_int.cpp	/^cout << "let's resize m to 3x2. This is a conservative resizing because 2*3==3*2." << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_resize_int_int.cpp	/^cout << "now let's resize m to size 2x2. This is NOT a conservative resizing, so it becomes uninitialized:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_resize_int_int.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setConstant_int.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setConstant_int_int.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setIdentity_int_int.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setOnes_int.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setOnes_int_int.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setRandom_int.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setRandom_int_int.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setZero_int.cpp	/^cout << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/Matrix_setZero_int_int.cpp	/^cout << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialPivLU_solve.cpp	/^cout << "Here is the (unique) solution X to the equation AX=B:" << endl << X << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialPivLU_solve.cpp	/^cout << "Here is the invertible matrix A:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialPivLU_solve.cpp	/^cout << "Here is the matrix B:" << endl << B << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_count.cpp	/^cout << "Here is the count of elements larger or equal than 0.5 of each row:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_count.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_count.cpp	/^cout << res << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_maxCoeff.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_minCoeff.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_norm.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_prod.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_squaredNorm.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/PartialRedux_sum.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/RealSchur_RealSchur_MatrixType.cpp	/^cout << "Here is a random 6x6 matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/RealSchur_RealSchur_MatrixType.cpp	/^cout << "The quasi-triangular matrix T is:" << endl << schur.matrixT() << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^cout << "... and A * v = " << endl << A * v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^cout << "Consider the first eigenvalue, lambda = " << lambda << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^cout << "Here is a random symmetric 5x5 matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^cout << "If v is the corresponding eigenvector, then lambda * v = " << endl << lambda * v << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^cout << "The matrix of eigenvectors, V, is:" << endl << es.eigenvectors() << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^cout << "... and lambda * B * v = " << endl << lambda * B * v << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^cout << "Consider the first eigenvalue, lambda = " << lambda << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^cout << "Here is a random symmetric matrix, A:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^cout << "If v is the corresponding eigenvector, then A * v = " << endl << A * v << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^cout << "The matrix of eigenvectors, V, is:" << endl << es.eigenvectors() << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^cout << "and a random postive-definite matrix, B:" << endl << B << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorInverseSqrt.cpp	/^cout << "Here is a random positive-definite matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorInverseSqrt.cpp	/^cout << "The inverse square root of A is: " << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorInverseSqrt.cpp	/^cout << "We can also compute it with operatorSqrt() and inverse(). That yields: " << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorSqrt.cpp	/^cout << "Here is a random positive-definite matrix, A:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorSqrt.cpp	/^cout << "If we square this, we get: " << endl << sqrtA*sqrtA << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorSqrt.cpp	/^cout << "The square root of A is: " << endl << sqrtA << endl;$/;"	v
endl	tools/eigen/doc/snippets/SelfAdjointView_eigenvalues.cpp	/^cout << "The eigenvalues of the 3x3 matrix of ones are:" << endl << eivals << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_block.cpp	/^cout << "After the assignment, mat = \\n" << mat << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_block.cpp	/^cout << "Here is the matrix mat:\\n" << mat << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_block_correct.cpp	/^cout << "After the assignment, mat = \\n" << mat << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_block_correct.cpp	/^cout << "Here is the matrix mat:\\n" << mat << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_cwise.cpp	/^cout << "After 'mat = 2 * mat', mat = \\n" << mat << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_cwise.cpp	/^cout << "After squaring, it becomes\\n" << arr << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_cwise.cpp	/^cout << "After the subtraction, it becomes\\n" << mat << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_cwise.cpp	/^cout << "Doing everything at once yields\\n" << mat << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_cwise.cpp	/^cout << "Here is the matrix mat:\\n" << mat << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicAliasing_mult2.cpp	/^cout << matB << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicStorageOrders_example.cpp	/^cout << "In memory (column-major):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicStorageOrders_example.cpp	/^cout << "In memory (row-major):" << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicStorageOrders_example.cpp	/^cout << "The matrix A:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicStorageOrders_example.cpp	/^cout << Acolmajor << endl << endl; $/;"	v
endl	tools/eigen/doc/snippets/TopicStorageOrders_example.cpp	/^cout << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/TopicStorageOrders_example.cpp	/^cout << endl;$/;"	v
endl	tools/eigen/doc/snippets/Triangular_solve.cpp	/^cout << "Here is the matrix m:\\n" << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Triangular_solve.cpp	/^cout << "Here is the matrix n:\\n" << n << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp	/^cout << "Here is a random symmetric 5x5 matrix:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp	/^cout << "The orthogonal matrix Q is:" << endl << Q << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp	/^cout << "The tridiagonal matrix T is:" << endl << T << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_compute.cpp	/^cout << "The matrix T in the tridiagonal decomposition of 2A is: " << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_compute.cpp	/^cout << "The matrix T in the tridiagonal decomposition of A is: " << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_decomposeInPlace.cpp	/^cout << "Here is a random symmetric 5x5 matrix:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_decomposeInPlace.cpp	/^cout << "The diagonal of the tridiagonal matrix T is:" << endl << diag << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_decomposeInPlace.cpp	/^cout << "The orthogonal matrix Q is:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_decomposeInPlace.cpp	/^cout << "The subdiagonal of the tridiagonal matrix T is:" << endl << subdiag << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^cout << "Here is a random self-adjoint 4x4 matrix:" << endl << A << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^cout << "The diagonal is:" << endl << diag << endl; $/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^cout << "The subdiagonal is:" << endl << subdiag << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^cout << "The tridiagonal matrix T is:" << endl << T << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^cout << "We can also extract the diagonals of T directly ..." << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_householderCoefficients.cpp	/^cout << "Here is a random symmetric 4x4 matrix:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_householderCoefficients.cpp	/^cout << "The vector of Householder coefficients is:" << endl << hc << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_packedMatrix.cpp	/^cout << "Here is a random symmetric 4x4 matrix:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tridiagonalization_packedMatrix.cpp	/^cout << "The packed matrix M is:" << endl << pm << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Block.cpp	/^std::cout << matB << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_CommaTemporary.cpp	/^std::cout << mat << std::endl << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_CommaTemporary.cpp	/^std::cout << mat << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Join.cpp	/^std::cout << "joined = " << joined << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Join.cpp	/^std::cout << "vec1 = " << vec1 << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Join.cpp	/^std::cout << "vec2 = " << vec2 << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_LinSpaced.cpp	/^std::cout << table << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_ThreeWays.cpp	/^std::cout << mat1 << std::endl << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_ThreeWays.cpp	/^std::cout << mat2 << std::endl << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_ThreeWays.cpp	/^std::cout << mat3 << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/Tutorial_Map_using.cpp	/^cout << "Updated m2: " << m2 << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_Map_using.cpp	/^cout << "m1: " << m1 << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_Map_using.cpp	/^cout << "m2: " << m2 << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_matrix_inverse.cpp	/^cout << "The solution is:" << endl << x << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_multiple_rhs.cpp	/^cout << "The solution with right-hand side (1,1,1) is:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_multiple_rhs.cpp	/^cout << "The solution with right-hand side (3,3,4) is:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_reuse_decomposition.cpp	/^cout << "The solution with right-hand side (1,1,1) is:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_reuse_decomposition.cpp	/^cout << "The solution with right-hand side (3,3,4) is:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_reuse_decomposition.cpp	/^cout << x << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_singular.cpp	/^cout << "Here is the matrix A:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_singular.cpp	/^cout << "Here is the vector b:" << endl << b << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_singular.cpp	/^cout << "The solution is:" << endl << x << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_triangular.cpp	/^cout << "Here is the matrix A:" << endl << A << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_triangular.cpp	/^cout << "Here is the vector b:" << endl << b << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_triangular.cpp	/^cout << "The solution is:" << endl << x << endl;$/;"	v
endl	tools/eigen/doc/snippets/Tutorial_solve_triangular_inplace.cpp	/^cout << "The solution is:" << endl << b << endl;$/;"	v
endl	tools/eigen/doc/snippets/VectorwiseOp_homogeneous.cpp	/^cout << "M.colwise().homogeneous():" << endl << M.colwise().homogeneous() << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/VectorwiseOp_homogeneous.cpp	/^cout << "P * M.colwise().homogeneous().hnormalized(): " << endl << (P * M.colwise().homogeneous()).colwise().hnormalized() << endl << endl;/;"	v
endl	tools/eigen/doc/snippets/VectorwiseOp_homogeneous.cpp	/^cout << "P * M.colwise().homogeneous():" << endl << P * M.colwise().homogeneous() << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/VectorwiseOp_homogeneous.cpp	/^cout << "The matrix M is:" << endl << M << endl << endl;$/;"	v
endl	tools/eigen/doc/snippets/Vectorwise_reverse.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/Vectorwise_reverse.cpp	/^cout << "Let us overwrite this coefficient with the value 4." << endl;$/;"	v
endl	tools/eigen/doc/snippets/Vectorwise_reverse.cpp	/^cout << "Now the matrix m is:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^cout << "Here is the L part:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^cout << "Here is the U part:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^cout << "Here is the matrix m:" << endl << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^cout << "Let us now reconstruct the original matrix m:" << endl;$/;"	v
endl	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^cout << l << endl;$/;"	v
endl	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^cout << u << endl;$/;"	v
endl	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^       << ") is at position " << i << endl;$/;"	v
endl	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^  cout << "Here is the matrix m:\\n" << m << endl;$/;"	v
endl	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^  cout << "Here is the vector v: " << v << endl;$/;"	v
endl	tools/eigen/doc/snippets/tut_arithmetic_transpose_aliasing.cpp	/^cout << "Here is the matrix a:\\n" << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/tut_arithmetic_transpose_aliasing.cpp	/^cout << "and the result of the aliasing effect:\\n" << a << endl;/;"	v
endl	tools/eigen/doc/snippets/tut_arithmetic_transpose_conjugate.cpp	/^cout << "Here is the matrix a\\n" << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/tut_arithmetic_transpose_inplace.cpp	/^cout << "Here is the initial matrix a:\\n" << a << endl;$/;"	v
endl	tools/eigen/doc/snippets/tut_arithmetic_transpose_inplace.cpp	/^cout << "and after being transposed:\\n" << a << endl;/;"	v
endl	tools/eigen/doc/snippets/tut_matrix_assignment_resizing.cpp	/^std::cout << "a is now of size " << a.rows() << "x" << a.cols() << std::endl;$/;"	m	class:std	file:
endl	tools/eigen/doc/snippets/tut_matrix_assignment_resizing.cpp	/^std::cout << "a is of size " << a.rows() << "x" << a.cols() << std::endl;$/;"	m	class:std	file:
endsWith	tools/eigen/bench/btl/generic_bench/btl.hh	/^    bool endsWith(const BtlString& str) const$/;"	f	class:BtlString
enqueue	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE Notification* enqueue(Function&& f, Args&&... args) const {$/;"	f	struct:Eigen::ThreadPoolDevice
enqueueNoNotification	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE void enqueueNoNotification(Function&& f, Args&&... args) const {$/;"	f	struct:Eigen::ThreadPoolDevice
entries	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  vector<inputfile_entry_t> entries;$/;"	m	struct:inputfile_t	file:
entries	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  vector<preprocessed_inputfile_entry_t> entries;$/;"	m	struct:preprocessed_inputfile_t	file:
enumerate_group_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct enumerate_group_elements$/;"	s	namespace:Eigen::internal::group_theory
enumerate_group_elements_noid	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct enumerate_group_elements_noid$/;"	s	namespace:Eigen::internal::group_theory
enumerate_group_elements_noid	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct enumerate_group_elements_noid<Multiply, Equality, id, type_list<>, initial_global_flags>$/;"	s	namespace:Eigen::internal::group_theory
epsfcn	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Scalar epsfcn;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
epsfcn	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar epsfcn;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
epsfcn	tools/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    Scalar epsfcn;$/;"	m	class:Eigen::NumericalDiff
epsilon	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static T epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static double epsilon() { return __DBL_EPSILON__; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static float epsilon() { return __FLT_EPSILON__; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static int epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static long long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    RealScalar epsilon;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
epsilon	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  RealScalar epsilon() const { return m_epsilon; }$/;"	f	class:Eigen::SparseView
epsilon	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar epsilon() const {return m_epsfcn; }$/;"	f	class:Eigen::LevenbergMarquardt
epsilon	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static mpfr::mpreal epsilon(const mpfr::mpreal& x) {  return mpfr::machine_epsilon(x);  }$/;"	f	class:std::numeric_limits
epsilon	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static mpfr::mpreal epsilon(mp_prec_t precision = mpfr::mpreal::get_default_prec()) {  return  mpfr::machine_epsilon(precision); }$/;"	f	class:std::numeric_limits
equal_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct equal_op         { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a == b)  { return a == b;  } };$/;"	s	namespace:Eigen::internal
equal_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct equal_op {$/;"	s	namespace:Eigen::internal
equalsIdentity	tools/eigen/test/nullary.cpp	/^bool equalsIdentity(const MatrixType& A)$/;"	f
erf	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal erf     (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(erf    );    }$/;"	f	namespace:mpfr
erfc	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal erfc    (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(erfc   );    }$/;"	f	namespace:mpfr
error	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar error() const$/;"	f	class:Eigen::IterativeSolverBase
es	tools/eigen/doc/snippets/EigenSolver_compute.cpp	/^EigenSolver<MatrixXf> es;$/;"	v
es	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver.cpp	/^SelfAdjointEigenSolver<Matrix4f> es;$/;"	v
essentialVector	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    const EssentialVectorType essentialVector(Index k) const$/;"	f	class:Eigen::HouseholderSequence
essentialVector	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^  static inline const EssentialVectorType essentialVector(const HouseholderSequenceType& h, Index k)$/;"	f	struct:Eigen::internal::hseq_side_dependent_impl
etor_product_packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, 1, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, 1, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etree_find	tools/eigen/Eigen/src/SparseCore/SparseColEtree.h	/^Index etree_find (Index i, IndexVector& pp)$/;"	f	namespace:Eigen::internal
eulerAngles	tools/eigen/Eigen/src/Geometry/EulerAngles.h	/^MatrixBase<Derived>::eulerAngles(Index a0, Index a1, Index a2) const$/;"	f	class:Eigen::MatrixBase
eulerangles	tools/eigen/test/geo_eulerangles.cpp	/^template<typename Scalar> void eulerangles()$/;"	f
eval	tools/eigen/Eigen/src/Core/DenseBase.h	/^    EIGEN_STRONG_INLINE EvalReturnType eval() const$/;"	f	class:Eigen::DenseBase
eval	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    PlainPermutationType eval() const { return *this; }$/;"	f	class:Eigen::Transpose
eval	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^struct eval<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>, Dense>$/;"	s	struct:Eigen::internal::promote_index_type
eval	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^struct eval<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>, Dense>$/;"	s	struct:Eigen::internal::promote_index_type
eval	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct eval<T,Dense>$/;"	s	struct:Eigen::internal::promote_index_type
eval	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct eval<T,DiagonalShape>$/;"	s	struct:Eigen::internal::promote_index_type
eval	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const typename internal::eval<Derived>::type eval() const$/;"	f	class:Eigen::SparseMatrixBase
eval	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct eval<T,Sparse>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^struct eval<TensorIndexTupleOp<XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^struct eval<TensorTupleReducerOp<ReduceOp, Dims, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^struct eval<TensorAssignOp<LhsXprType, RhsXprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    const TensorForcedEvalOp<const Derived> eval() const {$/;"	f	class:Eigen::TensorBase
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^struct eval<TensorBroadcastingOp<Broadcast, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^struct eval<TensorChippingOp<DimId, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^struct eval<TensorConcatenationOp<Axis, LhsXprType, RhsXprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^struct eval<TensorContractionOp<Dimensions, LhsXprType, RhsXprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^struct eval<TensorConversionOp<TargetType, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^struct eval<TensorConvolutionOp<Dimensions, InputXprType, KernelXprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^struct eval<TensorCustomBinaryOp<CustomBinaryFunc, LhsXprType, RhsXprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^struct eval<TensorCustomUnaryOp<CustomUnaryFunc, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^struct eval<TensorEvalToOp<XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct eval<TensorCwiseBinaryOp<BinaryOp, LhsXprType, RhsXprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct eval<TensorCwiseUnaryOp<UnaryOp, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct eval<TensorSelectOp<IfXprType, ThenXprType, ElseXprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^struct eval<TensorForcedEvalOp<XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^struct eval<TensorGeneratorOp<Generator, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^struct eval<TensorImagePatchOp<Rows, Cols, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^struct eval<TensorInflationOp<Strides, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^struct eval<TensorLayoutSwapOp<XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct eval<TensorReshapingOp<NewDimensions, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct eval<TensorSlicingOp<StartIndices, Sizes, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^struct eval<TensorPaddingOp<PaddingDimensions, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^struct eval<TensorPatchOp<PatchDim, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct eval<TensorReductionOp<Op, Dims, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^struct eval<TensorReverseOp<ReverseDimensions, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^struct eval<TensorShufflingOp<Shuffle, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^struct eval<TensorStridingOp<Strides, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct eval<Tensor<_Scalar, NumIndices_, Options, IndexType_>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct eval<TensorFixedSize<Scalar_, Dimensions, Options, IndexType_>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct eval<TensorMap<PlainObjectType, Options>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct eval<TensorRef<PlainObjectType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct eval<const Tensor<_Scalar, NumIndices_, Options, IndexType_>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct eval<const TensorFixedSize<Scalar_, Dimensions, Options, IndexType_>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct eval<const TensorMap<PlainObjectType, Options>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct eval<const TensorRef<PlainObjectType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^struct eval<TensorVolumePatchOp<Planes, Rows, Cols, XprType>, Eigen::Dense>$/;"	s	namespace:Eigen::internal
eval	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    EIGEN_STRONG_INLINE const typename internal::eval<Derived, IsSkyline>::type eval() const {$/;"	f	class:Eigen::SkylineMatrixBase
eval	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^template<typename T> class eval<T,IsSkyline>$/;"	c	namespace:Eigen::internal
eval	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^  void eval(const Tensor<float, 2>& input, Output& output, const Device& device) const$/;"	f	struct:InsertZeros
eval	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^  void eval(const Tensor<float, 3>& input1, const Tensor<float, 3>& input2,$/;"	f	struct:BatchMatMul
evalGemm	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC void evalGemm(Scalar* buffer) const {$/;"	f	struct:Eigen::TensorEvaluator
evalGemm	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  void evalGemm(Scalar* buffer) const {$/;"	f	struct:Eigen::TensorEvaluator
evalGemv	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  void evalGemv(Scalar* buffer) const {$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
evalPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void evalPacket(Index i) {$/;"	f	struct:Eigen::TensorEvaluator
evalPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void evalPacket(Index i) {$/;"	f	struct:Eigen::TensorEvaluator
evalProduct	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  void evalProduct(Scalar* buffer) const {$/;"	f	struct:Eigen::TensorEvaluator
evalProduct	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  void evalProduct(Scalar* buffer) const {$/;"	f	struct:Eigen::TensorEvaluator
evalScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void evalScalar(Index i) {$/;"	f	struct:Eigen::TensorEvaluator
evalScalar	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void evalScalar(Index i) {$/;"	f	struct:Eigen::TensorEvaluator
evalSolver	tools/eigen/unsupported/test/polynomialsolver.cpp	/^void evalSolver( const POLYNOMIAL& pols )$/;"	f
evalSolverSugarFunction	tools/eigen/unsupported/test/polynomialsolver.cpp	/^void evalSolverSugarFunction( const POLYNOMIAL& pols, const ROOTS& roots, const REAL_ROOTS& real_roots )$/;"	f
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar*) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/)$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* data) {$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* data) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/)$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar*) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* data) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType* data) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType* scalar) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType* data) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType* dest) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType*) { return true; }$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType*) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar*) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType*) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType* data) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType* data) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar*) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(CoeffReturnType* data) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar*) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar*) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalSubExprsIfNeeded	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool evalSubExprsIfNeeded(Scalar* \/*data*\/) {$/;"	f	struct:Eigen::TensorEvaluator
evalTo	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline void evalTo(Dest& dst) const { dst = m_expression; }$/;"	f	class:Eigen::ArrayWrapper
evalTo	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::internal::BandMatrixBase
evalTo	tools/eigen/Eigen/src/Core/DenseBase.h	/^    inline void evalTo(Dest& ) const$/;"	f	class:Eigen::DenseBase
evalTo	tools/eigen/Eigen/src/Core/EigenBase.h	/^  inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
evalTo	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::PermutationBase
evalTo	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::Transpose
evalTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static inline void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Transpose<Rhs>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Transpose<Lhs>& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
evalTo	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::ReturnByValue
evalTo	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::triangular_solve_retval
evalTo	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^void TriangularBase<Derived>::evalTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
evalTo	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
evalTo	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
evalTo	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  static void evalTo(Dest& dst, const Homogeneous<LhsArg,Horizontal>& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Homogeneous<RhsArg,Vertical>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  static void evalTo(Dest& dst, const TransformType& lhs, const Homogeneous<RhsArg,Vertical>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
evalTo	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
evalTo	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename DestType> inline void evalTo(DestType& dst) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    void evalTo(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	tools/eigen/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval
evalTo	tools/eigen/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval
evalTo	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result, WorkVectorType& workspace) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  void evalTo(ResType& res) const$/;"	f	struct:Eigen::SPQR_QProduct
evalTo	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const RhsView& rhsView)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void evalTo(Dest& dst, const LhsView& lhsView, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  void evalTo(DesType& res) const$/;"	f	struct:Eigen::SparseQR_QProduct
evalTo	tools/eigen/Eigen/src/misc/Image.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval_base
evalTo	tools/eigen/Eigen/src/misc/Kernel.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval_base
evalTo	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC void evalTo(Scalar* buffer) const {$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
evalTo	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  void evalTo(Scalar* buffer) const {$/;"	f	struct:Eigen::TensorEvaluator
evalTo	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  void evalTo(typename XprType::Scalar* buffer) {$/;"	f	struct:Eigen::TensorEvaluator
evalTo	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC void evalTo(Scalar* data) {$/;"	f	struct:Eigen::TensorEvaluator
evalTo	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void KroneckerProduct<Lhs,Rhs>::evalTo(Dest& dst) const$/;"	f	class:Eigen::KroneckerProduct
evalTo	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void KroneckerProductSparse<Lhs,Rhs>::evalTo(Dest& dst) const$/;"	f	class:Eigen::KroneckerProductSparse
evalTo	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::MatrixExponentialReturnValue
evalTo	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    inline void evalTo(ResultType& result) const$/;"	f	class:Eigen::MatrixFunctionReturnValue
evalTo	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  inline void evalTo(ResultType& result) const$/;"	f	class:Eigen::MatrixLogarithmReturnValue
evalTo	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    inline void evalTo(ResultType& res) const$/;"	f	class:Eigen::MatrixComplexPowerReturnValue
evalTo	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    inline void evalTo(ResultType& res) const$/;"	f	class:Eigen::MatrixPowerParenthesesReturnValue
evalTo	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    inline void evalTo(ResultType& res) const$/;"	f	class:Eigen::MatrixPowerReturnValue
evalTo	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    inline void evalTo(ResultType& result) const$/;"	f	class:Eigen::MatrixSquareRootReturnValue
evalTo	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    void evalTo(MatrixBase<DenseDerived>& dst) const {$/;"	f	class:Eigen::SkylineMatrixBase
evalToLazy	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^void TriangularBase<Derived>::evalToLazy(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
evalTyped	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  void evalTyped(Scalar* buffer) const {$/;"	f	struct:Eigen::TensorEvaluator
eval_closed_spline2d	tools/eigen/unsupported/test/splines.cpp	/^void eval_closed_spline2d()$/;"	f
eval_mflops	tools/eigen/bench/btl/generic_bench/timers/STL_perf_analyzer.hh	/^  inline double eval_mflops(int size)$/;"	f	class:STL_Perf_Analyzer
eval_mflops	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	/^  inline double eval_mflops(int size)$/;"	f	class:Mixed_Perf_Analyzer
eval_mflops	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  BTL_DONT_INLINE double eval_mflops(int size)$/;"	f	class:Portable_Perf_Analyzer
eval_mflops	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  inline double eval_mflops(int size)$/;"	f	class:Portable_Perf_Analyzer
eval_mflops	tools/eigen/bench/btl/generic_bench/timers/x86_perf_analyzer.hh	/^  inline double eval_mflops(int size)$/;"	f	class:X86_Perf_Analyzer
eval_spline3d	tools/eigen/unsupported/test/splines.cpp	/^void eval_spline3d()$/;"	f
eval_spline3d_onbrks	tools/eigen/unsupported/test/splines.cpp	/^void eval_spline3d_onbrks()$/;"	f
evaluateProductBlockingSizesHeuristic	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^void evaluateProductBlockingSizesHeuristic(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
evaluate_defaults_action_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^struct evaluate_defaults_action_t : action_t$/;"	s	file:
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator()$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator(const ArgType& arg)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const PlainObjectType& m)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const T& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType expr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& block) : block_evaluator_type(block) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& diagonal)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& m)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& map)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& n)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& ref)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  explicit evaluator(const T& xpr) : evaluator<T>(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  inline EIGEN_DEVICE_FUNC  explicit evaluator(const XprType& select)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator : public unary_evaluator<T>$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Array<Scalar, Rows, Cols, Options, MaxRows, MaxCols> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Block<ArgType, BlockRows, BlockCols, InnerPanel> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<CwiseNullaryOp<NullaryOp,PlainObjectType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Diagonal<ArgType, DiagIndex> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<EvalToTemp<ArgType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Map<PlainObjectType, MapOptions, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Matrix<Scalar, Rows, Cols, Options, MaxRows, MaxCols> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<PartialReduxExpr<ArgType, MemberOp, Direction> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<PlainObjectBase<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Ref<PlainObjectType, RefOptions, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<const T>$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<CwiseUnaryOp<internal::scalar_multiple_op<Scalar>,  const Product<Lhs, Rhs, DefaultProduct>  > > $/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<Diagonal<const Product<Lhs, Rhs, DefaultProduct>, DiagIndex> > $/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<Product<Lhs, Rhs, Options> > $/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^struct evaluator<ReturnByValue<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const SolveType& solve)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/Core/Solve.h	/^struct evaluator<Solve<Decomposition,RhsType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  evaluator(const SolveType& solve)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct evaluator<SolveWithGuess<Decomposition,RhsType, GuessType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^struct evaluator<MappedSparseMatrix<_Scalar,_Options,_StorageIndex> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  evaluator() : m_matrix(0) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  explicit evaluator(const Derived &mat) : m_matrix(&mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^struct evaluator<SparseCompressedBase<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^struct evaluator<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^struct evaluator<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^  explicit evaluator(const SparseMatrixType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^struct evaluator<SparseMatrix<_Scalar,_Options,_Index> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^  explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^struct evaluator<SparseView<Product<Lhs, Rhs, Options> > > $/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  explicit evaluator(const SparseVectorType &mat) : m_matrix(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^struct evaluator<SparseVector<_Scalar,_Options,_Index> >$/;"	s	namespace:Eigen::internal
evaluator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  evaluator() : m_matrix(0) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  evaluator(const SparseMatrixType &mat) : m_matrix(&mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^struct evaluator<DynamicSparseMatrix<_Scalar,_Options,_StorageIndex> >$/;"	s	namespace:Eigen::internal
evaluator_base	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_base : public noncopyable$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Core/BandMatrix.h	/^struct evaluator_traits<BandMatrix<_Scalar,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Core/BandMatrix.h	/^struct evaluator_traits<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_traits : public evaluator_traits_base<T>$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_traits<Product<Lhs, Rhs, AliasFreeProduct> > $/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_traits<Product<Lhs, Rhs, DefaultProduct> > $/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^struct evaluator_traits<SelfAdjointView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct evaluator_traits<TriangularView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct evaluator_traits<Homogeneous<ArgType,Direction> >$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^struct evaluator_traits<HouseholderSequence<VectorsType,CoeffsType,Side> >$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct evaluator_traits<SparseSelfAdjointView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^struct evaluator_traits<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
evaluator_traits_base	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_traits_base$/;"	s	namespace:Eigen::internal
evaluator_wrapper_base	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator_wrapper_base(const ArgType& arg) : m_argImpl(arg) {}$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
evaluator_wrapper_base	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_wrapper_base$/;"	s	namespace:Eigen::internal
exclusions	tools/eigen/scripts/relicense.py	/^exclusions = set(['relicense.py'])$/;"	v
executeEval	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  void executeEval(Scalar* data) const {$/;"	f	struct:Eigen::TensorEvaluator
exiting_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  bool exiting_ = false;$/;"	m	class:Eigen::ThreadPool
exp	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^exp() const$/;"	f
exp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    exp() const {$/;"	f	class:Eigen::TensorBase
exp	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^const MatrixExponentialReturnValue<Derived> MatrixBase<Derived>::exp() const$/;"	f	class:Eigen::MatrixBase
exp	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal exp   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(exp  );    }$/;"	f	namespace:mpfr
exp10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal exp10 (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(exp10);    }$/;"	f	namespace:mpfr
exp2	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal exp2  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(exp2 );    }$/;"	f	namespace:mpfr
expand	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index  SparseLUImpl<Scalar,StorageIndex>::expand(VectorType& vec, Index& length, Index nbElts, Index keep_prev, Index& num_expansions) $/;"	f	class:Eigen::internal::SparseLUImpl
expfn	tools/eigen/unsupported/doc/examples/MatrixFunction.cpp	/^std::complex<double> expfn(std::complex<double> x, int)$/;"	f
expfn	tools/eigen/unsupported/test/matrix_exponential.cpp	/^T expfn(T x, int)$/;"	f
expm1	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal expm1   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(expm1  );    }$/;"	f	namespace:mpfr
expression	tools/eigen/Eigen/src/Core/NoAlias.h	/^    ExpressionType& expression() const$/;"	f	class:Eigen::NoAlias
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorIndexTupleOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorTupleReducerOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorBroadcastingOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorChippingOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorConversionOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  expression() const { return m_expr; }$/;"	f	class:Eigen::TensorCustomUnaryOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorEvalToOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorForcedEvalOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorGeneratorOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorImagePatchOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorInflationOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorLayoutSwapOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorReshapingOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorSlicingOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorPaddingOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorPatchOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    const XprType& expression() const { return m_expr; }$/;"	f	class:Eigen::TensorReductionOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorReverseOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorShufflingOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorStridingOp
expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    expression() const { return m_xpr; }$/;"	f	class:Eigen::TensorVolumePatchOp
extend	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
extend	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const MatrixBase<Derived>& p)$/;"	f	class:Eigen::AlignedBox
extendedTo	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    extendedTo(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
extendedToOpposite	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    extendedToOpposite(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
exteriorDistance	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline NonInteger exteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
exteriorDistance	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline NonInteger exteriorDistance(const MatrixBase<Derived>& p) const$/;"	f	class:Eigen::AlignedBox
extract	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return ExtractType(Base::extract(x.nestedExpression())); }$/;"	f	struct:Eigen::internal::blas_traits
extract	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return x; }$/;"	f	struct:Eigen::internal::blas_traits
extractData	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLUBase<MatrixType,Derived>::extractData() const$/;"	f	class:Eigen::SuperLUBase
extractData	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^void UmfPackLU<MatrixType>::extractData() const$/;"	f	class:Eigen::UmfPackLU
extractScalarFactor	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return Base::extractScalarFactor(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return conj(Base::extractScalarFactor(x.nestedExpression())); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x)$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static inline const Scalar extractScalarFactor(const XprType&) { return Scalar(1); }$/;"	f	struct:Eigen::internal::blas_traits
extract_coordinates	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  void extract_coordinates(Index index, array<Index, NumDims>& coords) const {$/;"	f	struct:Eigen::TensorEvaluator
extract_data	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename T> const typename T::Scalar* extract_data(const T& m)$/;"	f	namespace:Eigen::internal
extract_data_selector	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector {$/;"	s	namespace:Eigen::internal
extract_data_selector	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector<T,false> {$/;"	s	namespace:Eigen::internal
extract_image_patches	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    extract_image_patches(const Index patch_rows = 1, const Index patch_cols = 1,$/;"	f	class:Eigen::TensorBase
extract_image_patches	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    extract_image_patches(const Index patch_rows, const Index patch_cols,$/;"	f	class:Eigen::TensorBase
extract_kernel	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline bool extract_kernel(MatrixType& mat, Ref<VectorType> res, Ref<VectorType> representative)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
extract_patches	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    extract_patches(const PatchDims& patch_dims) const {$/;"	f	class:Eigen::TensorBase
extract_volume_patches	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    extract_volume_patches(const Index patch_planes, const Index patch_rows, const Index patch_cols,$/;"	f	class:Eigen::TensorBase
f	tools/eigen/test/unalignedassert.cpp	/^  float f; \/\/ make the struct have sizeof%16!=0 to make it a little more tricky when we allow an array of 2 such objects$/;"	m	struct:TestNew4	file:
f	tools/eigen/test/unalignedassert.cpp	/^  float f; \/\/ try the f at first -- the EIGEN_ALIGN_MAX attribute of m should make that still work$/;"	m	struct:TestNew5	file:
f	tools/eigen/test/unalignedassert.cpp	/^  float f;$/;"	m	struct:Depends	file:
f	tools/eigen/test/unalignedassert.cpp	/^  float f;$/;"	m	struct:TestNew6	file:
fabs	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fabs  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(abs  );    }$/;"	f	namespace:mpfr
fac_ui	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fac_ui (unsigned long int v, mp_prec_t prec     = mpreal::get_default_prec(),$/;"	f	namespace:mpfr
factor	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline Scalar& factor() { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factor	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline const Scalar& factor() const { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar factor() const {return m_factor; }$/;"	f	class:Eigen::LevenbergMarquardt
factor	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Scalar factor;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
factor	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar factor;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
factorize	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
factorize	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& factorize(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
factorize	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& factorize(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
factorize	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& factorize(const MatType& mat)$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
factorize	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::factorize(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
factorize	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& factorize(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
factorize	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
factorize	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
factorize	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
factorize	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::factorize(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
factorize	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::factorize(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
factorize	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
factorize	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholeskyBase
factorize	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
factorize	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
factorize	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^void SparseLU<MatrixType, OrderingType>::factorize(const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
factorize	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^void SparseQR<MatrixType,OrderingType>::factorize(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
factorize	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperILU
factorize	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperLU
factorize	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void factorize(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
factorize	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  void factorize(int nfft)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
factorize	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^void IncompleteCholesky<Scalar,_UpLo, OrderingType>::factorize(const _MatrixType& mat)$/;"	f	class:Eigen::IncompleteCholesky
factorize_impl	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void factorize_impl()$/;"	f	class:Eigen::UmfPackLU
factorize_preordered	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^void SimplicialCholeskyBase<Derived>::factorize_preordered(const CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
false_type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
fcn_chkder	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^int fcn_chkder(const VectorXd &x, VectorXd &fvec, MatrixXd &fjac, int iflag)$/;"	f
fdjac1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h	/^DenseIndex fdjac1($/;"	f	namespace:Eigen::internal
ffa	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static int ffa = A::flags;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_equality
ffa	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static int ffa = A::flags;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_multiply
ffb	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static int ffb = B::flags;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_equality
ffb	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static int ffb = B::flags;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_multiply
fft_rmse	tools/eigen/unsupported/test/FFTW.cpp	/^    long double fft_rmse( const VT1 & fftbuf,const VT2 & timebuf)$/;"	f
fftw_cast	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  T * fftw_cast(const T* p)$/;"	f	namespace:Eigen::internal
fftw_cast	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  fftw_complex * fftw_cast( const std::complex<double> * p)$/;"	f	namespace:Eigen::internal
fftw_cast	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  fftwf_complex * fftw_cast( const std::complex<float> * p)$/;"	f	namespace:Eigen::internal
fftw_cast	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  fftwl_complex * fftw_cast( const std::complex<long double> * p)$/;"	f	namespace:Eigen::internal
fftw_impl	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_impl$/;"	s	namespace:Eigen::internal
fftw_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      fftw_plan() :m_plan(NULL) {}$/;"	f	struct:Eigen::internal::fftw_plan
fftw_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_plan {};$/;"	s	namespace:Eigen::internal
fftw_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_plan<double>$/;"	s	namespace:Eigen::internal
fftw_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_plan<float>$/;"	s	namespace:Eigen::internal
fftw_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_plan<long double>$/;"	s	namespace:Eigen::internal
filename	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  string filename;$/;"	m	struct:inputfile_t	file:
filename	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  string filename;$/;"	m	struct:preprocessed_inputfile_t	file:
fill	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE void DenseBase<Derived>::fill(const Scalar& val)$/;"	f	class:Eigen::DenseBase
fill	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    void fill(const Scalar& value) { setConstant(value); }$/;"	f	class:Eigen::TriangularViewImpl
fill	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index i)$/;"	f	class:Eigen::SparseVector
fill	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index r, Index c)$/;"	f	class:Eigen::SparseVector
fill	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED Scalar& fill(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
fillMatrix	tools/eigen/bench/BenchSparseUtil.h	/^void fillMatrix(float density, int rows, int cols,  EigenSparseMatrix& dst)$/;"	f
fillMatrix	tools/eigen/bench/sparse_trisolver.cpp	/^void fillMatrix(float density, int rows, int cols,  EigenSparseTriMatrix& dst)$/;"	f
fillMatrix2	tools/eigen/bench/BenchSparseUtil.h	/^void fillMatrix2(int nnzPerCol, int rows, int cols,  EigenSparseMatrix& dst)$/;"	f
fillSpdMatrix	tools/eigen/bench/sparse_cholesky.cpp	/^void fillSpdMatrix(float density, int rows, int cols,  EigenSparseSelfAdjointMatrix& dst)$/;"	f
fill_history_clicks	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  void fill_history_clicks( void ){$/;"	f	class:X86_Timer
fillfactor	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index fillfactor; \/\/ The estimated fills factors for L and U, compared with A$/;"	m	struct:Eigen::internal::perfvalues
fillrand	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index i)$/;"	f	class:Eigen::SparseVector
fillrand	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index r, Index c)$/;"	f	class:Eigen::SparseVector
fillrand	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
final	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  time_t initial, final;$/;"	m	class:STL_Timer
finalize	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void finalize()$/;"	f	class:Eigen::SparseMatrix
finalize	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline void finalize() {}$/;"	f	class:Eigen::SparseVector
finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalize(const T accum) const {$/;"	f	struct:Eigen::internal::MaxReducer
finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalize(const T accum) const {$/;"	f	struct:Eigen::internal::MeanReducer
finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalize(const T accum) const {$/;"	f	struct:Eigen::internal::MinReducer
finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalize(const T accum) const {$/;"	f	struct:Eigen::internal::ProdReducer
finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalize(const T accum) const {$/;"	f	struct:Eigen::internal::SumReducer
finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalize(const T& accum) const {$/;"	f	struct:Eigen::internal::ArgMaxTupleReducer
finalize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalize(const T& accum) const {$/;"	f	struct:Eigen::internal::ArgMinTupleReducer
finalize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void finalize() {$/;"	f	class:Eigen::SkylineMatrix
finalize	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline void finalize() {}$/;"	f	class:Eigen::DynamicSparseMatrix
finalize	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^  float finalize(const float accum) const { return 1.0f \/ (accum + offset_); }$/;"	f	struct:UserReducer
finalizeBenchmark	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  inline void finalizeBenchmark(int64 num_items) {$/;"	f	class:BenchmarkSuite
finalizeBoth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalizeBoth(const T saccum, const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::MaxReducer
finalizeBoth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalizeBoth(const T saccum, const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::MeanReducer
finalizeBoth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalizeBoth(const T saccum, const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::MinReducer
finalizeBoth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalizeBoth(const T saccum, const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::ProdReducer
finalizeBoth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T finalizeBoth(const T saccum, const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::SumReducer
finalizePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet finalizePacket(const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::MaxReducer
finalizePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet finalizePacket(const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::MeanReducer
finalizePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet finalizePacket(const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::MinReducer
finalizePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet finalizePacket(const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::ProdReducer
finalizePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet finalizePacket(const Packet& vaccum) const {$/;"	f	struct:Eigen::internal::SumReducer
findElement	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline int findElement(GroupElement e) const$/;"	f	class:Eigen::DynamicSGroup
findSmallDiagEntry	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^    inline Index RealQZ<MatrixType>::findSmallDiagEntry(Index f, Index l)$/;"	f	class:Eigen::RealQZ
findSmallSubdiagEntry	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^    inline Index RealQZ<MatrixType>::findSmallSubdiagEntry(Index iu)$/;"	f	class:Eigen::RealQZ
findSmallSubdiagEntry	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^inline Index RealSchur<MatrixType>::findSmallSubdiagEntry(Index iu)$/;"	f	class:Eigen::RealSchur
find_frequency	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  inline void find_frequency( void ){$/;"	f	class:X86_Timer
find_ordering	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType find_ordering \/* return the number of garbage collections *\/$/;"	f	namespace:internal
find_partition_with_efficiency_higher_than	tools/eigen/bench/analyze-blocking-sizes.cpp	/^void find_partition_with_efficiency_higher_than($/;"	f
find_pivot	tools/eigen/test/eigensolver_complex.cpp	/^template<typename MatrixType> bool find_pivot(typename MatrixType::Scalar tol, MatrixType &diffs, Index col=0)$/;"	f
find_subset_with_efficiency_higher_than	tools/eigen/bench/analyze-blocking-sizes.cpp	/^void find_subset_with_efficiency_higher_than($/;"	f
finished	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  inline XprType& finished() { return m_xpr; }$/;"	f	struct:Eigen::CommaInitializer
finished	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool finished(const MatrixBase<VectorType> &v)$/;"	f	class:Eigen::IterationController
finished	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool finished(double nr)$/;"	f	class:Eigen::IterationController
first	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  Packet first;$/;"	m	struct:Eigen::internal::DoublePacket
first	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  Index first;$/;"	m	struct:Eigen::IndexPair
first	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  U first;$/;"	m	struct:Eigen::Tuple
first	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  VectorType first;$/;"	m	struct:Eigen::internal::vector_int_pair
first	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool first() { return m_nit == 0; }$/;"	f	class:Eigen::IterationController
firstAligned	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  Index firstAligned(Index size) const {$/;"	f	class:Eigen::internal::blas_data_mapper
firstAligned	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Index firstAligned(Index size) const {$/;"	f	class:Eigen::internal::BaseTensorContractionMapper
firstInput	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index firstInput(Index index) const {$/;"	f	struct:Eigen::TensorEvaluator
firstInput	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index firstInput(Index index) const {$/;"	f	struct:Eigen::TensorEvaluator
firstLevelCacheSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE size_t firstLevelCacheSize() const {$/;"	f	struct:Eigen::GpuDevice
firstTwo	tools/eigen/doc/examples/class_FixedVectorBlock.cpp	/^firstTwo(MatrixBase<Derived>& v)$/;"	f
firstTwo	tools/eigen/doc/examples/class_FixedVectorBlock.cpp	/^firstTwo(const MatrixBase<Derived>& v)$/;"	f
first_aligned	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^static inline Index first_aligned(const DenseBase<Derived>& m)$/;"	f	namespace:Eigen::internal
first_aligned	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline Index first_aligned(const Scalar* array, Index size)$/;"	f	namespace:Eigen::internal
first_aligned_impl	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl$/;"	s	namespace:Eigen::internal
first_aligned_impl	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl<Alignment, Derived, false>$/;"	s	namespace:Eigen::internal
first_column	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType first_column ;\/* first column in row (used in garbage collection) *\/$/;"	m	union:internal::Colamd_Row::__anon189
first_default_aligned	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^static inline Index first_default_aligned(const DenseBase<Derived>& m)$/;"	f	namespace:Eigen::internal
first_default_aligned	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline Index first_default_aligned(const Scalar* array, Index size)$/;"	f	namespace:Eigen::internal
first_generator	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename get<0, generators>::type first_generator;$/;"	t	struct:Eigen::internal::group_theory::dimino_first_step_elements
first_generator	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename get<0, remaining_generators>::type first_generator;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
first_multiple	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline Index first_multiple(Index size, Index base)$/;"	f	namespace:Eigen::internal
first_step	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef dimino_first_step_elements<Multiply, Equality, id, generators> first_step;$/;"	t	struct:Eigen::internal::group_theory::enumerate_group_elements_noid
first_step_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename first_step::type first_step_elements;$/;"	t	struct:Eigen::internal::group_theory::enumerate_group_elements_noid
first_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct type_list<t, tt...> { constexpr static int count = sizeof...(tt) + 1; typedef t first_type; };$/;"	t	struct:Eigen::internal::type_list
first_type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  typedef U first_type;$/;"	t	struct:Eigen::Tuple
first_value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct numeric_list<T, n, nn...> { constexpr static std::size_t count = sizeof...(nn) + 1; constexpr static T first_value = n; };$/;"	m	struct:Eigen::internal::numeric_list
fits_in_bits	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool mpreal::fits_in_bits(double x, int n)$/;"	f	class:mpfr::mpreal
fixedSizeMatrixConstruction	tools/eigen/test/basicstuff.cpp	/^void fixedSizeMatrixConstruction()$/;"	f
fixed_size_tensor_index_extraction_helper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct fixed_size_tensor_index_extraction_helper$/;"	s	namespace:Eigen::internal
fixed_size_tensor_index_extraction_helper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct fixed_size_tensor_index_extraction_helper<Index, 0>$/;"	s	namespace:Eigen::internal
fixed_size_tensor_index_linearization_helper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct fixed_size_tensor_index_linearization_helper$/;"	s	namespace:Eigen::internal
fixed_size_tensor_index_linearization_helper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct fixed_size_tensor_index_linearization_helper<Index, NumIndices, 0, RowMajor>$/;"	s	namespace:Eigen::internal
fixupL	tools/eigen/Eigen/src/SparseLU/SparseLU_Utils.h	/^void SparseLUImpl<Scalar,StorageIndex>::fixupL(const Index n, const IndexVector& perm_r, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
fjac	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    JacobianType fjac;$/;"	m	class:Eigen::HybridNonLinearSolver
fjac	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    JacobianType fjac;$/;"	m	class:Eigen::LevenbergMarquardt
flagged	tools/eigen/Eigen/src/Core/DenseBase.h	/^    const Derived& flagged() const$/;"	f	class:Eigen::DenseBase
flags	tools/eigen/Eigen/src/Core/IO.h	/^  int flags;$/;"	m	struct:Eigen::IOFormat
flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^      int flags;$/;"	m	struct:Eigen::DynamicSGroup::Generator
flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^      int flags;$/;"	m	struct:Eigen::DynamicSGroup::GroupElement
flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  constexpr static int flags = flags_;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_element
flags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    int flags() const {$/;"	f	class:Eigen::SkylineInplaceLU
flags_cmp_	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static int flags_cmp_ = ffa ^ ffb;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_equality
floor	tools/eigen/Eigen/src/Core/MathFunctions.h	/^T (floor)(const T& x)$/;"	f	namespace:Eigen::numext
floor	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^floor() const$/;"	f
floor	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal floor(const mpreal& v)$/;"	f	namespace:mpfr
fma	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fma (const mpreal& v1, const mpreal& v2, const mpreal& v3, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
fmax	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fmax(const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
fmin	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fmin(const mpreal& x, const mpreal& y,  mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
fmod	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fmod (const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
fms	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fms (const mpreal& v1, const mpreal& v2, const mpreal& v3, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
fnorm	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar fnorm() {return m_fnorm; }$/;"	f	class:Eigen::LevenbergMarquardt
fnorm	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar fnorm;$/;"	m	class:Eigen::HybridNonLinearSolver
fnorm	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar fnorm, gnorm;$/;"	m	class:Eigen::LevenbergMarquardt
fnorm1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar pnorm, xnorm, fnorm1;$/;"	m	class:Eigen::HybridNonLinearSolver
fnorm1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
fone	tools/eigen/bench/bench_gemm.cpp	/^static float fone = 1;$/;"	v	file:
fone	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static SCALAR fone;$/;"	m	class:blas_interface
fone	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^SCALAR blas_interface<SCALAR>::fone = SCALAR(1);$/;"	m	class:blas_interface
foo	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_0.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_1.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_2.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/block_on_const_type_actually_const_0.cpp	/^void foo(){$/;"	f
foo	tools/eigen/failtest/block_on_const_type_actually_const_1.cpp	/^void foo(){$/;"	f
foo	tools/eigen/failtest/const_qualified_block_method_retval_0.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/const_qualified_block_method_retval_1.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/const_qualified_diagonal_method_retval.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/const_qualified_transpose_method_retval.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/cwiseunaryview_nonconst_ctor_on_const_xpr.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/cwiseunaryview_on_const_type_actually_const.cpp	/^void foo(){$/;"	f
foo	tools/eigen/failtest/diagonal_nonconst_ctor_on_const_xpr.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/diagonal_on_const_type_actually_const.cpp	/^void foo(){$/;"	f
foo	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_0.cpp	/^void foo(CV_QUALIFIER float *ptr){$/;"	f
foo	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_1.cpp	/^void foo(CV_QUALIFIER float *ptr, DenseIndex size){$/;"	f
foo	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_2.cpp	/^void foo(CV_QUALIFIER float *ptr, DenseIndex rows, DenseIndex cols){$/;"	f
foo	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_3.cpp	/^void foo(CV_QUALIFIER float *ptr, DenseIndex rows, DenseIndex cols){$/;"	f
foo	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_4.cpp	/^void foo(const float *ptr, DenseIndex rows, DenseIndex cols){$/;"	f
foo	tools/eigen/failtest/map_on_const_type_actually_const_0.cpp	/^void foo(float *ptr){$/;"	f
foo	tools/eigen/failtest/map_on_const_type_actually_const_1.cpp	/^void foo(float *ptr){$/;"	f
foo	tools/eigen/failtest/selfadjointview_nonconst_ctor_on_const_xpr.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/selfadjointview_on_const_type_actually_const.cpp	/^void foo(){$/;"	f
foo	tools/eigen/failtest/transpose_nonconst_ctor_on_const_xpr.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/transpose_on_const_type_actually_const.cpp	/^void foo(){$/;"	f
foo	tools/eigen/failtest/triangularview_nonconst_ctor_on_const_xpr.cpp	/^void foo(CV_QUALIFIER Matrix3d &m){$/;"	f
foo	tools/eigen/failtest/triangularview_on_const_type_actually_const.cpp	/^void foo(){$/;"	f
foo	tools/eigen/unsupported/test/autodiff.cpp	/^EIGEN_DONT_INLINE Scalar foo(const Scalar& x, const Scalar& y)$/;"	f
foo	tools/eigen/unsupported/test/autodiff.cpp	/^EIGEN_DONT_INLINE typename Vector::Scalar foo(const Vector& p)$/;"	f
foo	tools/eigen/unsupported/test/forward_adolc.cpp	/^EIGEN_DONT_INLINE typename Vector::Scalar foo(const Vector& p)$/;"	f
forceAlignedAccess	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess()$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    inline Derived& forceAlignedAccess() { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    inline const Derived& forceAlignedAccess() const { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf()$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<bool Enable> inline Derived& forceAlignedAccessIf() { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<bool Enable> inline const Derived& forceAlignedAccessIf() const { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceMatrixTarget	tools/eigen/demos/opengl/gpuhelper.h	/^    inline void forceMatrixTarget(GLenum matrixTarget) {glMatrixMode(mCurrentMatrixTarget=matrixTarget);}$/;"	f	class:GpuHelper
formCosKNNGraph	problem.cc	/^void Entity::formCosKNNGraph(const sp_mat& X, int k) {$/;"	f	class:Entity
format	tools/eigen/Eigen/src/Core/IO.h	/^DenseBase<Derived>::format(const IOFormat& fmt) const$/;"	f	class:Eigen::DenseBase
fortran_to_c_numbering	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void fortran_to_c_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
forward_jacobian	tools/eigen/unsupported/test/autodiff.cpp	/^template<typename Func> void forward_jacobian(const Func& f)$/;"	f
fovY	tools/eigen/demos/opengl/camera.h	/^    inline float fovY(void) const { return mFovY; }$/;"	f	class:Camera
frac	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal frac       (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(frac      );     }$/;"	f	namespace:mpfr
frame	tools/eigen/demos/opengl/camera.h	/^    const Frame& frame(void) const { return mFrame; }$/;"	f	class:Camera
free_Pivot_Vector	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  inline static void free_Pivot_Vector(Pivot_Vector & pivot)$/;"	f	class:blitz_LU_solve_interface
free_Pivot_Vector	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  inline static void free_Pivot_Vector(Pivot_Vector & pivot)$/;"	f	class:blitz_LU_solve_interface
free_Pivot_Vector	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  inline static void free_Pivot_Vector(Pivot_Vector & pivot)$/;"	f	class:blitz_LU_solve_interface
free_matrix	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  static void free_matrix(gene_matrix & A, int \/*N*\/){$/;"	f	class:c_interface_base
free_matrix	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static void free_matrix(gene_matrix & \/*A*\/, int \/*N*\/){}$/;"	f	class:STL_interface
free_matrix	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static void free_matrix(gene_matrix & A, int N){$/;"	f	class:blaze_interface
free_matrix	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static void free_matrix(gene_matrix & A, int N){}$/;"	f	class:blitz_interface
free_matrix	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static void free_matrix(gene_matrix & A, int N){}$/;"	f	class:tiny_blitz_interface
free_matrix	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static void free_matrix(gene_matrix & A, int N) {}$/;"	f	class:eigen2_interface
free_matrix	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static void free_matrix(gene_matrix & \/*A*\/, int \/*N*\/) {}$/;"	f	class:eigen3_interface
free_matrix	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static void free_matrix(gene_matrix & A, int N){$/;"	f	class:gmm_interface
free_matrix	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static void free_matrix(gene_matrix & A, int N){$/;"	f	class:mtl4_interface
free_matrix	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static void free_matrix(gene_matrix & \/*A*\/, int \/*N*\/) {}$/;"	f	class:tensor_interface
free_matrix	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static void free_matrix(gene_matrix & A, int N){}$/;"	f	class:tvmet_interface
free_matrix	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static void free_matrix(gene_matrix & A, int N) {}$/;"	f	class:ublas_interface
free_vector	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  static void free_vector(gene_vector & B){$/;"	f	class:c_interface_base
free_vector	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static void free_vector(gene_vector & \/*B*\/){}$/;"	f	class:STL_interface
free_vector	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static void free_vector(gene_vector & B){$/;"	f	class:blaze_interface
free_vector	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static void free_vector(gene_vector & B){}$/;"	f	class:blitz_interface
free_vector	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static void free_vector(gene_vector & B){}$/;"	f	class:tiny_blitz_interface
free_vector	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static void free_vector(gene_vector & B) {}$/;"	f	class:eigen2_interface
free_vector	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static void free_vector(gene_vector & \/*B*\/) {}$/;"	f	class:eigen3_interface
free_vector	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static void free_vector(gene_vector & B){$/;"	f	class:gmm_interface
free_vector	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static void free_vector(gene_vector & B){$/;"	f	class:mtl4_interface
free_vector	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static void free_vector(gene_vector & \/*B*\/) {}$/;"	f	class:tensor_interface
free_vector	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static void free_vector(gene_vector & B){}$/;"	f	class:tvmet_interface
free_vector	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static void free_vector(gene_vector & B) {}$/;"	f	class:ublas_interface
frequency	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   LARGE_INTEGER frequency;$/;"	m	class:Portable_Timer
frequency	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  inline double frequency( void ){$/;"	f	class:X86_Timer
frexp	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal frexp(const mpreal& v, mp_exp_t* exp)$/;"	f	namespace:mpfr
fromPositionOrientationScale	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::fromPositionOrientationScale(const MatrixBase<PositionDerived> &position,$/;"	f	class:Eigen::Transform
fromRotationMatrix	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
fromRotationMatrix	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^Rotation2D<Scalar>& Rotation2D<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::Rotation2D
ftnlen	tools/eigen/blas/f2c/datatypes.h	/^typedef int ftnlen;$/;"	t
ftol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar ftol() const {return m_ftol; }$/;"	f	class:Eigen::LevenbergMarquardt
ftol	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar ftol;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
fullPivHouseholderQr	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^MatrixBase<Derived>::fullPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
fullPivLu	tools/eigen/Eigen/src/LU/FullPivLU.h	/^MatrixBase<Derived>::fullPivLu() const$/;"	f	class:Eigen::MatrixBase
func	tools/eigen/bench/benchGeometry.cpp	/^struct func<res, arg1, arg2, TMATV>$/;"	s	file:
func	tools/eigen/bench/benchGeometry.cpp	/^struct func<res, arg1, arg2, TMATVMAT>$/;"	s	file:
func	tools/eigen/bench/benchGeometry.cpp	/^struct func<res, arg1, arg2, TV>$/;"	s	file:
func	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  const CustomBinaryFunc& func() const { return m_func; }$/;"	f	class:Eigen::TensorCustomBinaryOp
func	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  const CustomUnaryFunc& func() const { return m_func; }$/;"	f	class:Eigen::TensorCustomUnaryOp
func_opt	tools/eigen/bench/benchGeometry.cpp	/^enum func_opt$/;"	g	file:
functor	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseBinaryOp
functor	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseNullaryOp
functor	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryOp
functor	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    const ViewOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryView
functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const BinaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::TensorCwiseBinaryOp
functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const NullaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::TensorCwiseNullaryOp
functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const UnaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::TensorCwiseUnaryOp
functor	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FunctorType &functor;$/;"	m	class:Eigen::HybridNonLinearSolver
functor	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FunctorType &functor;$/;"	m	class:Eigen::LevenbergMarquardt
functor_has_linear_access	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_has_linear_access	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Scalar> struct functor_has_linear_access<scalar_identity_op<Scalar> > { enum { ret = 0 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar,typename SrcScalar> struct functor_is_product_like<mul_assign_op<DstScalar,SrcScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Functor> struct functor_is_product_like { enum { ret = 0 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_conj_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_quotient_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/Random.h	/^struct functor_traits<scalar_random_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/Visitor.h	/^struct functor_traits<max_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/Visitor.h	/^struct functor_traits<min_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<add_assign_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<assign_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<div_assign_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<mul_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<sub_assign_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<swap_assign_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_add_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_binary_pow_op<Scalar,OtherScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_cmp_op<Scalar, cmp> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_conj_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_difference_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_hypot_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_max_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_min_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_multiple2_op<Scalar1,Scalar2> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_multiple_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_pow_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_quotient1_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_quotient2_op<Scalar1,Scalar2> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_quotient_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_rsub_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_sub_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_sum_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct functor_traits<scalar_boolean_and_op> {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct functor_traits<scalar_boolean_or_op> {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^struct functor_traits<scalar_constant_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^struct functor_traits<scalar_identity_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^template <typename Scalar, typename PacketType, bool RandomAccess> struct functor_traits< linspaced_op<Scalar,PacketType,RandomAccess> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binary_compose<T0,T1,T2> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binder1st<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binder2nd<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::divides<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::greater<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::greater_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::less<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::less_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_and<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_not<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_or<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::minus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::multiplies<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::not_equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::plus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::project1st<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::project2nd<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::select1st<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::select2nd<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::unary_compose<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::unary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_abs2_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_abs_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_acos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_arg_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_asin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_atan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_boolean_not_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cast_op<Scalar,NewType> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_ceil_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_conjugate_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cosh_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cube_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_exp_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_floor_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_imag_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_imag_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_inverse_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isfinite_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isinf_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isnan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_log10_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_log_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_opposite_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_real_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_real_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_round_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_rsqrt_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_score_coeff_op<Scalar> > : functor_traits<scalar_abs_op<Scalar> > {};$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sinh_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sqrt_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_square_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_tan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_tanh_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/blas/level1_cplx_impl.h	/^    template<> struct functor_traits<scalar_norm1_op >$/;"	s	namespace:Eigen::internal
functor_traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^struct functor_traits<scalar_sigmoid_op<T> > {$/;"	s	namespace:Eigen::internal
fvec	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType& fvec() {return m_fvec; }$/;"	f	class:Eigen::LevenbergMarquardt
fvec	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::HybridNonLinearSolver
fvec	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::LevenbergMarquardt
fwd	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd( Complex * dst,const Complex *src,int nfft)$/;"	f	struct:Eigen::internal::fftw_impl
fwd	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd( Complex * dst,const Scalar * src,int nfft) $/;"	f	struct:Eigen::internal::fftw_impl
fwd	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd(complex_type * dst,complex_type * src,int nfft) {$/;"	f	struct:Eigen::internal::fftw_plan
fwd	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd(complex_type * dst,scalar_type * src,int nfft) {$/;"	f	struct:Eigen::internal::fftw_plan
fwd	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void fwd( Complex * dst,const Complex *src,int nfft)$/;"	f	struct:Eigen::internal::kissfft_impl
fwd	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void fwd( Complex * dst,const Scalar * src,int nfft) $/;"	f	struct:Eigen::internal::kissfft_impl
fwd2	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd2( complex_type * dst,complex_type * src,int n0,int n1) {$/;"	f	struct:Eigen::internal::fftw_plan
fwd2	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd2(Complex * dst, const Complex * src, int n0,int n1)$/;"	f	struct:Eigen::internal::fftw_impl
fwd2	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void fwd2( Complex * dst,const Complex *src,int n0,int n1)$/;"	f	struct:Eigen::internal::kissfft_impl
fwd_inv	tools/eigen/unsupported/doc/examples/FFT.cpp	/^void fwd_inv(size_t nfft)$/;"	f
fzero	tools/eigen/bench/bench_gemm.cpp	/^static float fzero = 0;$/;"	v	file:
fzero	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static SCALAR fzero;$/;"	m	class:blas_interface
fzero	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^SCALAR blas_interface<SCALAR>::fzero = SCALAR(0);$/;"	m	class:blas_interface
g_called	tools/eigen/test/linearstructure.cpp	/^static bool g_called;$/;"	v	file:
g_has_set_repeat	tools/eigen/test/main.h	/^  static bool g_has_set_repeat, g_has_set_seed;$/;"	m	namespace:Eigen
g_has_set_seed	tools/eigen/test/main.h	/^  static bool g_has_set_repeat, g_has_set_seed;$/;"	m	namespace:Eigen
g_realloc_count	tools/eigen/test/sparse_basic.cpp	/^static long g_realloc_count = 0;$/;"	v	file:
g_repeat	tools/eigen/test/main.h	/^  static int g_repeat;$/;"	m	namespace:Eigen
g_seed	tools/eigen/test/main.h	/^  static unsigned int g_seed;$/;"	m	namespace:Eigen
g_test_level	tools/eigen/test/main.h	/^  static int g_test_level = 0;$/;"	m	namespace:Eigen
g_test_stack	tools/eigen/test/main.h	/^  static std::vector<std::string> g_test_stack;$/;"	m	namespace:Eigen
gamma	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal gamma   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(gamma  );    }$/;"	f	namespace:mpfr
garbage_collection	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType garbage_collection  \/* returns the new value of pfree *\/$/;"	f	namespace:internal
gatherPacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE SubPacket gatherPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
gbmv	tools/eigen/blas/level2_impl.h	/^int EIGEN_BLAS_FUNC(gbmv)(char *trans, int *m, int *n, int *kl, int *ku, RealScalar *palpha, RealScalar *pa, int *lda,$/;"	f
ge	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline GroupElement ge(Generator const& g) const$/;"	f	class:Eigen::DynamicSGroup
ge	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    typedef typename group_elements::type ge;$/;"	t	class:Eigen::StaticSGroup
gebp_kernel	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gebp_kernel$/;"	s	namespace:Eigen::internal
gebp_madd	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void gebp_madd(const CJ& cj, A& a, B& b, C& c, T& t)$/;"	f	namespace:Eigen::internal
gebp_madd_selector	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename A, typename B, typename C, typename T> struct gebp_madd_selector {$/;"	s	namespace:Eigen::internal
gebp_madd_selector	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename T> struct gebp_madd_selector<CJ,T,T,T,T> {$/;"	s	namespace:Eigen::internal
gebp_traits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits$/;"	c	namespace:Eigen::internal
gebp_traits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<RealScalar, std::complex<RealScalar>, false, _ConjRhs >$/;"	c	namespace:Eigen::internal
gebp_traits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, RealScalar, _ConjLhs, false>$/;"	c	namespace:Eigen::internal
gebp_traits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, std::complex<RealScalar>, _ConjLhs, _ConjRhs >$/;"	c	namespace:Eigen::internal
gemm	tools/eigen/bench/bench_gemm.cpp	/^EIGEN_DONT_INLINE void gemm(const A& a, const B& b, C& c)$/;"	f
gemm	tools/eigen/bench/perf_monitoring/gemm/gemm.cpp	/^void gemm(const Mat &A, const Mat &B, Mat &C)$/;"	f
gemm	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(gemm)(char *opa, char *opb, int *m, int *n, int *k, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *pb, int *ldb, RealScalar *pbeta, RealScalar *pc, int *ldc)$/;"	f
gemm_blocking_space	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(Index \/*rows*\/, Index \/*cols*\/, Index \/*depth*\/, Index \/*num_threads*\/, bool \/*full_rows = false*\/)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(Index rows, Index cols, Index depth, Index num_threads, bool l3_blocking)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, false>$/;"	c	namespace:Eigen::internal
gemm_blocking_space	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, true \/* == FiniteAtCompileTime *\/>$/;"	c	namespace:Eigen::internal
gemm_functor	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  gemm_functor(const Lhs& lhs, const Rhs& rhs, Dest& dest, const Scalar& actualAlpha, BlockingType& blocking)$/;"	f	struct:Eigen::internal::gemm_functor
gemm_functor	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct gemm_functor$/;"	s	namespace:Eigen::internal
gemm_pack_lhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, ColMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_lhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, RowMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, DataMapper, nr, ColMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, DataMapper, nr, RowMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemv	tools/eigen/blas/level2_impl.h	/^int EIGEN_BLAS_FUNC(gemv)(char *opa, int *m, int *n, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *pb, int *incb, RealScalar *pbeta, RealScalar *pc, int *incc)$/;"	f
gemv_dense_sense_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^struct gemv_dense_sense_selector<OnTheLeft,StorageOrder,BlasCompatible>$/;"	s	namespace:Eigen::internal
gemv_dense_sense_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_sense_selector<OnTheRight,ColMajor,false>$/;"	s	namespace:Eigen::internal
gemv_dense_sense_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_sense_selector<OnTheRight,ColMajor,true>$/;"	s	namespace:Eigen::internal
gemv_dense_sense_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_sense_selector<OnTheRight,RowMajor,false>$/;"	s	namespace:Eigen::internal
gemv_dense_sense_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_sense_selector<OnTheRight,RowMajor,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,Dynamic,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,false>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,true>$/;"	s	namespace:Eigen::internal
gen_numeric_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T start, T... ii>                    struct gen_numeric_list<T, 0, start, ii...> { typedef numeric_list<T, ii...> type; };$/;"	s	namespace:Eigen::internal
gen_numeric_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, std::size_t n, T start = 0, T... ii> struct gen_numeric_list                     : gen_numeric_list<T, n-1, start, start + n-1, ii...> {};$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T V, T... nn>                struct gen_numeric_list_repeated<T, 0, V, nn...> { typedef numeric_list<T, nn...> type; };$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, std::size_t n, T V, T... nn> struct gen_numeric_list_repeated                 : gen_numeric_list_repeated<T, n-1, V, V, nn...> {};$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, T V> struct gen_numeric_list_repeated<T, 1, V> {$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, T V> struct gen_numeric_list_repeated<T, 2, V> {$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, T V> struct gen_numeric_list_repeated<T, 3, V> {$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, T V> struct gen_numeric_list_repeated<T, 4, V> {$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, T V> struct gen_numeric_list_repeated<T, 5, V> {$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, T V> struct gen_numeric_list_repeated<T, 6, V> {$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, T V> struct gen_numeric_list_repeated<T, 7, V> {$/;"	s	namespace:Eigen::internal
gen_numeric_list_repeated	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, T V> struct gen_numeric_list_repeated<T, 8, V> {$/;"	s	namespace:Eigen::internal
gen_numeric_list_reversed	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T start, T... ii>                    struct gen_numeric_list_reversed<T, 0, start, ii...> { typedef numeric_list<T, ii...> type; };$/;"	s	namespace:Eigen::internal
gen_numeric_list_reversed	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, std::size_t n, T start = 0, T... ii> struct gen_numeric_list_reversed                     : gen_numeric_list_reversed<T, n-1, start, ii..., start + n-1> {};$/;"	s	namespace:Eigen::internal
gen_numeric_list_swapped_pair	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T a, T b, T start, T... ii>                    struct gen_numeric_list_swapped_pair<T, 0, a, b, start, ii...> { typedef numeric_list<T, ii...> type; };$/;"	s	namespace:Eigen::internal
gen_numeric_list_swapped_pair	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, std::size_t n, T a, T b, T start = 0, T... ii> struct gen_numeric_list_swapped_pair                           : gen_numeric_list_swapped_pair<T, n-1, a, b, start, (start + n-1) == a ? b : ((start + n-1) == b ? a : (start + n-1)), ii...> {};$/;"	s	namespace:Eigen::internal
gen_stride_div	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC Index gen_stride_div() {$/;"	f	struct:Eigen::TensorEvaluator
gen_stride_mod	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC Index gen_stride_mod(const InputDimensions& dims) {$/;"	f	struct:Eigen::TensorEvaluator
gen_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  EIGEN_DEVICE_FUNC StrideDims gen_strides(const InputDimensions& dims) {$/;"	f	struct:Eigen::TensorEvaluator
gene_matrix	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  typedef real* gene_matrix;$/;"	t	class:c_interface_base
gene_matrix	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  typedef stl_matrix gene_matrix;$/;"	t	class:STL_interface
gene_matrix	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  typedef blaze::DynamicMatrix<real,blaze::columnMajor>  gene_matrix;$/;"	t	class:blaze_interface
gene_matrix	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  typedef typename blitz_interface<real>::gene_matrix gene_matrix;$/;"	t	class:blitz_LU_solve_interface
gene_matrix	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  typedef blitz::Array<real, 2>  gene_matrix;$/;"	t	class:blitz_interface
gene_matrix	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  typedef TinyMatrix<real,SIZE,SIZE> gene_matrix;$/;"	t	class:tiny_blitz_interface
gene_matrix	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  typedef Eigen::Matrix<real,SIZE,SIZE> gene_matrix;$/;"	t	class:eigen2_interface
gene_matrix	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  typedef Eigen::Matrix<real,SIZE,SIZE> gene_matrix;$/;"	t	class:eigen3_interface
gene_matrix	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  typedef typename blitz_interface<real>::gene_matrix gene_matrix;$/;"	t	class:blitz_LU_solve_interface
gene_matrix	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  typedef gmm::dense_matrix<real> gene_matrix;$/;"	t	class:gmm_interface
gene_matrix	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  typedef typename blitz_interface<real>::gene_matrix gene_matrix;$/;"	t	class:blitz_LU_solve_interface
gene_matrix	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  typedef mtl::dense2D<real, mtl::matrix::parameters<mtl::tag::col_major> > gene_matrix;$/;"	t	class:mtl4_interface
gene_matrix	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  typedef Eigen::Tensor<real,2> gene_matrix;$/;"	t	class:tensor_interface
gene_matrix	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  typedef Matrix<real,SIZE,SIZE> gene_matrix;$/;"	t	class:tvmet_interface
gene_matrix	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  typedef typename boost::numeric::ublas::matrix<real,boost::numeric::ublas::column_major> gene_matrix;$/;"	t	class:ublas_interface
gene_vector	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  typedef real* gene_vector;$/;"	t	class:c_interface_base
gene_vector	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  typedef stl_vector gene_vector;$/;"	t	class:STL_interface
gene_vector	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  typedef blaze::DynamicVector<real>  gene_vector;$/;"	t	class:blaze_interface
gene_vector	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  typedef typename blitz_interface<real>::gene_vector gene_vector;$/;"	t	class:blitz_LU_solve_interface
gene_vector	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  typedef blitz::Array<real, 1>  gene_vector;$/;"	t	class:blitz_interface
gene_vector	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  typedef TinyVector<real,SIZE> gene_vector;$/;"	t	class:tiny_blitz_interface
gene_vector	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  typedef Eigen::Matrix<real,SIZE,1> gene_vector;$/;"	t	class:eigen2_interface
gene_vector	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  typedef Eigen::Matrix<real,SIZE,1> gene_vector;$/;"	t	class:eigen3_interface
gene_vector	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  typedef typename blitz_interface<real>::gene_vector gene_vector;$/;"	t	class:blitz_LU_solve_interface
gene_vector	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  typedef stl_vector gene_vector;$/;"	t	class:gmm_interface
gene_vector	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  typedef typename blitz_interface<real>::gene_vector gene_vector;$/;"	t	class:blitz_LU_solve_interface
gene_vector	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  typedef mtl::dense_vector<real>  gene_vector;$/;"	t	class:mtl4_interface
gene_vector	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  typedef Eigen::Tensor<real,1> gene_vector;$/;"	t	class:tensor_interface
gene_vector	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  typedef Vector<real,SIZE> gene_vector;$/;"	t	class:tvmet_interface
gene_vector	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  typedef typename boost::numeric::ublas::vector<real> gene_vector;$/;"	t	class:ublas_interface
general_det3_helper	tools/eigen/Eigen/src/LU/InverseImpl.h	/^inline const typename Derived::Scalar general_det3_helper$/;"	f	namespace:Eigen::internal
general_matrix_matrix_product	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_product	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_rankupdate	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^struct general_matrix_matrix_rankupdate :$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,LhsMapper,ColMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,LhsMapper,RowMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product_wrapper	tools/eigen/blas/level2_impl.h	/^struct general_matrix_vector_product_wrapper$/;"	s
general_product_to_triangular_selector	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_product_to_triangular_selector<MatrixType,ProductType,UpLo,false>$/;"	s	namespace:Eigen
general_product_to_triangular_selector	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_product_to_triangular_selector<MatrixType,ProductType,UpLo,true>$/;"	s	namespace:Eigen
general_rank1_update	tools/eigen/blas/GeneralRank1Update.h	/^struct general_rank1_update<Scalar,Index,ColMajor,ConjLhs,ConjRhs>$/;"	s	namespace:internal
general_rank1_update	tools/eigen/blas/GeneralRank1Update.h	/^struct general_rank1_update<Scalar,Index,RowMajor,ConjLhs,ConjRhs>$/;"	s	namespace:internal
generalized_eigensolver_real	tools/eigen/test/eigensolver_generalized_real.cpp	/^template<typename MatrixType> void generalized_eigensolver_real(const MatrixType& m)$/;"	f
generate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    generate(const Generator& generator) const {$/;"	f	class:Eigen::TensorBase
generateTestMatrix	tools/eigen/unsupported/test/matrix_functions.h	/^struct generateTestMatrix<MatrixType,0>$/;"	s
generateTestMatrix	tools/eigen/unsupported/test/matrix_functions.h	/^struct generateTestMatrix<MatrixType,1>$/;"	s
generate_autotoc	tools/eigen/doc/eigen_navtree_hacks.js	/^function generate_autotoc() {$/;"	f
generate_sparse_leastsquare_problem	tools/eigen/test/sparse_solver.h	/^void generate_sparse_leastsquare_problem(Solver&, typename Solver::MatrixType& A, DenseMat& dA, int maxSize = 300, int options = ForceNonZeroDiag)$/;"	f
generate_sparse_rectangular_problem	tools/eigen/test/sparseqr.cpp	/^int generate_sparse_rectangular_problem(MatrixType& A, DenseMat& dA, int maxRows = 300, int maxCols = 150)$/;"	f
generate_sparse_rectangular_problem	tools/eigen/test/spqr_support.cpp	/^int generate_sparse_rectangular_problem(MatrixType& A, DenseMat& dA, int maxRows = 300, int maxCols = 300)$/;"	f
generate_sparse_spd_problem	tools/eigen/test/sparse_solver.h	/^int generate_sparse_spd_problem(Solver& , typename Solver::MatrixType& A, typename Solver::MatrixType& halfA, DenseMat& dA, int maxSize = 300)$/;"	f
generate_sparse_square_problem	tools/eigen/test/sparse_solver.h	/^Index generate_sparse_square_problem(Solver&, typename Solver::MatrixType& A, DenseMat& dA, int maxSize = 300, int options = ForceNonZeroDiag)$/;"	f
generator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    const Generator& generator() const { return m_generator; }$/;"	f	class:Eigen::TensorGeneratorOp
generators_done	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef type_list<first_generator> generators_done;$/;"	t	struct:Eigen::internal::group_theory::dimino_first_step_elements
generic_aligned_realloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void* generic_aligned_realloc(void* ptr, size_t size, size_t old_size)$/;"	f	namespace:Eigen::internal
generic_dense_assignment_kernel	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC generic_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
generic_dense_assignment_kernel	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^class generic_dense_assignment_kernel$/;"	c	namespace:Eigen::internal
generic_dense_assignment_kernel	tools/eigen/Eigen/src/Core/Swap.h	/^  EIGEN_DEVICE_FUNC generic_dense_assignment_kernel(DstEvaluatorTypeT &dst, const SrcEvaluatorTypeT &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
generic_dense_assignment_kernel	tools/eigen/Eigen/src/Core/Swap.h	/^class generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, swap_assign_op<typename DstEvaluatorTypeT::Scalar>, Specialized>$/;"	c	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, MatrixShape, PermutationShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, MatrixShape, TranspositionsShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, PermutationShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, TranspositionsShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Transpose<Rhs>, MatrixShape, PermutationShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Transpose<Rhs>, MatrixShape, TranspositionsShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,CoeffBasedProductMode> $/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,GemvProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,InnerProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,LazyCoeffBasedProductMode>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,OuterProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,SelfAdjointShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,TriangularShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,SelfAdjointShape,DenseShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,TriangularShape,DenseShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Transpose<Lhs>, Rhs, PermutationShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Transpose<Lhs>, Rhs, TranspositionsShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,GemmProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Homogeneous<LhsArg,Horizontal>, Rhs, HomogeneousShape, DenseShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Lhs, Homogeneous<RhsArg,Vertical>, DenseShape, HomogeneousShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Transform<Scalar,Dim,Mode,Options>, Homogeneous<RhsArg,Vertical>, DenseShape, HomogeneousShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, DenseShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, DenseShape, SparseTriangularShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseTriangularShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, SparseTriangularShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseTriangularShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct generic_product_impl<Lhs, RhsView, DenseShape, SparseSelfAdjointShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct generic_product_impl<LhsView, Rhs, SparseSelfAdjointShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl_base	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl_base$/;"	s	namespace:Eigen::internal
generic_xpr_base	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^struct generic_xpr_base<Derived, MatrixXpr, Sparse>$/;"	s	namespace:Eigen::internal
ger	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void ger(gene_matrix & A, gene_vector & X, gene_vector & Y, int N){$/;"	f	class:blas_interface
ger	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void ger(gene_matrix & A, gene_vector & X, gene_vector & Y, int N)$/;"	f	class:STL_interface
ger	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static EIGEN_DONT_INLINE void ger(gene_matrix & A,  gene_vector & X, gene_vector & Y, int  N){$/;"	f	class:eigen3_interface
ger	tools/eigen/blas/level2_real_impl.h	/^int EIGEN_BLAS_FUNC(ger)(int *m, int *n, Scalar *palpha, Scalar *px, int *incx, Scalar *py, int *incy, Scalar *pa, int *lda)$/;"	f
gerc	tools/eigen/blas/level2_cplx_impl.h	/^int EIGEN_BLAS_FUNC(gerc)(int *m, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar *pa, int *lda)$/;"	f
geru	tools/eigen/blas/level2_cplx_impl.h	/^int EIGEN_BLAS_FUNC(geru)(int *m, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar *pa, int *lda)$/;"	f
ges	tools/eigen/doc/snippets/GeneralizedEigenSolver.cpp	/^GeneralizedEigenSolver<MatrixXf> ges;$/;"	v
get	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar get(const RhsEval &rhs, Index outer, Dense = Dense()) const$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
get	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar get(const RhsEval &rhs, Index outer, Sparse = Sparse())$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n EIGEN_TPL_PP_SPEC_HACK_DEFC(typename, as)> struct get<n, type_list<EIGEN_TPL_PP_SPEC_HACK_USE(as)>> { static_assert((n - n) < 0, "meta-template get: The element to extract from a list must be smaller than the size of the list."); };$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n, typename a, typename... as>               struct get<n, type_list<a, as...>>   : get<n-1, type_list<as...>> {};$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T a, T... as>                               struct get<0, numeric_list<T, a, as...>>   { constexpr static int value = a; };$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, int n EIGEN_TPL_PP_SPEC_HACK_DEFC(T, as)>   struct get<n, numeric_list<T EIGEN_TPL_PP_SPEC_HACK_USEC(as)>> { static_assert((n - n) < 0, "meta-template get: The element to extract from a list must be smaller than the size of the list."); };$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, int n, T a, T... as>                        struct get<n, numeric_list<T, a, as...>>   : get<n-1, numeric_list<T, as...>> {};$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a, typename... as>                      struct get<0, type_list<a, as...>>   { typedef a type; };$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  get() { eigen_assert(false && "index overflow"); }$/;"	f	struct:Eigen::internal::get
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct get<0, type_list<Head, Tail> >$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct get<0, type_list<Head, empty_list> >$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct get<i, empty_list>$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct get<i, type_list<Head, Tail> >$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct get<i, type_list<Head, empty_list> >$/;"	s	namespace:Eigen::internal
get	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr DenseIndex get(const DenseIndex i, const std::tuple<T...>& t) {$/;"	f	struct:Eigen::internal::tuple_coeff
getChildren	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  EIGEN_STRONG_INLINE void getChildren(Index index, VolumeIterator &outVBegin, VolumeIterator &outVEnd,$/;"	f	class:Eigen::KdBVH
getCpuTime	tools/eigen/bench/BenchTimer.h	/^  inline double getCpuTime() const$/;"	f	class:Eigen::BenchTimer
getInputIndex	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool getInputIndex(Index index, Index* inputIndex) const$/;"	f	struct:Eigen::TensorEvaluator
getL	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m.adjoint()); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m.adjoint()); }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::traits
getLinearMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE LinearMapper getLinearMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
getLinearMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE LinearMapper getLinearMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
getMarketHeader	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^inline bool getMarketHeader(const std::string& filename, int& sym, bool& iscomplex, bool& isvector)$/;"	f	namespace:Eigen
getMatrix	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
getMatrix	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
getMatrix	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
getMaxIterations	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::ComplexEigenSolver
getMaxIterations	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::ComplexSchur
getMaxIterations	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::EigenSolver
getMaxIterations	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::RealSchur
getNbrConvergedEigenValues	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  size_t getNbrConvergedEigenValues() const$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
getNbrIterations	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  size_t getNbrIterations() const$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
getNode	tools/eigen/doc/eigen_navtree_hacks.js	/^function getNode(o, po)$/;"	f
getNumCudaMultiProcessors	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  inline int getNumCudaMultiProcessors() const {$/;"	f	struct:Eigen::GpuDevice
getPadeDegree	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^inline int MatrixPowerAtomic<MatrixType>::getPadeDegree(double normIminusT)$/;"	f	class:Eigen::MatrixPowerAtomic
getPadeDegree	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^inline int MatrixPowerAtomic<MatrixType>::getPadeDegree(float normIminusT)$/;"	f	class:Eigen::MatrixPowerAtomic
getPadeDegree	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^inline int MatrixPowerAtomic<MatrixType>::getPadeDegree(long double normIminusT)$/;"	f	class:Eigen::MatrixPowerAtomic
getPrecision	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::getPrecision() const$/;"	f	class:mpfr::mpreal
getRankedLists	eval.py	/^def getRankedLists(fileName):$/;"	f
getRealTime	tools/eigen/bench/BenchTimer.h	/^  inline double getRealTime() const$/;"	f	class:Eigen::BenchTimer
getRootIndex	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  inline Index getRootIndex() const { return (int)boxes.size() - 1; }$/;"	f	class:Eigen::KdBVH
getSubMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE const_blas_data_mapper<Scalar, Index, StorageOrder> getSubMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::const_blas_data_mapper
getSubMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  getSubMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
getSubMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE SubMapper getSubMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::TensorContractionInputMapper
getU	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m); }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::traits
getVectorMapper	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE VectorMapper getVectorMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
getVectorMapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_ALWAYS_INLINE VectorMapper getVectorMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::TensorContractionInputMapper
getVolume	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  inline const Volume &getVolume(Index index) const$/;"	f	class:Eigen::KdBVH
get_boxes_helper	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^struct get_boxes_helper {$/;"	s	namespace:Eigen::internal
get_boxes_helper	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^struct get_boxes_helper<ObjectList, VolumeList, int> {$/;"	s	namespace:Eigen::internal
get_click	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  unsigned long long  get_click( void ){$/;"	f	class:X86_Timer
get_compact_vector	tools/eigen/blas/common.h	/^T* get_compact_vector(T* x, int n, int incx)$/;"	f
get_default_prec	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    inline static mp_prec_t  get_default_prec()   {    return mpfr_get_default_prec();                            }$/;"	f	class:mpfr::mpreal
get_default_rnd	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    inline static mp_rnd_t   get_default_rnd()    {    return (mp_rnd_t)(mpfr_get_default_rounding_mode());       }$/;"	f	class:mpfr::mpreal
get_dim	tools/eigen/bench/geometry.cpp	/^struct get_dim<Matrix<S,R,C,O,MR,MC> > { enum { Dim = R }; };$/;"	s	file:
get_dim	tools/eigen/bench/geometry.cpp	/^template<typename T> struct get_dim { enum { Dim = T::Dim }; };$/;"	s	file:
get_elapsed_time_in_second	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  double get_elapsed_time_in_second( void ){$/;"	f	class:X86_Timer
get_emax	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emax (void)$/;"	f	class:mpfr::mpreal
get_emax_max	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emax_max (void)$/;"	f	class:mpfr::mpreal
get_emax_min	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emax_min (void)$/;"	f	class:mpfr::mpreal
get_emin	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emin (void)$/;"	f	class:mpfr::mpreal
get_emin_max	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emin_max (void)$/;"	f	class:mpfr::mpreal
get_emin_min	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emin_min (void)$/;"	f	class:mpfr::mpreal
get_exp	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_exp ()$/;"	f	class:mpfr::mpreal
get_factor	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename From,typename To> struct get_factor {$/;"	s	namespace:Eigen::internal
get_factor	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct get_factor<Scalar,typename NumTraits<Scalar>::Real> {$/;"	s	namespace:Eigen::internal
get_matrixfolder	tools/eigen/test/sparse_solver.h	/^inline std::string get_matrixfolder()$/;"	f
get_mean_clicks	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  double get_mean_clicks( void ){$/;"	f	class:X86_Timer
get_most_occured_clicks	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  double get_most_occured_clicks( void ){$/;"	f	class:X86_Timer
get_nb_calc	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  unsigned long long get_nb_calc()$/;"	f	class:Portable_Perf_Analyzer
get_nb_calc	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  unsigned long long get_nb_calc( void )$/;"	f	class:Portable_Perf_Analyzer
get_options	tools/eigen/bench/spbench/spbenchsolver.h	/^bool get_options(int argc, char **args, string option, string* value=0)$/;"	f
get_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      PlanData & get_plan(int n0,int n1,bool inverse,void * dst,const void * src)$/;"	f	struct:Eigen::internal::fftw_impl
get_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      PlanData & get_plan(int nfft,bool inverse,void * dst,const void * src)$/;"	f	struct:Eigen::internal::fftw_impl
get_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    PlanData & get_plan(int nfft, bool inverse)$/;"	f	struct:Eigen::internal::kissfft_impl
get_prec	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mp_prec_t mpreal::get_prec() const$/;"	f	class:mpfr::mpreal
get_random_seed	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^__device__ int get_random_seed() {$/;"	f	namespace:Eigen::internal::__anon70
get_restart	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  Index get_restart() { return m_restart; }$/;"	f	class:Eigen::GMRES
get_shortest_clicks	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  double get_shortest_clicks( void ){$/;"	f	class:X86_Timer
get_symmetrized_graph	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	/^  void get_symmetrized_graph(const MatrixType& A)$/;"	f	class:Eigen::MetisOrdering
get_test_precision	tools/eigen/test/main.h	/^typename NumTraits<T>::Real get_test_precision(typename internal::enable_if<internal::is_arithmetic<typename NumTraits<T>::Real>::value, T>::type* = 0)$/;"	f	namespace:Eigen
get_test_precision	tools/eigen/test/main.h	/^typename NumTraits<typename T::Scalar>::Real get_test_precision(const typename T::Scalar* = 0)$/;"	f	namespace:Eigen
get_time	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  double get_time( void )$/;"	f	class:STL_Timer
get_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct get_type<0, type_list<Head, Tail> >$/;"	s	namespace:Eigen::internal
get_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct get_type<i, type_list<Head, Tail> >$/;"	s	namespace:Eigen::internal
gflops	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  float gflops;$/;"	m	struct:inputfile_entry_t	file:
globalFlags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline int globalFlags() const { return m_globalFlags; }$/;"	f	class:Eigen::DynamicSGroup
globalFlags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static inline int globalFlags() { return group_elements::global_flags; }$/;"	f	class:Eigen::StaticSGroup
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^  constexpr static int global_flags = last_check_flags;$/;"	m	struct:Eigen::internal::contained_in_list_gf
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list_gf<test, check_against, type_list<EIGEN_TPL_PP_SPEC_HACK_USE(empty)>, default_flags, false, last_check_flags> { constexpr static bool value = false; constexpr static int global_flags = default_flags; };$/;"	m	struct:Eigen::internal::contained_in_list_gf
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a, typename b> struct is_same_gf : is_same<a, b> { constexpr static int global_flags = 0; };$/;"	m	struct:Eigen::internal::is_same_gf
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static int global_flags = $/;"	m	struct:Eigen::internal::tensor_static_symgroup_equality
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = 0;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = 0;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = 0;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_generator
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = 0;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = 0;$/;"	m	struct:Eigen::internal::group_theory::strip_identities
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = Equality<current_element, id>::global_flags;$/;"	m	struct:Eigen::internal::group_theory::dimino_first_step_elements_helper
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = Equality<id, t>::global_flags | strip_identities<Equality, id, type_list<ts...>>::global_flags;$/;"	m	struct:Eigen::internal::group_theory::strip_identities
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = _cil::global_flags | _helper::global_flags;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = _helper::global_flags | _ac4r::global_flags;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = _helper::global_flags;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_generator
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = helper::global_flags;$/;"	m	struct:Eigen::internal::group_theory::dimino_first_step_elements
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags = initial_global_flags;$/;"	m	struct:Eigen::internal::group_theory::enumerate_group_elements_noid
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags =$/;"	m	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
global_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int global_flags =$/;"	m	struct:Eigen::internal::group_theory::enumerate_group_elements_noid
global_flags	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_a, dummy_a>     { constexpr static bool value = true;  constexpr static int global_flags = 1; };$/;"	m	struct:dummy_test	file:
global_flags	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_b, dummy_b>     { constexpr static bool value = true;  constexpr static int global_flags = 2; };$/;"	m	struct:dummy_test	file:
global_flags	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_c, dummy_c>     { constexpr static bool value = true;  constexpr static int global_flags = 4; };$/;"	m	struct:dummy_test	file:
global_flags	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<typename A, typename B> struct dummy_test { constexpr static bool value = false; constexpr static int global_flags = 0; };$/;"	m	struct:dummy_test	file:
global_math_functions_filtering_base	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct global_math_functions_filtering_base$/;"	s	namespace:Eigen::internal
global_navtree_object	tools/eigen/doc/eigen_navtree_hacks.js	/^var global_navtree_object;$/;"	v
glue_shapes	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,SelfAdjointShape> { typedef SparseSelfAdjointShape type;  };$/;"	s	namespace:Eigen::internal
glue_shapes	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,TriangularShape > { typedef SparseTriangularShape  type;  };$/;"	s	namespace:Eigen::internal
gmm_interface	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^class gmm_interface {$/;"	c
gmres	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^bool gmres(const MatrixType & mat, const Rhs & rhs, Dest & x, const Preconditioner & precond,$/;"	f	namespace:Eigen::internal
gnorm	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar gnorm() {return m_gnorm; }$/;"	f	class:Eigen::LevenbergMarquardt
gnorm	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar fnorm, gnorm;$/;"	m	class:Eigen::LevenbergMarquardt
go	tools/eigen/bench/btl/generic_bench/static/static_size_generator.hh	/^  static  void go(vector<double> & tab_sizes, vector<double> & tab_mflops)$/;"	f	struct:static_size_generator
go	tools/eigen/bench/btl/generic_bench/static/static_size_generator.hh	/^  static void go(vector<double> & tab_sizes, vector<double> & tab_mflops)$/;"	f	struct:static_size_generator
gpu	tools/eigen/demos/opengl/gpuhelper.cpp	/^GpuHelper gpu;$/;"	v
gpu_device_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::GpuDevice gpu_device_;$/;"	m	struct:GPUContext	file:
grab	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const EigenBase<MatrixDerived> &A)$/;"	f	class:Eigen::IterativeSolverBase
grab	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const Ref<const MatrixType> &A)$/;"	f	class:Eigen::IterativeSolverBase
grab	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void grab(const EigenBase<MatrixDerived> &A)$/;"	f	class:Eigen::UmfPackLU
grab	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void grab(const UmfpackMatrixRef &A)$/;"	f	class:Eigen::UmfPackLU
grabFrame	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::grabFrame(void)$/;"	f	class:RenderingWidget
grabMatrix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLDLT
grabMatrix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLLT
grabMatrix	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLU
gradient	Top.cc	/^mat Top::gradient($/;"	f	class:Top
gradient_L	Top-scalable.cc	/^mat Top::gradient_L(const mat& L, const mat& R, const Relation& r) {$/;"	f	class:Top
gradient_R	Top-scalable.cc	/^mat Top::gradient_R(const mat& L, const mat& R, const Relation& r) {$/;"	f	class:Top
gradient_loss	Top-scalable.cc	/^void Top::gradient_loss(const mat& L, const mat& R, const Relation& r) {$/;"	f	class:Top
gradient_loss_ell	Top.hh	/^    sp_mat *gradient_loss_ell;$/;"	m	class:Top
gram_schmidt	tools/RedSVD.hh	/^	inline void gram_schmidt(MatrixType& mat)$/;"	f	namespace:RedSVD
grandom	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal grandom (gmp_randstate_t& state, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
grandom	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal grandom(unsigned int seed = 0)$/;"	f	namespace:mpfr
greater_equal_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct greater_equal_op {$/;"	s	namespace:Eigen::internal
greater_equal_zero_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct greater_equal_zero_op {$/;"	s	namespace:Eigen::internal
greater_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct greater_op {$/;"	s	namespace:Eigen::internal
greatestRealRoot	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& greatestRealRoot($/;"	f	class:Eigen::PolynomialSolverBase
greatestRoot	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RootType& greatestRoot() const$/;"	f	class:Eigen::PolynomialSolverBase
group_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    > group_elements;$/;"	t	class:Eigen::StaticSGroup
group_theory	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^namespace group_theory {$/;"	n	namespace:Eigen::internal
gtol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar gtol() const {return m_gtol; }$/;"	f	class:Eigen::LevenbergMarquardt
gtol	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar gtol;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
guess	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const GuessType&     guess() const { return m_guess; }$/;"	f	class:Eigen::SolveWithGuess
h	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^Vector3d h = Vector3d::Random();$/;"	v
hCoeffs	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::ColPivHouseholderQR
hCoeffs	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::FullPivHouseholderQR
hCoeffs	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::HouseholderQR
h_apply_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct h_apply_op$/;"	s	namespace:Eigen::internal
h_apply_op_helper	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct h_apply_op_helper                                        { typedef type_list<typename op<values, additional_param>::type...> type; };$/;"	s	namespace:Eigen::internal
h_apply_op_helper	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct h_apply_op_helper<true, op, additional_param, values...> { typedef type_list<typename op<additional_param, values>::type...> type; };$/;"	s	namespace:Eigen::internal
h_permute	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline std::array<Index, N> h_permute(std::size_t which, const std::array<Index, N>& idx, internal::numeric_list<int, n...>) const$/;"	f	class:Eigen::DynamicSGroup
h_permute	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline std::vector<Index> h_permute(std::size_t which, std::vector<Index> idx) const$/;"	f	class:Eigen::DynamicSGroup
h_skip	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct h_skip {$/;"	s	namespace:Eigen::internal
h_skip_helper_numeric	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T i, T... ii>        struct h_skip_helper_numeric<T, 0, i, ii...> { typedef numeric_list<T, i, ii...> type; };$/;"	s	namespace:Eigen::internal
h_skip_helper_numeric	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, int n, T i, T... ii> struct h_skip_helper_numeric<T, n, i, ii...> : h_skip_helper_numeric<T, n-1, ii...> {};$/;"	s	namespace:Eigen::internal
h_skip_helper_numeric	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, int n>               struct h_skip_helper_numeric<T, n>           { typedef numeric_list<T> type; };$/;"	s	namespace:Eigen::internal
h_skip_helper_numeric	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T>                      struct h_skip_helper_numeric<T, 0>           { typedef numeric_list<T> type; };$/;"	s	namespace:Eigen::internal
h_skip_helper_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<>                                  struct h_skip_helper_type<0>           { typedef type_list<> type; };$/;"	s	namespace:Eigen::internal
h_skip_helper_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n, typename t, typename... tt> struct h_skip_helper_type<n, t, tt...> : h_skip_helper_type<n-1, tt...> {};$/;"	s	namespace:Eigen::internal
h_skip_helper_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n>                             struct h_skip_helper_type<n>           { typedef type_list<> type; };$/;"	s	namespace:Eigen::internal
h_skip_helper_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename t, typename... tt>        struct h_skip_helper_type<0, t, tt...> { typedef type_list<t, tt...> type; };$/;"	s	namespace:Eigen::internal
hahn1_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    hahn1_functor(void) : Functor<double>(7,236) {}$/;"	f	struct:hahn1_functor
hahn1_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct hahn1_functor : Functor<double>$/;"	s	file:
hahn1_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    hahn1_functor(void) : DenseFunctor<double>(7,236) {}$/;"	f	struct:hahn1_functor
hahn1_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct hahn1_functor : DenseFunctor<double>$/;"	s	file:
half	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^  typedef T half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4i half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef double2 half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef float4 half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4f half; \/\/ Packet2f intrinsics not implemented yet$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4i half; \/\/ Packet2i intrinsics not implemented yet$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4i half;$/;"	t	struct:Eigen::internal::packet_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^template<typename Packet> struct unpacket_traits<DoublePacket<Packet> > { typedef DoublePacket<Packet> half; };$/;"	t	struct:Eigen::internal::unpacket_traits
handmade_aligned_free	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void handmade_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
handmade_aligned_malloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_malloc(std::size_t size)$/;"	f	namespace:Eigen::internal
handmade_aligned_realloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_realloc(void* ptr, std::size_t size, std::size_t = 0)$/;"	f	namespace:Eigen::internal
hasNaN	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::hasNaN() const$/;"	f	class:Eigen::DenseBase
hasRhs	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool hasRhs() {return m_hasRhs; }$/;"	f	class:Eigen::MatrixMarketIterator
has_denorm	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const float_denorm_style has_denorm  = denorm_absent;$/;"	m	class:std::numeric_limits
has_direct_access	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { has_direct_access = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon491
has_direct_access	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct has_direct_access$/;"	s	namespace:Eigen::internal
has_infinity	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool has_infinity      = true;$/;"	m	class:std::numeric_limits
has_none	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	s	namespace:Eigen::internal
has_quiet_NaN	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool has_quiet_NaN     = true;$/;"	m	class:std::numeric_limits
has_signaling_NaN	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool has_signaling_NaN = true;$/;"	m	class:std::numeric_limits
has_std_result_type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	s	namespace:Eigen::internal
has_tr1_result	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	s	namespace:Eigen::internal
has_write_access	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^         has_write_access = (traits<Derived>::Flags & LvalueBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon491
hash	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType hash ;  \/* hash value, if col is not in a degree list *\/$/;"	m	union:internal::colamd_col::__anon186
hash_next	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType hash_next ;   \/* next column, if col is in a hash list *\/$/;"	m	union:internal::colamd_col::__anon187
hasrefX	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool hasrefX() {return m_hasrefX; }$/;"	f	class:Eigen::MatrixMarketIterator
hc	tools/eigen/doc/snippets/HessenbergDecomposition_packedMatrix.cpp	/^Vector3d hc = hessOfA.householderCoefficients();$/;"	v
hc	tools/eigen/doc/snippets/Tridiagonalization_householderCoefficients.cpp	/^Vector3d hc = triOfA.householderCoefficients();$/;"	v
head	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType head(Index n) const$/;"	f
head	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType head(Index n)$/;"	f
head	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type head(Index n = N) const$/;"	f
head	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type head(Index n = N)$/;"	f
head	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const T head;$/;"	m	struct:Eigen::internal::type_list
headhash	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType headhash ;  \/* head of a hash bucket, if col is at the head of *\/$/;"	m	union:internal::colamd_col::__anon186
heap_relax_snode	tools/eigen/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^void SparseLUImpl<Scalar,StorageIndex>::heap_relax_snode (const Index n, IndexVector& et, const Index relax_columns, IndexVector& descendants, IndexVector& relax_end)$/;"	f	class:Eigen::internal::SparseLUImpl
helper	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef homogeneous_left_product_refactoring_helper<Lhs,typename Rhs::NestedExpression> helper;$/;"	t	struct:Eigen::internal::product_evaluator
helper	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef homogeneous_right_product_refactoring_helper<typename Lhs::NestedExpression,Rhs> helper;$/;"	t	struct:Eigen::internal::product_evaluator
helper	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^  constexpr static inline typename h_skip_helper_numeric<T, n, ii...>::type helper(numeric_list<T, ii...>) { return typename h_skip_helper_numeric<T, n, ii...>::type(); }$/;"	f	struct:Eigen::internal::h_skip
helper	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^  constexpr static inline typename h_skip_helper_type<n, tt...>::type helper(type_list<tt...>) { return typename h_skip_helper_type<n, tt...>::type(); }$/;"	f	struct:Eigen::internal::h_skip
helper	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^  constexpr static typename h_apply_op_helper<from_left, op, additional_param, values...>::type helper(type_list<values...>)$/;"	f	struct:Eigen::internal::h_apply_op
helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  constexpr static inline numeric_list<int, get<iia, iib>::value...> helper(numeric_list<int, iia...>) {$/;"	f	struct:Eigen::internal::tensor_static_symgroup_multiply_helper
helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  > helper;$/;"	t	struct:Eigen::internal::group_theory::dimino_first_step_elements
hemm	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(hemm)(char *side, char *uplo, int *m, int *n, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *pb, int *ldb, RealScalar *pbeta, RealScalar *pc, int *ldc)$/;"	f
hemv	tools/eigen/blas/level2_cplx_impl.h	/^int EIGEN_BLAS_FUNC(hemv)(char *uplo, int *n, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *px, int *incx, RealScalar *pbeta, RealScalar *py, int *incy)$/;"	f
her	tools/eigen/blas/level2_cplx_impl.h	/^int EIGEN_BLAS_FUNC(her)(char *uplo, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *pa, int *lda)$/;"	f
her2	tools/eigen/blas/level2_cplx_impl.h	/^int EIGEN_BLAS_FUNC(her2)(char *uplo, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar *pa, int *lda)$/;"	f
her2k	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(her2k)(char *uplo, char *op, int *n, int *k, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *pb, int *ldb, RealScalar *pbeta, RealScalar *pc, int *ldc)$/;"	f
herk	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(herk)(char *uplo, char *op, int *n, int *k, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *pbeta, RealScalar *pc, int *ldc)$/;"	f
hessenberg	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void hessenberg(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:blas_interface
hessenberg	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void hessenberg(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:eigen2_interface
hessenberg	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void hessenberg(const gene_matrix & X, gene_matrix & C, int  \/*N*\/){$/;"	f	class:eigen3_interface
hessenberg	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void hessenberg(const gene_matrix & X, gene_matrix & R, int N){$/;"	f	class:gmm_interface
hessenberg	tools/eigen/test/hessenberg.cpp	/^template<typename Scalar,int Size> void hessenberg(int size = Size)$/;"	f
hessenbergTriangular	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^    void RealQZ<MatrixType>::hessenbergTriangular()$/;"	f	class:Eigen::RealQZ
hessian_map	Top.cc	/^mat Top::hessian_map($/;"	f	class:Top
hessian_map_L	Top-scalable.cc	/^mat Top::hessian_map_L(const mat& L, const mat& R, const Relation& r, const mat& T) {$/;"	f	class:Top
hessian_map_R	Top-scalable.cc	/^mat Top::hessian_map_R(const mat& L, const mat& R, const Relation& r, const mat& T) {$/;"	f	class:Top
hessian_map_loss	Top-scalable.cc	/^void Top::hessian_map_loss(const mat& L, const mat& R, const Relation& r) {$/;"	f	class:Top
hessian_map_loss_ell	Top.hh	/^    sp_mat *hessian_map_loss_ell;$/;"	m	class:Top
hnormalized	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::hnormalized() const$/;"	f	class:Eigen::MatrixBase
hnormalized	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::hnormalized() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::homogeneous() const$/;"	f	class:Eigen::MatrixBase
homogeneous	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::homogeneous() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous	tools/eigen/test/geo_homogeneous.cpp	/^template<typename Scalar,int Size> void homogeneous(void)$/;"	f
homogeneous_left_product_impl	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  homogeneous_left_product_impl(const Lhs& lhs, const MatrixType& rhs)$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
homogeneous_left_product_impl	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs>$/;"	s	namespace:Eigen::internal
homogeneous_left_product_refactoring_helper	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_left_product_refactoring_helper$/;"	s	namespace:Eigen::internal
homogeneous_right_product_impl	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  homogeneous_right_product_impl(const MatrixType& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
homogeneous_right_product_impl	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs>$/;"	s	namespace:Eigen::internal
homogeneous_right_product_refactoring_helper	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_right_product_refactoring_helper$/;"	s	namespace:Eigen::internal
householder	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    const MatrixType& householder() const { return m_householder; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
householder	tools/eigen/test/householder.cpp	/^template<typename MatrixType> void householder(const MatrixType& m)$/;"	f
householderCoefficients	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const CoeffVectorType& householderCoefficients() const$/;"	f	class:Eigen::HessenbergDecomposition
householderCoefficients	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline CoeffVectorType householderCoefficients() const$/;"	f	class:Eigen::Tridiagonalization
householderQ	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^  ::householderQ() const$/;"	f	class:Eigen::ColPivHouseholderQR
householderQ	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    HouseholderSequenceType householderQ() const$/;"	f	class:Eigen::HouseholderQR
householderQr	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^MatrixBase<Derived>::householderQr() const$/;"	f	class:Eigen::MatrixBase
householderSequence	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType> householderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
householderU	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderUSequenceType householderU() const$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderV	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderVSequenceType householderV() \/\/ const here gives nasty errors and i'm lazy$/;"	f	class:Eigen::internal::UpperBidiagonalization
householder_qr_inplace_blocked	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^struct householder_qr_inplace_blocked$/;"	s	namespace:Eigen::internal
householder_qr_inplace_unblocked	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^void householder_qr_inplace_unblocked(MatrixQR& mat, HCoeffs& hCoeffs, typename MatrixQR::Scalar* tempData = 0)$/;"	f	namespace:Eigen::internal
hpr	tools/eigen/blas/level2_cplx_impl.h	/^int EIGEN_BLAS_FUNC(hpr)(char *uplo, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *pap)$/;"	f
hpr2	tools/eigen/blas/level2_cplx_impl.h	/^int EIGEN_BLAS_FUNC(hpr2)(char *uplo, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar *pap)$/;"	f
hseq_side_dependent_impl	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl$/;"	s	namespace:Eigen::internal
hseq_side_dependent_impl	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl<VectorsType, CoeffsType, OnTheRight>$/;"	s	namespace:Eigen::internal
hybrd1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::hybrd1($/;"	f	class:Eigen::HybridNonLinearSolver
hybrd_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    hybrd_functor(void) : Functor<double>(9,9) {}$/;"	f	struct:hybrd_functor
hybrd_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct hybrd_functor : Functor<double>$/;"	s	file:
hybrj1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::hybrj1($/;"	f	class:Eigen::HybridNonLinearSolver
hybrj_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    hybrj_functor(void) : Functor<double>(9,9) {}$/;"	f	struct:hybrj_functor
hybrj_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct hybrj_functor : Functor<double>$/;"	s	file:
hyperplane	tools/eigen/test/geo_hyperplane.cpp	/^template<typename HyperplaneType> void hyperplane(const HyperplaneType& _plane)$/;"	f
hyperplane_alignment	tools/eigen/test/geo_hyperplane.cpp	/^template<typename Scalar> void hyperplane_alignment()$/;"	f
hypot	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(hypot, Scalar) hypot(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::numext
hypot	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal hypot (const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
hypotNorm	tools/eigen/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::hypotNorm() const$/;"	f	class:Eigen::MatrixBase
hypotNorm	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const HypotNormReturnType hypotNorm() const$/;"	f	class:Eigen::VectorwiseOp
hypotNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar hypotNorm(T& v)$/;"	f
hypot_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct hypot_impl$/;"	s	namespace:Eigen::internal
hypot_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct hypot_retval$/;"	s	namespace:Eigen::internal
i	tools/eigen/blas/f2c/datatypes.h	/^typedef struct { doublereal r, i; } doublecomplex;$/;"	m	struct:__anon136
i	tools/eigen/blas/f2c/datatypes.h	/^typedef struct { real r, i; } complex;$/;"	m	struct:__anon135
i	tools/eigen/doc/snippets/BiCGSTAB_step_by_step.cpp	/^  int i = 0;$/;"	v
i	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^  std::ptrdiff_t i, j;$/;"	v
icc_11_workaround	tools/eigen/Eigen/src/Geometry/Transform.h	/^  template<int OtherMode,int OtherOptions> struct icc_11_workaround$/;"	s	class:Eigen::Transform
id	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    int id, max_iter;$/;"	m	class:MandelbrotThread
id_numeric	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T dummy, typename t> struct id_numeric  { typedef t type; };$/;"	s	namespace:Eigen::internal
id_of	problem.hh	/^    std::unordered_map<int, std::string> id_of;     \/\/ given the instance index, return id$/;"	m	class:Entity
id_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename dummy, typename t>      struct id_type     { typedef t type; };$/;"	s	namespace:Eigen::internal
ifExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const IfXprType& ifExpression() const { return m_condition; }$/;"	f	class:Eigen::TensorSelectOp
ignore_unused_variable	tools/eigen/Eigen/src/Core/util/Macros.h	/^    template<typename T> EIGEN_DEVICE_FUNC void ignore_unused_variable(const T&) {}$/;"	f	namespace:Eigen::internal
iia	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    typedef typename A::indices iia;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_equality
iia	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    typedef typename A::indices iia;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_multiply
iib	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    typedef typename B::indices iib;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_equality
iib	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    typedef typename B::indices iib;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_multiply
imag	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag, Scalar) imag(const Scalar& x)$/;"	f	namespace:Eigen::numext
imag	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() const { return ImagReturnType(derived()); }$/;"	f
imag	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() { return NonConstImagReturnType(derived()); }$/;"	f
imag	tools/eigen/test/exceptions.cpp	/^ScalarWithExceptions imag(const ScalarWithExceptions & ) { return 0; }$/;"	f
imag	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline typename DerType::Scalar imag(const AutoDiffScalar<DerType>&)    { return 0.; }$/;"	f	namespace:Eigen
imag_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct imag_default_impl$/;"	s	namespace:Eigen::internal
imag_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct imag_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
imag_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct imag_impl : imag_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
imag_ref	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) imag_ref(Scalar& x)$/;"	f	namespace:Eigen::numext
imag_ref	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) >::type imag_ref(const Scalar& x)$/;"	f	namespace:Eigen::numext
imag_ref_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl$/;"	s	namespace:Eigen::internal
imag_ref_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
imag_ref_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_impl : imag_ref_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
imag_ref_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_retval$/;"	s	namespace:Eigen::internal
imag_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct imag_retval$/;"	s	namespace:Eigen::internal
image	tools/eigen/Eigen/src/LU/FullPivLU.h	/^      image(const MatrixType& originalMatrix) const$/;"	f	class:Eigen::FullPivLU
image_retval	tools/eigen/Eigen/src/LU/FullPivLU.h	/^struct image_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
image_retval_base	tools/eigen/Eigen/src/misc/Image.h	/^  image_retval_base(const DecompositionType& dec, const MatrixType& originalMatrix)$/;"	f	struct:Eigen::internal::image_retval_base
image_retval_base	tools/eigen/Eigen/src/misc/Image.h	/^template<typename _DecompositionType> struct image_retval_base$/;"	s	namespace:Eigen::internal
impl	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  const linspaced_op_impl<Scalar,PacketType,RandomAccess> impl;$/;"	m	struct:Eigen::internal::linspaced_op
impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  const TensorEvaluator<ArgType, Device>& impl() const { return m_impl; }$/;"	f	struct:Eigen::TensorEvaluator
impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  const TensorEvaluator<ArgType, Device>& impl() const { return m_impl; }$/;"	f	struct:Eigen::TensorEvaluator
impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  const TensorEvaluator<ArgType, Device>& impl() const { return m_impl; }$/;"	f	struct:Eigen::TensorEvaluator
impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  const TensorEvaluator<ArgType, Device>& impl() const { return m_impl; }$/;"	f	struct:Eigen::TensorEvaluator
import_input_file_range_one_product_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  void import_input_file_range_one_product_size($/;"	f	struct:preprocessed_inputfile_t	file:
in1	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::Tensor<float, 3>& in1() const { return in1_; }$/;"	f	struct:CPUContext
in1	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::TensorMap<Eigen::Tensor<float, 3> >& in1() const { return in1_; }$/;"	f	struct:GPUContext
in1_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::Tensor<float, 3>& in1_;$/;"	m	struct:CPUContext	file:
in1_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::TensorMap<Eigen::Tensor<float, 3> >& in1_;$/;"	m	struct:GPUContext	file:
in2	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::Tensor<float, 3>& in2() const { return in2_; }$/;"	f	struct:CPUContext
in2	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::TensorMap<Eigen::Tensor<float, 3> >& in2() const { return in2_; }$/;"	f	struct:GPUContext
in2_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::Tensor<float, 3>& in2_;$/;"	m	struct:CPUContext	file:
in2_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::TensorMap<Eigen::Tensor<float, 3> >& in2_;$/;"	m	struct:GPUContext	file:
in_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex in_col_strides() const { return m_in_col_strides; }$/;"	f	class:Eigen::TensorImagePatchOp
in_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex in_col_strides() const { return m_in_col_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
in_plane_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex in_plane_strides() const { return m_in_plane_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
in_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex in_row_strides() const { return m_in_row_strides; }$/;"	f	class:Eigen::TensorImagePatchOp
in_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex in_row_strides() const { return m_in_row_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
incrRefCount	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  void incrRefCount() { ++m_refcount; }$/;"	f	class:Eigen::internal::TensorLazyBaseEvaluator
incrementToNonZero	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        void incrementToNonZero()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
increment_if_fixed_size	tools/eigen/unsupported/test/polynomialsolver.cpp	/^struct increment_if_fixed_size$/;"	s	namespace:Eigen::internal	file:
increment_if_fixed_size	tools/eigen/unsupported/test/polynomialutils.cpp	/^struct increment_if_fixed_size$/;"	s	namespace:Eigen::internal	file:
index	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index index() const           { return m_iter.index(); }$/;"	f	class:Eigen::InnerIterator
index	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index index() const { return m_inner; }$/;"	f	class:Eigen::internal::inner_iterator_selector
index	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline Index index() const$/;"	f	class:Eigen::Diagonal
index	tools/eigen/Eigen/src/Core/Redux.h	/^    index = Start * packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon635
index	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^      StorageIndex index;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
index	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex index() const { return m_cachedIndex; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
index	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline StorageIndex& index(Index i) { return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline const StorageIndex& index(Index i) const { return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline StorageIndex index() const { return EvalIterator::index() - convert_index<StorageIndex>(IsRowMajor ? m_block.startCol() : m_block.startRow()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline StorageIndex index() const { return convert_index<StorageIndex>(m_outerPos - (IsRowMajor ? m_eval.m_block.startCol() : m_eval.m_block.startRow())); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex index() const { return m_indices[m_id-1]; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex index() const { return m_indices[m_id]; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_id; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_lhsIter.index(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_rhsIter.index(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline StorageIndex index() const  { return m_sparseIter.index(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^      inline StorageIndex index() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline StorageIndex index() const$/;"	f	class:Eigen::TriangularViewImpl::InnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline StorageIndex index() const { return m_data.index(m_id); }$/;"	f	class:Eigen::SparseVector::InnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline StorageIndex index() const { return m_data.index(m_id-1); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
index	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE StorageIndex index() const { return m_inner; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
index	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index index() const { return m_matrix.rowIndex()[m_idrow]; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
index	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index index() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
index	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index index() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
index	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index index() const { return m_id; }$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
index	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index index() const {return m_mat.m_indices[m_id]; }$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
index_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_known_statically<DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_known_statically<const DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_known_statically {$/;"	s	namespace:Eigen::internal
index_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_known_statically<IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_known_statically<const IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_of	problem.hh	/^    std::unordered_map<std::string, int> index_of;  \/\/ given the instance id, return index$/;"	m	class:Entity
index_statically_eq	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_statically_eq<DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_statically_eq	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_statically_eq<const DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_statically_eq	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_eq {$/;"	s	namespace:Eigen::internal
index_statically_eq	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_eq<IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_statically_eq	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_eq<const IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_statically_gt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_statically_gt<DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_statically_gt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_statically_gt<const DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_statically_gt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_gt {$/;"	s	namespace:Eigen::internal
index_statically_gt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_gt<IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_statically_gt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_gt<const IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_statically_lt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_statically_lt<DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_statically_lt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_statically_lt<const DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_statically_lt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_lt {$/;"	s	namespace:Eigen::internal
index_statically_lt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_lt<IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_statically_lt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_lt<const IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_statically_ne	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_statically_ne<DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_statically_ne	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct index_statically_ne<const DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
index_statically_ne	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_ne {$/;"	s	namespace:Eigen::internal
index_statically_ne	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_ne<IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_statically_ne	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct index_statically_ne<const IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
index_tuples	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    index_tuples() const {$/;"	f	class:Eigen::TensorBase
indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationWrapper
indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
indices	tools/eigen/demos/opengl/icosphere.cpp	/^const std::vector<int>& IcoSphere::indices(int level) const$/;"	f	class:IcoSphere
indices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const Indices& indices() const { return m_indices; }$/;"	f	class:Eigen::TensorContractionOp
indices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    const Indices& indices() const { return m_indices; }$/;"	f	class:Eigen::TensorConvolutionOp
indices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  typedef indices_ indices;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_element
indices_statically_known_to_increase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct indices_statically_known_to_increase<DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
indices_statically_known_to_increase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^struct indices_statically_known_to_increase<const DimensionList<Index, Rank> > {$/;"	s	namespace:Eigen::internal
indices_statically_known_to_increase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct indices_statically_known_to_increase {$/;"	s	namespace:Eigen::internal
indices_statically_known_to_increase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct indices_statically_known_to_increase<IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
indices_statically_known_to_increase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct indices_statically_known_to_increase<const IndexList<FirstType, OtherTypes...> > {$/;"	s	namespace:Eigen::internal
infinity	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static const mpfr::mpreal infinity()         { return mpfr::const_infinity();     }$/;"	f	class:std::numeric_limits
inflate	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    inflate(const Strides& strides) const {$/;"	f	class:Eigen::TensorBase
info	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LDLT
info	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LLT
info	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::CholmodBase
info	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexEigenSolver
info	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexSchur
info	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::EigenSolver
info	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::GeneralizedEigenSolver
info	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      ComputationInfo info() const$/;"	f	class:Eigen::RealQZ
info	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::RealSchur
info	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
info	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::DiagonalPreconditioner
info	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::IdentityPreconditioner
info	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
info	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::IncompleteLUT
info	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ComputationInfo info() const$/;"	f	class:Eigen::IterativeSolverBase
info	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PastixBase
info	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PardisoImpl
info	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ColPivHouseholderQR
info	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SPQR
info	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SimplicialCholeskyBase
info	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SparseLU
info	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SparseQR
info	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SuperLUBase
info	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::UmfPackLU
info	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  ComputationInfo info() const$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
info	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::IncompleteCholesky
info	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LevenbergMarquardt
init	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodDecomposition
init	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLDLT
init	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLLT
init	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSupernodalLLT
init	tools/eigen/Eigen/src/Core/Block.h	/^    void init()$/;"	f	class:Eigen::internal::BlockImpl_dense
init	tools/eigen/Eigen/src/Core/Visitor.h	/^  inline void init(const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::coeff_visitor
init	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void init()$/;"	f	class:Eigen::IterativeSolverBase
init	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLDLT
init	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLLT
init	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLU
init	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::init()$/;"	f	class:Eigen::PastixBase
init	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::init(double estimatedDensity)$/;"	f	class:Eigen::internal::AmbiVector
init	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::init(int mode)$/;"	f	class:Eigen::internal::AmbiVector
init	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperILU
init	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLU
init	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLUBase
init	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void init()$/;"	f	class:Eigen::UmfPackLU
init	tools/eigen/test/exceptions.cpp	/^    void init() {$/;"	f	class:ScalarWithExceptions
init	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  template<typename Iter> void init(Iter begin, Iter end) { init(begin, end, 0, 0); }$/;"	f	class:Eigen::KdBVH
init	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  template<typename OIter, typename BIter> void init(OIter begin, OIter end, BIter boxBegin, BIter boxEnd)$/;"	f	class:Eigen::KdBVH
init	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void init()$/;"	f	class:Eigen::IterationController
init	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    void init()$/;"	f	class:Eigen::IterScaling
initAcc	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(AccPacket& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(DoublePacketType& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(Scalar& p) { p = Scalar(0); }$/;"	f	class:Eigen::internal::gebp_traits
initAssignment	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    void initAssignment(const Other& other)$/;"	f	class:Eigen::SparseMatrix
initFactorization	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void initFactorization(const MatrixType& a)$/;"	f	class:Eigen::SuperLUBase
initFrancisQRStep	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::initFrancisQRStep(Index il, Index iu, const Vector3s& shiftInfo, Index& im, Vector3s& firstHouseholderVector)$/;"	f	class:Eigen::RealSchur
initMatrix_identity	tools/eigen/bench/BenchUtil.h	/^template<typename MatrixType> void initMatrix_identity(MatrixType& mat)$/;"	f
initMatrix_random	tools/eigen/bench/BenchUtil.h	/^template<typename MatrixType> void initMatrix_random(MatrixType& mat)$/;"	f
initNavTree	tools/eigen/doc/eigen_navtree_hacks.js	/^function initNavTree(toroot,relpath)$/;"	f
initParallel	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void initParallel(Index rows, Index cols, Index depth, Index num_threads)$/;"	f	class:Eigen::internal::gemm_blocking_space
initParallel	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void initParallel(Index, Index, Index, Index)$/;"	f	class:Eigen::internal::gemm_blocking_space
initParallel	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^inline void initParallel()$/;"	f	namespace:Eigen
initParallelSession	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void initParallelSession(Index num_threads) const$/;"	f	struct:Eigen::internal::gemm_functor
initPoints	tools/eigen/test/denseLM.cpp	/^  void initPoints(VectorType& uv_ref, VectorType& x)$/;"	f	struct:DenseLM
initPoints	tools/eigen/test/sparseLM.cpp	/^  void initPoints(VectorType& uv_ref, VectorType& x)$/;"	f	struct:sparseGaussianTest
initResultRow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	263;"	d
initResultRow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	281;"	d
initSPD	tools/eigen/test/sparse_solvers.cpp	/^initSPD(double density,$/;"	f
initSparse	tools/eigen/test/sparse.h	/^initSparse(double density,$/;"	f
init_matrix	tools/eigen/bench/btl/generic_bench/init/init_matrix.hh	/^BTL_DONT_INLINE void init_matrix(Vector &  A, int size){$/;"	f
init_matrix_symm	tools/eigen/bench/btl/generic_bench/init/init_matrix.hh	/^BTL_DONT_INLINE void init_matrix_symm(Matrix&  A, int size){$/;"	f
init_row	tools/eigen/bench/btl/generic_bench/init/init_matrix.hh	/^BTL_DONT_INLINE void init_row(Vector & X, int size, int row){$/;"	f
init_rows_cols	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType init_rows_cols  \/* returns true if OK, or false otherwise *\/$/;"	f	namespace:internal
init_scoring	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static void init_scoring$/;"	f	namespace:internal
init_vector	tools/eigen/bench/btl/generic_bench/init/init_vector.hh	/^void init_vector(Vector & X, int size){$/;"	f
initial	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  time_t initial, final;$/;"	m	class:STL_Timer
initialize	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  inline void initialize( void ){$/;"	f	class:Action_aat_product
initialize	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  inline void initialize( void ){$/;"	f	class:Action_ata_product
initialize	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  inline void initialize( void ){$/;"	f	class:Action_atv_product
initialize	tools/eigen/bench/btl/actions/action_axpby.hh	/^  inline void initialize( void ){$/;"	f	class:Action_axpby
initialize	tools/eigen/bench/btl/actions/action_axpy.hh	/^  inline void initialize( void ){$/;"	f	class:Action_axpy
initialize	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  inline void initialize( void ){$/;"	f	class:Action_cholesky
initialize	tools/eigen/bench/btl/actions/action_ger.hh	/^  BTL_DONT_INLINE  void initialize( void ){$/;"	f	class:Action_ger
initialize	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  inline void initialize( void ){$/;"	f	class:Action_hessenberg
initialize	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  inline void initialize( void ){$/;"	f	class:Action_tridiagonalization
initialize	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  inline void initialize( void ){$/;"	f	class:Action_lu_decomp
initialize	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  inline void initialize( void ){$/;"	f	class:Action_matrix_matrix_product
initialize	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  BTL_DONT_INLINE  void initialize( void ){$/;"	f	class:Action_matrix_vector_product
initialize	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  inline void initialize( void ){$/;"	f	class:Action_partial_lu
initialize	tools/eigen/bench/btl/actions/action_rot.hh	/^  BTL_DONT_INLINE  void initialize( void ){$/;"	f	class:Action_rot
initialize	tools/eigen/bench/btl/actions/action_symv.hh	/^  BTL_DONT_INLINE  void initialize( void ){$/;"	f	class:Action_symv
initialize	tools/eigen/bench/btl/actions/action_syr2.hh	/^  BTL_DONT_INLINE  void initialize( void ){$/;"	f	class:Action_syr2
initialize	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  inline void initialize( void ){$/;"	f	class:Action_trisolve
initialize	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  inline void initialize( void ){$/;"	f	class:Action_trisolve_matrix
initialize	tools/eigen/bench/btl/actions/action_trmm.hh	/^  inline void initialize( void ){$/;"	f	class:Action_trmm
initialize	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void initialize() {$/;"	f	class:BenchmarkSuite
initialize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T initialize() const {$/;"	f	struct:Eigen::internal::ArgMaxTupleReducer
initialize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T initialize() const {$/;"	f	struct:Eigen::internal::ArgMinTupleReducer
initialize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T initialize() const {$/;"	f	struct:Eigen::internal::MaxReducer
initialize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T initialize() const {$/;"	f	struct:Eigen::internal::MeanReducer
initialize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T initialize() const {$/;"	f	struct:Eigen::internal::MinReducer
initialize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T initialize() const {$/;"	f	struct:Eigen::internal::ProdReducer
initialize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T initialize() const {$/;"	f	struct:Eigen::internal::SumReducer
initialize	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPower<MatrixType>::initialize()$/;"	f	class:Eigen::MatrixPower
initialize	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^  float initialize() const { return 0; }$/;"	f	struct:UserReducer
initializeDeviceProp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^static void initializeDeviceProp() {$/;"	f	namespace:Eigen
initializeGL	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::initializeGL()$/;"	f	class:RenderingWidget
initializePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet initializePacket() const {$/;"	f	struct:Eigen::internal::MaxReducer
initializePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet initializePacket() const {$/;"	f	struct:Eigen::internal::MeanReducer
initializePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet initializePacket() const {$/;"	f	struct:Eigen::internal::MinReducer
initializePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet initializePacket() const {$/;"	f	struct:Eigen::internal::ProdReducer
initializePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet initializePacket() const {$/;"	f	struct:Eigen::internal::SumReducer
initialize_tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	/^void initialize_tensor(TensorEvaluator<Derived, DefaultDevice>& tensor,$/;"	f	namespace:Eigen::internal
initperfvalues	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    void initperfvalues()$/;"	f	class:Eigen::SparseLU
inner	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    inner = Index % DstXprType::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling::__anon645
inner	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    inner = Index % DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon646
inner	tools/eigen/Eigen/src/Core/Redux.h	/^    inner = Start % Derived::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon633
inner	tools/eigen/Eigen/src/Core/Redux.h	/^    inner = index % int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon635
inner	tools/eigen/Eigen/src/Core/Stride.h	/^    inline Index inner() const { return m_inner.value(); }$/;"	f	class:Eigen::Stride
innerBlocks	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index innerBlocks() const { return m_innerBSize; }$/;"	f	class:Eigen::BlockSparseMatrix
innerInd	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *innerInd;$/;"	m	struct:Eigen::SluMatrix::__anon152
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* innerIndexPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* innerIndexPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* innerIndexPtr() { return derived().innerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* innerIndexPtr() const { return derived().innerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* innerIndexPtr()   { return Base::m_innerIndices; }$/;"	f	class:Eigen::SparseMapBase
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* innerIndexPtr() const { return m_innerIndices; }$/;"	f	class:Eigen::SparseMapBase
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* innerIndexPtr() { return &m_data.index(0); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* innerIndexPtr() const { return &m_data.index(0); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* innerIndexPtr() { return derived().nestedExpression().innerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* innerIndexPtr() const { return derived().nestedExpression().innerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE StorageIndex* innerIndexPtr() { return &m_data.index(0); }$/;"	f	class:Eigen::SparseVector
innerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const StorageIndex* innerIndexPtr() const { return &m_data.index(0); }$/;"	f	class:Eigen::SparseVector
innerIndexPtr	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline StorageIndex *innerIndexPtr() {return m_indices; }$/;"	f	class:Eigen::BlockSparseMatrix
innerIndexPtr	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline const StorageIndex *innerIndexPtr() const {return m_indices; }$/;"	f	class:Eigen::BlockSparseMatrix
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* innerNonZeroPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* innerNonZeroPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* innerNonZeroPtr() { return derived().innerNonZeroPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return derived().innerNonZeroPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* innerNonZeroPtr() { return Base::m_innerNonZeros; }$/;"	f	class:Eigen::SparseMapBase
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMapBase
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* innerNonZeroPtr() { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* innerNonZeroPtr() { return derived().nestedExpression().innerNonZeroPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerNonZeroPtr	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return derived().nestedExpression().innerNonZeroPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerNonZeros	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Eigen::Map<IndexVector> innerNonZeros() { return Eigen::Map<IndexVector>(innerNonZeroPtr(), isCompressed()?0:derived().outerSize()); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeros	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const  Eigen::Map<const IndexVector> innerNonZeros() const { return Eigen::Map<const IndexVector>(innerNonZeroPtr(), isCompressed()?0:derived().outerSize()); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeros	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index innerNonZeros(Index j) const { return m_data[j].size(); }$/;"	f	class:Eigen::DynamicSparseMatrix
innerSize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index innerSize() const   { return m_dstExpr.innerSize(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
innerSize	tools/eigen/Eigen/src/Core/DenseBase.h	/^    Index innerSize() const$/;"	f	class:Eigen::DenseBase
innerSize	tools/eigen/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index innerSize() const { return m_xpr.innerSize(); }$/;"	f	class:Eigen::internal::redux_evaluator
innerSize	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::SparseMapBase
innerSize	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
innerSize	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index innerSize() const { return (int(Flags)&RowMajorBit) ? this->cols() : this->rows(); }$/;"	f	class:Eigen::SparseMatrixBase
innerSize	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index innerSize() const { return m_size; }$/;"	f	class:Eigen::SparseVector
innerSize	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  inline Index innerSize() const { return m_matrix.innerSize(); }$/;"	f	class:Eigen::SparseView
innerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index innerSize() const {$/;"	f	class:Eigen::SkylineMatrix
innerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    Index innerSize() const {$/;"	f	class:Eigen::SkylineMatrixBase
innerSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index innerSize() const$/;"	f	class:Eigen::BlockSparseMatrix
innerSize	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::DynamicSparseMatrix
innerStride	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Array
innerStride	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ArrayWrapper
innerStride	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::MatrixWrapper
innerStride	tools/eigen/Eigen/src/Core/Block.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::internal::BlockImpl_dense
innerStride	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
innerStride	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
innerStride	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Diagonal
innerStride	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
innerStride	tools/eigen/Eigen/src/Core/Map.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Map
innerStride	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Matrix
innerStride	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::NestByValue
innerStride	tools/eigen/Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::RefBase
innerStride	tools/eigen/Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::Reverse
innerStride	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::SelfAdjointView
innerStride	tools/eigen/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return derived().nestedExpression().innerStride(); }$/;"	f	class:Eigen::TransposeImpl
innerStride	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return derived().innerStride(); }$/;"	f	class:Eigen::TriangularBase
innerStride	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return derived().nestedExpression().innerStride(); }$/;"	f	class:Eigen::TriangularViewImpl
innerToBlock	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index innerToBlock(Index inner) const$/;"	f	class:Eigen::BlockSparseMatrix
innerVector	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^const typename SparseMatrixBase<Derived>::ConstInnerVectorReturnType SparseMatrixBase<Derived>::innerVector(Index outer) const$/;"	f	class:Eigen::SparseMatrixBase
innerVector	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^typename SparseMatrixBase<Derived>::InnerVectorReturnType SparseMatrixBase<Derived>::innerVector(Index outer)$/;"	f	class:Eigen::SparseMatrixBase
innerVectors	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^SparseMatrixBase<Derived>::innerVectors(Index outerStart, Index outerSize) const$/;"	f	class:Eigen::SparseMatrixBase
innerVectors	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^SparseMatrixBase<Derived>::innerVectors(Index outerStart, Index outerSize)$/;"	f	class:Eigen::SparseMatrixBase
inner_iterator_selector	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector(const EvaluatorType &eval, const Index &outerId, const Index &\/*innerSize*\/)$/;"	f	class:Eigen::internal::inner_iterator_selector
inner_iterator_selector	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector(const EvaluatorType &eval, const Index &outerId, const Index &innerSize)$/;"	f	class:Eigen::internal::inner_iterator_selector
inner_iterator_selector	tools/eigen/Eigen/src/Core/CoreIterators.h	/^class inner_iterator_selector<XprType, IndexBased>$/;"	c	namespace:Eigen::internal
inner_iterator_selector	tools/eigen/Eigen/src/Core/CoreIterators.h	/^class inner_iterator_selector<XprType, IteratorBased>$/;"	c	namespace:Eigen::internal
inner_stride_at_compile_time	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time$/;"	s	namespace:Eigen::internal
inner_stride_at_compile_time	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
inplace_decomposition	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static bool inplace_decomposition(MatrixType& m)$/;"	f	struct:Eigen::internal::LLT_Traits
inplace_transpose_selector	tools/eigen/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,false,MatchPacketSize> { \/\/ non square matrix$/;"	s	namespace:Eigen::internal
inplace_transpose_selector	tools/eigen/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,true,false> { \/\/ square matrix$/;"	s	namespace:Eigen::internal
inplace_transpose_selector	tools/eigen/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,true,true> { \/\/ PacketSize x PacketSize$/;"	s	namespace:Eigen::internal
inputExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    inputExpression() const { return m_input_xpr; }$/;"	f	class:Eigen::TensorConvolutionOp
inputfile_entry_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^struct inputfile_entry_t$/;"	s	file:
inputfile_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  inputfile_t(const string& fname)$/;"	f	struct:inputfile_t
inputfile_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^struct inputfile_t$/;"	s	file:
inputs	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  int inputs() const { return m_inputs; }$/;"	f	struct:Eigen::DenseFunctor
inputs	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  int inputs() const { return m_inputs; }$/;"	f	struct:Eigen::SparseFunctor
inputs	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  int inputs() const { return m_inputs; }$/;"	f	struct:Functor
inputs	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  int inputs() const { return m_inputs; }$/;"	f	struct:Functor
inputs	tools/eigen/unsupported/test/autodiff.cpp	/^  int inputs() const { return m_inputs; }$/;"	f	struct:TestFunc1
inputs	tools/eigen/unsupported/test/forward_adolc.cpp	/^  int inputs() const { return m_inputs; }$/;"	f	struct:TestFunc1
insert	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^typename SparseMatrix<_Scalar,_Options,_Index>::Scalar& SparseMatrix<_Scalar,_Options,_Index>::insert(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insert	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    Scalar& insert(Index i)$/;"	f	class:Eigen::SparseVector
insert	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::SparseVector
insert	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::deque
insert	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::deque
insert	tools/eigen/Eigen/src/StlSupport/StdList.h	/^    iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::list
insert	tools/eigen/Eigen/src/StlSupport/StdList.h	/^    void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::list
insert	tools/eigen/Eigen/src/StlSupport/StdVector.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::vector
insert	tools/eigen/Eigen/src/StlSupport/StdVector.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::vector
insert	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    EIGEN_DONT_INLINE Scalar & insert(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
insert	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
insertBack	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBack(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertBack	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBack(Index i)$/;"	f	class:Eigen::SparseVector
insertBack	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar& insertBack(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
insertBackByOuterInner	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackByOuterInner	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseVector
insertBackByOuterInner	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::DynamicSparseMatrix
insertBackByOuterInnerUnordered	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackByOuterInnerUnordered	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)$/;"	f	class:Eigen::SparseVector
insertBackUncompressed	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_STRONG_INLINE Scalar& insertBackUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertBackUnordered	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBackUnordered(Index i)$/;"	f	class:Eigen::SparseVector
insertByOuterInner	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar& insertByOuterInner(Index j, Index i)$/;"	f	class:Eigen::SparseMatrix
insertCoefficient	tools/eigen/doc/special_examples/Tutorial_sparse_example_details.cpp	/^void insertCoefficient(int id, int i, int j, double w, std::vector<T>& coeffs,$/;"	f
insertCompressed	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_Index>::Scalar& SparseMatrix<_Scalar,_Options,_Index>::insertCompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertUncompressed	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_Index>::Scalar& SparseMatrix<_Scalar,_Options,_Index>::insertUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
instances	tools/eigen/test/exceptions.cpp	/^    static int instances;$/;"	m	class:ScalarWithExceptions	file:
instances	tools/eigen/test/exceptions.cpp	/^int ScalarWithExceptions::instances = 0;$/;"	m	class:ScalarWithExceptions	file:
integer	tools/eigen/blas/f2c/datatypes.h	/^typedef int integer;$/;"	t
integer_type_tests	tools/eigen/test/integer_types.cpp	/^template<typename MatrixType> void integer_type_tests(const MatrixType& m)$/;"	f
internal	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Cholesky/LLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Cholesky/LLT.h	/^namespace internal{$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Cholesky/LLT_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Array.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/BandMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Block.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/CoreIterators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/DenseBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/DenseStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Diagonal.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Dot.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Fuzzy.h	/^namespace internal$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/GlobalFunctions.h	/^  namespace internal$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/IO.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Inverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Map.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Matrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/NestByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Product.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Random.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Redux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Ref.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Replicate.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Reverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Select.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Solve.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/StableNorm.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Swap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Transpose.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Transpositions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/VectorBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/Visitor.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/NEON/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/functors/StlFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/Constants.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/Macros.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/Macros.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/Meta.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/Transform.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/Umeyama.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Householder/BlockHouseholder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Householder/Householder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/LU/Determinant.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/LU/FullPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/LU/InverseImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/LU/PartialPivLU_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^namespace internal {$/;"	n
internal	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/QR/HouseholderQR_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseColEtree.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLUImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_Utils.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_pivotL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_pruneL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/StlSupport/details.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/misc/Image.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/Eigen/src/misc/Kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/bench/bench_norm.cpp	/^namespace internal {$/;"	n	namespace:Eigen	file:
internal	tools/eigen/blas/BandTriangularSolver.h	/^namespace internal {$/;"	n
internal	tools/eigen/blas/GeneralRank1Update.h	/^namespace internal {$/;"	n
internal	tools/eigen/blas/PackedSelfadjointProduct.h	/^namespace internal {$/;"	n
internal	tools/eigen/blas/PackedTriangularMatrixVector.h	/^namespace internal {$/;"	n
internal	tools/eigen/blas/PackedTriangularSolverVector.h	/^namespace internal {$/;"	n
internal	tools/eigen/blas/Rank2Update.h	/^namespace internal {$/;"	n
internal	tools/eigen/blas/level1_cplx_impl.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/test/main.h	/^      namespace internal$/;"	n	namespace:Eigen
internal	tools/eigen/test/packetmath.cpp	/^namespace internal {$/;"	n	namespace:Eigen	file:
internal	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIO.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMcovar.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMpar.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMqrsolv.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^namespace internal { $/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/chkder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/covar.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/dogleg.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/lmpar.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/r1updt.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^namespace internal $/;"	n	namespace:Eigen
internal	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^    namespace internal {$/;"	n	namespace:Eigen	file:
internal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^namespace internal{$/;"	n	namespace:mpfr
internal	tools/eigen/unsupported/test/polynomialsolver.cpp	/^namespace internal {$/;"	n	namespace:Eigen	file:
internal	tools/eigen/unsupported/test/polynomialutils.cpp	/^namespace internal {$/;"	n	namespace:Eigen	file:
intersectObject	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  bool intersectObject(const Object1 &obj) { return intersector.intersectObjectObject(obj, stored); }$/;"	f	struct:Eigen::internal::intersector_helper1
intersectObject	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  bool intersectObject(const Object2 &obj) { return intersector.intersectObjectObject(stored, obj); }$/;"	f	struct:Eigen::internal::intersector_helper2
intersectObject	tools/eigen/unsupported/test/BVH.cpp	/^  bool intersectObject(const BallType &b) {$/;"	f	struct:BallPointStuff
intersectObjectObject	tools/eigen/unsupported/test/BVH.cpp	/^  bool intersectObjectObject(const BallType &b, const VectorType &v){$/;"	f	struct:BallPointStuff
intersectObjectObject	tools/eigen/unsupported/test/BVH.cpp	/^  bool intersectObjectObject(const BallType &b1, const BallType &b2){$/;"	f	struct:BallPointStuff
intersectObjectVolume	tools/eigen/unsupported/test/BVH.cpp	/^  bool intersectObjectVolume(const BallType &b, const BoxType &r) { ++calls; return r.squaredExteriorDistance(b.center) < SQR(b.radius); }$/;"	f	struct:BallPointStuff
intersectVolume	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  bool intersectVolume(const Volume1 &vol) { return intersector.intersectVolumeObject(vol, stored); }$/;"	f	struct:Eigen::internal::intersector_helper1
intersectVolume	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  bool intersectVolume(const Volume2 &vol) { return intersector.intersectObjectVolume(stored, vol); }$/;"	f	struct:Eigen::internal::intersector_helper2
intersectVolume	tools/eigen/unsupported/test/BVH.cpp	/^  bool intersectVolume(const BoxType &r) { ++calls; return r.contains(p); }$/;"	f	struct:BallPointStuff
intersectVolumeObject	tools/eigen/unsupported/test/BVH.cpp	/^  bool intersectVolumeObject(const BoxType &r, const BallType &b) { ++calls; return r.squaredExteriorDistance(b.center) < SQR(b.radius); }$/;"	f	struct:BallPointStuff
intersectVolumeObject	tools/eigen/unsupported/test/BVH.cpp	/^  bool intersectVolumeObject(const BoxType &r, const VectorType &v) { ++calls; return r.contains(v); }$/;"	f	struct:BallPointStuff
intersectVolumeVolume	tools/eigen/unsupported/test/BVH.cpp	/^  bool intersectVolumeVolume(const BoxType &r1, const BoxType &r2) { ++calls; return !(r1.intersection(r2)).isNull(); }$/;"	f	struct:BallPointStuff
intersect_helper	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^bool intersect_helper(const BVH &tree, Intersector &intersector, typename BVH::Index root)$/;"	f	namespace:Eigen::internal
intersection	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox intersection(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
intersection	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  VectorType intersection(const Hyperplane& other) const$/;"	f	class:Eigen::Hyperplane
intersection	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersection(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionParameter	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionParameter(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionPoint	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionPoint(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersector	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Intersector &intersector;$/;"	m	struct:Eigen::internal::intersector_helper1
intersector	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Intersector &intersector;$/;"	m	struct:Eigen::internal::intersector_helper2
intersector_helper1	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  intersector_helper1(const Object2 &inStored, Intersector &in) : stored(inStored), intersector(in) {}$/;"	f	struct:Eigen::internal::intersector_helper1
intersector_helper1	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^struct intersector_helper1$/;"	s	namespace:Eigen::internal
intersector_helper2	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  intersector_helper2(const Object1 &inStored, Intersector &in) : stored(inStored), intersector(in) {}$/;"	f	struct:Eigen::internal::intersector_helper2
intersector_helper2	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^struct intersector_helper2$/;"	s	namespace:Eigen::internal
intersects	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline bool intersects(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
intone	tools/eigen/bench/bench_gemm.cpp	/^static int intone = 1;$/;"	v	file:
intone	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	/^static int intone = 1;$/;"	v
inv	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv( Scalar * dst,const Complex * src,int nfft) $/;"	f	struct:Eigen::internal::fftw_impl
inv	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv(Complex * dst,const Complex  *src,int nfft)$/;"	f	struct:Eigen::internal::fftw_impl
inv	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv(complex_type * dst,complex_type * src,int nfft) {$/;"	f	struct:Eigen::internal::fftw_plan
inv	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv(scalar_type * dst,complex_type * src,int nfft) {$/;"	f	struct:Eigen::internal::fftw_plan
inv	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void inv( Scalar * dst,const Complex * src,int nfft) $/;"	f	struct:Eigen::internal::kissfft_impl
inv	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void inv(Complex * dst,const Complex  *src,int nfft)$/;"	f	struct:Eigen::internal::kissfft_impl
inv2	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv2( complex_type * dst,complex_type * src,int n0,int n1) {$/;"	f	struct:Eigen::internal::fftw_plan
inv2	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv2(Complex * dst, const Complex * src, int n0,int n1)$/;"	f	struct:Eigen::internal::fftw_impl
inv2	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void inv2( Complex * dst,const Complex *src,int n0,int n1)$/;"	f	struct:Eigen::internal::kissfft_impl
inv_cond	tools/eigen/doc/examples/function_taking_ref.cpp	/^float inv_cond(const Ref<const MatrixXf>& a)$/;"	f
inv_exp_lambda	Top.hh	/^    mat inv_exp_lambda; \/*nonzero eigenvalues for G*\/$/;"	m	class:Top
inv_exp_mu	Top.hh	/^    mat inv_exp_mu;     \/*nonzero eigenvalues for H*\/$/;"	m	class:Top
inverse	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inverse() const$/;"	f	class:Eigen::DiagonalBase
inverse	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline TransposeReturnType inverse() const$/;"	f	class:Eigen::PermutationBase
inverse	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> inverse() const$/;"	f	class:Eigen::TranspositionsBase
inverse	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  AngleAxis inverse() const$/;"	f	class:Eigen::AngleAxis
inverse	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^inline Quaternion<typename internal::traits<Derived>::Scalar> QuaternionBase<Derived>::inverse() const$/;"	f	class:Eigen::QuaternionBase
inverse	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D inverse() const { return Rotation2D(-m_angle); }$/;"	f	class:Eigen::Rotation2D
inverse	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline Derived inverse() const { return derived().inverse(); }$/;"	f	class:Eigen::RotationBase
inverse	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling inverse() const$/;"	f	class:Eigen::UniformScaling
inverse	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::inverse(TransformTraits hint) const$/;"	f	class:Eigen::Transform
inverse	tools/eigen/Eigen/src/Geometry/Translation.h	/^  Translation inverse() const { return Translation(-m_coeffs); }$/;"	f	class:Eigen::Translation
inverse	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType inverse() const { return adjoint(); }$/;"	f	class:Eigen::HouseholderSequence
inverse	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline const Inverse<FullPivLU> inverse() const$/;"	f	class:Eigen::FullPivLU
inverse	tools/eigen/Eigen/src/LU/InverseImpl.h	/^inline const Inverse<Derived> MatrixBase<Derived>::inverse() const$/;"	f	class:Eigen::MatrixBase
inverse	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    inline const Inverse<PartialPivLU> inverse() const$/;"	f	class:Eigen::PartialPivLU
inverse	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline const Inverse<ColPivHouseholderQR> inverse() const$/;"	f	class:Eigen::ColPivHouseholderQR
inverse	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline const Inverse<FullPivHouseholderQR> inverse() const$/;"	f	class:Eigen::FullPivHouseholderQR
inverse	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^inverse() const$/;"	f
inverse	tools/eigen/doc/snippets/MatrixBase_computeInverseAndDetWithCheck.cpp	/^Matrix3d inverse;$/;"	v
inverse	tools/eigen/doc/snippets/MatrixBase_computeInverseWithCheck.cpp	/^Matrix3d inverse;$/;"	v
inverse	tools/eigen/test/inverse.cpp	/^template<typename MatrixType> void inverse(const MatrixType& m)$/;"	f
inverse	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    inverse() const {$/;"	f	class:Eigen::TensorBase
inverse_general_4x4	tools/eigen/test/prec_inverse_4x4.cpp	/^template<typename MatrixType> void inverse_general_4x4(int repeat)$/;"	f
inverse_permutation_4x4	tools/eigen/test/prec_inverse_4x4.cpp	/^template<typename MatrixType> void inverse_permutation_4x4()$/;"	f
invertible	tools/eigen/doc/snippets/MatrixBase_computeInverseAndDetWithCheck.cpp	/^bool invertible;$/;"	v
invertible	tools/eigen/doc/snippets/MatrixBase_computeInverseWithCheck.cpp	/^bool invertible;$/;"	v
invokation_name	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  virtual const char* invokation_name() const { abort(); return nullptr; }$/;"	f	struct:action_t
iparm	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<StorageIndex,IPARM_SIZE,1>& iparm()$/;"	f	class:Eigen::PastixBase
iparm	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int& iparm(int idxparam)$/;"	f	class:Eigen::PastixBase
isApprox	tools/eigen/Eigen/src/Core/Fuzzy.h	/^bool DenseBase<Derived>::isApprox($/;"	f	class:Eigen::DenseBase
isApprox	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(bool x, bool y, bool)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApprox	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline bool isApprox(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApprox	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  bool isApprox(const AlignedBox& other, const RealScalar& prec = ScalarTraits::dummy_precision()) const$/;"	f	class:Eigen::AlignedBox
isApprox	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  bool isApprox(const AngleAxis& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::AngleAxis
isApprox	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  bool isApprox(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Hyperplane
isApprox	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  bool isApprox(const ParametrizedLine& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::ParametrizedLine
isApprox	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  bool isApprox(const QuaternionBase<OtherDerived>& other, const RealScalar& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::QuaternionBase
isApprox	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  bool isApprox(const Rotation2D& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Rotation2D
isApprox	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  bool isApprox(const UniformScaling& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::UniformScaling
isApprox	tools/eigen/Eigen/src/Geometry/Transform.h	/^  bool isApprox(const Transform& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Transform
isApprox	tools/eigen/Eigen/src/Geometry/Translation.h	/^  bool isApprox(const Translation& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Translation
isApprox	tools/eigen/Eigen/src/SparseCore/SparseFuzzy.h	/^bool SparseMatrixBase<Derived>::isApprox(const SparseMatrixBase<OtherDerived>& other, const RealScalar &prec) const$/;"	f	class:Eigen::SparseMatrixBase
isApprox	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other,$/;"	f	class:Eigen::SparseMatrixBase
isApproxAbs	tools/eigen/test/packetmath.cpp	/^template<typename Scalar> bool isApproxAbs(const Scalar& a, const Scalar& b, const typename NumTraits<Scalar>::Real& refvalue)$/;"	f
isApproxOrLessThan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const bool& x, const bool& y, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApproxOrLessThan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApproxToConstant	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isApproxToConstant$/;"	f	class:Eigen::DenseBase
isApprox_selector	tools/eigen/Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector$/;"	s	namespace:Eigen::internal
isApprox_selector	tools/eigen/Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isCompressed	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    bool isCompressed() const { return m_matrix.innerNonZeroPtr()==0; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
isCompressed	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline bool isCompressed() const { return innerNonZeroPtr()==0; }$/;"	f	class:Eigen::SparseCompressedBase
isCompressed	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    bool isCompressed() const { return m_innerNonZeros==0; }$/;"	f	class:Eigen::SparseMapBase
isCompressed	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline bool isCompressed() const {return true;}$/;"	f	class:Eigen::BlockSparseMatrix
isConstant	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isConstant$/;"	f	class:Eigen::DenseBase
isDiagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^bool MatrixBase<Derived>::isDiagonal(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isDynGroup	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^bool isDynGroup(DynamicSGroup const& dummy)$/;"	f
isDynGroup	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^bool isDynGroup(StaticSGroup<Sym...> const& dummy)$/;"	f
isEmpty	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline bool isEmpty() const { return (m_min.array() > m_max.array()).any(); }$/;"	f	class:Eigen::AlignedBox
isEqualFuzzy	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool isEqualFuzzy(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
isEqualFuzzy	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool isEqualFuzzy(const mpreal& a, const mpreal& b, const mpreal& eps)$/;"	f	namespace:mpfr
isEqualUlps	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool isEqualUlps(const mpreal& a, const mpreal& b, int maxUlps)$/;"	f	namespace:mpfr
isEquiv	tools/eigen/bench/btl/generic_bench/btl.hh	/^    bool isEquiv(const BtlString& str) const$/;"	f	class:BtlString
isFinite	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isFinite() const$/;"	f
isFolderValid	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool isFolderValid() { return bool(m_folder_id); }$/;"	f	class:Eigen::MatrixMarketIterator
isHorizontal	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^      isHorizontal = (Direction==Horizontal) ? 1 : 0$/;"	e	enum:Eigen::VectorwiseOp::__anon579
isId	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^      bool isId() const$/;"	f	struct:Eigen::DynamicSGroup::GroupElement
isIdentity	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^bool MatrixBase<Derived>::isIdentity$/;"	f	class:Eigen::MatrixBase
isInf	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isInf() const$/;"	f
isInjective	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivLU
isInjective	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInjective	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isInvertible	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivLU
isInvertible	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInvertible	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivHouseholderQR
isLowerTriangular	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isLowerTriangular(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isMinusInf	tools/eigen/test/main.h	/^template<typename T> bool isMinusInf(const T& x)$/;"	f	namespace:Eigen
isMuchSmallerThan	tools/eigen/Eigen/src/Core/Fuzzy.h	/^bool DenseBase<Derived>::isMuchSmallerThan($/;"	f	class:Eigen::DenseBase
isMuchSmallerThan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const Scalar&, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const bool& x, const bool&, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isMuchSmallerThan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y,$/;"	f	namespace:Eigen::internal
isMuchSmallerThan_object_selector	tools/eigen/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_object_selector	tools/eigen/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	tools/eigen/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	tools/eigen/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector<Derived, true>$/;"	s	namespace:Eigen::internal
isNaN	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isNaN() const$/;"	f
isNegative	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline bool isNegative(void) const$/;"	f	class:Eigen::LDLT
isNotNaN	tools/eigen/test/main.h	/^template<typename T> bool isNotNaN(const T& x)$/;"	f	namespace:Eigen
isNull	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline bool isNull() const { return isEmpty(); }$/;"	f	class:Eigen::AlignedBox
isOnes	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isOnes$/;"	f	class:Eigen::DenseBase
isOrthogonal	tools/eigen/Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isOrthogonal$/;"	f	class:Eigen::MatrixBase
isPlusInf	tools/eigen/test/main.h	/^template<typename T> bool isPlusInf(const T& x)$/;"	f	namespace:Eigen
isPositive	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline bool isPositive() const$/;"	f	class:Eigen::LDLT
isRValue	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isRValue() const { return m_isRValue; }$/;"	f	class:Eigen::SparseMatrixBase
isRValue	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    bool isRValue() const {$/;"	f	class:Eigen::SkylineMatrixBase
isSurjective	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivLU
isSurjective	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isSurjective	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isSymmetric	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    void isSymmetric(bool sym)$/;"	f	class:Eigen::SparseLU
isUnitary	tools/eigen/Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isUnitary(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isUpperTriangular	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isUpperTriangular(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isVector	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline bool isVector() const { return rows()==1 || cols()==1; }$/;"	f	class:Eigen::SparseMatrixBase
isVertical	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^      isVertical   = (Direction==Vertical) ? 1 : 0,$/;"	e	enum:Eigen::VectorwiseOp::__anon579
isZero	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isZero(const RealScalar& prec) const$/;"	f	class:Eigen::DenseBase
is_arithmetic	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256d> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256i> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<double2> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<float4>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	s	namespace:Eigen::internal
is_bounded	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool is_bounded        = true;$/;"	m	class:std::numeric_limits
is_compile_time_constant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct is_compile_time_constant {$/;"	s	namespace:Eigen::internal
is_compile_time_constant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct is_compile_time_constant<const type2index<idx> > {$/;"	s	namespace:Eigen::internal
is_compile_time_constant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct is_compile_time_constant<const type2index<idx>& > {$/;"	s	namespace:Eigen::internal
is_compile_time_constant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct is_compile_time_constant<type2index<idx> > {$/;"	s	namespace:Eigen::internal
is_compile_time_constant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct is_compile_time_constant<type2index<idx>& > {$/;"	s	namespace:Eigen::internal
is_const	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_const	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_convertible	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct is_convertible$/;"	s	namespace:Eigen::internal
is_convertible_impl	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct is_convertible_impl$/;"	s	namespace:Eigen::internal
is_cubic	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  bool is_cubic() const { return k == m && m == n; }$/;"	f	struct:size_triple_t
is_dynamic_size_storage	tools/eigen/Eigen/src/Core/Matrix.h	/^      is_dynamic_size_storage = _MaxRows==Dynamic || _MaxCols==Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon292
is_dynamic_size_storage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    is_dynamic_size_storage = 1,$/;"	e	enum:Eigen::internal::compute_tensor_flags::__anon107
is_exact	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool is_exact          = false;$/;"	m	class:std::numeric_limits
is_iec559	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool is_iec559         = true;        \/\/ = IEEE 754$/;"	m	class:std::numeric_limits
is_imag	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static bool is_imag      = value && flags_cmp_ == (NegationFlag | ConjugationFlag);$/;"	m	struct:Eigen::internal::tensor_static_symgroup_equality
is_integer	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool is_integer        = false;$/;"	m	class:std::numeric_limits
is_large	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  enum { is_large = MaxSize == Dynamic ||$/;"	e	enum:Eigen::internal::product_size_category::__anon589
is_last_subset	tools/eigen/bench/analyze-blocking-sizes.cpp	/^bool is_last_subset(const vector<size_t>& subset, size_t set_size)$/;"	f
is_malloc_allowed	tools/eigen/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool is_malloc_allowed() { return is_malloc_allowed_impl(false); }$/;"	f	namespace:Eigen::internal
is_malloc_allowed_impl	tools/eigen/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool is_malloc_allowed_impl(bool update, bool new_value = false)$/;"	f	namespace:Eigen::internal
is_modulo	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool is_modulo         = false;$/;"	m	class:std::numeric_limits
is_number_of_subsets_feasible	tools/eigen/bench/analyze-blocking-sizes.cpp	/^bool is_number_of_subsets_feasible(size_t n, size_t p)$/;"	f
is_real	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static bool is_real      = value && flags_cmp_ == ConjugationFlag;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_equality
is_same	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_same	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_same_gf	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a, typename b> struct is_same_gf : is_same<a, b> { constexpr static int global_flags = 0; };$/;"	s	namespace:Eigen::internal
is_signed	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool is_signed         = true;$/;"	m	class:std::numeric_limits
is_specialized	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool is_specialized    = true;$/;"	m	class:std::numeric_limits
is_zero	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static bool is_zero      = value && flags_cmp_ == NegationFlag;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_equality
isfinite	tools/eigen/Eigen/src/Core/MathFunctions.h	/^bool (isfinite)(const T& x)$/;"	f	namespace:Eigen::numext
isfinite	tools/eigen/Eigen/src/Core/MathFunctions.h	/^bool (isfinite)(const std::complex<T>& x)$/;"	f	namespace:Eigen::numext
isfinite	tools/eigen/test/main.h	60;"	d
isfinite	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool (isfinite) (const mpreal& op){    return (mpfr_number_p (op.mpfr_srcptr()) != 0 );    }$/;"	f	namespace:mpfr
isinf	tools/eigen/Eigen/src/Core/MathFunctions.h	/^bool (isinf)(const T& x)$/;"	f	namespace:Eigen::numext
isinf	tools/eigen/Eigen/src/Core/MathFunctions.h	/^bool (isinf)(const std::complex<T>& x)$/;"	f	namespace:Eigen::numext
isinf	tools/eigen/test/main.h	59;"	d
isinf	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool (isinf)    (const mpreal& op){    return (mpfr_inf_p    (op.mpfr_srcptr()) != 0 );    }$/;"	f	namespace:mpfr
isint	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool isint    (const mpreal& op){    return (mpfr_integer_p(op.mpfr_srcptr()) != 0 );    }$/;"	f	namespace:mpfr
isnan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^bool (isnan)(const T& x)$/;"	f	namespace:Eigen::numext
isnan	tools/eigen/Eigen/src/Core/MathFunctions.h	/^bool (isnan)(const std::complex<T>& x)$/;"	f	namespace:Eigen::numext
isnan	tools/eigen/test/main.h	58;"	d
isnan	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool (isnan)    (const mpreal& op){    return (mpfr_nan_p    (op.mpfr_srcptr()) != 0 );    }$/;"	f	namespace:mpfr
isosamples	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set isosamples 10, 10$/;"	v
isregular	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool isregular(const mpreal& op){    return (mpfr_regular_p(op.mpfr_srcptr()));}$/;"	f	namespace:mpfr
iszero	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool iszero   (const mpreal& op){    return (mpfr_zero_p   (op.mpfr_srcptr()) != 0 );    }$/;"	f	namespace:mpfr
itb	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockInnerIterator itb; \/\/ Iterator through the blocks$/;"	m	class:Eigen::BlockSparseMatrix::InnerIterator
iter	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index iter;$/;"	m	class:Eigen::HybridNonLinearSolver
iter	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index iter;$/;"	m	class:Eigen::LevenbergMarquardt
iteration	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    size_t iteration() const { return m_nit; }$/;"	f	class:Eigen::IterationController
iterations	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      Index iterations() const$/;"	f	class:Eigen::RealQZ
iterations	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index iterations() const$/;"	f	class:Eigen::IterativeSolverBase
iterations	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  vector<long> iterations;$/;"	m	class:STL_Timer
iterations	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index iterations() { return m_iter; }$/;"	f	class:Eigen::LevenbergMarquardt
iters_before_test	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^template<> struct iters_before_test<double> { enum { ret = 16 }; };$/;"	s	file:
iters_before_test	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^template<typename T> struct iters_before_test { enum { ret = 8 }; };$/;"	s	file:
j	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^       << ") is at position (" << i << "," << j << ")\\n\\n";$/;"	v
j	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^  std::ptrdiff_t i, j;$/;"	v
jacobi	tools/eigen/test/jacobi.cpp	/^void jacobi(const MatrixType& m = MatrixType())$/;"	f
jacobiSvd	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^MatrixBase<Derived>::jacobiSvd(unsigned int computationOptions) const$/;"	f	class:Eigen::MatrixBase
jacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline JacobianType& jacobian() { return m_jacobian; }$/;"	f	class:Eigen::AutoDiffVector
jacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline const JacobianType& jacobian() const { return m_jacobian; }$/;"	f	class:Eigen::AutoDiffVector
jacobian	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    JacobianType& jacobian() {return m_fjac; }$/;"	f	class:Eigen::LevenbergMarquardt
jacobisvd	tools/eigen/test/jacobisvd.cpp	/^void jacobisvd(const MatrixType& a = MatrixType(), bool pickrandom = true)$/;"	f
jacobisvd_method	tools/eigen/test/jacobisvd.cpp	/^void jacobisvd_method()$/;"	f
jacobisvd_verify_assert	tools/eigen/test/jacobisvd.cpp	/^template<typename MatrixType> void jacobisvd_verify_assert(const MatrixType& m)$/;"	f
jeval	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    bool jeval;$/;"	m	class:Eigen::HybridNonLinearSolver
k	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  uint16_t k, m, n;$/;"	m	struct:size_triple_t	file:
k	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index k;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
k_	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  size_t k_;$/;"	m	class:BenchmarkSuite
k_block_idx	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index k_block_idx;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
k_g	Top.hh	/^    int k_g;$/;"	m	class:Top
k_h	Top.hh	/^    int k_h;$/;"	m	class:Top
k_start	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index k_start;$/;"	m	struct:Eigen::internal::packLhsArg
kc	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index kc() const { return m_kc; }$/;"	f	class:Eigen::internal::level3_blocking
kc	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index kc;$/;"	m	struct:Eigen::internal::packLhsArg
kc	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index kc;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
keep_diag	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    struct keep_diag {$/;"	s	class:Eigen::IncompleteLUT
keep_diag	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    struct keep_diag {$/;"	s	class:Eigen::SimplicialCholeskyBase
ker	tools/eigen/doc/snippets/FullPivLU_kernel.cpp	/^MatrixXf ker = m.fullPivLu().kernel();$/;"	v
kernel	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline const internal::kernel_retval<FullPivLU> kernel() const$/;"	f	class:Eigen::FullPivLU
kernel1d	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::TensorMap<Eigen::Tensor<float, 1> > kernel1d() const { return Eigen::TensorMap<Eigen::Tensor<float, 1> >(kernel_1d_, 2); }$/;"	f	struct:GPUContext
kernel1d	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::Tensor<float, 1>& kernel1d() const { return kernel_1d_; }$/;"	f	struct:CPUContext
kernel2d	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::TensorMap<Eigen::Tensor<float, 2> > kernel2d() const { return Eigen::TensorMap<Eigen::Tensor<float, 2> >(kernel_2d_, 2, 2); }$/;"	f	struct:GPUContext
kernel2d	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::Tensor<float, 2>& kernel2d() const { return kernel_2d_; }$/;"	f	struct:CPUContext
kernel3d	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::TensorMap<Eigen::Tensor<float, 3> > kernel3d() const { return Eigen::TensorMap<Eigen::Tensor<float, 3> >(kernel_3d_, 2, 2, 2); }$/;"	f	struct:GPUContext
kernel3d	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  const Eigen::Tensor<float, 3>& kernel3d() const { return kernel_3d_; }$/;"	f	struct:CPUContext
kernelExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    kernelExpression() const { return m_kernel_xpr; }$/;"	f	class:Eigen::TensorConvolutionOp
kernel_1d_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::Tensor<float, 1> kernel_1d_;$/;"	m	struct:CPUContext	file:
kernel_1d_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  float* kernel_1d_;$/;"	m	struct:GPUContext	file:
kernel_2d_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::Tensor<float, 2> kernel_2d_;$/;"	m	struct:CPUContext	file:
kernel_2d_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  float* kernel_2d_;$/;"	m	struct:GPUContext	file:
kernel_3d_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::Tensor<float, 3> kernel_3d_;$/;"	m	struct:CPUContext	file:
kernel_3d_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  float* kernel_3d_;$/;"	m	struct:GPUContext	file:
kernel_notifications	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  std::vector<Notification*>* kernel_notifications;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
kernel_retval	tools/eigen/Eigen/src/LU/FullPivLU.h	/^struct kernel_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
kernel_retval_base	tools/eigen/Eigen/src/misc/Kernel.h	/^  explicit kernel_retval_base(const DecompositionType& dec)$/;"	f	struct:Eigen::internal::kernel_retval_base
kernel_retval_base	tools/eigen/Eigen/src/misc/Kernel.h	/^template<typename _DecompositionType> struct kernel_retval_base$/;"	s	namespace:Eigen::internal
keyPressEvent	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::keyPressEvent(QKeyEvent * e)$/;"	f	class:RenderingWidget
kill_extra_precision	tools/eigen/test/geo_alignedbox.cpp	/^void kill_extra_precision(T& x) { eigen_assert(&x != 0); }$/;"	f
kiss_cpx_fft	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^struct kiss_cpx_fft$/;"	s	namespace:Eigen::internal
kissfft_impl	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^struct kissfft_impl$/;"	s	namespace:Eigen::internal
knots	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    const KnotVectorType& knots() const { return m_knots; }$/;"	f	class:Eigen::Spline
kroneckerProduct	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^KroneckerProduct<A,B> kroneckerProduct(const MatrixBase<A>& a, const MatrixBase<B>& b)$/;"	f	namespace:Eigen
kroneckerProduct	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^KroneckerProductSparse<A,B> kroneckerProduct(const EigenBase<A>& a, const EigenBase<B>& b)$/;"	f	namespace:Eigen
kv_pair_less	tools/eigen/bench/sparse_setter.cpp	/^bool kv_pair_less(const std::pair<T1,T2>& x, const std::pair<T1,T2>& y){$/;"	f
l	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^Matrix5x5 l = Matrix5x5::Identity();$/;"	v
l1CacheSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l1CacheSize()$/;"	f	namespace:Eigen
l2CacheSize	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l2CacheSize()$/;"	f	namespace:Eigen
lambda	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^complex<float> lambda = ces.eigenvalues()[0];$/;"	v
lambda	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^complex<double> lambda = es.eigenvalues()[0];$/;"	v
lambda	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^double lambda = es.eigenvalues()[0];$/;"	v
lambda	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^double lambda = es.eigenvalues()[0];$/;"	v
lanczos1_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    lanczos1_functor(void) : Functor<double>(6,24) {}$/;"	f	struct:lanczos1_functor
lanczos1_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct lanczos1_functor : Functor<double>$/;"	s	file:
lanczos1_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    lanczos1_functor(void) : DenseFunctor<double>(6,24) {}$/;"	f	struct:lanczos1_functor
lanczos1_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct lanczos1_functor : DenseFunctor<double>$/;"	s	file:
lapackNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar lapackNorm(T& v)$/;"	f
lastCoeff	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    const Scalar& lastCoeff() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
lastErrorMessage	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    std::string lastErrorMessage() const$/;"	f	class:Eigen::SparseLU
lastErrorMessage	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    std::string lastErrorMessage() const { return m_lastError; }$/;"	f	class:Eigen::SparseQR
lastLevelCacheSize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE size_t lastLevelCacheSize() const {$/;"	f	struct:Eigen::GpuDevice
lastname	tools/eigen/scripts/eigen_gen_credits.cpp	/^string lastname(const string& name)$/;"	f
lastpos	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    QPoint lastpos;$/;"	m	class:MandelbrotWidget
lazyAssign	tools/eigen/Eigen/src/Core/Assign.h	/^  ::lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
lazyAssign	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
lazyAssign	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^void TriangularViewImpl<MatrixType, Mode, Dense>::lazyAssign(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
lazyAssign	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^void TriangularViewImpl<MatrixType, Mode, Dense>::lazyAssign(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
lazyProduct	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::lazyProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
lazyprod	tools/eigen/Eigen/src/Core/Product.h	/^lazyprod(const Lhs& lhs, const Rhs& rhs)$/;"	f	namespace:Eigen
lazyproduct	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,CoeffBasedProductMode> lazyproduct;$/;"	t	struct:Eigen::internal::generic_product_impl
lcol	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	300;"	d
lcol	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	376;"	d
lda	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon152::__anon153
ldexp	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal ldexp(const mpreal& v, mp_exp_t exp)$/;"	f	namespace:mpfr
ldlt	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^MatrixBase<Derived>::ldlt() const$/;"	f	class:Eigen::MatrixBase
ldlt	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^SelfAdjointView<MatrixType, UpLo>::ldlt() const$/;"	f	class:Eigen::SelfAdjointView
ldlt_inplace	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Lower>$/;"	s	namespace:Eigen::internal
ldlt_inplace	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Upper>$/;"	s	namespace:Eigen::internal
least_square_conjugate_gradient	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^void least_square_conjugate_gradient(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
left	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	/^static char left = 'L';$/;"	v
leftCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr leftCols(Index n)$/;"	f
leftCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr leftCols(Index n) const$/;"	f
leftCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type leftCols(Index n = N) const$/;"	f
leftCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type leftCols(Index n = N)$/;"	f
left_dim_mapper_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, LDims> left_dim_mapper_t;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
left_dim_mapper_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, LDims> left_dim_mapper_t;$/;"	t	struct:Eigen::TensorEvaluator
left_dim_mapper_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef array<Index, LDims> left_dim_mapper_t;$/;"	t	struct:Eigen::TensorEvaluator
left_dim_mapper_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef array<Index, LDims> left_dim_mapper_t;$/;"	t	struct:Eigen::TensorEvaluator
left_nocontract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, max_n_1<LDims - ContractDims>::size> left_nocontract_t;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
left_nocontract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, max_n_1<LDims - ContractDims>::size> left_nocontract_t;$/;"	t	struct:Eigen::TensorEvaluator
left_nocontract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef array<Index, max_n_1<LDims - ContractDims>::size> left_nocontract_t;$/;"	t	struct:Eigen::TensorEvaluator
left_nocontract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef array<Index, max_n_1<LDims - ContractDims>::size> left_nocontract_t;$/;"	t	struct:Eigen::TensorEvaluator
length	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    Index length() const { return m_length; }  \/**< \\brief Returns the length of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
length	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType length ;  \/* number of principal columns in this row *\/$/;"	m	struct:internal::Colamd_Row
length	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType length ;  \/* number of rows in this column *\/$/;"	m	struct:internal::colamd_col
lenientConversion	tools/ConvertUTF.h	/^	lenientConversion$/;"	e	enum:__anon740
lerp	tools/eigen/demos/opengl/camera.h	/^    Frame lerp(float alpha, const Frame& other) const$/;"	f	class:Frame
lerp	tools/eigen/demos/opengl/quaternion_demo.cpp	/^template<> EulerAngles<float> lerp(float t, const EulerAngles<float>& a, const EulerAngles<float>& b)$/;"	f
lerp	tools/eigen/demos/opengl/quaternion_demo.cpp	/^template<> Quaternionf lerp(float t, const Quaternionf& a, const Quaternionf& b)$/;"	f
lerp	tools/eigen/demos/opengl/quaternion_demo.cpp	/^template<typename T> T lerp(float t, const T& a, const T& b)$/;"	f
lerpFrame	tools/eigen/demos/opengl/quaternion_demo.cpp	/^inline static Frame lerpFrame(float alpha, const Frame& a, const Frame& b)$/;"	f	file:
lesser_equal_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct lesser_equal_op {$/;"	s	namespace:Eigen::internal
lesser_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct lesser_op        { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a < b)   { return a < b;   } };$/;"	s	namespace:Eigen::internal
lesser_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct lesser_op {$/;"	s	namespace:Eigen::internal
level3_blocking	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    level3_blocking()$/;"	f	class:Eigen::internal::level3_blocking
level3_blocking	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class level3_blocking$/;"	c	namespace:Eigen::internal
lgamma	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal lgamma (const mpreal& v, int *signp = 0, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
lhat	eval.py	/^        lhat = predicted[q]$/;"	v
lhs	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::CwiseBinaryOp
lhs	tools/eigen/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC const LhsNestedCleaned& lhs() const { return m_lhs; }$/;"	f	class:Eigen::Product
lhs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const LhsMapper& lhs;$/;"	m	struct:Eigen::internal::packLhsArg
lhs	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE const _LhsNested& lhs() const {$/;"	f	class:Eigen::internal::SkylineProduct
lhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^    lhsExpression() const { return *((typename internal::remove_all<typename LhsXprType::Nested>::type*)&m_lhs_xpr); }$/;"	f	class:Eigen::TensorAssignOp
lhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    lhsExpression() const { return m_lhs_xpr; }$/;"	f	class:Eigen::TensorConcatenationOp
lhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  lhsExpression() const { return m_lhs_xpr; }$/;"	f	class:Eigen::TensorContractionOp
lhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  lhsExpression() const { return m_lhs_xpr; }$/;"	f	class:Eigen::TensorCustomBinaryOp
lhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    lhsExpression() const { return m_lhs_xpr; }$/;"	f	class:Eigen::TensorCwiseBinaryOp
lhs_element	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	324;"	d
lhs_element	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	378;"	d
lhs_length	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^  Index lhs_length;$/;"	m	struct:Eigen::internal::GemmParallelInfo
lhs_notifications	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const std::vector<Notification*>* lhs_notifications;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
lhs_start	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^  Index lhs_start;$/;"	m	struct:Eigen::internal::GemmParallelInfo
li2	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal li2 (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) $/;"	f	namespace:mpfr
linear	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline ConstLinearPart linear() const { return ConstLinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linear	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline LinearPart linear() { return LinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linearExt	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt()$/;"	f	class:Eigen::Transform
linearExt	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt() const$/;"	f	class:Eigen::Transform
linearStructure	tools/eigen/test/linearstructure.cpp	/^template<typename MatrixType> void linearStructure(const MatrixType& m)$/;"	f
linearizedIndex	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index linearizedIndex(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::Tensor
linearizedIndex	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE Index linearizedIndex(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::TensorFixedSize
lines	tools/eigen/test/geo_hyperplane.cpp	/^template<typename Scalar> void lines()$/;"	f
linspaced_op	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  linspaced_op(const Scalar& low, const Scalar& high, Index num_steps) : impl((num_steps==1 ? high : low), (num_steps==1 ? Scalar() : (high-low)\/Scalar(num_steps-1))) {}$/;"	f	struct:Eigen::internal::linspaced_op
linspaced_op	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^template <typename Scalar, typename PacketType, bool RandomAccess> struct linspaced_op$/;"	s	namespace:Eigen::internal
linspaced_op_impl	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  linspaced_op_impl(const Scalar& low, const Scalar& step) :$/;"	f	struct:Eigen::internal::linspaced_op_impl
linspaced_op_impl	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^struct linspaced_op_impl<Scalar,Packet,false>$/;"	s	namespace:Eigen::internal
linspaced_op_impl	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^struct linspaced_op_impl<Scalar,Packet,true>$/;"	s	namespace:Eigen::internal
list	tools/eigen/Eigen/src/StlSupport/StdList.h	/^  class list<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
list_base	tools/eigen/Eigen/src/StlSupport/StdList.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > list_base;$/;"	t	class:std::list
llt	tools/eigen/Eigen/src/Cholesky/LLT.h	/^MatrixBase<Derived>::llt() const$/;"	f	class:Eigen::MatrixBase
llt	tools/eigen/Eigen/src/Cholesky/LLT.h	/^SelfAdjointView<MatrixType, UpLo>::llt() const$/;"	f	class:Eigen::SelfAdjointView
llt_inplace	tools/eigen/Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Lower>$/;"	s	namespace:Eigen::internal
llt_inplace	tools/eigen/Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Upper>$/;"	s	namespace:Eigen::internal
llt_rank_update_lower	tools/eigen/Eigen/src/Cholesky/LLT.h	/^static Index llt_rank_update_lower(MatrixType& mat, const VectorType& vec, const typename MatrixType::RealScalar& sigma)$/;"	f	namespace:Eigen::internal
lm_param	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar lm_param(void) { return m_par; }$/;"	f	class:Eigen::LevenbergMarquardt
lm_param	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar lm_param(void) { return par; }$/;"	f	class:Eigen::LevenbergMarquardt
lmder1	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType>::lmder1($/;"	f	class:Eigen::LevenbergMarquardt
lmder1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::lmder1($/;"	f	class:Eigen::LevenbergMarquardt
lmder_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    lmder_functor(void): Functor<double>(3,15) {}$/;"	f	struct:lmder_functor
lmder_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct lmder_functor : Functor<double>$/;"	s	file:
lmder_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    lmder_functor(void): DenseFunctor<double>(3,15) {}$/;"	f	struct:lmder_functor
lmder_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct lmder_functor : DenseFunctor<double>$/;"	s	file:
lmdif1	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType>::lmdif1($/;"	f	class:Eigen::LevenbergMarquardt
lmdif1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::lmdif1($/;"	f	class:Eigen::LevenbergMarquardt
lmdif_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    lmdif_functor(void) : Functor<double>(3,15) {}$/;"	f	struct:lmdif_functor
lmdif_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct lmdif_functor : Functor<double>$/;"	s	file:
lmdif_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    lmdif_functor(void) : DenseFunctor<double>(3,15) {}$/;"	f	struct:lmdif_functor
lmdif_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct lmdif_functor : DenseFunctor<double>$/;"	s	file:
lmpar	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/lmpar.h	/^void lmpar($/;"	f	namespace:Eigen::internal
lmpar2	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMpar.h	/^    void lmpar2($/;"	f	namespace:Eigen::internal
lmpar2	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/lmpar.h	/^void lmpar2($/;"	f	namespace:Eigen::internal
lmqrsolv	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMqrsolv.h	/^void lmqrsolv($/;"	f	namespace:Eigen::internal
lmstr1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::lmstr1($/;"	f	class:Eigen::LevenbergMarquardt
lmstr_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    lmstr_functor(void) : Functor<double>(3,15) {}$/;"	f	struct:lmstr_functor
lmstr_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct lmstr_functor : Functor<double>$/;"	s	file:
lngamma	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal lngamma (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(lngamma);    }$/;"	f	namespace:mpfr
load	problem.cc	/^bool Relation::load(const char* filename, const Entity& e1, const Entity& e2) {$/;"	f	class:Relation
load	problem.cc	/^sp_mat Entity::load(const char* filename) {$/;"	f	class:Entity
load	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE Packet load(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
load	tools/eigen/test/packetmath.cpp	/^  inline Packet load(const T* from) const { return internal::pload<Packet>(from); }$/;"	f	struct:packet_helper
load	tools/eigen/test/packetmath.cpp	/^  inline T load(const T* from) const { return *from; }$/;"	f	struct:packet_helper
load	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_ALWAYS_INLINE PacketT load(Index i) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
loadConstant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^T loadConstant(const T* address) {$/;"	f	namespace:Eigen::__anon76
loadConstant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^double loadConstant(const double* address) {$/;"	f	namespace:Eigen::__anon76
loadConstant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^float loadConstant(const float* address) {$/;"	f	namespace:Eigen::__anon76
loadData	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	327;"	d
loadData	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	380;"	d
loadHalfPacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE HalfPacket loadHalfPacket(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
loadHalfPacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE HalfPacket loadHalfPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
loadHalfPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE HalfPacket loadHalfPacket(Index i) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
loadHalfPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE HalfPacket loadHalfPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::TensorContractionInputMapper
loadHalfPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE Packet loadHalfPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::TensorContractionInputMapper
loadLhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhsUnaligned	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhsUnaligned(const LhsScalar* a, LhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhsUnaligned	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhsUnaligned(const LhsScalar* a, LhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadMarket	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^bool loadMarket(SparseMatrixType& mat, const std::string& filename)$/;"	f	namespace:Eigen
loadMarketVector	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^bool loadMarketVector(VectorType& vec, const std::string& filename)$/;"	f	namespace:Eigen
loadMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^    static void loadMatrix(const Matrix<double,4,4, _Flags, 4,4>& mat) { glLoadMatrixd(mat.data()); }$/;"	f	struct:GlMatrixHelper
loadMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^    static void loadMatrix(const Matrix<double,4,4, _Flags, 4,4>& mat) { glLoadMatrixd(mat.transpose().eval().data()); }$/;"	f	struct:GlMatrixHelper
loadMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^    static void loadMatrix(const Matrix<float, 4,4, _Flags, 4,4>&  mat) { glLoadMatrixf(mat.data()); }$/;"	f	struct:GlMatrixHelper
loadMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^    static void loadMatrix(const Matrix<float, 4,4, _Flags, 4,4>&  mat) { glLoadMatrixf(mat.transpose().eval().data()); }$/;"	f	struct:GlMatrixHelper
loadMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^void GpuHelper::loadMatrix($/;"	f	class:GpuHelper
loadMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^void GpuHelper::loadMatrix(const Eigen::Matrix<Scalar,4,4, _Flags, 4,4>& mat, GLenum matrixTarget)$/;"	f	class:GpuHelper
loadOrRotateRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  void loadOrRotateRhs(RhsPacket& to, const RhsScalar* from) const$/;"	f	struct:Eigen::internal::PossiblyRotatingKernelHelper
loadPacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE Packet loadPacket(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
loadPacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE Packet loadPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
loadPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet loadPacket(Index i) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
loadPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet loadPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
loadPacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE Packet loadPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::TensorContractionInputMapper
loadRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, DoublePacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, ResPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, DoublePacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, ResPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, RhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadSparseGraph	problem.cc	/^bool Entity::loadSparseGraph(const char* filename) {$/;"	f	class:Entity
localRotate	tools/eigen/demos/opengl/camera.cpp	/^void Camera::localRotate(const Quaternionf& q)$/;"	f	class:Camera
localTranslate	tools/eigen/demos/opengl/camera.cpp	/^void Camera::localTranslate(const Vector3f& t)$/;"	f	class:Camera
locase	tools/SimpleIni.h	/^    inline SI_CHAR locase(SI_CHAR ch) const {$/;"	f	struct:SI_GenericNoCase
log	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log() const$/;"	f
log	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    log() const {$/;"	f	class:Eigen::TensorBase
log	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^const MatrixLogarithmReturnValue<Derived> MatrixBase<Derived>::log() const$/;"	f	class:Eigen::MatrixBase
log	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal log   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(log  );    }$/;"	f	namespace:mpfr
log10	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log10() const$/;"	f
log10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal log10 (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(log10);    }$/;"	f	namespace:mpfr
log1p	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(log1p, Scalar) log1p(const Scalar& x)$/;"	f	namespace:Eigen::numext
log1p	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal log1p   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(log1p  );    }$/;"	f	namespace:mpfr
log1p_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct log1p_impl$/;"	s	namespace:Eigen::internal
log1p_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct log1p_impl<Scalar, false> {$/;"	s	namespace:Eigen::internal
log1p_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct log1p_retval$/;"	s	namespace:Eigen::internal
log2	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline int log2(int x)$/;"	f	namespace:Eigen::numext
log2	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal log2  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(log2 );    }$/;"	f	namespace:mpfr
log2_pot	tools/eigen/bench/analyze-blocking-sizes.cpp	/^uint8_t log2_pot(size_t x) {$/;"	f
logAbsDeterminant	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
logAbsDeterminant	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
logAbsDeterminant	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::HouseholderQR
logAbsDeterminant	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    Scalar logAbsDeterminant() const$/;"	f	class:Eigen::SparseLU
logical	tools/eigen/blas/f2c/datatypes.h	/^typedef int logical;$/;"	t
logical_and_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct logical_and_op   { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a && b)  { return a && b;  } };$/;"	s	namespace:Eigen::internal
logical_and_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct logical_and_op {$/;"	s	namespace:Eigen::internal
logical_or_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct logical_or_op    { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a || b)  { return a || b;  } };$/;"	s	namespace:Eigen::internal
logical_or_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct logical_or_op {$/;"	s	namespace:Eigen::internal
lookup_function	tools/eigen/debug/gdb/printers.py	/^def lookup_function(val):$/;"	f
loop_on_k	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_k$/;"	s	file:
loop_on_k	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_k<M,N,END> { static void run(){} };$/;"	s	file:
loop_on_m	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_m$/;"	s	file:
loop_on_m	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_m<END,N,K> { static void run(){} };$/;"	s	file:
loop_on_n	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_n$/;"	s	file:
loop_on_n	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_n<M,END,K,Scalar,Mode> { static void run(){} };$/;"	s	file:
loss_value	Top.hh	/^    sp_mat *loss_value;$/;"	m	class:Top
lower	tools/eigen/bench/bench_gemm.cpp	/^static char lower = 'L';$/;"	v	file:
lower	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	/^static char lower = 'L';$/;"	v
lower	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Scalar& lower(Index i) {$/;"	f	class:Eigen::SkylineStorage
lower	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Scalar& lower(Index i) const {$/;"	f	class:Eigen::SkylineStorage
lowerNonZeros	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index lowerNonZeros() const {$/;"	f	class:Eigen::SkylineMatrix
lowerNonZeros	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index lowerNonZeros(Index j) const {$/;"	f	class:Eigen::SkylineMatrix
lowerProfile	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index& lowerProfile(Index i) {$/;"	f	class:Eigen::SkylineStorage
lowerProfile	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Index& lowerProfile(Index i) const {$/;"	f	class:Eigen::SkylineStorage
lowerProfileSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index lowerProfileSize() const {$/;"	f	class:Eigen::SkylineStorage
lowerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index lowerSize() const {$/;"	f	class:Eigen::SkylineStorage
lower_efficiency	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  static bool lower_efficiency(const results_entry_t& e1, const results_entry_t& e2) {$/;"	f	struct:evaluate_defaults_action_t
lower_efficiency	tools/eigen/bench/analyze-blocking-sizes.cpp	/^bool lower_efficiency(const preprocessed_inputfile_entry_t& e1, const preprocessed_inputfile_entry_t& e2)$/;"	f
lowest	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static mpfr::mpreal lowest   (mp_prec_t precision = mpfr::mpreal::get_default_prec()) {  return -mpfr::maxval(precision);  }$/;"	f	class:std::numeric_limits
lpNorm	tools/eigen/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::lpNorm() const$/;"	f	class:Eigen::MatrixBase
lpNorm	tools/eigen/test/array_for_matrix.cpp	/^template<typename VectorType> void lpNorm(const VectorType& v)$/;"	f
lpNorm_selector	tools/eigen/Eigen/src/Core/Dot.h	/^struct lpNorm_selector$/;"	s	namespace:Eigen::internal
lpNorm_selector	tools/eigen/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 1>$/;"	s	namespace:Eigen::internal
lpNorm_selector	tools/eigen/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 2>$/;"	s	namespace:Eigen::internal
lpNorm_selector	tools/eigen/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, Infinity>$/;"	s	namespace:Eigen::internal
lsame_	tools/eigen/blas/f2c/lsame.c	/^logical lsame_(char *ca, char *cb, ftnlen ca_len, ftnlen cb_len)$/;"	f
lsub	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector lsub; \/\/ Compressed row indices of L rectangular supernodes. $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
ltruth	eval.py	/^        ltruth = relavenceLists[q]$/;"	v
lu	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::lu() const$/;"	f	class:Eigen::MatrixBase
lu_decomp	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void lu_decomp(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:blas_interface
lu_decomp	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void lu_decomp(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:eigen2_interface
lu_decomp	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void lu_decomp(const gene_matrix & X, gene_matrix & C, int  \/*N*\/){$/;"	f	class:eigen3_interface
lu_invertible	tools/eigen/test/lu.cpp	/^template<typename MatrixType> void lu_invertible()$/;"	f
lu_non_invertible	tools/eigen/test/lu.cpp	/^template<typename MatrixType> void lu_non_invertible()$/;"	f
lu_partial_piv	tools/eigen/test/lu.cpp	/^template<typename MatrixType> void lu_partial_piv()$/;"	f
lu_verify_assert	tools/eigen/test/lu.cpp	/^template<typename MatrixType> void lu_verify_assert()$/;"	f
lusup	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  ScalarVector  lusup; \/\/ nonzero values of L ordered by columns $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
m	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  uint16_t k, m, n;$/;"	m	struct:size_triple_t	file:
m	tools/eigen/doc/snippets/AngleAxis_mimic_euler.cpp	/^Matrix3f m;$/;"	v
m	tools/eigen/doc/snippets/ColPivHouseholderQR_solve.cpp	/^Matrix3f m = Matrix3f::Random();$/;"	v
m	tools/eigen/doc/snippets/DirectionWise_replicate.cpp	/^MatrixXi m = MatrixXi::Random(2,3);$/;"	v
m	tools/eigen/doc/snippets/FullPivHouseholderQR_solve.cpp	/^Matrix3f m = Matrix3f::Random();$/;"	v
m	tools/eigen/doc/snippets/FullPivLU_image.cpp	/^Matrix3d m;$/;"	v
m	tools/eigen/doc/snippets/FullPivLU_kernel.cpp	/^MatrixXf m = MatrixXf::Random(3,5);$/;"	v
m	tools/eigen/doc/snippets/FullPivLU_solve.cpp	/^Matrix<float,2,3> m = Matrix<float,2,3>::Random();$/;"	v
m	tools/eigen/doc/snippets/HouseholderQR_solve.cpp	/^Matrix3x3 m = Matrix3x3::Random();$/;"	v
m	tools/eigen/doc/snippets/JacobiSVD_basic.cpp	/^MatrixXf m = MatrixXf::Random(3,2);$/;"	v
m	tools/eigen/doc/snippets/Jacobi_makeJacobi.cpp	/^Matrix2f m = Matrix2f::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_adjoint.cpp	/^Matrix2cf m = Matrix2cf::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_block_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_block_int_int_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_bottomLeftCorner_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_bottomRightCorner_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_col.cpp	/^Matrix3d m = Matrix3d::Identity();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_colwise.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_computeInverseAndDetWithCheck.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_computeInverseWithCheck.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_diagonal.cpp	/^Matrix3i m = Matrix3i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_diagonal_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_diagonal_template_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_eval.cpp	/^Matrix2f m;$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_fixedBlock_int_int.cpp	/^Matrix4d m = Vector4d(1,2,3,4).asDiagonal();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_inverse.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_isDiagonal.cpp	/^Matrix3d m = 10000 * Matrix3d::Identity();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_isIdentity.cpp	/^Matrix3d m = Matrix3d::Identity();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_isOnes.cpp	/^Matrix3d m = Matrix3d::Ones();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_isUnitary.cpp	/^Matrix3d m = Matrix3d::Identity();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_isZero.cpp	/^Matrix3d m = Matrix3d::Zero();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_prod.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_replicate.cpp	/^MatrixXi m = MatrixXi::Random(2,3);$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_reverse.cpp	/^MatrixXi m = MatrixXi::Random(3,4);$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_row.cpp	/^Matrix3d m = Matrix3d::Identity();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_rowwise.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_setIdentity.cpp	/^Matrix4i m = Matrix4i::Zero();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_setOnes.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_setRandom.cpp	/^Matrix4i m = Matrix4i::Zero();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_setZero.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_block_int_int_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomRightCorner.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_bottomRightCorner_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_topLeftCorner.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_topLeftCorner_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_topRightCorner.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_template_int_int_topRightCorner_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_topLeftCorner_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_topRightCorner_int_int.cpp	/^Matrix4i m = Matrix4i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_transpose.cpp	/^Matrix2i m = Matrix2i::Random();$/;"	v
m	tools/eigen/doc/snippets/MatrixBase_triangularView.cpp	/^Matrix3i m = Matrix3i::Random();$/;"	v
m	tools/eigen/doc/snippets/Matrix_setConstant_int_int.cpp	/^MatrixXf m;$/;"	v
m	tools/eigen/doc/snippets/Matrix_setIdentity_int_int.cpp	/^MatrixXf m;$/;"	v
m	tools/eigen/doc/snippets/Matrix_setOnes_int_int.cpp	/^MatrixXf m;$/;"	v
m	tools/eigen/doc/snippets/Matrix_setRandom_int_int.cpp	/^MatrixXf m;$/;"	v
m	tools/eigen/doc/snippets/Matrix_setZero_int_int.cpp	/^MatrixXf m;$/;"	v
m	tools/eigen/doc/snippets/PartialRedux_count.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/PartialRedux_maxCoeff.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/PartialRedux_minCoeff.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/PartialRedux_norm.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/PartialRedux_prod.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/PartialRedux_squaredNorm.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/PartialRedux_sum.cpp	/^Matrix3d m = Matrix3d::Random();$/;"	v
m	tools/eigen/doc/snippets/Triangular_solve.cpp	/^Matrix3d m = Matrix3d::Zero();$/;"	v
m	tools/eigen/doc/snippets/Tutorial_commainit_01.cpp	/^Matrix3f m;$/;"	v
m	tools/eigen/doc/snippets/Tutorial_commainit_01.cpp	/^std::cout << m;$/;"	v
m	tools/eigen/doc/snippets/Tutorial_commainit_01b.cpp	/^Matrix3f m;$/;"	v
m	tools/eigen/doc/snippets/Tutorial_commainit_01b.cpp	/^std::cout << m;$/;"	v
m	tools/eigen/doc/snippets/Tutorial_commainit_02.cpp	/^cout << m;$/;"	v
m	tools/eigen/doc/snippets/Vectorwise_reverse.cpp	/^MatrixXi m = MatrixXi::Random(3,4);$/;"	v
m	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^Matrix5x3 m = Matrix5x3::Random();$/;"	v
m	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^  Matrix3f m = Matrix3f::Random();$/;"	v
m	tools/eigen/test/unalignedassert.cpp	/^  Matrix3d m; \/\/ good: m's size isn't a multiple of 16 bytes, so m doesn't have to be 16-byte aligned,$/;"	m	struct:TestNew2	file:
m	tools/eigen/test/unalignedassert.cpp	/^  Matrix4f m;$/;"	m	struct:TestNew5	file:
m	tools/eigen/test/unalignedassert.cpp	/^  Matrix<float,2,2,DontAlign> m; \/\/ good: no alignment requested$/;"	m	struct:TestNew6	file:
m	tools/eigen/test/unalignedassert.cpp	/^  MatrixXd m; \/\/ good: m will allocate its own array, taking care of alignment.$/;"	m	struct:TestNew1	file:
m	tools/eigen/test/unalignedassert.cpp	/^  Vector2d m;$/;"	m	struct:Depends	file:
m	tools/eigen/test/unalignedassert.cpp	/^  Vector2d m;$/;"	m	struct:TestNew4	file:
m	tools/eigen/test/unalignedassert.cpp	/^  Vector2f m; \/\/ good: m's size isn't a multiple of 16 bytes, so m doesn't have to be 16-byte aligned$/;"	m	struct:TestNew3	file:
m	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index m;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
m	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index m; $/;"	m	class:Eigen::LevenbergMarquardt
m	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index m;$/;"	m	class:Eigen::LevenbergMarquardt
m1	tools/eigen/doc/snippets/IOFormat.cpp	/^Matrix3d m1;$/;"	v
m1	tools/eigen/doc/snippets/MatrixBase_set.cpp	/^Matrix3i m1;$/;"	v
m2	tools/eigen/doc/snippets/MatrixBase_set.cpp	/^Matrix3i m2 = Matrix3i::Identity();$/;"	v
mAnimate	tools/eigen/demos/opengl/quaternion_demo.h	/^    bool mAnimate;$/;"	m	class:RenderingWidget
mCamera	tools/eigen/demos/opengl/quaternion_demo.h	/^    Camera mCamera;$/;"	m	class:RenderingWidget
mCenters	tools/eigen/demos/opengl/quaternion_demo.cpp	/^    std::vector<Vector3f> mCenters;$/;"	m	class:FancySpheres	file:
mColorBufferId	tools/eigen/demos/opengl/gpuhelper.h	/^    GLuint mColorBufferId;$/;"	m	class:GpuHelper
mCurrentMatrixTarget	tools/eigen/demos/opengl/gpuhelper.h	/^    GLenum mCurrentMatrixTarget;$/;"	m	class:GpuHelper
mCurrentTrackingMode	tools/eigen/demos/opengl/quaternion_demo.h	/^    TrackMode mCurrentTrackingMode;$/;"	m	class:RenderingWidget
mFarDist	tools/eigen/demos/opengl/camera.h	/^    float mFarDist;$/;"	m	class:Camera
mFovY	tools/eigen/demos/opengl/camera.h	/^    float mFovY;$/;"	m	class:Camera
mFrame	tools/eigen/demos/opengl/camera.h	/^    Frame mFrame;$/;"	m	class:Camera
mIcoSphere	tools/eigen/demos/opengl/quaternion_demo.cpp	/^    IcoSphere mIcoSphere;$/;"	m	class:FancySpheres	file:
mIndices	tools/eigen/demos/opengl/icosphere.h	/^    std::vector<std::vector<int>*> mIndices;$/;"	m	class:IcoSphere
mIndices	tools/eigen/demos/opengl/quaternion_demo.h	/^    std::vector<int> mIndices;$/;"	m	class:RenderingWidget
mInitFrame	tools/eigen/demos/opengl/quaternion_demo.h	/^    Frame mInitFrame;$/;"	m	class:RenderingWidget
mInitialized	tools/eigen/demos/opengl/gpuhelper.h	/^    bool mInitialized;$/;"	m	class:GpuHelper
mLastPoint3D	tools/eigen/demos/opengl/trackball.h	/^    Eigen::Vector3f mLastPoint3D;$/;"	m	class:Trackball
mLastPointOk	tools/eigen/demos/opengl/trackball.h	/^    bool mLastPointOk;$/;"	m	class:Trackball
mLerpMode	tools/eigen/demos/opengl/quaternion_demo.h	/^    LerpMode mLerpMode;$/;"	m	class:RenderingWidget
mListIds	tools/eigen/demos/opengl/icosphere.h	/^    std::vector<int> mListIds;$/;"	m	class:IcoSphere
mMode	tools/eigen/demos/opengl/trackball.h	/^    Mode mMode;$/;"	m	class:Trackball
mMouseCoords	tools/eigen/demos/opengl/quaternion_demo.h	/^    Vector2i mMouseCoords;$/;"	m	class:RenderingWidget
mNavMode	tools/eigen/demos/opengl/quaternion_demo.h	/^    NavMode mNavMode;$/;"	m	class:RenderingWidget
mNearDist	tools/eigen/demos/opengl/camera.h	/^    float mNearDist;$/;"	m	class:Camera
mNormals	tools/eigen/demos/opengl/quaternion_demo.h	/^    std::vector<Vector3f> mNormals;$/;"	m	class:RenderingWidget
mProjIsUptodate	tools/eigen/demos/opengl/camera.h	/^    mutable bool mProjIsUptodate;$/;"	m	class:Camera
mProjectionMatrix	tools/eigen/demos/opengl/camera.h	/^    mutable Eigen::Matrix4f mProjectionMatrix;$/;"	m	class:Camera
mRadii	tools/eigen/demos/opengl/quaternion_demo.cpp	/^    std::vector<float> mRadii;$/;"	m	class:FancySpheres	file:
mRenderingWidget	tools/eigen/demos/opengl/quaternion_demo.h	/^    RenderingWidget* mRenderingWidget;$/;"	m	class:QuaternionDemo
mRotationMode	tools/eigen/demos/opengl/quaternion_demo.h	/^    RotationMode mRotationMode;$/;"	m	class:RenderingWidget
mTarget	tools/eigen/demos/opengl/camera.h	/^    Eigen::Vector3f mTarget;$/;"	m	class:Camera
mTrackball	tools/eigen/demos/opengl/quaternion_demo.h	/^    Trackball mTrackball;$/;"	m	class:RenderingWidget
mVertices	tools/eigen/demos/opengl/icosphere.h	/^    std::vector<Eigen::Vector3f> mVertices;$/;"	m	class:IcoSphere
mVertices	tools/eigen/demos/opengl/quaternion_demo.h	/^    std::vector<Vector3f> mVertices;$/;"	m	class:RenderingWidget
mViewIsUptodate	tools/eigen/demos/opengl/camera.h	/^    mutable bool mViewIsUptodate;$/;"	m	class:Camera
mViewMatrix	tools/eigen/demos/opengl/camera.h	/^    mutable Eigen::Affine3f mViewMatrix;$/;"	m	class:Camera
mVpHeight	tools/eigen/demos/opengl/camera.h	/^    uint mVpWidth, mVpHeight;$/;"	m	class:Camera
mVpHeight	tools/eigen/demos/opengl/gpuhelper.h	/^    int mVpWidth, mVpHeight;$/;"	m	class:GpuHelper
mVpWidth	tools/eigen/demos/opengl/camera.h	/^    uint mVpWidth, mVpHeight;$/;"	m	class:Camera
mVpWidth	tools/eigen/demos/opengl/gpuhelper.h	/^    int mVpWidth, mVpHeight;$/;"	m	class:GpuHelper
mVpX	tools/eigen/demos/opengl/camera.h	/^    uint mVpX, mVpY;$/;"	m	class:Camera
mVpY	tools/eigen/demos/opengl/camera.h	/^    uint mVpX, mVpY;$/;"	m	class:Camera
m_	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  size_t m_;$/;"	m	class:BenchmarkSuite
m_A	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    typename Lhs::Nested m_A;$/;"	m	class:Eigen::KroneckerProductBase
m_A	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    const DerivedNested m_A;$/;"	m	class:Eigen::MatrixFunctionReturnValue
m_A	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  const DerivedNested m_A;$/;"	m	class:Eigen::MatrixLogarithmReturnValue
m_A	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    const Derived& m_A;$/;"	m	class:Eigen::MatrixComplexPowerReturnValue
m_A	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    const Derived& m_A;$/;"	m	class:Eigen::MatrixPowerReturnValue
m_A	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    const MatrixType& m_A;$/;"	m	class:Eigen::MatrixPowerAtomic
m_A	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    typename MatrixType::Nested m_A;$/;"	m	class:Eigen::MatrixPower
m_B	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    typename Rhs::Nested m_B;$/;"	m	class:Eigen::KroneckerProductBase
m_E	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable StorageIndex *m_E; \/\/ The permutation applied to columns$/;"	m	class:Eigen::SPQR
m_H	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_sparse *m_H;  \/\/The householder vectors$/;"	m	class:Eigen::SPQR
m_H	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable DenseMatrix m_H; \/\/ Hessenberg matrix $/;"	m	class:Eigen::DGMRES
m_HPinv	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable StorageIndex *m_HPinv; \/\/ The row permutation of H$/;"	m	class:Eigen::SPQR
m_HTau	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_dense *m_HTau; \/\/ The Householder coefficients$/;"	m	class:Eigen::SPQR
m_Hes	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable DenseMatrix m_Hes; \/\/ Initial hessenberg matrix wihout Givens rotations applied$/;"	m	class:Eigen::DGMRES
m_L	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    FactorType m_L;              \/\/ The lower part stored in CSC$/;"	m	class:Eigen::IncompleteCholesky
m_LDLT	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_LDLT;$/;"	m	class:Eigen::SimplicialCholesky
m_Lstore	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    SCMatrix m_Lstore; \/\/ The lower triangular matrix (supernodal)$/;"	m	class:Eigen::SparseLU
m_MU	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable DenseMatrix m_MU; \/\/ matrix operator applied to m_U (for next cycles)$/;"	m	class:Eigen::DGMRES
m_P	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_P;     \/\/ Fill-reducing permutation$/;"	m	class:Eigen::IncompleteLUT
m_P	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_P;     \/\/ the permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Pinv	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_Pinv;  \/\/ Inverse permutation$/;"	m	class:Eigen::IncompleteLUT
m_Pinv	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_Pinv;  \/\/ the inverse permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Q	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_Q	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_Q;               \/\/ The orthogonal reflectors$/;"	m	class:Eigen::SparseQR
m_R	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable MatrixType m_R; \/\/ The sparse matrix R in Eigen format$/;"	m	class:Eigen::SPQR
m_R	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_R;               \/\/ The triangular factor matrix$/;"	m	class:Eigen::SparseQR
m_S	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_T	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_T	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable DenseMatrix m_T; \/* T=U^T*M^{-1}*A*U *\/$/;"	m	class:Eigen::DGMRES
m_T	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    ComplexMatrix m_T, m_U;$/;"	m	class:Eigen::MatrixPower
m_U	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable DenseMatrix m_U; \/\/ Vectors that form the basis of the invariant subspace $/;"	m	class:Eigen::DGMRES
m_U	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    ComplexMatrix m_T, m_U;$/;"	m	class:Eigen::MatrixPower
m_Ustore	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    MappedSparseMatrix<Scalar,ColMajor,StorageIndex> m_Ustore; \/\/ The upper triangular matrix$/;"	m	class:Eigen::SparseLU
m_V	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable DenseMatrix m_V; \/\/ Krylov basis vectors$/;"	m	class:Eigen::DGMRES
m_Z	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_actualAlpha	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Scalar m_actualAlpha;$/;"	m	struct:Eigen::internal::gemm_functor
m_adjoint	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  TransposeTypeWithSameStorageOrder m_adjoint;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_algoswap	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  int m_algoswap;$/;"	m	class:Eigen::BDCSVD
m_allocatedElements	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_allocatedElements;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_allocatedSize;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    Index m_allocatedSize;$/;"	m	class:Eigen::internal::CompressedStorage
m_allocatedSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_allocatedSize;$/;"	m	class:Eigen::SkylineStorage
m_allow_tol	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    int m_allow_tol; \/\/ Allow to use some tolerance during numerical factorization.$/;"	m	class:Eigen::SPQR
m_alpha	tools/eigen/demos/opengl/quaternion_demo.h	/^    float m_alpha;$/;"	m	class:RenderingWidget
m_alphas	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType m_alphas;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_analysisIsOk	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::CholmodBase
m_analysisIsOk	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_analysisIsOk	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_analysisIsOk	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::PastixBase
m_analysisIsOk	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_analysisIsOk	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SPQR
m_analysisIsOk	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_analysisIsOk	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SparseLU
m_analysisIsOk	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::SuperLUBase
m_analysisIsOk	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::UmfPackLU
m_analysisIsOk	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    bool m_analysisIsOk; $/;"	m	class:Eigen::IncompleteCholesky
m_analysisIsok	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    bool m_analysisIsok;$/;"	m	class:Eigen::SparseQR
m_angle	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  Scalar m_angle;$/;"	m	class:Eigen::AngleAxis
m_angle	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  Scalar m_angle;$/;"	m	class:Eigen::Rotation2D
m_angles	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  Vector3 m_angles;$/;"	m	class:EulerAngles	file:
m_arg	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const ArgType& m_arg;$/;"	m	class:Eigen::internal::EvalToTemp
m_arg	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const ArgTypeNested m_arg; \/\/ FIXME is it OK to store both the argument and its evaluator?? (we have the same situation in evaluator_product)$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::evaluator
m_argImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::evaluator_wrapper_base
m_argImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgTypeNestedCleaned> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  TensorEvaluator<ArgType, Device> m_argImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_axis	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  Vector3 m_axis;$/;"	m	class:Eigen::AngleAxis
m_axis	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    const Axis m_axis;$/;"	m	class:Eigen::TensorConcatenationOp
m_axis	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    const Axis m_axis;$/;"	m	struct:Eigen::TensorEvaluator
m_bAllowMultiKey	tools/SimpleIni.h	/^    bool m_bAllowMultiKey;$/;"	m	class:CSimpleIniTempl
m_bAllowMultiLine	tools/SimpleIni.h	/^    bool m_bAllowMultiLine;$/;"	m	class:CSimpleIniTempl
m_bSpaces	tools/SimpleIni.h	/^    bool m_bSpaces;$/;"	m	class:CSimpleIniTempl
m_bStoreIsUtf8	tools/SimpleIni.h	/^    bool m_bStoreIsUtf8;$/;"	m	class:CSimpleIniTempl
m_bStoreIsUtf8	tools/SimpleIni.h	/^    bool m_bStoreIsUtf8;$/;"	m	class:SI_ConvertA
m_bStoreIsUtf8	tools/SimpleIni.h	/^    bool m_bStoreIsUtf8;$/;"	m	class:SI_ConvertW
m_base	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  mutable Packet m_base;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_base_mapper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const ParentMapper& m_base_mapper;$/;"	m	class:Eigen::internal::TensorContractionSubMapper
m_bests	tools/eigen/bench/BenchTimer.h	/^  Vector2d m_bests;$/;"	m	class:Eigen::BenchTimer
m_betas	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    VectorType m_betas;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_bidiagonal	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    BidiagonalType m_bidiagonal;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_bl_diag	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^      BottomLeftDiagonal         m_bl_diag;$/;"	m	class:Eigen::internal::companion
m_block	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    const XprType &m_block;$/;"	m	struct:Eigen::internal::unary_evaluator
m_block	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  const XprType& m_block;$/;"	m	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
m_blockA	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    LhsScalar* m_blockA;$/;"	m	class:Eigen::internal::level3_blocking
m_blockB	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    RhsScalar* m_blockB;$/;"	m	class:Eigen::internal::level3_blocking
m_blockCols	tools/eigen/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_blockCols	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::BlockImpl
m_blockPtr	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    StorageIndex *m_blockPtr; \/\/ Pointer to the beginning of each block in m_values, size m_nonzeroblocks ... null for fixed-size blocks$/;"	m	class:Eigen::BlockSparseMatrix
m_blockRows	tools/eigen/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_blockRows	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::BlockImpl
m_blockSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_blockSize; \/\/ Size of a block for fixed-size blocks, otherwise -1$/;"	m	class:Eigen::BlockSparseMatrix
m_block_idx	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index m_block_idx;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
m_blocking	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    BlockingType& m_blocking;$/;"	m	struct:Eigen::internal::gemm_functor
m_blocks	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index m_blocks;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
m_broadcast	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^    const Broadcast m_broadcast;$/;"	m	class:Eigen::TensorBroadcastingOp
m_buf	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  Scalar* m_buf;$/;"	m	struct:Eigen::TensorEvaluator
m_buffer	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar* m_buffer;$/;"	m	class:Eigen::internal::AmbiVector
m_buffer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    CoeffReturnType* m_buffer;$/;"	m	class:Eigen::TensorEvalToOp
m_buffer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  CoeffReturnType* m_buffer;$/;"	m	struct:Eigen::TensorEvaluator
m_buffer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  CoeffReturnType* m_buffer;$/;"	m	struct:Eigen::TensorEvaluator
m_c	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_cR	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_sparse *m_cR; \/\/ The sparse R factor in cholmod format$/;"	m	class:Eigen::SPQR
m_cachedIndex	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_cachedIndex;          \/\/ current coordinate$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_cachedValue	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_cachedValue;       \/\/ current value$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_callback	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void (*m_callback)(const IterationController&);$/;"	m	class:Eigen::IterationController
m_cc	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_common m_cc; \/\/ Workspace and parameters$/;"	m	class:Eigen::SPQR
m_cholmod	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable cholmod_common m_cholmod;$/;"	m	class:Eigen::CholmodBase
m_cholmodFactor	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_factor* m_cholmodFactor;$/;"	m	class:Eigen::CholmodBase
m_clkid	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  int m_clkid;$/;"	m	class:Portable_Timer
m_coeff	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typename DiagonalCoeffType::Scalar m_coeff;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_coeffs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    CoefficientsType m_coeffs;$/;"	m	class:Eigen::internal::BandMatrix
m_coeffs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    const CoefficientsType& m_coeffs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_coeffs	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Hyperplane
m_coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^    const Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Quaternion
m_coeffs	tools/eigen/Eigen/src/Geometry/Translation.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Translation
m_coeffs	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    typename CoeffsType::Nested m_coeffs;$/;"	m	class:Eigen::HouseholderSequence
m_col	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  Index m_col;              \/\/ current col id$/;"	m	struct:Eigen::CommaInitializer
m_col	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  StorageIndex m_row, m_col;$/;"	m	class:Eigen::Triplet
m_col	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_col; \/\/ Number of columns$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_col	tools/eigen/test/sparse_solver.h	/^  Index m_col;$/;"	m	struct:prune_column
m_colFactor	tools/eigen/Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, ColFactor> m_colFactor;$/;"	m	class:Eigen::Replicate
m_colInputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_colInputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_colInputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_colInputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_colPaddingLeft	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_colPaddingLeft;$/;"	m	struct:Eigen::TensorEvaluator
m_colPaddingLeft	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_colPaddingLeft;$/;"	m	struct:Eigen::TensorEvaluator
m_colSqNorms	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealRowVectorType m_colSqNorms;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colStartIndex	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index* m_colStartIndex;$/;"	m	class:Eigen::SkylineMatrix
m_colStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_colStride;$/;"	m	struct:Eigen::TensorEvaluator
m_colStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_colStride;$/;"	m	struct:Eigen::TensorEvaluator
m_col_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_col_inflate_strides;$/;"	m	class:Eigen::TensorImagePatchOp
m_col_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_col_inflate_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_col_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_col_inflate_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_col_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_col_inflate_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_col_strides;$/;"	m	class:Eigen::TensorImagePatchOp
m_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_col_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_col_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_col_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_col_to_sup	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_col_to_sup; \/\/ col_to_sup[j] is the supernode number to which column j belongs$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_cols	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ArgType::ColsAtCompileTime> m_cols;$/;"	m	struct:Eigen::internal::unary_evaluator
m_cols	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ReverseCol ? ArgType::ColsAtCompileTime : 0> m_cols;$/;"	m	struct:Eigen::internal::unary_evaluator
m_cols	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::CwiseNullaryOp
m_cols	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    Index m_cols;$/;"	m	class:Eigen::DenseStorage
m_cols	tools/eigen/Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::MapBase
m_cols	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_cols	tools/eigen/Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_cols	tools/eigen/Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_colsPermutation	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    PermutationType m_colsPermutation;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colsTranspositions	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_colsTranspositions	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::ColPivHouseholderQR
m_cols_permutation	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    PermutationType m_cols_permutation;$/;"	m	class:Eigen::FullPivHouseholderQR
m_cols_transpositions	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    IntDiagSizeVectorType m_cols_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_comm	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_comm; \/\/ The MPI communicator identifier$/;"	m	class:Eigen::PastixBase
m_compU	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_compV	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_components	tools/RedSVD.hh	/^		DenseMatrix m_components;$/;"	m	class:RedSVD::RedPCA
m_computationOptions	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  unsigned int m_computationOptions;$/;"	m	class:Eigen::SVDBase
m_computeFullU	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::SVDBase
m_computeFullV	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::SVDBase
m_computeQZ	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      bool m_computeQZ;$/;"	m	class:Eigen::RealQZ
m_computeThinU	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::SVDBase
m_computeThinV	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::SVDBase
m_computed	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_computed;$/;"	m	class:Eigen::BDCSVD
m_condImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  TensorEvaluator<IfArgType, Device> m_condImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_condition	tools/eigen/Eigen/src/Core/Select.h	/^    typename ConditionMatrixType::Nested m_condition;$/;"	m	class:Eigen::Select
m_condition	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typename IfXprType::Nested m_condition;$/;"	m	class:Eigen::TensorSelectOp
m_conditionImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ConditionMatrixType> m_conditionImpl;$/;"	m	struct:Eigen::internal::evaluator
m_conditionNumber	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    RealScalar m_conditionNumber;$/;"	m	class:Eigen::MatrixPower
m_contract_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const contract_t m_contract_strides;$/;"	m	class:Eigen::internal::BaseTensorContractionMapper
m_ctrls	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    ControlPointVectorType  m_ctrls; \/*!< Control points. *\/$/;"	m	class:Eigen::Spline
m_cudaInputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  array<Index, NumDims> m_cudaInputStrides;$/;"	m	class:Eigen::internal::IndexMapper
m_cudaOutputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  array<Index, NumDims> m_cudaOutputStrides;$/;"	m	class:Eigen::internal::IndexMapper
m_currentBlockRows	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  Index m_currentBlockRows; \/\/ current block height$/;"	m	struct:Eigen::CommaInitializer
m_currentEl	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_currentEl;            \/\/ the current element in sparse\/linked-list mode$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_curs_id	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    struct dirent *m_curs_id; $/;"	m	class:Eigen::MatrixMarketIterator	typeref:struct:Eigen::MatrixMarketIterator::dirent
m_data	tools/SimpleIni.h	/^    TSection m_data;$/;"	m	class:CSimpleIniTempl
m_data	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PointerType m_data;$/;"	m	struct:Eigen::internal::mapbase_evaluator
m_data	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const Scalar *m_data;$/;"	m	struct:Eigen::internal::evaluator
m_data	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    T *m_data;$/;"	m	class:Eigen::DenseStorage
m_data	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    internal::plain_array<T,Size,_Options> m_data;$/;"	m	class:Eigen::DenseStorage
m_data	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  internal::plain_array<Scalar,EIGEN_SIZE_MIN_PREFER_FIXED(Size,MaxSize),0> m_data;$/;"	m	struct:Eigen::internal::gemv_static_vector_if
m_data	tools/eigen/Eigen/src/Core/MapBase.h	/^    PointerType m_data;$/;"	m	class:Eigen::MapBase
m_data	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  Scalar *m_data;$/;"	m	class:Eigen::internal::BlasLinearMapper
m_data	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  Scalar* EIGEN_RESTRICT m_data;$/;"	m	class:Eigen::internal::blas_data_mapper
m_data	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  Scalar* m_data;$/;"	m	class:Eigen::internal::BlasVectorMapper
m_data	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseMatrix
m_data	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseVector
m_data	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    const internal::CompressedStorage<Scalar,StorageIndex>& m_data;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_data	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    const internal::CompressedStorage<Scalar,StorageIndex>& m_data;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  Scalar* m_data;$/;"	m	struct:Eigen::TensorEvaluator
m_data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  const Scalar* m_data;$/;"	m	struct:Eigen::TensorEvaluator
m_data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    Scalar* m_data;$/;"	m	class:Eigen::TensorMap
m_data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  EIGEN_ALIGN_MAX T m_data[Size];$/;"	m	class:Eigen::TensorStorage
m_data	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  T *m_data;$/;"	m	class:Eigen::TensorStorage
m_data	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    SkylineStorage<Scalar> m_data;$/;"	m	class:Eigen::SkylineMatrix
m_data	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    std::vector<internal::CompressedStorage<Scalar,StorageIndex> > m_data;$/;"	m	class:Eigen::DynamicSparseMatrix
m_deallocate	tools/eigen/Eigen/src/Core/util/Memory.h	/^    bool m_deallocate;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_dec	tools/eigen/Eigen/src/Core/Solve.h	/^  const Decomposition &m_dec;$/;"	m	class:Eigen::Solve
m_dec	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const Decomposition &m_dec;$/;"	m	class:Eigen::SolveWithGuess
m_dec	tools/eigen/Eigen/src/misc/Image.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::image_retval_base
m_dec	tools/eigen/Eigen/src/misc/Kernel.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_delta	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_delta;$/;"	m	class:Eigen::LevenbergMarquardt
m_derivatives	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    DerType m_derivatives;$/;"	m	class:Eigen::AutoDiffScalar
m_dest	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Dest& m_dest;$/;"	m	struct:Eigen::internal::gemm_functor
m_detPermC	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    Index m_detPermR, m_detPermC; \/\/ Determinants of the permutation matrices$/;"	m	class:Eigen::SparseLU
m_detPermR	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    Index m_detPermR, m_detPermC; \/\/ Determinants of the permutation matrices$/;"	m	class:Eigen::SparseLU
m_det_p	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    Index m_det_p;$/;"	m	class:Eigen::PartialPivLU
m_det_pq	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    Index m_det_pq, m_nonzero_pivots;$/;"	m	class:Eigen::FullPivLU
m_det_pq	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::ColPivHouseholderQR
m_det_pq	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::FullPivHouseholderQR
m_deterministic	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  bool m_deterministic;$/;"	m	class:Eigen::internal::NormalRandomGenerator
m_deterministic	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  bool m_deterministic;$/;"	m	class:Eigen::internal::UniformRandomGenerator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  const GpuDevice& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    const DeviceType& m_device;$/;"	m	class:Eigen::TensorDevice
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    const GpuDevice& m_device;$/;"	m	class:Eigen::TensorDevice
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    const ThreadPoolDevice& m_device;$/;"	m	class:Eigen::TensorDevice
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_device	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  const Device& m_device;$/;"	m	struct:Eigen::TensorEvaluator
m_devicePropInitialized	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^static bool m_devicePropInitialized = false;$/;"	m	namespace:Eigen
m_deviceProperties	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^static cudaDeviceProp* m_deviceProperties;$/;"	m	namespace:Eigen
m_diag	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorType m_diag;                                \/\/ the diagonal coefficients (LDLT mode)$/;"	m	class:Eigen::SimplicialCholeskyBase
m_diag	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType m_fvec, m_qtf, m_diag; $/;"	m	class:Eigen::LevenbergMarquardt
m_diag	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Scalar* m_diag;$/;"	m	class:Eigen::SkylineStorage
m_diagCoeffImpl	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<DiagonalCoeffType> m_diagCoeffImpl;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_diagCoeffNested	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    DiagCoeffNested m_diagCoeffNested;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_diagCoeffNested	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  DiagCoeffNested m_diagCoeffNested;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_diagImpl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  evaluator<DiagonalType> m_diagImpl;$/;"	m	struct:Eigen::internal::diagonal_product_evaluator_base
m_diagSize	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_diagSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_diagSize;$/;"	m	class:Eigen::SkylineStorage
m_diagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalVectorType m_diagonal;$/;"	m	class:Eigen::DiagonalMatrix
m_diagonal	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    typename DiagonalVectorType::Nested m_diagonal;$/;"	m	class:Eigen::DiagonalWrapper
m_diagpivotthresh	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    RealScalar m_diagpivotthresh; \/\/ Specifies the threshold used for a diagonal entry to be an acceptable pivot$/;"	m	class:Eigen::SparseLU
m_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    const internal::DimensionId<DimId> m_dim;$/;"	m	class:Eigen::TensorChippingOp
m_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  const internal::DimensionId<DimId> m_dim;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    Dimensions m_dimensions;$/;"	m	class:Eigen::TensorMap
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  NewDimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  Dimensions m_dimensions;$/;"	m	class:Eigen::TensorStorage
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  FixedDimensions m_dimensions;$/;"	m	class:Eigen::TensorStorage
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dimensions	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Dimensions m_dimensions;$/;"	m	struct:Eigen::TensorEvaluator
m_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  Dimensions m_dims;$/;"	m	struct:Eigen::TensorEvaluator
m_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    const NewDimensions m_dims;$/;"	m	class:Eigen::TensorReshapingOp
m_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    const Dims m_dims;$/;"	m	class:Eigen::TensorReductionOp
m_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  Dimensions m_dims;$/;"	m	class:Eigen::internal::TensorLazyEvaluatorReadOnly
m_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    const Strides m_dims;$/;"	m	class:Eigen::TensorStridingOp
m_direction	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_distribution	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  mutable std::normal_distribution<T> m_distribution;$/;"	m	class:Eigen::internal::NormalRandomGenerator
m_distribution	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  mutable std::uniform_real_distribution<double> m_distribution;$/;"	m	class:Eigen::internal::UniformRandomGenerator
m_distribution	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  mutable std::uniform_real_distribution<float> m_distribution;$/;"	m	class:Eigen::internal::UniformRandomGenerator
m_dparm	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<double,DPARM_SIZE,1> m_dparm; \/\/ Scalar vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_droptol	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    RealScalar m_droptol;$/;"	m	class:Eigen::IncompleteLUT
m_dst	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  DstEvaluatorType& m_dst;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_dstExpr	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  DstXprType& m_dstExpr;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_dummy	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  MatrixType m_dummy;$/;"	m	class:Eigen::IterativeSolverBase
m_dummy	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackMatrixType m_dummy;$/;"	m	class:Eigen::UmfPackLU
m_dummy	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  Scalar m_dummy;$/;"	m	class:Eigen::internal::TensorLazyEvaluatorReadOnly
m_eigenvalues	tools/RedSVD.hh	/^		ScalarVector m_eigenvalues;$/;"	m	class:RedSVD::RedSymEigen
m_eigenvectors	tools/RedSVD.hh	/^		DenseMatrix m_eigenvectors;$/;"	m	class:RedSVD::RedSymEigen
m_eigenvectorsOk	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::ComplexEigenSolver
m_eigenvectorsOk	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::EigenSolver
m_eigenvectorsOk	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_eigenvectorsOk	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eigenvectorsOk	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  bool m_eigenvectorsOk;$/;"	m	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
m_eivalues	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivalues	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::EigenSolver
m_eivalues	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    RealVectorType m_eivalues;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivalues	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  Matrix<Scalar, Dynamic, 1> m_eivalues;$/;"	m	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
m_eivec	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_eivec;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivec	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::EigenSolver
m_eivec	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_eivec	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    EigenvectorsType m_eivec;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivec	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  Matrix<Scalar, Dynamic, Dynamic> m_eivec;$/;"	m	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
m_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    std::vector<GroupElement> m_elements;$/;"	m	class:Eigen::DynamicSGroup
m_else	tools/eigen/Eigen/src/Core/Select.h	/^    typename ElseMatrixType::Nested m_else;$/;"	m	class:Eigen::Select
m_else	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typename ElseXprType::Nested m_else;$/;"	m	class:Eigen::TensorSelectOp
m_elseImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ElseMatrixType> m_elseImpl;$/;"	m	struct:Eigen::internal::evaluator
m_elseImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  TensorEvaluator<ElseArgType, Device> m_elseImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_empty	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    bool m_empty;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_end	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  const Index m_end;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_end	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_end;$/;"	m	class:Eigen::internal::AmbiVector
m_end	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
m_end	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_end	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_end;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_end	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    const Index m_end;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_end	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        const Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_end	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_end;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_end	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_end;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_end	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_end; \/\/ starting inner index of the next block$/;"	m	class:Eigen::BlockSparseMatrix::InnerIterator
m_end	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_end;$/;"	m	class:Eigen::BlockSparseMatrix::BlockInnerIterator
m_endidrow	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_endidrow;                       \/\/ End index of row indices of the current column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_endidval	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_endidval;                 \/\/ End of the column value$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_epsfcn	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_epsfcn; \/\/$/;"	m	class:Eigen::LevenbergMarquardt
m_epsilon	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    RealScalar m_epsilon;       \/\/ epsilon used to prune zero coefficients$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_epsilon	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  RealScalar m_epsilon;$/;"	m	class:Eigen::SparseView
m_error	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable RealScalar m_error;$/;"	m	class:Eigen::IterativeSolverBase
m_etree	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    IndexVector m_etree; \/\/ Column elimination tree $/;"	m	class:Eigen::SparseLU
m_etree	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    IndexVector m_etree;            \/\/ Column elimination tree$/;"	m	class:Eigen::SparseQR
m_eval	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EvaluatorType m_eval;$/;"	m	class:Eigen::InnerIterator
m_eval	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  const EvaluatorType& m_eval;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_eval	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  const unary_evaluator& m_eval;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_evaluator	tools/eigen/Eigen/src/Core/Redux.h	/^  internal::evaluator<XprType> m_evaluator;$/;"	m	class:Eigen::internal::redux_evaluator
m_evaluator	tools/eigen/Eigen/src/Core/Visitor.h	/^  internal::evaluator<XprType> m_evaluator;$/;"	m	class:Eigen::internal::visitor_evaluator
m_evaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  internal::TensorLazyBaseEvaluator<Dimensions, Scalar>* m_evaluator;$/;"	m	class:Eigen::TensorRef
m_exponent	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  const Scalar m_exponent;$/;"	m	struct:Eigen::internal::scalar_pow_op
m_expr	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const XprType m_expr;$/;"	m	struct:Eigen::internal::evaluator
m_expr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    typename XprType::Nested m_expr;$/;"	m	class:Eigen::TensorCustomUnaryOp
m_expr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    typename XprType::Nested m_expr;$/;"	m	class:Eigen::TensorReductionOp
m_expression	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::ArrayWrapper
m_expression	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::MatrixWrapper
m_expression	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    const ExpressionType& m_expression;$/;"	m	class:Eigen::ForceAlignedAccess
m_expression	tools/eigen/Eigen/src/Core/NestByValue.h	/^    const ExpressionType m_expression;$/;"	m	class:Eigen::NestByValue
m_expression	tools/eigen/Eigen/src/Core/NoAlias.h	/^    ExpressionType& m_expression;$/;"	m	class:Eigen::NoAlias
m_expression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    ExpressionType& m_expression;$/;"	m	class:Eigen::TensorDevice
m_extractedDataAreDirty	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::SuperLUBase
m_extractedDataAreDirty	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::UmfPackLU
m_f	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    StemFunction *m_f;$/;"	m	class:Eigen::MatrixFunctionReturnValue
m_f	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    StemFunction* m_f;$/;"	m	class:Eigen::internal::MatrixFunctionAtomic
m_fT	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    ComplexMatrix m_fT;$/;"	m	class:Eigen::MatrixPower
m_factor	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  Scalar m_factor;$/;"	m	class:Eigen::UniformScaling
m_factor	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar m_factor;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_factor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_factor; \/\/$/;"	m	class:Eigen::LevenbergMarquardt
m_factorizationIsOk	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::CholmodBase
m_factorizationIsOk	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_factorizationIsOk	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_factorizationIsOk	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::PastixBase
m_factorizationIsOk	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_factorizationIsOk	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SPQR
m_factorizationIsOk	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_factorizationIsOk	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SparseLU
m_factorizationIsOk	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::SuperLUBase
m_factorizationIsOk	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::UmfPackLU
m_factorizationIsOk	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    bool m_factorizationIsOk; $/;"	m	class:Eigen::IncompleteCholesky
m_factorizationIsok	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    bool m_factorizationIsok;$/;"	m	class:Eigen::SparseQR
m_fastColStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  internal::TensorIntDivisor<Index> m_fastColStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastColStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastColStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastInputColStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  internal::TensorIntDivisor<Index> m_fastInputColStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastInputColStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastInputColStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastInputColsEff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  internal::TensorIntDivisor<Index> m_fastInputColsEff;$/;"	m	struct:Eigen::TensorEvaluator
m_fastInputColsEff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastInputColsEff;$/;"	m	struct:Eigen::TensorEvaluator
m_fastInputPlaneStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastInputPlaneStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastInputRowStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  internal::TensorIntDivisor<Index> m_fastInputRowStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastInputRowStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastInputRowStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastOtherStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  internal::TensorIntDivisor<Index> m_fastOtherStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastOtherStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastOtherStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastOutputDepth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  internal::TensorIntDivisor<Index> m_fastOutputDepth;$/;"	m	struct:Eigen::TensorEvaluator
m_fastOutputDepth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastOutputDepth;$/;"	m	struct:Eigen::TensorEvaluator
m_fastOutputPlanes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastOutputPlanes;$/;"	m	struct:Eigen::TensorEvaluator
m_fastOutputPlanesRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastOutputPlanesRows;$/;"	m	struct:Eigen::TensorEvaluator
m_fastOutputRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  internal::TensorIntDivisor<Index> m_fastOutputRows;$/;"	m	struct:Eigen::TensorEvaluator
m_fastOutputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  array<internal::TensorIntDivisor<Index>, NumDims> m_fastOutputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_fastPatchStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  internal::TensorIntDivisor<Index> m_fastPatchStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastPatchStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastPatchStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastRowStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  internal::TensorIntDivisor<Index> m_fastRowStride;$/;"	m	struct:Eigen::TensorEvaluator
m_fastStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  array<internal::TensorIntDivisor<Index>, NumDims> m_fastStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_file	tools/SimpleIni.h	/^        FILE * m_file;$/;"	m	class:CSimpleIniTempl::FileWriter
m_fillfactor	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    int m_fillfactor;$/;"	m	class:Eigen::IncompleteLUT
m_firstRowElt	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    IndexVector m_firstRowElt;      \/\/ First element in each row$/;"	m	class:Eigen::SparseQR
m_fjac	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    JacobianType m_fjac; $/;"	m	class:Eigen::LevenbergMarquardt
m_flags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    int m_flags;$/;"	m	class:Eigen::SkylineInplaceLU
m_fnorm	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_fnorm; \/\/ Norm of the current vector function$/;"	m	class:Eigen::LevenbergMarquardt
m_folder	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    std::string m_folder;$/;"	m	class:Eigen::MatrixMarketIterator
m_folder_id	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    DIR * m_folder_id;$/;"	m	class:Eigen::MatrixMarketIterator
m_force	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable bool m_force; \/\/ Force the use of deflation at each restart$/;"	m	class:Eigen::DGMRES
m_format	tools/eigen/Eigen/src/Core/IO.h	/^    IOFormat m_format;$/;"	m	class:Eigen::WithFormat
m_frequency	tools/eigen/bench/BenchTimer.h	/^  double m_frequency;$/;"	m	class:Eigen::BenchTimer
m_ftol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_ftol; \/\/Tolerance in the norm of the vector function$/;"	m	class:Eigen::LevenbergMarquardt
m_func	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    const CustomBinaryFunc m_func;$/;"	m	class:Eigen::TensorCustomBinaryOp
m_func	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    const CustomUnaryFunc m_func;$/;"	m	class:Eigen::TensorCustomUnaryOp
m_functor	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  const Functor &m_functor;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_functor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::binary_evaluator
m_functor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const NullaryOp m_functor;$/;"	m	struct:Eigen::internal::evaluator
m_functor	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const UnaryOp m_functor;$/;"	m	struct:Eigen::internal::unary_evaluator
m_functor	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp m_functor;$/;"	m	class:Eigen::CwiseBinaryOp
m_functor	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp m_functor;$/;"	m	class:Eigen::CwiseNullaryOp
m_functor	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOp
m_functor	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryView
m_functor	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const MemberOp m_functor;$/;"	m	class:Eigen::PartialReduxExpr
m_functor	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::member_redux
m_functor	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_functor	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::binary_evaluator
m_functor	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_functor	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	struct:Eigen::internal::unary_evaluator
m_functor	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_functor	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	struct:Eigen::internal::unary_evaluator
m_functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::TensorEvaluator
m_functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  const NullaryOp m_functor;$/;"	m	struct:Eigen::TensorEvaluator
m_functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  const UnaryOp m_functor;$/;"	m	struct:Eigen::TensorEvaluator
m_functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const BinaryOp m_functor;$/;"	m	class:Eigen::TensorCwiseBinaryOp
m_functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const NullaryOp m_functor;$/;"	m	class:Eigen::TensorCwiseNullaryOp
m_functor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::TensorCwiseUnaryOp
m_functor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FunctorType &m_functor;$/;"	m	class:Eigen::LevenbergMarquardt
m_fvec	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType m_fvec, m_qtf, m_diag; $/;"	m	class:Eigen::LevenbergMarquardt
m_generator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  mutable std::mt19937 m_generator;$/;"	m	class:Eigen::internal::NormalRandomGenerator
m_generator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  mutable std::mt19937 m_generator;$/;"	m	class:Eigen::internal::UniformRandomGenerator
m_generator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    const Generator m_generator;$/;"	m	class:Eigen::TensorGeneratorOp
m_generator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  Generator m_generator;$/;"	m	struct:Eigen::TensorEvaluator
m_generators	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    std::vector<Generator> m_generators;$/;"	m	class:Eigen::DynamicSGroup
m_globalFlags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    int m_globalFlags;$/;"	m	class:Eigen::DynamicSGroup
m_global_iter	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      Index m_global_iter;$/;"	m	class:Eigen::RealQZ
m_glu	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    typename Base::GlobalLU_t m_glu; $/;"	m	class:Eigen::SparseLU
m_glu	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typename SparseLUImpl<Scalar, StorageIndex>::GlobalLU_t& m_glu;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_gnorm	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_gnorm; \/\/Norm of the gradient of the error $/;"	m	class:Eigen::LevenbergMarquardt
m_gtol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_gtol; \/\/tolerance of the norm of the error gradient$/;"	m	class:Eigen::LevenbergMarquardt
m_guess	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const GuessType     &m_guess;$/;"	m	class:Eigen::SolveWithGuess
m_hCoeffs	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::HessenbergDecomposition
m_hCoeffs	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::Tridiagonalization
m_hCoeffs	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::ColPivHouseholderQR
m_hCoeffs	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::FullPivHouseholderQR
m_hCoeffs	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename HCoeffsType::Nested m_hCoeffs;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_hCoeffs	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::HouseholderQR
m_hasRhs	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool m_hasRhs; \/\/ The right hand side exists$/;"	m	class:Eigen::MatrixMarketIterator
m_hashmaps	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    HashMapType* m_hashmaps;$/;"	m	class:Eigen::RandomSetter
m_hasrefX	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool m_hasrefX; \/\/ A reference solution is provided$/;"	m	class:Eigen::MatrixMarketIterator
m_hcoeffs	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    ScalarVector m_hcoeffs;         \/\/ The Householder coefficients$/;"	m	class:Eigen::SparseQR
m_hess	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::ComplexSchur
m_hess	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const HessenbergDecomposition<MatrixType>& m_hess;$/;"	m	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
m_hess	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::RealSchur
m_horiz_offset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const Index m_horiz_offset;$/;"	m	class:Eigen::internal::TensorContractionSubMapper
m_householder	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    MatrixType m_householder;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_i_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Index m_i_size;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_i_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  left_nocontract_t m_i_strides;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_id	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_id;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_id	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_id;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_id	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    StorageIndex m_id;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_id	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    Index m_id;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_id	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    Index m_id;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_id	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_id	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_id	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_id; \/\/ current inner index in the block$/;"	m	class:Eigen::BlockSparseMatrix::InnerIterator
m_id	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::BlockSparseMatrix::BlockInnerIterator
m_idrow	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_idrow;                          \/\/ Index to browse the row indices $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_idval	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_idval;                          \/\/ Index to browse the values in the current column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_ij_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const nocontract_t m_ij_strides;$/;"	m	class:Eigen::internal::BaseTensorContractionMapper
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  TensorEvaluator<const TensorReductionOp<ReduceOp, Dims, const TensorIndexTupleOp<ArgType> >, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  const TensorEvaluator& m_impl;$/;"	m	struct:Eigen::PacketConverter
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  TensorEvaluator<Expr, Device> m_impl;$/;"	m	class:Eigen::internal::TensorLazyEvaluatorReadOnly
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  TensorEvaluator<ArgType, Device> m_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_in_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_in_col_strides;$/;"	m	class:Eigen::TensorImagePatchOp
m_in_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_in_col_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_in_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_in_col_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_in_col_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_in_col_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_in_plane_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_in_plane_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_in_plane_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_in_plane_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_in_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_in_row_strides;$/;"	m	class:Eigen::TensorImagePatchOp
m_in_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_in_row_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_in_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_in_row_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_in_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_in_row_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_index	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const internal::variable_if_dynamicindex<Index, XprType::DiagIndex> m_index;$/;"	m	struct:Eigen::internal::evaluator
m_index	tools/eigen/Eigen/src/Core/Diagonal.h	/^    const internal::variable_if_dynamicindex<Index, DiagIndex> m_index;$/;"	m	class:Eigen::Diagonal
m_index	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex m_index;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_indexPtr	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	/^    IndexVector m_indexPtr; \/\/ Pointer to the adjacenccy list of each row\/column$/;"	m	class:Eigen::MetisOrdering
m_indexStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  array<Index, NumKernelDims> m_indexStride;$/;"	m	struct:Eigen::TensorEvaluator
m_indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::PermutationMatrix
m_indices	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::PermutationWrapper
m_indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Transpositions
m_indices	tools/eigen/Eigen/src/Core/Transpositions.h	/^    const typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::TranspositionsWrapper
m_indices	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    StorageIndex* m_indices;$/;"	m	class:Eigen::internal::CompressedStorage
m_indices	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const StorageIndex* m_indices;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_indices	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const StorageIndex* m_indices;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_indices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    const Indices m_indices;$/;"	m	class:Eigen::TensorContractionOp
m_indices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    const Indices m_indices;$/;"	m	class:Eigen::TensorConvolutionOp
m_indices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  Indices m_indices;$/;"	m	struct:Eigen::TensorEvaluator
m_indices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    const StartIndices m_indices;$/;"	m	class:Eigen::TensorSlicingOp
m_indices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    std::array<Index, NumIndices> m_indices;$/;"	m	class:Eigen::internal::tensor_symmetry_value_setter
m_indices	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    StorageIndex *m_indices; \/\/Inner block indices, size m_nonzerosblocks ... OK$/;"	m	class:Eigen::BlockSparseMatrix
m_inf	tools/eigen/doc/examples/class_CwiseUnaryOp.cpp	/^  Scalar m_inf, m_sup;$/;"	m	struct:CwiseClampOp	file:
m_info	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::LLT
m_info	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::CholmodBase
m_info	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::ComplexSchur
m_info	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::EigenSolver
m_info	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      ComputationInfo m_info;$/;"	m	class:Eigen::RealQZ
m_info	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::RealSchur
m_info	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_info	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::IncompleteLUT
m_info	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable ComputationInfo m_info;$/;"	m	class:Eigen::IterativeSolverBase
m_info	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable ComputationInfo m_info; $/;"	m	class:Eigen::PastixBase
m_info	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::PardisoImpl
m_info	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SPQR
m_info	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_info	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SparseLU
m_info	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SparseQR
m_info	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SuperLUBase
m_info	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::UmfPackLU
m_info	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  ComputationInfo m_info;$/;"	m	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
m_info	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::IncompleteCholesky
m_info	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    mutable ComputationInfo m_info; $/;"	m	class:Eigen::IterScaling
m_info	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    ComputationInfo m_info; $/;"	m	class:Eigen::LevenbergMarquardt
m_initialShift	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    RealScalar m_initialShift;   \/\/ The initial shift parameter$/;"	m	class:Eigen::IncompleteCholesky
m_initisOk	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_initisOk; $/;"	m	class:Eigen::PastixBase
m_inner	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  Index m_inner;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_inner	tools/eigen/Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, InnerStrideAtCompileTime> m_inner;$/;"	m	class:Eigen::Stride
m_inner	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        Index m_inner;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_innerBSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_innerBSize; \/\/ Number of block rows$/;"	m	class:Eigen::BlockSparseMatrix
m_innerDim	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  Index m_innerDim;$/;"	m	struct:Eigen::internal::product_evaluator
m_innerIndex	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  Index m_innerIndex;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_innerIndices	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	/^    IndexVector m_innerIndices; \/\/ Adjacency list $/;"	m	class:Eigen::MetisOrdering
m_innerIndices	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_innerIndices;$/;"	m	class:Eigen::SparseMapBase
m_innerNonZeros	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_innerNonZeros;$/;"	m	class:Eigen::SparseMapBase
m_innerNonZeros	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    StorageIndex* m_innerNonZeros;     \/\/ optional, if null then the data is compressed$/;"	m	class:Eigen::SparseMatrix
m_innerOffset	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    StorageIndex *m_innerOffset; \/\/ Starting index of each inner block (size m_innerBSize+1)$/;"	m	class:Eigen::BlockSparseMatrix
m_innerSize	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    Index   m_innerSize;$/;"	m	class:Eigen::SparseMapBase
m_innerSize	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::SparseMatrix
m_innerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::SkylineMatrix
m_innerSize	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::DynamicSparseMatrix
m_inputCols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_inputCols;$/;"	m	struct:Eigen::TensorEvaluator
m_inputCols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_inputCols;$/;"	m	struct:Eigen::TensorEvaluator
m_inputDepth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_inputDepth;$/;"	m	struct:Eigen::TensorEvaluator
m_inputDepth	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_inputDepth;$/;"	m	struct:Eigen::TensorEvaluator
m_inputImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  TensorEvaluator<InputArgType, Device> m_inputImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_inputImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  TensorEvaluator<InputArgType, GpuDevice> m_inputImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_inputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  Index m_inputOffset;$/;"	m	struct:Eigen::TensorEvaluator
m_inputPlanes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_inputPlanes;$/;"	m	struct:Eigen::TensorEvaluator
m_inputRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_inputRows;$/;"	m	struct:Eigen::TensorEvaluator
m_inputRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_inputRows;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  Index m_inputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  array<Index, NumDims> m_inputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  array<Index, NumDims> m_inputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  array<Index, NumDims> m_inputStrides;$/;"	m	class:Eigen::internal::IndexMapper
m_inputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  array<Index, NumDims> m_inputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  array<Index, NumDims> m_inputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  array<Index, NumDims> m_inputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  array<Index, NumDims-1> m_inputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  array<Index, NumDims> m_inputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_inputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  array<Index, NumDims> m_inputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_input_cols_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_input_cols_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_input_cols_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_input_cols_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_input_planes_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_input_planes_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_input_rows_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_input_rows_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_input_rows_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_input_rows_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_input_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    typename InputXprType::Nested m_input_xpr;$/;"	m	class:Eigen::TensorConvolutionOp
m_inputs	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  const int m_inputs, m_values;$/;"	m	struct:Eigen::DenseFunctor
m_inputs	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  const int m_inputs, m_values;$/;"	m	struct:Eigen::SparseFunctor
m_inputs	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  const int m_inputs, m_values;$/;"	m	struct:Functor	file:
m_inputs	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  int m_inputs, m_values;$/;"	m	struct:Functor	file:
m_inputs	tools/eigen/unsupported/test/autodiff.cpp	/^  int m_inputs, m_values;$/;"	m	struct:TestFunc1	file:
m_inputs	tools/eigen/unsupported/test/forward_adolc.cpp	/^  int m_inputs, m_values;$/;"	m	struct:TestFunc1	file:
m_interPacket	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Packet m_interPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_invdiag	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Vector m_invdiag;$/;"	m	class:Eigen::DiagonalPreconditioner
m_inverse	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  bool m_inverse;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_invp	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<StorageIndex,Dynamic,1> m_invp;  \/\/ Inverse permutation vector$/;"	m	class:Eigen::PastixBase
m_iparm	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<int,IPARM_SIZE,1> m_iparm; \/\/ integer vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_iparm	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable ParameterType m_iparm;$/;"	m	class:Eigen::PardisoImpl
m_isAllocated	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_isDeflAllocated	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable bool m_isDeflAllocated;$/;"	m	class:Eigen::DGMRES
m_isDeflInitialized	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable bool m_isDeflInitialized;$/;"	m	class:Eigen::DGMRES
m_isDense	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    bool m_isDense;             \/\/ mode of the vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_isEtreeOk	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    bool m_isEtreeOk;               \/\/ whether the elimination tree match the initial input matrix$/;"	m	class:Eigen::SparseQR
m_isInitialized	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LDLT
m_isInitialized	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LLT
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexEigenSolver
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexSchur
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::EigenSolver
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HessenbergDecomposition
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      bool m_isInitialized;$/;"	m	class:Eigen::RealQZ
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::RealSchur
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_isInitialized	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::Tridiagonalization
m_isInitialized	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::DiagonalPreconditioner
m_isInitialized	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_isInitialized	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::PartialPivLU
m_isInitialized	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_isInitialized	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_isInitialized	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HouseholderQR
m_isInitialized	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_isInitialized	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_isInitialized	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^    mutable bool m_isInitialized;$/;"	m	class:Eigen::SparseSolverBase
m_isInitialized	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  bool m_isInitialized;$/;"	m	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
m_isInitialized	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    bool m_isInitialized; $/;"	m	class:Eigen::IterScaling
m_isInitialized	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    bool m_isInitialized; \/\/ Check whether the minimization step has been called$/;"	m	class:Eigen::LevenbergMarquardt
m_isQSorted	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    bool m_isQSorted;               \/\/ whether Q is sorted or not$/;"	m	class:Eigen::SparseQR
m_isRUpToDate	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable bool m_isRUpToDate;$/;"	m	class:Eigen::SPQR
m_isRValue	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool m_isRValue;$/;"	m	class:Eigen::SparseMatrixBase
m_isRValue	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    bool m_isRValue;$/;"	m	class:Eigen::SkylineMatrixBase
m_isTranspose	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_isvalid	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool m_isvalid; $/;"	m	class:Eigen::MatrixMarketIterator
m_iter	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  IteratorType m_iter;$/;"	m	class:Eigen::InnerIterator
m_iter	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index m_iter; \/\/ Number of iterations performed$/;"	m	class:Eigen::LevenbergMarquardt
m_iterations	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable Index m_iterations;$/;"	m	class:Eigen::IterativeSolverBase
m_j_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Index m_j_size;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_j_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  right_nocontract_t m_j_strides;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_jacobian	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    JacobianType m_jacobian;$/;"	m	class:Eigen::AutoDiffVector
m_jcol	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  Index m_jcol;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_jcol	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  Index m_jcol;$/;"	m	struct:Eigen::internal::panel_dfs_traits
m_jsuper_ref	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  Index& m_jsuper_ref;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_k_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Index m_k_size;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_k_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const contract_t m_k_strides;$/;"	m	class:Eigen::internal::BaseTensorContractionMapper
m_k_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  contract_t m_k_strides;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_kc	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_kc;$/;"	m	class:Eigen::internal::level3_blocking
m_kernel	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  const Scalar* m_kernel;$/;"	m	struct:Eigen::TensorEvaluator
m_kernelArg	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  KernelArgType m_kernelArg;$/;"	m	struct:Eigen::TensorEvaluator
m_kernelImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  TensorEvaluator<KernelArgType, Device> m_kernelImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_kernelImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  TensorEvaluator<KernelArgType, GpuDevice> m_kernelImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_kernelStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  array<Index, NumKernelDims> m_kernelStride;$/;"	m	struct:Eigen::TensorEvaluator
m_kernel_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^    typename KernelXprType::Nested m_kernel_xpr;$/;"	m	class:Eigen::TensorConvolutionOp
m_keyBitsOffset	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    unsigned char m_keyBitsOffset;$/;"	m	class:Eigen::RandomSetter
m_knots	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^    KnotVectorType m_knots; \/*!< Knot vector. *\/$/;"	m	class:Eigen::Spline
m_l	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::SuperLUBase
m_l	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::UmfPackLU
m_lambdaN	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable RealScalar m_lambdaN; \/\/Modulus of the largest eigenvalue of A$/;"	m	class:Eigen::DGMRES
m_lastError	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    std::string m_lastError;$/;"	m	class:Eigen::SparseLU
m_lastError	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    std::string m_lastError;$/;"	m	class:Eigen::SparseQR
m_left	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    VectorXd m_left; \/\/ Left scaling vector$/;"	m	class:Eigen::IterScaling
m_leftImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  TensorEvaluator<LeftArgType, Device> m_leftImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_leftImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    TensorEvaluator<LeftArgType, Device> m_leftImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_leftImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  TensorEvaluator<EvalLeftArgType, Device> m_leftImpl;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_leftImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  TensorEvaluator<LeftArgType, Device> m_leftImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_leftStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    array<Index, NumDims> m_leftStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_left_contracting_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  contract_t m_left_contracting_strides;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_left_nocontract_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  left_nocontract_t m_left_nocontract_strides;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_length	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    Index m_length;$/;"	m	class:Eigen::HouseholderSequence
m_lhs	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_lhs	tools/eigen/Eigen/src/Core/Product.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::Product
m_lhs	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  const LhsNested m_lhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhs	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Lhs& m_lhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_lhs	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typename LhsMatrixTypeCleaned::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_lhs	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_lhs	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  const LhsArg m_lhs;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_lhs	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typename Rhs::PlainObject m_lhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhs	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::internal::SkylineProduct
m_lhsEval	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const LhsEvaluator &m_lhsEval;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_lhsImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<Lhs> m_lhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_lhsImpl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  LhsEtorType m_lhsImpl;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhsImpl	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<Lhs> m_lhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_lhsIter	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    LhsIterator m_lhsIter;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_lhsXprImpl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  evaluator<ActualLhs> m_lhsXprImpl;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_lhs_inner_dim_contiguous	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  bool m_lhs_inner_dim_contiguous;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_lhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^    typename internal::remove_all<typename LhsXprType::Nested>::type& m_lhs_xpr;$/;"	m	class:Eigen::TensorAssignOp
m_lhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    typename LhsXprType::Nested m_lhs_xpr;$/;"	m	class:Eigen::TensorConcatenationOp
m_lhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    typename LhsXprType::Nested m_lhs_xpr;$/;"	m	class:Eigen::TensorContractionOp
m_lhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    typename LhsXprType::Nested m_lhs_xpr;$/;"	m	class:Eigen::TensorCustomBinaryOp
m_lhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typename LhsXprType::Nested m_lhs_xpr;$/;"	m	class:Eigen::TensorCwiseBinaryOp
m_llCurrent	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llCurrent;$/;"	m	class:Eigen::internal::AmbiVector
m_llSize	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llSize;$/;"	m	class:Eigen::internal::AmbiVector
m_llStart	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llStart;$/;"	m	class:Eigen::internal::AmbiVector
m_local_kernel	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  bool m_local_kernel;$/;"	m	struct:Eigen::TensorEvaluator
m_low	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_low;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_lowPacket	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Packet m_lowPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_lower	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Scalar* m_lower;$/;"	m	class:Eigen::SkylineStorage
m_lowerProfile	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index* m_lowerProfile;$/;"	m	class:Eigen::SkylineStorage
m_lowerProfileSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_lowerProfileSize;$/;"	m	class:Eigen::SkylineStorage
m_lowerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_lowerSize;$/;"	m	class:Eigen::SkylineStorage
m_lu	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    FactorType m_lu;$/;"	m	class:Eigen::IncompleteLUT
m_lu	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::FullPivLU
m_lu	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::PartialPivLU
m_lu	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    FactorType m_lu;$/;"	m	class:Eigen::IncompleteLU
m_lu	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    MatrixType& m_lu;$/;"	m	class:Eigen::SkylineInplaceLU
m_luImpl	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  SparseLUImpl<Scalar, StorageIndex>& m_luImpl;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_luT	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable PartialPivLU<DenseMatrix> m_luT; \/\/ LU factorization of m_T$/;"	m	class:Eigen::DGMRES
m_mapL	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  const MappedSupernodalType& m_mapL;$/;"	m	struct:Eigen::SparseLUMatrixLReturnType
m_mapL	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  const MatrixLType& m_mapL;$/;"	m	struct:Eigen::SparseLUMatrixUReturnType
m_mapU	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  const MatrixUType& m_mapU;$/;"	m	struct:Eigen::SparseLUMatrixUReturnType
m_marker	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  StorageIndex* m_marker;$/;"	m	struct:Eigen::internal::panel_dfs_traits
m_mat	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    NCMatrix m_mat; \/\/ The input (permuted ) matrix $/;"	m	class:Eigen::SparseLU
m_mat	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const BlockSparseMatrix& m_mat;$/;"	m	class:Eigen::BlockSparseMatrix::InnerIterator
m_mat	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const BlockSparseMatrix<_Scalar, _BlockAtCompileTime, _Options, StorageIndex>& m_mat;$/;"	m	class:Eigen::BlockSparseMatrix::BlockInnerIterator
m_mat	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    MatrixType m_mat; \/\/ Current matrix  $/;"	m	class:Eigen::MatrixMarketIterator
m_matImpl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  evaluator<MatrixType>   m_matImpl;$/;"	m	struct:Eigen::internal::diagonal_product_evaluator_base
m_matIsLoaded	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool m_matIsLoaded; \/\/ Determine if the matrix has already been loaded from the file$/;"	m	class:Eigen::MatrixMarketIterator
m_matS	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    MatrixType m_matS;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_matT	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matT	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::EigenSolver
m_matT	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::RealSchur
m_matU	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matU	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matU;$/;"	m	class:Eigen::RealSchur
m_matUisUptodate	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::ComplexSchur
m_matUisUptodate	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::RealSchur
m_matX	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_matX;$/;"	m	class:Eigen::ComplexEigenSolver
m_matname	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    std::string m_matname; \/\/ Matrix Name$/;"	m	class:Eigen::MatrixMarketIterator
m_matrix	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LDLT
m_matrix	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LLT
m_matrix	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    typename internal::ref_selector<MatrixType>::type m_matrix;$/;"	m	class:Eigen::CwiseUnaryView
m_matrix	tools/eigen/Eigen/src/Core/Diagonal.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Diagonal
m_matrix	tools/eigen/Eigen/src/Core/IO.h	/^    const typename ExpressionType::Nested m_matrix;$/;"	m	class:Eigen::WithFormat
m_matrix	tools/eigen/Eigen/src/Core/Replicate.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::Replicate
m_matrix	tools/eigen/Eigen/src/Core/Reverse.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Reverse
m_matrix	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SelfAdjointView
m_matrix	tools/eigen/Eigen/src/Core/Transpose.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Transpose
m_matrix	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::TriangularView
m_matrix	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::VectorwiseOp
m_matrix	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::PartialReduxExpr
m_matrix	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::HessenbergDecomposition
m_matrix	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::Tridiagonalization
m_matrix	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
m_matrix	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Homogeneous
m_matrix	tools/eigen/Eigen/src/Geometry/Transform.h	/^  MatrixType m_matrix;$/;"	m	class:Eigen::Transform
m_matrix	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable SparseMatrixType m_matrix;$/;"	m	class:Eigen::PardisoImpl
m_matrix	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    CholMatrixType m_matrix;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_matrix	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typename SparseMatrixType::Nested m_matrix;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_matrix	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    typename XprType::Nested m_matrix;$/;"	m	class:Eigen::BlockImpl
m_matrix	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  const Derived *m_matrix;$/;"	m	struct:Eigen::internal::evaluator
m_matrix	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_matrix	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::SparseSelfAdjointView
m_matrix	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  const SparseVectorType &m_matrix;$/;"	m	struct:Eigen::internal::evaluator
m_matrix	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseView
m_matrix	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const MappedSuperNodalMatrix& m_matrix; \/\/ Supernodal lower triangular matrix $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_matrix	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_matrix;  \/\/ copy of the factorized matrix$/;"	m	class:Eigen::SuperLUBase
m_matrix	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::IterScaling
m_matrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const SkylineMatrix& m_matrix;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_matrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const SkylineMatrix& m_matrix;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_matrix	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  const SparseMatrixType *m_matrix;$/;"	m	struct:Eigen::internal::evaluator
m_matrixU	tools/RedSVD.hh	/^		DenseMatrix m_matrixU;$/;"	m	class:RedSVD::RedSVD
m_matrixU	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  MatrixUType m_matrixU;$/;"	m	class:Eigen::SVDBase
m_matrixV	tools/RedSVD.hh	/^		DenseMatrix m_matrixV;$/;"	m	class:RedSVD::RedSVD
m_matrixV	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  MatrixVType m_matrixV;$/;"	m	class:Eigen::SVDBase
m_max	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_maxIndex	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  const typename TensorEvaluator::Index m_maxIndex;$/;"	m	struct:Eigen::PacketConverter
m_maxIterations	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    static const int m_maxIterations = 30;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_maxIterations	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index m_maxIterations;$/;"	m	class:Eigen::IterativeSolverBase
m_maxIterationsPerRow	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    static const int m_maxIterationsPerRow = 30;$/;"	m	class:Eigen::ComplexSchur
m_maxIterationsPerRow	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    static const int m_maxIterationsPerRow = 40;$/;"	m	class:Eigen::RealSchur
m_maxIters	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    Index m_maxIters;$/;"	m	class:Eigen::ComplexSchur
m_maxIters	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      Index m_maxIters;$/;"	m	class:Eigen::RealQZ
m_maxIters	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    Index m_maxIters;$/;"	m	class:Eigen::RealSchur
m_maxNeig	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable int m_maxNeig; \/\/ Maximum number of eigenvalues to deflate$/;"	m	class:Eigen::DGMRES
m_maxfev	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index m_maxfev; \/\/ Maximum number of function evaluation$/;"	m	class:Eigen::LevenbergMarquardt
m_maxiter	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    size_t m_maxiter;     \/\/\/< Max. number of iterations$/;"	m	class:Eigen::IterationController
m_maxits	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    int m_maxits; \/\/ Maximum number of iterations allowed$/;"	m	class:Eigen::IterScaling
m_maxpivot	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_maxpivot	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_maxpivot	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_mc	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_mc;$/;"	m	class:Eigen::internal::level3_blocking
m_means	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  array<T, NumDims> m_means;$/;"	m	class:Eigen::internal::GaussianGenerator
m_min	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_mode	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_mode;$/;"	m	class:Eigen::internal::AmbiVector
m_monic	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^      RightColumn                m_monic;$/;"	m	class:Eigen::internal::companion
m_msglvl	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_nOrder	tools/SimpleIni.h	/^    int m_nOrder;$/;"	m	class:CSimpleIniTempl
m_nRec	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  Index m_nRec;$/;"	m	class:Eigen::BDCSVD
m_naiveU	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_naiveU, m_naiveV;$/;"	m	class:Eigen::BDCSVD
m_naiveV	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_naiveU, m_naiveV;$/;"	m	class:Eigen::BDCSVD
m_nbrConverged	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  size_t m_nbrConverged;$/;"	m	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
m_nbrIterations	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  size_t m_nbrIterations;$/;"	m	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
m_nc	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_nc;$/;"	m	class:Eigen::internal::level3_blocking
m_neig	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable int m_neig; \/\/Number of eigenvalues to extract at each restart$/;"	m	class:Eigen::DGMRES
m_nfev	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index m_nfev;$/;"	m	class:Eigen::LevenbergMarquardt
m_nit	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    size_t m_nit;         \/\/\/< iteration number$/;"	m	class:Eigen::IterationController
m_njev	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index m_njev; $/;"	m	class:Eigen::LevenbergMarquardt
m_nnz	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    Index   m_nnz;$/;"	m	class:Eigen::SparseMapBase
m_nnzL	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    Index m_nnzL, m_nnzU; \/\/ Nonzeros in L and U factors$/;"	m	class:Eigen::SparseLU
m_nnzU	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    Index m_nnzL, m_nnzU; \/\/ Nonzeros in L and U factors$/;"	m	class:Eigen::SparseLU
m_nocontract_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const nocontract_t m_nocontract_strides;$/;"	m	class:Eigen::internal::BaseTensorContractionMapper
m_noise	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    int m_noise;          \/\/\/< if noise > 0 iterations are printed$/;"	m	class:Eigen::IterationController
m_nonZerosPerCol	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorI m_nonZerosPerCol;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_nonzeroSingularValues	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_nonzero_pivots	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    Index m_det_pq, m_nonzero_pivots;$/;"	m	class:Eigen::FullPivLU
m_nonzero_pivots	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::ColPivHouseholderQR
m_nonzero_pivots	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::FullPivHouseholderQR
m_nonzeropivots	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    Index m_nonzeropivots;          \/\/ Number of non zero pivots found$/;"	m	class:Eigen::SparseQR
m_nonzeros	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_nonzeros; \/\/ Total nonzeros elements$/;"	m	class:Eigen::BlockSparseMatrix
m_nonzerosblocks	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_nonzerosblocks; \/\/ Total nonzeros blocks (lower than  m_innerBSize x m_outerBSize)$/;"	m	class:Eigen::BlockSparseMatrix
m_normOfS	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      Scalar m_normOfT, m_normOfS;$/;"	m	class:Eigen::RealQZ
m_normOfT	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      Scalar m_normOfT, m_normOfS;$/;"	m	class:Eigen::RealQZ
m_nsuper	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_nsuper; \/\/ Number of supernodes$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_nulls	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index m_nulls;$/;"	m	class:Eigen::MatrixPower
m_numIndices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    std::size_t m_numIndices;$/;"	m	class:Eigen::DynamicSGroup
m_numIters	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  int m_numIters;$/;"	m	class:Eigen::BDCSVD
m_numeric	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_numeric;$/;"	m	class:Eigen::UmfPackLU
m_nzval	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Scalar* m_nzval; \/\/array of nonzero values packed by column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_nzval_colptr	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_nzval_colptr; \/\/nzval_colptr[j] Stores the location in nzval[] which starts column j$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_object	tools/eigen/Eigen/src/Core/Ref.h	/^    TPlainObjectType m_object;$/;"	m	class:Eigen::Ref
m_object	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    TPlainObjectType m_object;$/;"	m	class:Eigen::Ref
m_offset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    const Index m_offset;$/;"	m	class:Eigen::TensorChippingOp
m_offset	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const Index m_offset; \/\/ Position of this column in the block$/;"	m	class:Eigen::BlockSparseMatrix::InnerIterator
m_offsets	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  const StartIndices m_offsets;$/;"	m	struct:Eigen::TensorEvaluator
m_op	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  const ArgType m_op;$/;"	m	struct:Eigen::TensorEvaluator
m_op	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  const XprType m_op;$/;"	m	struct:Eigen::TensorEvaluator
m_op	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  const ArgType m_op;$/;"	m	struct:Eigen::TensorEvaluator
m_ordering	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    int m_ordering; \/\/ Ordering method to use, see SPQR's manual$/;"	m	class:Eigen::SPQR
m_orig_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  TensorEvaluator<const TensorIndexTupleOp<ArgType>, Device> m_orig_impl;$/;"	m	struct:Eigen::TensorEvaluator
m_origin	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_originalMatrix	tools/eigen/Eigen/src/misc/Image.h	/^    const MatrixType& m_originalMatrix;$/;"	m	struct:Eigen::internal::image_retval_base
m_ostream	tools/SimpleIni.h	/^        std::ostream & m_ostream;$/;"	m	class:CSimpleIniTempl::StreamWriter
m_other	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_inverse_mult_op
m_other	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_add_op
m_other	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_rsub_op
m_other	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_sub_op
m_other	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar2>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_multiple2_op
m_other	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar2>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_quotient2_op
m_other	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_multiple_op
m_other	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_quotient1_op
m_other	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_constant_op
m_other	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const Derived& m_other; $/;"	m	struct:Eigen::SPQR_QProduct
m_other	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  const Derived& m_other;$/;"	m	struct:Eigen::SparseQR_QProduct
m_otherInputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_otherInputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_otherStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_otherStride;$/;"	m	struct:Eigen::TensorEvaluator
m_otherStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_otherStride;$/;"	m	struct:Eigen::TensorEvaluator
m_outer	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  const Index m_outer;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_outer	tools/eigen/Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, OuterStrideAtCompileTime> m_outer;$/;"	m	class:Eigen::Stride
m_outer	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Index m_outer;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_outer	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Index m_outer;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_outer	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const Index m_outer;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_outer	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Index m_outer;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_outer	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        const Index m_outer;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_outer	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_outer;                    \/\/ Current column $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_outer	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_outer	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_outer	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::BlockSparseMatrix::BlockInnerIterator
m_outer	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::BlockSparseMatrix::InnerIterator
m_outer	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::DynamicSparseMatrix::InnerIterator
m_outer	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
m_outerB	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const Index m_outerB;$/;"	m	class:Eigen::BlockSparseMatrix::InnerIterator
m_outerBSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_outerBSize; \/\/ Number of block columns$/;"	m	class:Eigen::BlockSparseMatrix
m_outerIndex	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_outerIndex;$/;"	m	class:Eigen::SparseMapBase
m_outerIndex	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    StorageIndex* m_outerIndex;$/;"	m	class:Eigen::SparseMatrix
m_outerIndex	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    StorageIndex *m_outerIndex; \/\/ Starting pointer of each block column in m_indices (size m_outerBSize)... OK$/;"	m	class:Eigen::BlockSparseMatrix
m_outerOffset	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    StorageIndex *m_outerOffset; \/\/ Starting index of each outer block (size m_outerBSize+1)$/;"	m	class:Eigen::BlockSparseMatrix
m_outerPackets	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    Index m_outerPackets;$/;"	m	class:Eigen::RandomSetter
m_outerPos	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  Index m_outerPos;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_outerSize	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, OuterSize> m_outerSize;$/;"	m	class:Eigen::BlockImpl
m_outerSize	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, OuterSize> m_outerSize;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_outerSize	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    Index   m_outerSize;$/;"	m	class:Eigen::SparseMapBase
m_outerSize	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_outerSize;$/;"	m	class:Eigen::SparseMatrix
m_outerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index m_outerSize;$/;"	m	class:Eigen::SkylineMatrix
m_outerStart	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index m_outerStart;$/;"	m	class:Eigen::BlockImpl
m_outerStart	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index m_outerStart;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_outerStride	tools/eigen/Eigen/src/Core/Block.h	/^    Index m_outerStride;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_outerStride	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^                                                    : RowsAtCompileTime> m_outerStride;$/;"	m	struct:Eigen::internal::evaluator
m_outputCols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_outputCols;$/;"	m	struct:Eigen::TensorEvaluator
m_outputCols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_outputCols;$/;"	m	struct:Eigen::TensorEvaluator
m_outputPerm_c	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_outputPerm_c; \/\/ The final column permutation$/;"	m	class:Eigen::SparseQR
m_outputPlanes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_outputPlanes;$/;"	m	struct:Eigen::TensorEvaluator
m_outputPlanesRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_outputPlanesRows;$/;"	m	struct:Eigen::TensorEvaluator
m_outputRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_outputRows;$/;"	m	struct:Eigen::TensorEvaluator
m_outputRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_outputRows;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  array<Index, NumDims> m_outputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  array<Index, NumDims> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    array<Index, NumDims> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  array<Index, NumDims> m_outputStrides;$/;"	m	class:Eigen::internal::IndexMapper
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  array<Index, NumDims> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  array<Index, NumDims> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  array<Index, NumDims+1> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  array<Index, NumDims> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  array<Index, NumOutputDims> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  array<Index, NumDims> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_outputStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  array<Index, NumDims> m_outputStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_p	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    PermutationPType m_p;$/;"	m	class:Eigen::FullPivLU
m_p	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    PermutationType m_p;$/;"	m	class:Eigen::PartialPivLU
m_p	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::SuperLUBase
m_p	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::UmfPackLU
m_p	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    RealScalar m_p;$/;"	m	class:Eigen::MatrixPowerAtomic
m_p	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    const ComplexScalar m_p;$/;"	m	class:Eigen::MatrixComplexPowerReturnValue
m_p	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    const RealScalar m_p;$/;"	m	class:Eigen::MatrixPowerParenthesesReturnValue
m_p	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    const RealScalar m_p;$/;"	m	class:Eigen::MatrixPowerReturnValue
m_pConverter	tools/SimpleIni.h	/^    UConverter * m_pConverter;$/;"	m	class:SI_ConvertW
m_pData	tools/SimpleIni.h	/^    SI_CHAR * m_pData;$/;"	m	class:CSimpleIniTempl
m_pEncoding	tools/SimpleIni.h	/^    const char * m_pEncoding;$/;"	m	class:SI_ConvertW
m_pFileComment	tools/SimpleIni.h	/^    const SI_CHAR * m_pFileComment;$/;"	m	class:CSimpleIniTempl
m_packetStep	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Packet m_packetStep;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_padding	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  PaddingDimensions m_padding;$/;"	m	struct:Eigen::TensorEvaluator
m_paddingValue	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Scalar m_paddingValue;$/;"	m	struct:Eigen::TensorEvaluator
m_paddingValue	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Scalar m_paddingValue;$/;"	m	struct:Eigen::TensorEvaluator
m_padding_bottom	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_padding_bottom;$/;"	m	class:Eigen::TensorImagePatchOp
m_padding_bottom	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_padding_bottom;$/;"	m	class:Eigen::TensorVolumePatchOp
m_padding_bottom_z	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_padding_bottom_z;$/;"	m	class:Eigen::TensorVolumePatchOp
m_padding_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^    const PaddingDimensions m_padding_dims;$/;"	m	class:Eigen::TensorPaddingOp
m_padding_explicit	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const bool m_padding_explicit;$/;"	m	class:Eigen::TensorImagePatchOp
m_padding_explicit	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const bool m_padding_explicit;$/;"	m	class:Eigen::TensorVolumePatchOp
m_padding_left	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_padding_left;$/;"	m	class:Eigen::TensorImagePatchOp
m_padding_left	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_padding_left;$/;"	m	class:Eigen::TensorVolumePatchOp
m_padding_right	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_padding_right;$/;"	m	class:Eigen::TensorImagePatchOp
m_padding_right	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_padding_right;$/;"	m	class:Eigen::TensorVolumePatchOp
m_padding_top	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_padding_top;$/;"	m	class:Eigen::TensorImagePatchOp
m_padding_top	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_padding_top;$/;"	m	class:Eigen::TensorVolumePatchOp
m_padding_top_z	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_padding_top_z;$/;"	m	class:Eigen::TensorVolumePatchOp
m_padding_type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const PaddingType m_padding_type;$/;"	m	class:Eigen::TensorImagePatchOp
m_padding_type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const PaddingType m_padding_type;$/;"	m	class:Eigen::TensorVolumePatchOp
m_padding_value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const Scalar m_padding_value;$/;"	m	class:Eigen::TensorImagePatchOp
m_padding_value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const Scalar m_padding_value;$/;"	m	class:Eigen::TensorVolumePatchOp
m_par	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_par;$/;"	m	class:Eigen::LevenbergMarquardt
m_parent	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorI m_parent;                                 \/\/ elimination tree$/;"	m	class:Eigen::SimplicialCholeskyBase
m_pastixdata	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable pastix_data_t *m_pastixdata; \/\/ Data structure for pastix$/;"	m	class:Eigen::PastixBase
m_patchInputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_patchInputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_patchStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_patchStride;$/;"	m	struct:Eigen::TensorEvaluator
m_patchStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_patchStride;$/;"	m	struct:Eigen::TensorEvaluator
m_patchStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  array<Index, NumDims-1> m_patchStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_patch_cols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_patch_cols;$/;"	m	class:Eigen::TensorImagePatchOp
m_patch_cols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_patch_cols;$/;"	m	class:Eigen::TensorVolumePatchOp
m_patch_cols_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_patch_cols_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_patch_cols_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_patch_cols_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_patch_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^    const PatchDim m_patch_dims;$/;"	m	class:Eigen::TensorPatchOp
m_patch_planes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_patch_planes;$/;"	m	class:Eigen::TensorVolumePatchOp
m_patch_planes_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_patch_planes_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_patch_rows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_patch_rows;$/;"	m	class:Eigen::TensorImagePatchOp
m_patch_rows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_patch_rows;$/;"	m	class:Eigen::TensorVolumePatchOp
m_patch_rows_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_patch_rows_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_patch_rows_eff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_patch_rows_eff;$/;"	m	struct:Eigen::TensorEvaluator
m_perfv	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    internal::perfvalues m_perfv;$/;"	m	class:Eigen::SparseLU
m_perm	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<StorageIndex,Dynamic,1> m_perm;  \/\/ Permutation vector$/;"	m	class:Eigen::PastixBase
m_perm	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable IntColVectorType m_perm;$/;"	m	class:Eigen::PardisoImpl
m_perm	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const Perm& m_perm;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_perm	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    PermutationType m_perm; $/;"	m	class:Eigen::IncompleteCholesky
m_perm_c	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    PermutationType m_perm_c; \/\/ Column permutation $/;"	m	class:Eigen::SparseLU
m_perm_c	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_perm_c;       \/\/ Fill-reducing  Column  permutation$/;"	m	class:Eigen::SparseQR
m_perm_r	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    PermutationType m_perm_r ; \/\/ Row permutation$/;"	m	class:Eigen::SparseLU
m_permutation	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    const PermutationType& m_permutation;$/;"	m	class:Eigen::Transpose
m_permutation	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    PermutationType m_permutation;$/;"	m	class:Eigen::LevenbergMarquardt
m_pivotperm	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_pivotperm;    \/\/ The permutation for rank revealing$/;"	m	class:Eigen::SparseQR
m_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      ::fftw_plan m_plan;$/;"	m	struct:Eigen::internal::fftw_plan
m_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      fftwf_plan m_plan;$/;"	m	struct:Eigen::internal::fftw_plan
m_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      fftwl_plan m_plan;$/;"	m	struct:Eigen::internal::fftw_plan
m_planeInputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_planeInputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_planePaddingTop	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_planePaddingTop;$/;"	m	struct:Eigen::TensorEvaluator
m_plane_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_plane_inflate_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_plane_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_plane_inflate_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_plane_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_plane_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_plane_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_plane_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_plans	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      PlanMap m_plans;$/;"	m	struct:Eigen::internal::fftw_impl
m_plans	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  PlanMap m_plans;$/;"	m	struct:Eigen::internal::kissfft_impl
m_pmat	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_pmat;            \/\/ Temporary matrix$/;"	m	class:Eigen::SparseQR
m_pow	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    MatrixPower<MatrixType>& m_pow;$/;"	m	class:Eigen::MatrixPowerParenthesesReturnValue
m_precision	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_precision;$/;"	m	class:Eigen::FullPivHouseholderQR
m_precision	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    RealScalar m_precision;$/;"	m	class:Eigen::SkylineInplaceLU
m_preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner m_preconditioner;$/;"	m	class:Eigen::IterativeSolverBase
m_prescribedThreshold	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_prescribedThreshold	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_prescribedThreshold	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_prescribedThreshold	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  RealScalar m_prescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_preservedStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  array<Index, NumOutputDims> m_preservedStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_pt	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable void *m_pt[64];$/;"	m	class:Eigen::PardisoImpl
m_ptr	tools/eigen/Eigen/src/Core/util/Memory.h	/^    T* m_ptr;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_ptr	tools/eigen/Eigen/src/Core/util/Memory.h	/^  T* m_ptr;$/;"	m	class:Eigen::internal::scoped_array
m_q	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    PermutationQType m_q;$/;"	m	class:Eigen::FullPivLU
m_q	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::SuperLUBase
m_q	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::UmfPackLU
m_qr	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::ColPivHouseholderQR
m_qr	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::FullPivHouseholderQR
m_qr	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename MatrixType::Nested m_qr;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_qr	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::HouseholderQR
m_qr	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  QRType m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQRMatrixQReturnType
m_qr	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQRMatrixQTransposeReturnType
m_qr	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQR_QProduct
m_qr_precond_morecols	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreColsThanRows> m_qr_precond_morecols;$/;"	m	class:Eigen::JacobiSVD
m_qr_precond_morerows	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreRowsThanCols> m_qr_precond_morerows;$/;"	m	class:Eigen::JacobiSVD
m_qtf	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType m_fvec, m_qtf, m_diag; $/;"	m	class:Eigen::LevenbergMarquardt
m_r	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable int m_r; \/\/ Current number of deflated eigenvalues, size of m_U$/;"	m	class:Eigen::DGMRES
m_rank	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable Index m_rank; \/\/ The rank of the matrix$/;"	m	class:Eigen::SPQR
m_rank	tools/eigen/Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_rank	tools/eigen/Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_rank	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index m_rank;$/;"	m	class:Eigen::MatrixPower
m_realQZ	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    RealQZ<MatrixType> m_realQZ;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_realSchur	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    RealSchur<MatrixType> m_realSchur;$/;"	m	class:Eigen::EigenSolver
m_realTwiddles	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::map<int, std::vector<Complex> > m_realTwiddles;$/;"	m	struct:Eigen::internal::kissfft_impl
m_reduce_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    const Dims m_reduce_dims;$/;"	m	class:Eigen::TensorTupleReducerOp
m_reduce_op	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    const ReduceOp m_reduce_op;$/;"	m	class:Eigen::TensorTupleReducerOp
m_reducedDims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  array<Index, NumReducedDims> m_reducedDims;$/;"	m	struct:Eigen::TensorEvaluator
m_reducedStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  array<Index, NumReducedDims> m_reducedStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_reducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    const Op m_reducer;$/;"	m	class:Eigen::TensorReductionOp
m_reducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  Op m_reducer;$/;"	m	struct:Eigen::TensorEvaluator
m_ref	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  TensorRef<Derived> m_ref;$/;"	m	struct:Eigen::TensorEvaluator
m_refX	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    VectorType m_refX; \/\/ The reference solution, if exists$/;"	m	class:Eigen::MatrixMarketIterator
m_refcount	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  int m_refcount;$/;"	m	class:Eigen::internal::TensorLazyBaseEvaluator
m_reference	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  Scalar m_reference;$/;"	m	class:Eigen::SparseView
m_res	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_res;         \/\/\/< last computed residual$/;"	m	class:Eigen::IterationController
m_resadd	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_resminreach, m_resadd;$/;"	m	class:Eigen::IterationController
m_resmax	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_resmax;      \/\/\/< maximum residual$/;"	m	class:Eigen::IterationController
m_resminreach	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_resminreach, m_resadd;$/;"	m	class:Eigen::IterationController
m_restart	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable Index m_restart; \/\/ Maximum size of the Krylov subspace$/;"	m	class:Eigen::DGMRES
m_restart	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  Index m_restart;$/;"	m	class:Eigen::GMRES
m_result	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	tools/eigen/Eigen/src/Core/Inverse.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::unary_evaluator
m_result	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_result	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	tools/eigen/Eigen/src/Core/Solve.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_result	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_result	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Scalar* m_result;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_result	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  CoeffReturnType* m_result;$/;"	m	struct:Eigen::TensorEvaluator
m_result	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  CoeffReturnType* m_result;$/;"	m	struct:Eigen::TensorEvaluator
m_returnOne	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^      bool m_returnOne;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_returnOne	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    bool m_returnOne;$/;"	m	class:Eigen::TriangularViewImpl::InnerIterator
m_return_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    const int m_return_dim;$/;"	m	class:Eigen::TensorTupleReducerOp
m_return_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  const int m_return_dim;$/;"	m	struct:Eigen::TensorEvaluator
m_reverse	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  ReverseDimensions m_reverse;$/;"	m	struct:Eigen::TensorEvaluator
m_reverse_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    const ReverseDimensions m_reverse_dims;$/;"	m	class:Eigen::TensorReverseOp
m_rfactor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    JacobianType m_rfactor; \/\/ The triangular matrix R from the QR of the jacobian matrix m_fjac$/;"	m	class:Eigen::LevenbergMarquardt
m_rhs	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_rhs	tools/eigen/Eigen/src/Core/Product.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::Product
m_rhs	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  const RhsNested m_rhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhs	tools/eigen/Eigen/src/Core/Solve.h	/^  const RhsType       &m_rhs;$/;"	m	class:Eigen::Solve
m_rhs	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_rhs	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Rhs& m_rhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_rhs	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_rhs	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_rhs	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const RhsType       &m_rhs;$/;"	m	class:Eigen::SolveWithGuess
m_rhs	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typename Lhs::PlainObject m_rhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhs	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::internal::SkylineProduct
m_rhs	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    VectorType m_rhs;  \/\/ Current vector$/;"	m	class:Eigen::MatrixMarketIterator
m_rhsEval	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const evaluator<Rhs> &m_rhsEval;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_rhsImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<Rhs> m_rhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_rhsImpl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  RhsEtorType m_rhsImpl;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhsImpl	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<Rhs> m_rhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_rhsIter	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsIterator m_rhsIter;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_rhsXprImpl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  evaluator<ActualRhs> m_rhsXprImpl;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_rhs_inner_dim_contiguous	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  bool m_rhs_inner_dim_contiguous;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_rhs_inner_dim_reordered	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  bool m_rhs_inner_dim_reordered;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_rhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^    const typename internal::remove_all<typename RhsXprType::Nested>::type& m_rhs_xpr;$/;"	m	class:Eigen::TensorAssignOp
m_rhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    typename RhsXprType::Nested m_rhs_xpr;$/;"	m	class:Eigen::TensorConcatenationOp
m_rhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^    typename RhsXprType::Nested m_rhs_xpr;$/;"	m	class:Eigen::TensorContractionOp
m_rhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^    typename RhsXprType::Nested m_rhs_xpr;$/;"	m	class:Eigen::TensorCustomBinaryOp
m_rhs_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typename RhsXprType::Nested m_rhs_xpr;$/;"	m	class:Eigen::TensorCwiseBinaryOp
m_rhsn	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_rhsn;        \/\/\/< Right hand side norm$/;"	m	class:Eigen::IterationController
m_right	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    VectorXd m_right; \/\/ m_right scaling vector$/;"	m	class:Eigen::IterScaling
m_rightImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  TensorEvaluator<RightArgType, Device> m_rightImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_rightImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    TensorEvaluator<RightArgType, Device> m_rightImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_rightImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  TensorEvaluator<EvalRightArgType, Device> m_rightImpl;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_rightImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  TensorEvaluator<RightArgType, Device> m_rightImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_rightStrides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    array<Index, NumDims> m_rightStrides;$/;"	m	struct:Eigen::TensorEvaluator
m_right_contracting_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  contract_t m_right_contracting_strides;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_right_nocontract_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  right_nocontract_t m_right_nocontract_strides;$/;"	m	struct:Eigen::TensorContractionEvaluatorBase
m_roots	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    RootsType               m_roots;$/;"	m	class:Eigen::PolynomialSolverBase
m_row	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  Index m_row;              \/\/ current row id$/;"	m	struct:Eigen::CommaInitializer
m_row	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  StorageIndex m_row, m_col;$/;"	m	class:Eigen::Triplet
m_row	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_row; \/\/ Number of rows$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rowFactor	tools/eigen/Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, RowFactor> m_rowFactor;$/;"	m	class:Eigen::Replicate
m_rowInputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_rowInputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_rowInputStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_rowInputStride;$/;"	m	struct:Eigen::TensorEvaluator
m_rowPaddingTop	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_rowPaddingTop;$/;"	m	struct:Eigen::TensorEvaluator
m_rowPaddingTop	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_rowPaddingTop;$/;"	m	struct:Eigen::TensorEvaluator
m_rowStartIndex	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index* m_rowStartIndex;$/;"	m	class:Eigen::SkylineMatrix
m_rowStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_rowStride;$/;"	m	struct:Eigen::TensorEvaluator
m_row_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_row_inflate_strides;$/;"	m	class:Eigen::TensorImagePatchOp
m_row_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_row_inflate_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_row_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_row_inflate_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_row_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_row_inflate_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    const DenseIndex m_row_strides;$/;"	m	class:Eigen::TensorImagePatchOp
m_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index m_row_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    const DenseIndex m_row_strides;$/;"	m	class:Eigen::TensorVolumePatchOp
m_row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index m_row_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_rowind	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_rowind; \/\/ Array of compressed row indices of rectangular supernodes$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rowind_colptr	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_rowind_colptr; \/\/rowind_colptr[j] stores the location in rowind[] which starts column j$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rows	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrix
m_rows	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_rows	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ArgType::RowsAtCompileTime> m_rows;$/;"	m	struct:Eigen::internal::unary_evaluator
m_rows	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ReverseRow ? ArgType::RowsAtCompileTime : 0> m_rows;$/;"	m	struct:Eigen::internal::unary_evaluator
m_rows	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::CwiseNullaryOp
m_rows	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    Index m_rows;$/;"	m	class:Eigen::DenseStorage
m_rows	tools/eigen/Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::MapBase
m_rows	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_rowsTranspositions	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    IntColVectorType m_rowsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_rowsTranspositions	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    TranspositionType m_rowsTranspositions;$/;"	m	class:Eigen::PartialPivLU
m_rowsTranspositions	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename IntDiagSizeVectorType::Nested m_rowsTranspositions;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_rows_transpositions	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    IntDiagSizeVectorType m_rows_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_s	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_scale	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    Scalar m_scale;$/;"	m	struct:Eigen::internal::generic_product_impl::adds
m_scale	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    VectorRx m_scale;            \/\/ The vector for scaling the matrix $/;"	m	class:Eigen::IncompleteCholesky
m_scaledMatrix	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^    MatrixType m_scaledMatrix;$/;"	m	class:Eigen::JacobiSVD
m_schur	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexSchur<MatrixType> m_schur;$/;"	m	class:Eigen::ComplexEigenSolver
m_scores	tools/RedSVD.hh	/^		DenseMatrix m_scores;$/;"	m	class:RedSVD::RedPCA
m_scratch	tools/SimpleIni.h	/^        std::string m_scratch;$/;"	m	class:CSimpleIniTempl::Converter
m_scratchBuf	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<Complex> m_scratchBuf;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_selectedActionNames	tools/eigen/bench/btl/generic_bench/btl.hh	/^  std::vector<BtlString> m_selectedActionNames;$/;"	m	class:BtlConfig
m_shift	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    Index m_shift;$/;"	m	class:Eigen::HouseholderSequence
m_shiftOffset	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    RealScalar m_shiftOffset[2];$/;"	m	class:Eigen::CholmodBase
m_shiftOffset	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftOffset;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_shiftScale	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftScale;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_shuffle	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    const Shuffle m_shuffle;$/;"	m	class:Eigen::TensorShufflingOp
m_sign	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    internal::SignMatrix m_sign;$/;"	m	class:Eigen::LDLT
m_singularValues	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  SingularValuesType m_singularValues;$/;"	m	class:Eigen::SVDBase
m_size	tools/eigen/Eigen/src/Core/util/Memory.h	/^    size_t m_size;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_size	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_size; \/\/ Size of the matrix $/;"	m	class:Eigen::PastixBase
m_size	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_size;$/;"	m	class:Eigen::PardisoImpl
m_size	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_size;$/;"	m	class:Eigen::internal::AmbiVector
m_size	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    Index m_size;$/;"	m	class:Eigen::internal::CompressedStorage
m_size	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    Index m_size;$/;"	m	class:Eigen::SparseVector
m_sizeA	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_sizeA;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sizeB	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_sizeB;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    const Sizes m_sizes;$/;"	m	class:Eigen::TensorSlicingOp
m_sluA	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluA;$/;"	m	class:Eigen::SuperLUBase
m_sluB	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_sluBerr	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluCscale	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluEqued	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable char m_sluEqued;$/;"	m	class:Eigen::SuperLUBase
m_sluEtree	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable std::vector<int> m_sluEtree;$/;"	m	class:Eigen::SuperLUBase
m_sluFerr	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluL	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluOptions	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable superlu_options_t m_sluOptions;$/;"	m	class:Eigen::SuperLUBase
m_sluRscale	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluStat	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperLUStat_t m_sluStat;$/;"	m	class:Eigen::SuperLUBase
m_sluU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluX	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_smv	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^    mutable RealScalar m_smv; \/\/ Smaller multiple of the remaining number of steps allowed$/;"	m	class:Eigen::DGMRES
m_sparseIter	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    SparseXprIter m_sparseIter;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_sparseXprEval	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<SparseXprType> m_sparseXprEval;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_sparseXprImpl	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<SparseXprType> m_sparseXprImpl;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_spblockmat	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const BlockSparseMatrixT& m_spblockmat;$/;"	m	class:Eigen::BlockSparseMatrixView
m_spblockmat	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const BlockSparseMatrixT& m_spblockmat;$/;"	m	class:Eigen::BlockVectorReturn
m_spblockmat	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const BlockSparseMatrixT& m_spblockmat;$/;"	m	class:Eigen::BlockVectorView
m_spqr	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr; $/;"	m	struct:Eigen::SPQR_QProduct
m_spqr	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr;$/;"	m	struct:Eigen::SPQRMatrixQReturnType
m_spqr	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr;$/;"	m	struct:Eigen::SPQRMatrixQTransposeReturnType
m_squarings	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    int m_squarings;$/;"	m	struct:Eigen::internal::MatrixExponentialScalingOp
m_src	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  const SrcEvaluatorType& m_src;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_src	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    const typename internal::ref_selector<Derived>::type m_src;$/;"	m	struct:Eigen::MatrixExponentialReturnValue
m_src	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    const DerivedNested m_src;$/;"	m	class:Eigen::MatrixSquareRootReturnValue
m_stageRadix	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<int> m_stageRadix;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_stageRemainder	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<int> m_stageRemainder;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_start	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_start;$/;"	m	class:Eigen::internal::AmbiVector
m_start	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Index m_start;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_start	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    const Index m_start;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_start	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index m_start;$/;"	m	struct:Eigen::internal::packLhsArg
m_start	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_start	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_start	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index m_start; \/\/ starting inner index of this block$/;"	m	class:Eigen::BlockSparseMatrix::InnerIterator
m_startCol	tools/eigen/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_startCol	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ArgType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;$/;"	m	struct:Eigen::internal::unary_evaluator
m_startCol	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::BlockImpl
m_startRow	tools/eigen/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_startRow	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ArgType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;$/;"	m	struct:Eigen::internal::unary_evaluator
m_startRow	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::BlockImpl
m_start_time	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  double m_stop_time, m_start_time;$/;"	m	class:Portable_Timer
m_startidval	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_startidval;               \/\/ Start of the column value$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_starts	tools/eigen/bench/BenchTimer.h	/^  Vector2d m_starts;$/;"	m	class:Eigen::BenchTimer
m_state	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  mutable curandStatePhilox4_32_10_t m_state;$/;"	m	class:Eigen::internal::NormalRandomGenerator
m_staticA	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX LhsScalar m_staticA[SizeA];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticA	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX char m_staticA[SizeA * sizeof(LhsScalar) + EIGEN_DEFAULT_ALIGN_BYTES-1];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticB	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX RhsScalar m_staticB[SizeB];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticB	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX char m_staticB[SizeB * sizeof(RhsScalar) + EIGEN_DEFAULT_ALIGN_BYTES-1];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_status	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    mutable int m_status;$/;"	m	class:Eigen::SkylineInplaceLU
m_step	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_step;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_stepPacket	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Packet m_stepPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_stop_time	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  double m_stop_time, m_start_time;$/;"	m	class:Portable_Timer
m_storage	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    DenseStorage<Scalar, Base::MaxSizeAtCompileTime, Base::RowsAtCompileTime, Base::ColsAtCompileTime, Options> m_storage;$/;"	m	class:Eigen::PlainObjectBase
m_storage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    TensorStorage<Scalar, Dimensions, Options> m_storage;$/;"	m	class:Eigen::Tensor
m_storage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^  TensorStorage<Scalar, Dimensions, Options> m_storage;$/;"	m	class:Eigen::TensorFixedSize
m_stride	tools/eigen/Eigen/src/Core/Map.h	/^    StrideType m_stride;$/;"	m	class:Eigen::Map
m_stride	tools/eigen/Eigen/src/Core/Ref.h	/^  StrideBase m_stride;$/;"	m	class:Eigen::RefBase
m_stride	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  const Index m_stride;$/;"	m	class:Eigen::internal::blas_data_mapper
m_stride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  Index m_stride;$/;"	m	struct:Eigen::TensorEvaluator
m_stride_div	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  const Index m_stride_div;$/;"	m	struct:Eigen::TensorEvaluator
m_stride_mod	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  const Index m_stride_mod;$/;"	m	struct:Eigen::TensorEvaluator
m_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  const StrideDims m_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  array<Index, NumDims> m_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    const Strides m_strides;$/;"	m	class:Eigen::TensorInflationOp
m_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  const Strides m_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  array<Index, NumDims> m_strides;$/;"	m	struct:Eigen::TensorEvaluator
m_string	tools/SimpleIni.h	/^        std::string & m_string;$/;"	m	class:CSimpleIniTempl::StringWriter
m_strings	tools/SimpleIni.h	/^    TNamesDepend m_strings;$/;"	m	class:CSimpleIniTempl
m_structureIsUptodate	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    bool m_structureIsUptodate;$/;"	m	class:Eigen::PastixLU
m_subdiag	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typename TridiagonalizationType::SubDiagonalType m_subdiag;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_subs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrix
m_subs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_succeeded	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    bool m_succeeded;$/;"	m	class:Eigen::SkylineInplaceLU
m_sup	tools/eigen/doc/examples/class_CwiseUnaryOp.cpp	/^  Scalar m_inf, m_sup;$/;"	m	struct:CwiseClampOp	file:
m_sup_to_col	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_sup_to_col; \/\/sup_to_col[s] points to the starting column of the s-th supernode$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_supers	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrix
m_supers	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_supno	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_supno;                    \/\/ Current SuperNode number$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_sve	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        const unary_evaluator &m_sve;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_sym	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    int m_sym; \/\/ Symmetry of the matrix$/;"	m	class:Eigen::MatrixMarketIterator
m_symbolic	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_symbolic;$/;"	m	class:Eigen::UmfPackLU
m_symmetricmode	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    bool m_symmetricmode;$/;"	m	class:Eigen::SparseLU
m_symmetry	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    Symmetry_ m_symmetry;$/;"	m	class:Eigen::internal::tensor_symmetry_value_setter
m_temp	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    VectorType m_temp;$/;"	m	class:Eigen::HessenbergDecomposition
m_temp	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  PlainObject m_temp;$/;"	m	struct:Eigen::internal::unary_evaluator
m_temp	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::ColPivHouseholderQR
m_temp	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::FullPivHouseholderQR
m_temp	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::HouseholderQR
m_temporary	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    TmpMatrixType m_temporary;$/;"	m	class:Eigen::LDLT
m_tensor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const Tensor m_tensor;$/;"	m	class:Eigen::internal::BaseTensorContractionMapper
m_tensor	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    Tensor_& m_tensor;$/;"	m	class:Eigen::internal::tensor_symmetry_value_setter
m_then	tools/eigen/Eigen/src/Core/Select.h	/^    typename ThenMatrixType::Nested m_then;$/;"	m	class:Eigen::Select
m_then	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typename ThenXprType::Nested m_then;$/;"	m	class:Eigen::TensorSelectOp
m_thenImpl	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ThenMatrixType> m_thenImpl;$/;"	m	struct:Eigen::internal::evaluator
m_thenImpl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  TensorEvaluator<ThenArgType, Device> m_thenImpl;$/;"	m	struct:Eigen::TensorEvaluator
m_threshold	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    RealScalar m_threshold;         \/\/ Threshold to determine null Householder reflections$/;"	m	class:Eigen::SparseQR
m_time_action	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  double m_time_action;$/;"	m	class:Portable_Perf_Analyzer
m_timeline	tools/eigen/demos/opengl/quaternion_demo.h	/^    TimeLine m_timeline;$/;"	m	class:RenderingWidget
m_timer	tools/eigen/demos/opengl/quaternion_demo.h	/^    QTimer m_timer;$/;"	m	class:RenderingWidget
m_times	tools/eigen/bench/BenchTimer.h	/^  Vector2d m_times;$/;"	m	class:Eigen::BenchTimer
m_tmp	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    ColumnVectorType m_tmp;$/;"	m	class:Eigen::EigenSolver
m_tmp	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ColumnVectorType m_tmp;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_tmp	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    MatrixType m_tmp;$/;"	m	class:Eigen::MatrixPower
m_tmpBuf1	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<Complex> m_tmpBuf1;$/;"	m	struct:Eigen::internal::kissfft_impl
m_tmpBuf2	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<Complex> m_tmpBuf2;$/;"	m	struct:Eigen::internal::kissfft_impl
m_tol	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    double m_tol; $/;"	m	class:Eigen::IterScaling
m_tolerance	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar m_tolerance;$/;"	m	class:Eigen::IterativeSolverBase
m_tolerance	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    RealScalar m_tolerance; \/\/ treat columns with 2-norm below this tolerance as zero$/;"	m	class:Eigen::SPQR
m_totals	tools/eigen/bench/BenchTimer.h	/^  Vector2d m_totals;$/;"	m	class:Eigen::BenchTimer
m_trans	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    bool m_trans;$/;"	m	class:Eigen::HouseholderSequence
m_transpose	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  bool m_transpose; $/;"	m	struct:Eigen::SPQR_QProduct
m_transpose	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  bool m_transpose;$/;"	m	struct:Eigen::SparseQR_QProduct
m_transpositions	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    TranspositionType m_transpositions;$/;"	m	class:Eigen::LDLT
m_transpositions	tools/eigen/Eigen/src/Core/Transpositions.h	/^    const TranspositionType& m_transpositions;$/;"	m	class:Eigen::Transpose
m_triangularMatrix	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^    const TriangularType& m_triangularMatrix;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_twiddles	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<Complex> m_twiddles;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_two_sigmas	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  array<T, NumDims> m_two_sigmas;$/;"	m	class:Eigen::internal::GaussianGenerator
m_type	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_u	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::SuperLUBase
m_u	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::UmfPackLU
m_uCodePage	tools/SimpleIni.h	/^    UINT m_uCodePage;$/;"	m	class:SI_ConvertW
m_uDataLen	tools/SimpleIni.h	/^    size_t m_uDataLen;$/;"	m	class:CSimpleIniTempl
m_unaryOp	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const UnaryOp m_unaryOp;$/;"	m	struct:Eigen::internal::unary_evaluator
m_upper	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Scalar* m_upper;$/;"	m	class:Eigen::SkylineStorage
m_upperProfile	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index* m_upperProfile;$/;"	m	class:Eigen::SkylineStorage
m_upperProfileSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_upperProfileSize;$/;"	m	class:Eigen::SkylineStorage
m_upperSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_upperSize;$/;"	m	class:Eigen::SkylineStorage
m_useDefaultThreshold	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_useDefaultThreshold;     \/\/ Use default threshold$/;"	m	class:Eigen::SPQR
m_useDefaultThreshold	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    bool m_useDefaultThreshold;     \/\/ Use default threshold$/;"	m	class:Eigen::SparseQR
m_useExternalScaling	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    bool m_useExternalScaling;$/;"	m	class:Eigen::LevenbergMarquardt
m_usePrescribedThreshold	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_usePrescribedThreshold	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_usePrescribedThreshold	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_usePrescribedThreshold	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_val	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  T m_val;$/;"	m	struct:Eigen::internal::eigen_packet_wrapper
m_value	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  Scalar m_value;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_value	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Scalar m_value;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_value	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex m_value;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_value	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  Scalar m_value;$/;"	m	class:Eigen::Triplet
m_value	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    Scalar m_value;$/;"	m	class:Eigen::AutoDiffScalar
m_values	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    Scalar* m_values;$/;"	m	class:Eigen::internal::CompressedStorage
m_values	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_values	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_values	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    ScalarPointer m_values;$/;"	m	class:Eigen::SparseMapBase
m_values	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    ValueType m_values;$/;"	m	class:Eigen::AutoDiffVector
m_values	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  const int m_inputs, m_values;$/;"	m	struct:Eigen::DenseFunctor
m_values	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  const int m_inputs, m_values;$/;"	m	struct:Eigen::SparseFunctor
m_values	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Scalar *m_values; \/\/Values stored block column after block column (size m_nonzeros)$/;"	m	class:Eigen::BlockSparseMatrix
m_values	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  const int m_inputs, m_values;$/;"	m	struct:Functor	file:
m_values	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  int m_inputs, m_values;$/;"	m	struct:Functor	file:
m_values	tools/eigen/unsupported/test/autodiff.cpp	/^  int m_inputs, m_values;$/;"	m	struct:TestFunc1	file:
m_values	tools/eigen/unsupported/test/forward_adolc.cpp	/^  int m_inputs, m_values;$/;"	m	struct:TestFunc1	file:
m_vec	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    VectorType& m_vec;$/;"	m	class:Eigen::BlockVectorReturn
m_vec	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    const VectorType& m_vec;$/;"	m	class:Eigen::BlockVectorView
m_vector	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    const AmbiVector& m_vector; \/\/ the target vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_vectorS	tools/RedSVD.hh	/^		ScalarVector m_vectorS;$/;"	m	class:RedSVD::RedSVD
m_vectors	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    typename VectorsType::Nested m_vectors;$/;"	m	class:Eigen::HouseholderSequence
m_vert_offset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  const Index m_vert_offset;$/;"	m	class:Eigen::internal::TensorContractionSubMapper
m_view	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        const XprType &m_view;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_view	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    const XprType &m_view;$/;"	m	struct:Eigen::internal::unary_evaluator
m_wa1	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType m_wa1, m_wa2, m_wa3, m_wa4; \/\/Temporary vectors$/;"	m	class:Eigen::LevenbergMarquardt
m_wa2	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType m_wa1, m_wa2, m_wa3, m_wa4; \/\/Temporary vectors$/;"	m	class:Eigen::LevenbergMarquardt
m_wa3	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType m_wa1, m_wa2, m_wa3, m_wa4; \/\/Temporary vectors$/;"	m	class:Eigen::LevenbergMarquardt
m_wa4	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    FVectorType m_wa1, m_wa2, m_wa3, m_wa4; \/\/Temporary vectors$/;"	m	class:Eigen::LevenbergMarquardt
m_workspace	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      Matrix<Scalar,Dynamic,1> m_workspace;$/;"	m	class:Eigen::RealQZ
m_workspace	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  ArrayXr m_workspace;$/;"	m	class:Eigen::BDCSVD
m_workspace	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  WorkspaceType m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_col_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_row_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspaceI	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  ArrayXi m_workspaceI;$/;"	m	class:Eigen::BDCSVD
m_workspaceVector	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    ColumnVectorType m_workspaceVector;$/;"	m	class:Eigen::RealSchur
m_worsts	tools/eigen/bench/BenchTimer.h	/^  Vector2d m_worsts;$/;"	m	class:Eigen::BenchTimer
m_written	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool m_written;$/;"	m	class:Eigen::IterationController
m_x	tools/eigen/test/denseLM.cpp	/^  VectorType m_x, m_y; \/\/Data Points$/;"	m	struct:DenseLM	file:
m_x	tools/eigen/test/sparseLM.cpp	/^  VectorType m_x, m_y; \/\/Data points$/;"	m	struct:sparseGaussianTest	file:
m_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_x[14];$/;"	m	struct:misra1a_functor	file:
m_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_x[236];$/;"	m	struct:hahn1_functor	file:
m_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_x[54];$/;"	m	struct:chwirut2_functor	file:
m_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double chwirut2_functor::m_x[54] = { 0.500E0, 1.000E0, 1.750E0, 3.750E0, 5.750E0, 0.875E0, 2.250E0, 3.250E0, 5.250E0, 0.750E0, 1.750E0, 2.750E0, 4.750E0, 0.625E0, 1.250E0, 2.250E0, 4.250E0, .500E0, 3.000E0, .750E0, 3.000E0, 1.500E0, 6.000E0, 3.000E0, 6.000E0, 1.500E0, 3.000E0, .500E0, 2.000E0, 4.000E0, .750E0, 2.000E0, 5.000E0, .750E0, 2.250E0, 3.750E0, 5.750E0, 3.000E0, .750E0, 2.500E0, 4.000E0, .750E0, 2.500E0, 4.000E0, .750E0, 2.500E0, 4.000E0, .500E0, 6.000E0, 3.000E0, .500E0, 2.750E0, .500E0, 1.750E0};$/;"	m	class:chwirut2_functor	file:
m_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double hahn1_functor::m_x[236] = { 24.41E0 , 34.82E0 , 44.09E0 , 45.07E0 , 54.98E0 , 65.51E0 , 70.53E0 , 75.70E0 , 89.57E0 , 91.14E0 , 96.40E0 , 97.19E0 , 114.26E0 , 120.25E0 , 127.08E0 , 133.55E0 , 133.61E0 , 158.67E0 , 172.74E0 , 171.31E0 , 202.14E0 , 220.55E0 , 221.05E0 , 221.39E0 , 250.99E0 , 268.99E0 , 271.80E0 , 271.97E0 , 321.31E0 , 321.69E0 , 330.14E0 , 333.03E0 , 333.47E0 , 340.77E0 , 345.65E0 , 373.11E0 , 373.79E0 , 411.82E0 , 419.51E0 , 421.59E0 , 422.02E0 , 422.47E0 , 422.61E0 , 441.75E0 , 447.41E0 , 448.7E0  , 472.89E0 , 476.69E0 , 522.47E0 , 522.62E0 , 524.43E0 , 546.75E0 , 549.53E0 , 575.29E0 , 576.00E0 , 625.55E0 , 20.15E0 , 28.78E0 , 29.57E0 , 37.41E0 , 39.12E0 , 50.24E0 , 61.38E0 , 66.25E0 , 73.42E0 , 95.52E0 , 107.32E0 , 122.04E0 , 134.03E0 , 163.19E0 , 163.48E0 , 175.70E0 , 179.86E0 , 211.27E0 , 217.78E0 , 219.14E0 , 262.52E0 , 268.01E0 , 268.62E0 , 336.25E0 , 337.23E0 , 339.33E0 , 427.38E0 , 428.58E0 , 432.68E0 , 528.99E0 , 531.08E0 , 628.34E0 , 253.24E0 , 273.13E0 , 273.66E0 ,$/;"	m	class:hahn1_functor	file:
m_x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double misra1a_functor::m_x[14] = { 77.6E0, 114.9E0, 141.1E0, 190.8E0, 239.9E0, 289.0E0, 332.8E0, 378.4E0, 434.8E0, 477.3E0, 536.8E0, 593.1E0, 689.1E0, 760.0E0};$/;"	m	class:misra1a_functor	file:
m_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double m_x[14];$/;"	m	struct:misra1a_functor	file:
m_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double m_x[236];$/;"	m	struct:hahn1_functor	file:
m_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double m_x[54];$/;"	m	struct:chwirut2_functor	file:
m_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double chwirut2_functor::m_x[54] = { 0.500E0, 1.000E0, 1.750E0, 3.750E0, 5.750E0, 0.875E0, 2.250E0, 3.250E0, 5.250E0, 0.750E0, 1.750E0, 2.750E0, 4.750E0, 0.625E0, 1.250E0, 2.250E0, 4.250E0, .500E0, 3.000E0, .750E0, 3.000E0, 1.500E0, 6.000E0, 3.000E0, 6.000E0, 1.500E0, 3.000E0, .500E0, 2.000E0, 4.000E0, .750E0, 2.000E0, 5.000E0, .750E0, 2.250E0, 3.750E0, 5.750E0, 3.000E0, .750E0, 2.500E0, 4.000E0, .750E0, 2.500E0, 4.000E0, .750E0, 2.500E0, 4.000E0, .500E0, 6.000E0, 3.000E0, .500E0, 2.750E0, .500E0, 1.750E0};$/;"	m	class:chwirut2_functor	file:
m_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double hahn1_functor::m_x[236] = { 24.41E0 , 34.82E0 , 44.09E0 , 45.07E0 , 54.98E0 , 65.51E0 , 70.53E0 , 75.70E0 , 89.57E0 , 91.14E0 , 96.40E0 , 97.19E0 , 114.26E0 , 120.25E0 , 127.08E0 , 133.55E0 , 133.61E0 , 158.67E0 , 172.74E0 , 171.31E0 , 202.14E0 , 220.55E0 , 221.05E0 , 221.39E0 , 250.99E0 , 268.99E0 , 271.80E0 , 271.97E0 , 321.31E0 , 321.69E0 , 330.14E0 , 333.03E0 , 333.47E0 , 340.77E0 , 345.65E0 , 373.11E0 , 373.79E0 , 411.82E0 , 419.51E0 , 421.59E0 , 422.02E0 , 422.47E0 , 422.61E0 , 441.75E0 , 447.41E0 , 448.7E0  , 472.89E0 , 476.69E0 , 522.47E0 , 522.62E0 , 524.43E0 , 546.75E0 , 549.53E0 , 575.29E0 , 576.00E0 , 625.55E0 , 20.15E0 , 28.78E0 , 29.57E0 , 37.41E0 , 39.12E0 , 50.24E0 , 61.38E0 , 66.25E0 , 73.42E0 , 95.52E0 , 107.32E0 , 122.04E0 , 134.03E0 , 163.19E0 , 163.48E0 , 175.70E0 , 179.86E0 , 211.27E0 , 217.78E0 , 219.14E0 , 262.52E0 , 268.01E0 , 268.62E0 , 336.25E0 , 337.23E0 , 339.33E0 , 427.38E0 , 428.58E0 , 432.68E0 , 528.99E0 , 531.08E0 , 628.34E0 , 253.24E0 , 273.13E0 , 273.66E0 ,$/;"	m	class:hahn1_functor	file:
m_x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double misra1a_functor::m_x[14] = { 77.6E0, 114.9E0, 141.1E0, 190.8E0, 239.9E0, 289.0E0, 332.8E0, 378.4E0, 434.8E0, 477.3E0, 536.8E0, 593.1E0, 689.1E0, 760.0E0};$/;"	m	class:misra1a_functor	file:
m_xpr	tools/eigen/Eigen/src/Core/Block.h	/^    const typename XprType::Nested m_xpr;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_xpr	tools/eigen/Eigen/src/Core/Block.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_xpr	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  XprType& m_xpr;           \/\/ target expression$/;"	m	struct:Eigen::CommaInitializer
m_xpr	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  const XprType& m_xpr;$/;"	m	struct:Eigen::internal::mapbase_evaluator
m_xpr	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::CwiseUnaryOp
m_xpr	tools/eigen/Eigen/src/Core/Inverse.h	/^  XprTypeNested m_xpr;$/;"	m	class:Eigen::Inverse
m_xpr	tools/eigen/Eigen/src/Core/Redux.h	/^  const XprType &m_xpr;$/;"	m	class:Eigen::internal::redux_evaluator
m_xpr	tools/eigen/Eigen/src/Core/Visitor.h	/^  const XprType &m_xpr;$/;"	m	class:Eigen::internal::visitor_evaluator
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorIndexTupleOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorTupleReducerOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorBroadcastingOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorChippingOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorConversionOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorEvalToOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorCwiseNullaryOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorCwiseUnaryOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorForcedEvalOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorGeneratorOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorImagePatchOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorInflationOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorLayoutSwapOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorReshapingOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorSlicingOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorPaddingOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorPatchOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorReverseOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorShufflingOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorStridingOp
m_xpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::TensorVolumePatchOp
m_xtol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar m_xtol; \/\/ $/;"	m	class:Eigen::LevenbergMarquardt
m_y	tools/eigen/test/denseLM.cpp	/^  VectorType m_x, m_y; \/\/Data Points$/;"	m	struct:DenseLM	file:
m_y	tools/eigen/test/sparseLM.cpp	/^  VectorType m_x, m_y; \/\/Data points$/;"	m	struct:sparseGaussianTest	file:
m_y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_y[14];$/;"	m	struct:misra1a_functor	file:
m_y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_y[54];$/;"	m	struct:chwirut2_functor	file:
m_y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double chwirut2_functor::m_y[54] = { 92.9000E0 ,57.1000E0 ,31.0500E0 ,11.5875E0 ,8.0250E0 ,63.6000E0 ,21.4000E0 ,14.2500E0 ,8.4750E0 ,63.8000E0 ,26.8000E0 ,16.4625E0 ,7.1250E0 ,67.3000E0 ,41.0000E0 ,21.1500E0 ,8.1750E0 ,81.5000E0 ,13.1200E0 ,59.9000E0 ,14.6200E0 ,32.9000E0 ,5.4400E0 ,12.5600E0 ,5.4400E0 ,32.0000E0 ,13.9500E0 ,75.8000E0 ,20.0000E0 ,10.4200E0 ,59.5000E0 ,21.6700E0 ,8.5500E0 ,62.0000E0 ,20.2000E0 ,7.7600E0 ,3.7500E0 ,11.8100E0 ,54.7000E0 ,23.7000E0 ,11.5500E0 ,61.3000E0 ,17.7000E0 ,8.7400E0 ,59.2000E0 ,16.3000E0 ,8.6200E0 ,81.0000E0 ,4.8700E0 ,14.6200E0 ,81.7000E0 ,17.1700E0 ,81.3000E0 ,28.9000E0  };$/;"	m	class:chwirut2_functor	file:
m_y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double misra1a_functor::m_y[14] = { 10.07E0, 14.73E0, 17.94E0, 23.93E0, 29.61E0, 35.18E0, 40.02E0, 44.82E0, 50.76E0, 55.05E0, 61.01E0, 66.40E0, 75.47E0, 81.78E0};$/;"	m	class:misra1a_functor	file:
m_y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double m_y[14];$/;"	m	struct:misra1a_functor	file:
m_y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double m_y[54];$/;"	m	struct:chwirut2_functor	file:
m_y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double chwirut2_functor::m_y[54] = { 92.9000E0 ,57.1000E0 ,31.0500E0 ,11.5875E0 ,8.0250E0 ,63.6000E0 ,21.4000E0 ,14.2500E0 ,8.4750E0 ,63.8000E0 ,26.8000E0 ,16.4625E0 ,7.1250E0 ,67.3000E0 ,41.0000E0 ,21.1500E0 ,8.1750E0 ,81.5000E0 ,13.1200E0 ,59.9000E0 ,14.6200E0 ,32.9000E0 ,5.4400E0 ,12.5600E0 ,5.4400E0 ,32.0000E0 ,13.9500E0 ,75.8000E0 ,20.0000E0 ,10.4200E0 ,59.5000E0 ,21.6700E0 ,8.5500E0 ,62.0000E0 ,20.2000E0 ,7.7600E0 ,3.7500E0 ,11.8100E0 ,54.7000E0 ,23.7000E0 ,11.5500E0 ,61.3000E0 ,17.7000E0 ,8.7400E0 ,59.2000E0 ,16.3000E0 ,8.6200E0 ,81.0000E0 ,4.8700E0 ,14.6200E0 ,81.7000E0 ,17.1700E0 ,81.3000E0 ,28.9000E0  };$/;"	m	class:chwirut2_functor	file:
m_y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double misra1a_functor::m_y[14] = { 10.07E0, 14.73E0, 17.94E0, 23.93E0, 29.61E0, 35.18E0, 40.02E0, 44.82E0, 50.76E0, 55.05E0, 61.01E0, 66.40E0, 75.47E0, 81.78E0};$/;"	m	class:misra1a_functor	file:
m_zero	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_zero;$/;"	m	class:Eigen::internal::AmbiVector
machine_epsilon	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal machine_epsilon(const mpreal& x)$/;"	f	namespace:mpfr
machine_epsilon	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal machine_epsilon(mp_prec_t prec)$/;"	f	namespace:mpfr
madd	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, DoublePacketType& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, ResPacket& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacketType& a, const RhsPacketType& b, AccPacketType& c, AccPacketType& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp, const true_type&) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsScalar& a, const RhsScalar& b, ResScalar& c, RhsScalar& \/*tmp*\/, const false_type&) const$/;"	f	class:Eigen::internal::gebp_traits
mae	problem.hh	/^    val mae;$/;"	m	class:Result
mag2	tools/eigen/unsupported/doc/examples/FFT.cpp	/^T mag2(T a)$/;"	f
mag2	tools/eigen/unsupported/doc/examples/FFT.cpp	/^T mag2(const std::vector<T> & vec)$/;"	f
mag2	tools/eigen/unsupported/doc/examples/FFT.cpp	/^T mag2(const std::vector<std::complex<T> > & vec)$/;"	f
mag2	tools/eigen/unsupported/doc/examples/FFT.cpp	/^T mag2(std::complex<T> a)$/;"	f
magic	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  uint32_t magic;$/;"	m	class:Eigen::internal::TensorIntDivisor
main	main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	tools/eigen/bench/analyze-blocking-sizes.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/eigen/bench/basicbenchmark.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/benchBlasGemm.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/benchCholesky.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/eigen/bench/benchEigenSolver.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/eigen/bench/benchFFT.cpp	/^int main(int argc,char ** argv)$/;"	f
main	tools/eigen/bench/benchGeometry.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/eigen/bench/benchVecAdd.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/eigen/bench/bench_gemm.cpp	/^int main(int argc, char ** argv)$/;"	f
main	tools/eigen/bench/bench_norm.cpp	/^int main(int argc, char** argv)$/;"	f
main	tools/eigen/bench/bench_reverse.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/eigen/bench/bench_sum.cpp	/^int main() $/;"	f
main	tools/eigen/bench/benchmark.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/benchmarkSlice.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/benchmarkX.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/benchmarkXcwise.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/btl/data/mean.cxx	/^int main( int argc , char *argv[] )$/;"	f
main	tools/eigen/bench/btl/data/regularize.cxx	/^int main( int argc , char *argv[] )$/;"	f
main	tools/eigen/bench/btl/data/smooth.cxx	/^int main( int argc , char *argv[] )$/;"	f
main	tools/eigen/bench/btl/libs/BLAS/main.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/STL/main.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/blaze/main.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/blitz/btl_blitz.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/blitz/btl_tiny_blitz.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen2/btl_tiny_eigen2.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen2/main_adv.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen2/main_linear.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen2/main_matmat.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen2/main_vecmat.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen3/btl_tiny_eigen3.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen3/main_adv.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen3/main_linear.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen3/main_matmat.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/eigen3/main_vecmat.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/gmm/main.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/mtl4/main.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/tensors/main_linear.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/tensors/main_matmat.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/tensors/main_vecmat.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/tvmet/main.cpp	/^int main()$/;"	f
main	tools/eigen/bench/btl/libs/ublas/main.cpp	/^int main()$/;"	f
main	tools/eigen/bench/check_cache_queries.cpp	/^int main()$/;"	f
main	tools/eigen/bench/dense_solvers.cpp	/^int main()$/;"	f
main	tools/eigen/bench/eig33.cpp	/^int main()$/;"	f
main	tools/eigen/bench/geometry.cpp	/^int main(int argc, char ** argv)$/;"	f
main	tools/eigen/bench/perf_monitoring/gemm/gemm.cpp	/^int main(int argc, char **argv)$/;"	f
main	tools/eigen/bench/product_threshold.cpp	/^int main()$/;"	f
main	tools/eigen/bench/quat_slerp.cpp	/^int main()$/;"	f
main	tools/eigen/bench/quatmul.cpp	/^int main()$/;"	f
main	tools/eigen/bench/sparse_cholesky.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/sparse_dense_product.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/sparse_lu.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/sparse_product.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/sparse_randomsetter.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/sparse_setter.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/sparse_transpose.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/sparse_trisolver.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/spbench/sp_solver.cpp	/^int main(int argc, char **args)$/;"	f
main	tools/eigen/bench/spbench/spbenchsolver.cpp	/^int main(int argc, char ** args)$/;"	f
main	tools/eigen/bench/spbench/test_sparseLU.cpp	/^int main(int argc, char **args)$/;"	f
main	tools/eigen/bench/spmv.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/bench/vdw_new.cpp	/^int main() $/;"	f
main	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/demos/mix_eigen_and_c/example.c	/^int main()$/;"	f
main	tools/eigen/demos/opengl/quaternion_demo.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/doc/examples/CustomizingEigen_Inheritance.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/DenseBase_middleCols_int.cpp	/^int main(void)$/;"	f
main	tools/eigen/doc/examples/DenseBase_middleRows_int.cpp	/^int main(void)$/;"	f
main	tools/eigen/doc/examples/DenseBase_template_int_middleCols.cpp	/^int main(void)$/;"	f
main	tools/eigen/doc/examples/DenseBase_template_int_middleRows.cpp	/^int main(void)$/;"	f
main	tools/eigen/doc/examples/QuickStart_example.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/QuickStart_example2_dynamic.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/QuickStart_example2_fixed.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TemplateKeyword_flexible.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TemplateKeyword_simple.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgComputeTwice.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgExComputeSolveError.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgExSolveColPivHouseholderQR.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgExSolveLDLT.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgInverseDeterminant.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgRankRevealing.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgSVDSolve.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgSelfAdjointEigenSolver.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/TutorialLinAlgSetThreshold.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ArrayClass_accessors.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ArrayClass_addition.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ArrayClass_cwise_other.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ArrayClass_interop.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ArrayClass_interop_matrix.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ArrayClass_mult.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_BlockOperations_block_assignment.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_BlockOperations_colrow.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_BlockOperations_corner.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_BlockOperations_print_block.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_BlockOperations_vector.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_PartialLU_solve.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_1nn.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_simple.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_simple_rowwise.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_colwise.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_maxnorm.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_reductions_bool.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_reductions_norm.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_rowwise.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_visitors.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_simple_example_dynamic_size.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/Tutorial_simple_example_fixed_size.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/class_Block.cpp	/^int main(int, char**)$/;"	f
main	tools/eigen/doc/examples/class_CwiseBinaryOp.cpp	/^int main(int, char**)$/;"	f
main	tools/eigen/doc/examples/class_CwiseUnaryOp.cpp	/^int main(int, char**)$/;"	f
main	tools/eigen/doc/examples/class_CwiseUnaryOp_ptrfun.cpp	/^int main(int, char**)$/;"	f
main	tools/eigen/doc/examples/class_FixedBlock.cpp	/^int main(int, char**)$/;"	f
main	tools/eigen/doc/examples/class_FixedVectorBlock.cpp	/^int main(int, char**)$/;"	f
main	tools/eigen/doc/examples/class_VectorBlock.cpp	/^int main(int, char**)$/;"	f
main	tools/eigen/doc/examples/function_taking_eigenbase.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/function_taking_ref.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/tut_arithmetic_add_sub.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/tut_arithmetic_dot_cross.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/tut_arithmetic_matrix_mul.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/tut_arithmetic_redux_basic.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/tut_arithmetic_scalar_mul_div.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/tut_matrix_coefficient_accessors.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/tut_matrix_resize.cpp	/^int main()$/;"	f
main	tools/eigen/doc/examples/tut_matrix_resize_fixed_size.cpp	/^int main()$/;"	f
main	tools/eigen/doc/special_examples/Tutorial_sparse_example.cpp	/^int main(int argc, char** argv)$/;"	f
main	tools/eigen/doc/special_examples/random_cpp11.cpp	/^int main() {$/;"	f
main	tools/eigen/doc/tutorial.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/failtest/bdcsvd_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_0.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_1.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/block_nonconst_ctor_on_const_xpr_2.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/block_on_const_type_actually_const_0.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/block_on_const_type_actually_const_1.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/colpivqr_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/const_qualified_block_method_retval_0.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/const_qualified_block_method_retval_1.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/const_qualified_diagonal_method_retval.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/const_qualified_transpose_method_retval.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/cwiseunaryview_nonconst_ctor_on_const_xpr.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/cwiseunaryview_on_const_type_actually_const.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/diagonal_nonconst_ctor_on_const_xpr.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/diagonal_on_const_type_actually_const.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/eigensolver_cplx.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/eigensolver_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/fullpivlu_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/fullpivqr_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/jacobisvd_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/ldlt_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/llt_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_0.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_1.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_2.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_3.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/map_nonconst_ctor_on_const_ptr_4.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/map_on_const_type_actually_const_0.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/map_on_const_type_actually_const_1.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/partialpivlu_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/qr_int.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/ref_1.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/ref_2.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/ref_3.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/ref_4.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/ref_5.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/selfadjointview_nonconst_ctor_on_const_xpr.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/selfadjointview_on_const_type_actually_const.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/sparse_ref_1.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/sparse_ref_2.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/sparse_ref_3.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/sparse_ref_4.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/sparse_ref_5.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/sparse_storage_mismatch.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/swap_1.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/swap_2.cpp	/^int main()$/;"	f
main	tools/eigen/failtest/transpose_nonconst_ctor_on_const_xpr.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/transpose_on_const_type_actually_const.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/triangularview_nonconst_ctor_on_const_xpr.cpp	/^int main() {}$/;"	f
main	tools/eigen/failtest/triangularview_on_const_type_actually_const.cpp	/^int main() {}$/;"	f
main	tools/eigen/scripts/eigen_gen_credits.cpp	/^int main()$/;"	f
main	tools/eigen/test/main.h	/^int main(int argc, char *argv[])$/;"	f
main	tools/eigen/unsupported/bench/bench_svd.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/FFT.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/MatrixExponential.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/MatrixFunction.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/MatrixLogarithm.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/MatrixPower.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/MatrixPower_optimal.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/MatrixSine.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/MatrixSinh.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/MatrixSquareRoot.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/PolynomialSolver1.cpp	/^int main()$/;"	f
main	tools/eigen/unsupported/doc/examples/PolynomialUtils1.cpp	/^int main()$/;"	f
majorDeviceVersion	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE int majorDeviceVersion() const {$/;"	f	struct:Eigen::DefaultDevice
majorDeviceVersion	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE int majorDeviceVersion() const {$/;"	f	struct:Eigen::ThreadPoolDevice
majorDeviceVersion	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  inline int majorDeviceVersion() const {$/;"	f	struct:Eigen::GpuDevice
makeAffine	tools/eigen/Eigen/src/Geometry/Transform.h	/^  void makeAffine()$/;"	f	class:Eigen::Transform
makeCompressed	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    void makeCompressed()$/;"	f	class:Eigen::SparseMatrix
makeGivens	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::false_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::true_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* z)$/;"	f	class:Eigen::JacobiRotation
makeHouseholder	tools/eigen/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholder($/;"	f	class:Eigen::MatrixBase
makeHouseholderInPlace	tools/eigen/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholderInPlace(Scalar& tau, RealScalar& beta)$/;"	f	class:Eigen::MatrixBase
makeJacobi	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^bool JacobiRotation<Scalar>::makeJacobi(const RealScalar& x, const Scalar& y, const RealScalar& z)$/;"	f	class:Eigen::JacobiRotation
makeJacobi	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^inline bool JacobiRotation<Scalar>::makeJacobi(const MatrixBase<Derived>& m, Index p, Index q)$/;"	f	class:Eigen::JacobiRotation
make_backup	tools/eigen/bench/perf_monitoring/gemm/run_gemm.sh	/^function make_backup$/;"	f
make_block_householder_triangular_factor	tools/eigen/Eigen/src/Householder/BlockHouseholder.h	/^void make_block_householder_triangular_factor(TriangularFactorType& triFactor, const VectorsType& vectors, const CoeffsType& hCoeffs)$/;"	f	namespace:Eigen::internal
make_coherent	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^void make_coherent(const A& a, const B&b)$/;"	f	namespace:Eigen::internal
make_coherent_impl	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct make_coherent_impl {$/;"	s	namespace:Eigen::internal
make_coherent_impl	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct make_coherent_impl<A, Matrix<B_Scalar, B_Rows, B_Cols, B_Options, B_MaxRows, B_MaxCols> > {$/;"	s	namespace:Eigen::internal
make_coherent_impl	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct make_coherent_impl<Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols>, B> {$/;"	s	namespace:Eigen::internal
make_coherent_impl	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct make_coherent_impl<Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols>,$/;"	s	namespace:Eigen::internal
make_first_subset	tools/eigen/bench/analyze-blocking-sizes.cpp	/^void make_first_subset(size_t subset_size, vector<size_t>& out_subset, size_t set_size)$/;"	f
make_index_list	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^constexpr IndexList<FirstType, OtherTypes...> make_index_list(FirstType val1, OtherTypes... other_vals) {$/;"	f	namespace:Eigen
make_proper_matrix_type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^> class make_proper_matrix_type$/;"	c	struct:Eigen::internal::promote_index_type
make_twiddles	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void make_twiddles(int nfft,bool inverse)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
make_type_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct make_type_list {$/;"	s	namespace:Eigen::internal
make_type_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<> struct make_type_list<> {$/;"	s	namespace:Eigen::internal
make_vector	tools/eigen/blas/common.h	/^Map<Matrix<T,Dynamic,1> > make_vector(T* data, int size)$/;"	f
make_vector	tools/eigen/blas/common.h	/^Map<Matrix<T,Dynamic,1>, 0, InnerStride<Dynamic> > make_vector(T* data, int size, int incr)$/;"	f
manageErrorCode	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void manageErrorCode(Index error) const$/;"	f	class:Eigen::PardisoImpl
manage_caching_sizes	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void manage_caching_sizes(Action action, std::ptrdiff_t* l1, std::ptrdiff_t* l2, std::ptrdiff_t* l3)$/;"	f	namespace:Eigen::internal
manage_caching_sizes_helper	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t manage_caching_sizes_helper(std::ptrdiff_t a, std::ptrdiff_t b)$/;"	f	namespace:Eigen::internal
manage_multi_threading	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^inline void manage_multi_threading(Action action, int* v)$/;"	f	namespace:Eigen::internal
mapCudaInputKernelToTensorInputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Index mapCudaInputKernelToTensorInputOffset(Index i) const {$/;"	f	class:Eigen::internal::IndexMapper
mapCudaInputKernelToTensorInputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Index mapCudaInputKernelToTensorInputOffset(Index i, Index j) const {$/;"	f	class:Eigen::internal::IndexMapper
mapCudaInputKernelToTensorInputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Index mapCudaInputKernelToTensorInputOffset(Index i, Index j, Index k) const {$/;"	f	class:Eigen::internal::IndexMapper
mapCudaInputPlaneToTensorInputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Index mapCudaInputPlaneToTensorInputOffset(Index p) const {$/;"	f	class:Eigen::internal::IndexMapper
mapCudaOutputKernelToTensorOutputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Index mapCudaOutputKernelToTensorOutputOffset(Index i) const {$/;"	f	class:Eigen::internal::IndexMapper
mapCudaOutputKernelToTensorOutputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Index mapCudaOutputKernelToTensorOutputOffset(Index i, Index j) const {$/;"	f	class:Eigen::internal::IndexMapper
mapCudaOutputKernelToTensorOutputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Index mapCudaOutputKernelToTensorOutputOffset(Index i, Index j, Index k) const {$/;"	f	class:Eigen::internal::IndexMapper
mapCudaOutputPlaneToTensorOutputOffset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Index mapCudaOutputPlaneToTensorOutputOffset(Index p) const {$/;"	f	class:Eigen::internal::IndexMapper
mapQuaternion	tools/eigen/test/geo_quaternion.cpp	/^template<typename Scalar> void mapQuaternion(void){$/;"	f
mapToSphere	tools/eigen/demos/opengl/trackball.cpp	/^bool Trackball::mapToSphere(const Vector2i& p2, Vector3f& v3)$/;"	f	class:Trackball
map_class_matrix	tools/eigen/test/mapped_matrix.cpp	/^template<typename MatrixType> void map_class_matrix(const MatrixType& m)$/;"	f
map_class_matrix	tools/eigen/test/mapstride.cpp	/^template<int Alignment,typename MatrixType> void map_class_matrix(const MatrixType& _m)$/;"	f
map_class_vector	tools/eigen/test/mapped_matrix.cpp	/^template<typename VectorType> void map_class_vector(const VectorType& m)$/;"	f
map_class_vector	tools/eigen/test/mapstride.cpp	/^template<int Alignment,typename VectorType> void map_class_vector(const VectorType& m)$/;"	f
map_not_aligned_on_scalar	tools/eigen/test/mapped_matrix.cpp	/^void map_not_aligned_on_scalar()$/;"	f
map_size	tools/eigen/bench/product_threshold.cpp	/^template<>  struct map_size<10> { enum { ret = 20 }; };$/;"	s	file:
map_size	tools/eigen/bench/product_threshold.cpp	/^template<>  struct map_size<11> { enum { ret = 50 }; };$/;"	s	file:
map_size	tools/eigen/bench/product_threshold.cpp	/^template<>  struct map_size<12> { enum { ret = 100 }; };$/;"	s	file:
map_size	tools/eigen/bench/product_threshold.cpp	/^template<>  struct map_size<13> { enum { ret = 300 }; };$/;"	s	file:
map_size	tools/eigen/bench/product_threshold.cpp	/^template<int S> struct map_size { enum { ret = S }; };$/;"	s	file:
map_static_methods	tools/eigen/test/mapped_matrix.cpp	/^template<typename VectorType> void map_static_methods(const VectorType& m)$/;"	f
map_superlu	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^MappedSparseMatrix<Scalar,Flags,Index> map_superlu(SluMatrix& sluMat)$/;"	f	namespace:Eigen::internal
mapbase_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit mapbase_evaluator(const XprType& map)$/;"	f	struct:Eigen::internal::mapbase_evaluator
mapbase_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct mapbase_evaluator : evaluator_base<Derived>$/;"	s	namespace:Eigen::internal
mapstaticmethods	tools/eigen/test/mapstaticmethods.cpp	/^void mapstaticmethods(const PlainObjectType& m)$/;"	f
mapstaticmethods_impl	tools/eigen/test/mapstaticmethods.cpp	/^struct mapstaticmethods_impl {};$/;"	s	file:
mapstaticmethods_impl	tools/eigen/test/mapstaticmethods.cpp	/^struct mapstaticmethods_impl<PlainObjectType, false, IsVector>$/;"	s	file:
mapstaticmethods_impl	tools/eigen/test/mapstaticmethods.cpp	/^struct mapstaticmethods_impl<PlainObjectType, true, false>$/;"	s	file:
mapstaticmethods_impl	tools/eigen/test/mapstaticmethods.cpp	/^struct mapstaticmethods_impl<PlainObjectType, true, true>$/;"	s	file:
mark	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType mark ;  \/* for computing set differences and marking dead rows*\/$/;"	m	union:internal::Colamd_Row::__anon189
markAsRValue	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& markAsRValue() { m_isRValue = true; return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
markAsRValue	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    Derived& markAsRValue() {$/;"	f	class:Eigen::SkylineMatrixBase
mat	problem.hh	/^typedef Eigen::Matrix<val, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> mat;$/;"	t
mat	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_CommaTemporary.cpp	/^MatrixXf mat = MatrixXf::Random(2, 3);$/;"	v
matA	tools/eigen/doc/snippets/TopicAliasing_mult1.cpp	/^cout << matA;$/;"	v
matA	tools/eigen/doc/snippets/TopicAliasing_mult3.cpp	/^cout << matA;$/;"	v
matA	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Block.cpp	/^matB << matA, matA\/10, matA\/10, matA;$/;"	v
matB	tools/eigen/doc/snippets/TopicAliasing_mult2.cpp	/^cout << matB;$/;"	v
matPrefix	tools/eigen/Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
matSuffix	tools/eigen/Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
mat_mat_scalar_scalar_product	tools/eigen/test/product_extra.cpp	/^void mat_mat_scalar_scalar_product()$/;"	f
match	tools/eigen/Eigen/src/Core/Ref.h	/^  template<typename Derived> struct match {$/;"	s	struct:Eigen::internal::traits
match	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^  template<typename Derived> struct match {$/;"	s	struct:Eigen::internal::traits
matlab_cplx_cplx	tools/eigen/bench/bench_gemm.cpp	/^void matlab_cplx_cplx(const M& ar, const M& ai, const M& br, const M& bi, M& cr, M& ci)$/;"	f
matlab_cplx_real	tools/eigen/bench/bench_gemm.cpp	/^void matlab_cplx_real(const M& ar, const M& ai, const M& b, M& cr, M& ci)$/;"	f
matlab_real_cplx	tools/eigen/bench/bench_gemm.cpp	/^void matlab_real_cplx(const M& a, const M& br, const M& bi, M& cr, M& ci)$/;"	f
matname	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline std::string& matname() { return m_matname; }$/;"	f	class:Eigen::MatrixMarketIterator
matrix	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    MatrixWrapper<Derived> matrix() { return MatrixWrapper<Derived>(derived()); }$/;"	f	class:Eigen::ArrayBase
matrix	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    const MatrixWrapper<const Derived> matrix() const { return MatrixWrapper<const Derived>(derived()); }$/;"	f	class:Eigen::ArrayBase
matrix	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC MatrixBase<Derived>& matrix() { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC const MatrixBase<Derived>& matrix() const { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType matrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
matrix	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline MatrixType& matrix() { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline const MatrixType& matrix() const { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    _MatrixTypeNested& matrix() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::SparseSelfAdjointView
matrix	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const NestedExpression& matrix() const { return m_matrix; }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
matrix	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const _MatrixTypeNested& matrix() const { return m_matrix; }$/;"	f	class:Eigen::SparseSelfAdjointView
matrix	tools/eigen/blas/common.h	/^matrix(T* data, int rows, int cols, int stride)$/;"	f
matrix	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline MatrixType& matrix() $/;"	f	class:Eigen::MatrixMarketIterator
matrixFunction	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::matrixFunction(typename internal::stem_function<typename internal::traits<Derived>::Scalar>::type f) const$/;"	f	class:Eigen::MatrixBase
matrixH	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixHReturnType matrixH() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixL	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LDLT
matrixL	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LLT
matrixL	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixL	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLLT
matrixL	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    SparseLUMatrixLReturnType<SCMatrix> matrixL() const$/;"	f	class:Eigen::SparseLU
matrixL	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const LMatrixType& matrixL() const$/;"	f	class:Eigen::SuperLU
matrixL	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixL() const$/;"	f	class:Eigen::UmfPackLU
matrixLDLT	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline const MatrixType& matrixLDLT() const$/;"	f	class:Eigen::LDLT
matrixLLT	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    inline const MatrixType& matrixLLT() const$/;"	f	class:Eigen::LLT
matrixLU	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::FullPivLU
matrixLU	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::PartialPivLU
matrixQ	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixQ	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixQ() const {$/;"	f	class:Eigen::RealQZ
matrixQ	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::Tridiagonalization
matrixQ	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQ	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^inline typename FullPivHouseholderQR<MatrixType>::MatrixQReturnType FullPivHouseholderQR<MatrixType>::matrixQ() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQ	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQRMatrixQReturnType<SPQR> matrixQ() const$/;"	f	class:Eigen::SPQR
matrixQ	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    SparseQRMatrixQReturnType<SparseQR> matrixQ() const $/;"	f	class:Eigen::SparseQR
matrixQR	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQR	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQR	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::HouseholderQR
matrixR	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixR	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    const MatrixType matrixR() const$/;"	f	class:Eigen::SPQR
matrixR	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    const QRMatrixType& matrixR() const { return m_R; }$/;"	f	class:Eigen::SparseQR
matrixR	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    JacobianType& matrixR() {return m_rfactor; }$/;"	f	class:Eigen::LevenbergMarquardt
matrixRedux	tools/eigen/test/redux.cpp	/^template<typename MatrixType> void matrixRedux(const MatrixType& m)$/;"	f
matrixS	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixS() const {$/;"	f	class:Eigen::RealQZ
matrixT	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixT() const$/;"	f	class:Eigen::ComplexSchur
matrixT	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixT() const {$/;"	f	class:Eigen::RealQZ
matrixT	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixT() const$/;"	f	class:Eigen::RealSchur
matrixT	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixTReturnType matrixT() const$/;"	f	class:Eigen::Tridiagonalization
matrixU	tools/RedSVD.hh	/^		DenseMatrix matrixU() const$/;"	f	class:RedSVD::RedSVD
matrixU	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LDLT
matrixU	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LLT
matrixU	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixU() const$/;"	f	class:Eigen::ComplexSchur
matrixU	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixU() const$/;"	f	class:Eigen::RealSchur
matrixU	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  const MatrixUType& matrixU() const$/;"	f	class:Eigen::SVDBase
matrixU	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixU	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLLT
matrixU	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    SparseLUMatrixUReturnType<SCMatrix,MappedSparseMatrix<Scalar,ColMajor,StorageIndex> > matrixU() const$/;"	f	class:Eigen::SparseLU
matrixU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const UMatrixType& matrixU() const$/;"	f	class:Eigen::SuperLU
matrixU	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixU() const$/;"	f	class:Eigen::UmfPackLU
matrixV	tools/RedSVD.hh	/^		DenseMatrix matrixV() const$/;"	f	class:RedSVD::RedSVD
matrixV	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  const MatrixVType& matrixV() const$/;"	f	class:Eigen::SVDBase
matrixVisitor	tools/eigen/test/visitor.cpp	/^template<typename MatrixType> void matrixVisitor(const MatrixType& p)$/;"	f
matrixZ	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixZ() const {$/;"	f	class:Eigen::RealQZ
matrix_exp_compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void matrix_exp_compute(const MatrixType& arg, ResultType &result)$/;"	f	namespace:Eigen::internal
matrix_exp_computeUV	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^struct matrix_exp_computeUV$/;"	s	namespace:Eigen::internal
matrix_exp_computeUV	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^struct matrix_exp_computeUV<MatrixType, double>$/;"	s	namespace:Eigen::internal
matrix_exp_computeUV	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^struct matrix_exp_computeUV<MatrixType, float>$/;"	s	namespace:Eigen::internal
matrix_exp_computeUV	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^struct matrix_exp_computeUV<MatrixType, long double>$/;"	s	namespace:Eigen::internal
matrix_exp_pade13	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void matrix_exp_pade13(const MatrixType &A, MatrixType &U, MatrixType &V)$/;"	f	namespace:Eigen::internal
matrix_exp_pade17	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void matrix_exp_pade17(const MatrixType &A, MatrixType &U, MatrixType &V)$/;"	f	namespace:Eigen::internal
matrix_exp_pade3	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void matrix_exp_pade3(const MatrixType &A, MatrixType &U, MatrixType &V)$/;"	f	namespace:Eigen::internal
matrix_exp_pade5	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void matrix_exp_pade5(const MatrixType &A, MatrixType &U, MatrixType &V)$/;"	f	namespace:Eigen::internal
matrix_exp_pade7	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void matrix_exp_pade7(const MatrixType &A, MatrixType &U, MatrixType &V)$/;"	f	namespace:Eigen::internal
matrix_exp_pade9	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void matrix_exp_pade9(const MatrixType &A, MatrixType &U, MatrixType &V)$/;"	f	namespace:Eigen::internal
matrix_from_stl	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:c_interface_base
matrix_from_stl	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:STL_interface
matrix_from_stl	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:blaze_interface
matrix_from_stl	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:blitz_interface
matrix_from_stl	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:tiny_blitz_interface
matrix_from_stl	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static BTL_DONT_INLINE void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:eigen2_interface
matrix_from_stl	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static BTL_DONT_INLINE void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:eigen3_interface
matrix_from_stl	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:gmm_interface
matrix_from_stl	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:mtl4_interface
matrix_from_stl	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static BTL_DONT_INLINE void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:tensor_interface
matrix_from_stl	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:tvmet_interface
matrix_from_stl	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void matrix_from_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:ublas_interface
matrix_function_compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^struct matrix_function_compute$/;"	s	namespace:Eigen::internal
matrix_function_compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^struct matrix_function_compute<MatrixType, 0>$/;"	s	namespace:Eigen::internal
matrix_function_compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^struct matrix_function_compute<MatrixType, 1>$/;"	s	namespace:Eigen::internal
matrix_function_compute_above_diagonal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void matrix_function_compute_above_diagonal(const MatrixType& T, const VectorType& blockStart, const VectorType& clusterSize, MatrixType& fT)$/;"	f	namespace:Eigen::internal
matrix_function_compute_block_atomic	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void matrix_function_compute_block_atomic(const MatrixType& T, AtomicType& atomic, const VectorType& blockStart, const VectorType& clusterSize, MatrixType& fT)$/;"	f	namespace:Eigen::internal
matrix_function_compute_block_start	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void matrix_function_compute_block_start(const VectorType& clusterSize, VectorType& blockStart)$/;"	f	namespace:Eigen::internal
matrix_function_compute_cluster_size	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void matrix_function_compute_cluster_size(const ListOfClusters& clusters, Matrix<Index, Dynamic, 1>& clusterSize)$/;"	f	namespace:Eigen::internal
matrix_function_compute_map	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void matrix_function_compute_map(const EivalsType& eivals, const ListOfClusters& clusters, VectorType& eivalToCluster)$/;"	f	namespace:Eigen::internal
matrix_function_compute_mu	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^typename NumTraits<typename MatrixType::Scalar>::Real matrix_function_compute_mu(const MatrixType& A)$/;"	f	namespace:Eigen::internal
matrix_function_compute_permutation	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void matrix_function_compute_permutation(const DynVectorType& blockStart, const DynVectorType& eivalToCluster, VectorType& permutation)$/;"	f	namespace:Eigen::internal
matrix_function_find_cluster	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^typename ListOfClusters::iterator matrix_function_find_cluster(Index key, ListOfClusters& clusters)$/;"	f	namespace:Eigen::internal
matrix_function_partition_eigenvalues	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void matrix_function_partition_eigenvalues(const EivalsType& eivals, std::list<Cluster>& clusters)$/;"	f	namespace:Eigen::internal
matrix_function_permute_schur	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void matrix_function_permute_schur(VectorType& permutation, MatrixType& U, MatrixType& T)$/;"	f	namespace:Eigen::internal
matrix_function_separation	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^static const float matrix_function_separation = 0.1f;$/;"	m	namespace:Eigen::internal
matrix_function_solve_triangular_sylvester	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^MatrixType matrix_function_solve_triangular_sylvester(const MatrixType& A, const MatrixType& B, const MatrixType& C)$/;"	f	namespace:Eigen::internal
matrix_log_compute_2x2	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void matrix_log_compute_2x2(const MatrixType& A, MatrixType& result)$/;"	f	namespace:Eigen::internal
matrix_log_compute_big	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void matrix_log_compute_big(const MatrixType& A, MatrixType& result)$/;"	f	namespace:Eigen::internal
matrix_log_compute_pade	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void matrix_log_compute_pade(MatrixType& result, const MatrixType& T, int degree)$/;"	f	namespace:Eigen::internal
matrix_log_get_pade_degree	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^inline int matrix_log_get_pade_degree(double normTminusI)$/;"	f	namespace:Eigen::internal
matrix_log_get_pade_degree	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^inline int matrix_log_get_pade_degree(float normTminusI)$/;"	f	namespace:Eigen::internal
matrix_log_get_pade_degree	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^inline int matrix_log_get_pade_degree(long double normTminusI)$/;"	f	namespace:Eigen::internal
matrix_log_max_pade_degree	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^struct matrix_log_max_pade_degree $/;"	s	namespace:Eigen::internal
matrix_log_min_pade_degree	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^struct matrix_log_min_pade_degree $/;"	s	namespace:Eigen::internal
matrix_matrix_product	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void matrix_matrix_product(gene_matrix & A, gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:blas_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N)$/;"	f	class:STL_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:blaze_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N)$/;"	f	class:blitz_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:tiny_blitz_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:eigen2_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int  \/*N*\/){$/;"	f	class:eigen3_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:gmm_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:mtl4_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int  \/*N*\/){$/;"	f	class:tensor_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:tvmet_interface
matrix_matrix_product	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void matrix_matrix_product(gene_matrix & A, gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:ublas_interface
matrix_matrix_product_sliced	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  static inline real matrix_matrix_product_sliced(gene_matrix & A, int row, int col_start, int col_end, gene_matrix & B, int row_shift, int col )$/;"	f	class:blitz_LU_solve_interface
matrix_matrix_product_sliced	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  static inline real matrix_matrix_product_sliced(gene_matrix & A, int row, int col_start, int col_end, gene_matrix & B, int row_shift, int col )$/;"	f	class:blitz_LU_solve_interface
matrix_matrix_product_sliced	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  static inline real matrix_matrix_product_sliced(gene_matrix & A, int row, int col_start, int col_end, gene_matrix & B, int row_shift, int col )$/;"	f	class:blitz_LU_solve_interface
matrix_matrix_product_slow	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void matrix_matrix_product_slow(gene_matrix & A, gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:ublas_interface
matrix_pcg	Top.cc	/^mat Top::matrix_pcg($/;"	f	class:Top
matrix_pcg_L	Top-scalable.cc	/^mat Top::matrix_pcg_L(const Relation& r, const mat& L0, const mat& R, const mat& B) {$/;"	f	class:Top
matrix_pcg_R	Top-scalable.cc	/^mat Top::matrix_pcg_R(const Relation& r, const mat& L, const mat& R0, const mat& B) {$/;"	f	class:Top
matrix_sqrt_compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^struct matrix_sqrt_compute$/;"	s	namespace:Eigen::internal
matrix_sqrt_compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^struct matrix_sqrt_compute<MatrixType, 0>$/;"	s	namespace:Eigen::internal
matrix_sqrt_compute	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^struct matrix_sqrt_compute<MatrixType, 1>$/;"	s	namespace:Eigen::internal
matrix_sqrt_quasi_triangular	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular(const MatrixType &arg, ResultType &result)$/;"	f	namespace:Eigen
matrix_sqrt_quasi_triangular_1x1_off_diagonal_block	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular_1x1_off_diagonal_block(const MatrixType& T, typename MatrixType::Index i, typename MatrixType::Index j, ResultType& sqrtT)$/;"	f	namespace:Eigen::internal
matrix_sqrt_quasi_triangular_1x2_off_diagonal_block	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular_1x2_off_diagonal_block(const MatrixType& T, typename MatrixType::Index i, typename MatrixType::Index j, ResultType& sqrtT)$/;"	f	namespace:Eigen::internal
matrix_sqrt_quasi_triangular_2x1_off_diagonal_block	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular_2x1_off_diagonal_block(const MatrixType& T, typename MatrixType::Index i, typename MatrixType::Index j, ResultType& sqrtT)$/;"	f	namespace:Eigen::internal
matrix_sqrt_quasi_triangular_2x2_diagonal_block	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular_2x2_diagonal_block(const MatrixType& T, typename MatrixType::Index i, ResultType& sqrtT)$/;"	f	namespace:Eigen::internal
matrix_sqrt_quasi_triangular_2x2_off_diagonal_block	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular_2x2_off_diagonal_block(const MatrixType& T, typename MatrixType::Index i, typename MatrixType::Index j, ResultType& sqrtT)$/;"	f	namespace:Eigen::internal
matrix_sqrt_quasi_triangular_diagonal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular_diagonal(const MatrixType& T, ResultType& sqrtT)$/;"	f	namespace:Eigen::internal
matrix_sqrt_quasi_triangular_off_diagonal	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular_off_diagonal(const MatrixType& T, ResultType& sqrtT)$/;"	f	namespace:Eigen::internal
matrix_sqrt_quasi_triangular_solve_auxiliary_equation	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_quasi_triangular_solve_auxiliary_equation(MatrixType& X, const MatrixType& A, const MatrixType& B, const MatrixType& C)$/;"	f	namespace:Eigen::internal
matrix_sqrt_triangular	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void matrix_sqrt_triangular(const MatrixType &arg, ResultType &result)$/;"	f	namespace:Eigen
matrix_swap_impl	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl$/;"	s	namespace:Eigen::internal
matrix_swap_impl	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl<MatrixTypeA, MatrixTypeB, true>$/;"	s	namespace:Eigen::internal
matrix_to_stl	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:c_interface_base
matrix_to_stl	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:STL_interface
matrix_to_stl	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:blaze_interface
matrix_to_stl	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:blitz_interface
matrix_to_stl	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:tiny_blitz_interface
matrix_to_stl	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static BTL_DONT_INLINE  void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:eigen2_interface
matrix_to_stl	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static BTL_DONT_INLINE  void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:eigen3_interface
matrix_to_stl	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:gmm_interface
matrix_to_stl	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:mtl4_interface
matrix_to_stl	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static BTL_DONT_INLINE  void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:tensor_interface
matrix_to_stl	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:tvmet_interface
matrix_to_stl	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void matrix_to_stl(gene_matrix & A, stl_matrix & A_stl){$/;"	f	class:ublas_interface
matrix_type_times_scalar_type	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^template<typename OtherScalarType, typename MatrixType> struct matrix_type_times_scalar_type$/;"	s	namespace:Eigen::internal
matrix_vector_product	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:blas_interface
matrix_vector_product	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N)$/;"	f	class:STL_interface
matrix_vector_product	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:blaze_interface
matrix_vector_product	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N)$/;"	f	class:blitz_interface
matrix_vector_product	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:tiny_blitz_interface
matrix_vector_product	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void matrix_vector_product(const gene_matrix & A, const gene_vector & B, gene_vector & X, int N){$/;"	f	class:eigen2_interface
matrix_vector_product	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void matrix_vector_product(const gene_matrix & A, const gene_vector & B, gene_vector & X, int  \/*N*\/){$/;"	f	class:eigen3_interface
matrix_vector_product	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:gmm_interface
matrix_vector_product	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:mtl4_interface
matrix_vector_product	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static inline void matrix_vector_product(const gene_matrix & A, const gene_vector & B, gene_vector & X, int  \/*N*\/){$/;"	f	class:tensor_interface
matrix_vector_product	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:tvmet_interface
matrix_vector_product	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void matrix_vector_product(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:ublas_interface
matrix_vector_product_sliced	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  static inline real matrix_vector_product_sliced(const gene_matrix & A, gene_vector B, int row, int col_start, int col_end)$/;"	f	class:blitz_LU_solve_interface
matrix_vector_product_sliced	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  static inline real matrix_vector_product_sliced(const gene_matrix & A, gene_vector B, int row, int col_start, int col_end)$/;"	f	class:blitz_LU_solve_interface
matrix_vector_product_sliced	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  static inline real matrix_vector_product_sliced(const gene_matrix & A, gene_vector B, int row, int col_start, int col_end)$/;"	f	class:blitz_LU_solve_interface
matrix_vector_product_slow	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void matrix_vector_product_slow(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:ublas_interface
max	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static T (max)() { assert(false && "Highest not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static double (max)() { return CUDART_INF; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static float (max)() { return CUDART_MAX_NORMAL_F; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static int (max)() { return INT_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static long (max)() { return LONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static long long (max)() { return LLONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType& (max)() { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline const VectorType& (max)() const { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^max$/;"	f
max	tools/eigen/blas/f2c/datatypes.h	20;"	d
max	tools/eigen/test/main.h	57;"	d
max	tools/eigen/test/sparse.h	24;"	d
max	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline AutoDiffScalar<DerType> (max)(const AutoDiffScalar<DerType>& x, const T& y)    { return (x >= y ? x : y); }$/;"	f	namespace:Eigen
max	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline AutoDiffScalar<DerType> (max)(const T& x, const AutoDiffScalar<DerType>& y)    { return (x > y ? x : y); }$/;"	f	namespace:Eigen
max	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static mpfr::mpreal (max)    (mp_prec_t precision = mpfr::mpreal::get_default_prec()) {  return  mpfr::maxval(precision);  }$/;"	f	class:std::numeric_limits::mpfr
max	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal (max)(const mpreal& x, const mpreal& y){    return (x>y?x:y);       }$/;"	f	namespace:mpfr
maxCoeff	tools/eigen/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::maxCoeff() const$/;"	f	class:Eigen::DenseBase
maxCoeff	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const MaxCoeffReturnType maxCoeff() const$/;"	f	class:Eigen::VectorwiseOp
maxCoeff	tools/eigen/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
maxCoeff	tools/eigen/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* rowPtr, IndexType* colPtr) const$/;"	f	class:Eigen::DenseBase
maxCudaThreadsPerBlock	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  inline int maxCudaThreadsPerBlock() const {$/;"	f	struct:Eigen::GpuDevice
maxCudaThreadsPerMultiProcessor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  inline int maxCudaThreadsPerMultiProcessor() const {$/;"	f	struct:Eigen::GpuDevice
maxIterarions	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    size_t maxIterarions() const { return m_maxiter; }$/;"	f	class:Eigen::IterationController
maxIterations	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index maxIterations() const$/;"	f	class:Eigen::IterativeSolverBase
maxOfV	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^  int maxOfV = v.maxCoeff(&i);$/;"	v
maxOneTwoPlusOne	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t maxOneTwoPlusOne = ((One > Two) ? One : Two) + 1;$/;"	m	struct:Eigen::internal::tensor_symmetry_num_indices
maxPivot	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivLU
maxPivot	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::ColPivHouseholderQR
maxPivot	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivHouseholderQR
maxResidual	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double maxResidual() const { return m_resmax; }$/;"	f	class:Eigen::IterationController
max_clock_speed	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^float max_clock_speed = 0.0f;$/;"	v
max_coeff_visitor	tools/eigen/Eigen/src/Core/Visitor.h	/^struct max_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
max_digits10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static int max_digits10(mp_prec_t precision = mpfr::mpreal::get_default_prec())$/;"	f	class:std::numeric_limits
max_digits10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const int max_digits10 = 16;$/;"	m	class:std::numeric_limits
max_exponent	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const int max_exponent = MPFR_EMAX_DEFAULT;$/;"	m	class:std::numeric_limits
max_exponent10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        MPREAL_PERMISSIVE_EXPR static const int max_exponent10 = (int) (MPFR_EMAX_DEFAULT * 0.3010299956639811); $/;"	m	class:std::numeric_limits
max_feasible_subset_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^size_t max_feasible_subset_size(size_t n)$/;"	f
max_iter	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    int id, max_iter;$/;"	m	class:MandelbrotThread
max_m	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index max_m;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
max_n_1	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^template <> struct max_n_1<0> {$/;"	s	namespace:Eigen
max_n_1	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^template <size_t n> struct max_n_1 {$/;"	s	namespace:Eigen
max_size	tools/eigen/Eigen/src/Core/Matrix.h	/^      max_size = is_dynamic_size_storage ? Dynamic : _MaxRows*_MaxCols,$/;"	e	enum:Eigen::internal::traits::__anon292
max_static_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t max_static_elements = 16;$/;"	m	struct:Eigen::internal::tensor_symmetry_pre_analysis
max_static_generators	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t max_static_generators = 4;$/;"	m	struct:Eigen::internal::tensor_symmetry_pre_analysis
maxfev	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index maxfev() const {return m_maxfev; }$/;"	f	class:Eigen::LevenbergMarquardt
maxfev	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Index maxfev;   \/\/ maximum number of function evaluation$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
maxfev	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Index maxfev;   \/\/ maximum number of function evaluation$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
maxi	tools/eigen/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE T maxi(const T& x, const T& y)$/;"	f	namespace:Eigen::numext
maximum	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    maximum() const {$/;"	f	class:Eigen::TensorBase
maximum	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    maximum(const Dims& dims) const {$/;"	f	class:Eigen::TensorBase
maxsize	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^const size_t maxsize = 2048;$/;"	v
maxsuper	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index maxsuper; \/\/ The maximum size for a supernode in complete LU$/;"	m	struct:Eigen::internal::perfvalues
maxval	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal maxval(mp_prec_t prec)$/;"	f	namespace:mpfr
mc	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index mc() const { return m_mc; }$/;"	f	class:Eigen::internal::level3_blocking
mc	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index mc;$/;"	m	struct:Eigen::internal::packLhsArg
mc	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index mc;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
mconcat	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a, typename b, typename... cs> struct mconcat<a, b, cs...> : concat<a, typename mconcat<b, cs...>::type> {};$/;"	s	namespace:Eigen::internal
mconcat	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a, typename b>                 struct mconcat<a, b>        : concat<a, b> {};$/;"	s	namespace:Eigen::internal
mconcat	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a>                             struct mconcat<a>           { typedef a type; };$/;"	s	namespace:Eigen::internal
md	tools/eigen/doc/snippets/MatrixBase_cast.cpp	/^Matrix2d md = Matrix2d::Identity() * 0.45;$/;"	v
mean	tools/eigen/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::mean() const$/;"	f	class:Eigen::DenseBase
mean	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const MeanReturnType mean() const$/;"	f	class:Eigen::VectorwiseOp
mean	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    mean() const {$/;"	f	class:Eigen::TensorBase
mean	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    mean(const Dims& dims) const {$/;"	f	class:Eigen::TensorBase
mean_calc	tools/eigen/bench/btl/data/mean.cxx	/^double mean_calc(const vector<int> & tab_sizes, const vector<double> & tab_mflops, const int size_min, const int size_max){$/;"	f
measurement_repetitions	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^const int measurement_repetitions = 3;$/;"	v
memInit	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index SparseLUImpl<Scalar,StorageIndex>::memInit(Index m, Index n, Index annz, Index lwork, Index fillratio, Index panel_size,  GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
memXpand	tools/eigen/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index SparseLUImpl<Scalar,StorageIndex>::memXpand(VectorType& vec, Index& maxlen, Index nbElts, MemType memtype, Index& num_expansions)$/;"	f	class:Eigen::internal::SparseLUImpl
mem_expand	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  void mem_expand(IndexVector& lsub, Index& nextl, Index chmark)$/;"	f	struct:Eigen::internal::column_dfs_traits
mem_expand	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  void mem_expand(IndexVector& \/*glu.lsub*\/, Index \/*nextl*\/, Index \/*chmark*\/) {}$/;"	f	struct:Eigen::internal::panel_dfs_traits
member_redux	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC explicit member_redux(const BinaryOp func) : m_functor(func) {}$/;"	f	struct:Eigen::internal::member_redux
member_redux	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^struct member_redux {$/;"	s	namespace:Eigen::internal
memcpy	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void memcpy(int num_iters) {$/;"	f	class:BenchmarkSuite
memcpy	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(memcpy);$/;"	v
memcpy	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void memcpy(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::DefaultDevice
memcpy	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void memcpy(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::GpuDevice
memcpy	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE void memcpy(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::ThreadPoolDevice
memcpyDeviceToHost	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void memcpyDeviceToHost(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::DefaultDevice
memcpyDeviceToHost	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void memcpyDeviceToHost(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::GpuDevice
memcpyDeviceToHost	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE void memcpyDeviceToHost(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::ThreadPoolDevice
memcpyHostToDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void memcpyHostToDevice(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::DefaultDevice
memcpyHostToDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void memcpyHostToDevice(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::GpuDevice
memcpyHostToDevice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE void memcpyHostToDevice(void* dst, const void* src, size_t n) const {$/;"	f	struct:Eigen::ThreadPoolDevice
memoryleak	tools/eigen/test/exceptions.cpp	/^void memoryleak()$/;"	f
memset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void memset(void* buffer, int c, size_t n) const {$/;"	f	struct:Eigen::DefaultDevice
memset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void memset(void* buffer, int c, size_t n) const {$/;"	f	struct:Eigen::GpuDevice
memset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE void memset(void* buffer, int c, size_t n) const {$/;"	f	struct:Eigen::ThreadPoolDevice
merge	tools/eigen/bench/perf_monitoring/gemm/run_gemm.sh	/^function merge$/;"	f
merged	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox merged(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
meta_floor_log2	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2 {};$/;"	s	namespace:Eigen::internal
meta_floor_log2	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_bogus>$/;"	s	namespace:Eigen::internal
meta_floor_log2	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_move_down>$/;"	s	namespace:Eigen::internal
meta_floor_log2	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_move_up>$/;"	s	namespace:Eigen::internal
meta_floor_log2	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_terminate>$/;"	s	namespace:Eigen::internal
meta_floor_log2_bogus	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_bogus$/;"	e	enum:Eigen::internal::__anon302
meta_floor_log2_move_down	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_move_down,$/;"	e	enum:Eigen::internal::__anon302
meta_floor_log2_move_up	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_move_up,$/;"	e	enum:Eigen::internal::__anon302
meta_floor_log2_selector	tools/eigen/Eigen/src/Core/MathFunctions.h	/^template<unsigned int n, int lower, int upper> struct meta_floor_log2_selector$/;"	s	namespace:Eigen::internal
meta_floor_log2_terminate	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_terminate,$/;"	e	enum:Eigen::internal::__anon302
meta_sqrt	tools/eigen/Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	c	namespace:Eigen
mf	tools/eigen/doc/snippets/MatrixBase_cast.cpp	/^Matrix2f mf = Matrix2f::Identity();$/;"	v
middle	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  enum { middle = (lower + upper) \/ 2,$/;"	e	enum:Eigen::internal::meta_floor_log2_selector::__anon303
middleCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr middleCols(Index startCol, Index numCols)$/;"	f
middleCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr middleCols(Index startCol, Index numCols) const$/;"	f
middleCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type middleCols(Index startCol, Index n = N) const$/;"	f
middleCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type middleCols(Index startCol, Index n = N)$/;"	f
middleRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr middleRows(Index startRow, Index n) const$/;"	f
middleRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr middleRows(Index startRow, Index n)$/;"	f
middleRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type middleRows(Index startRow, Index n = N) const$/;"	f
middleRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type middleRows(Index startRow, Index n = N)$/;"	f
min	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static T (min)() { assert(false && "Lowest not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static double (min)() { return __DBL_EPSILON__; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static float (min)() { return __FLT_EPSILON__; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static int (min)() { return INT_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static long (min)() { return LONG_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static long long (min)() { return LLONG_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType& (min)() { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline const VectorType& (min)() const { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^min$/;"	f
min	tools/eigen/blas/f2c/datatypes.h	19;"	d
min	tools/eigen/test/main.h	56;"	d
min	tools/eigen/test/sparse.h	20;"	d
min	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline AutoDiffScalar<DerType> (min)(const AutoDiffScalar<DerType>& x, const T& y)    { return (x <= y ? x : y); }$/;"	f	namespace:Eigen
min	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline AutoDiffScalar<DerType> (min)(const T& x, const AutoDiffScalar<DerType>& y)    { return (x < y ? x : y); }$/;"	f	namespace:Eigen
min	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static mpfr::mpreal (min)    (mp_prec_t precision = mpfr::mpreal::get_default_prec()) {  return  mpfr::minval(precision);  }$/;"	f	class:std::numeric_limits::mpfr
min	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal (min)(const mpreal& x, const mpreal& y){    return (x<y?x:y);       }$/;"	f	namespace:mpfr
minCoeff	tools/eigen/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::minCoeff() const$/;"	f	class:Eigen::DenseBase
minCoeff	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const MinCoeffReturnType minCoeff() const$/;"	f	class:Eigen::VectorwiseOp
minCoeff	tools/eigen/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
minCoeff	tools/eigen/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* rowId, IndexType* colId) const$/;"	f	class:Eigen::DenseBase
minOfM	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^  float minOfM = m.minCoeff(&i,&j);$/;"	v
min_accurate_time	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^const float min_accurate_time = 1e-2f;$/;"	v
min_coeff_visitor	tools/eigen/Eigen/src/Core/Visitor.h	/^struct min_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
min_exponent	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const int min_exponent = MPFR_EMIN_DEFAULT;$/;"	m	class:std::numeric_limits
min_exponent10	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        MPREAL_PERMISSIVE_EXPR static const int min_exponent10 = (int) (MPFR_EMIN_DEFAULT * 0.3010299956639811); $/;"	m	class:std::numeric_limits
min_max	tools/eigen/test/array.cpp	/^template<typename ArrayType> void min_max(const ArrayType& m)$/;"	f
min_working_set_size	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^size_t min_working_set_size = 0;$/;"	v
mini	tools/eigen/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE T mini(const T& x, const T& y)$/;"	f	namespace:Eigen::numext
minimize	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType>::minimize(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimize	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimize(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeInit	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType>::minimizeInit(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeInit	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeInit(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOneStep	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LMonestep.h	/^LevenbergMarquardt<FunctorType>::minimizeOneStep(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOneStep	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeOneStep(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOptimumStorage	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeOptimumStorage(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOptimumStorageInit	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeOptimumStorageInit(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOptimumStorageOneStep	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeOptimumStorageOneStep(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimize_helper	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^typename Minimizer::Scalar minimize_helper(const BVH &tree, Minimizer &minimizer, typename BVH::Index root, typename Minimizer::Scalar minimum)$/;"	f	namespace:Eigen::internal
minimizer	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Minimizer &minimizer;$/;"	m	struct:Eigen::internal::minimizer_helper1
minimizer	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Minimizer &minimizer;$/;"	m	struct:Eigen::internal::minimizer_helper2
minimizer_helper1	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  minimizer_helper1(const Object2 &inStored, Minimizer &m) : stored(inStored), minimizer(m) {}$/;"	f	struct:Eigen::internal::minimizer_helper1
minimizer_helper1	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^struct minimizer_helper1$/;"	s	namespace:Eigen::internal
minimizer_helper2	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  minimizer_helper2(const Object1 &inStored, Minimizer &m) : stored(inStored), minimizer(m) {}$/;"	f	struct:Eigen::internal::minimizer_helper2
minimizer_helper2	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^struct minimizer_helper2$/;"	s	namespace:Eigen::internal
minimum	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    minimum() const {$/;"	f	class:Eigen::TensorBase
minimum	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    minimum(const Dims& dims) const {$/;"	f	class:Eigen::TensorBase
minimumOnObject	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Scalar minimumOnObject(const Object1 &obj) { return minimizer.minimumOnObjectObject(obj, stored); }$/;"	f	struct:Eigen::internal::minimizer_helper1
minimumOnObject	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Scalar minimumOnObject(const Object2 &obj) { return minimizer.minimumOnObjectObject(stored, obj); }$/;"	f	struct:Eigen::internal::minimizer_helper2
minimumOnObject	tools/eigen/unsupported/test/BVH.cpp	/^  double minimumOnObject(const BallType &b) { ++calls; return (std::max)(0., (b.center - p).squaredNorm() - SQR(b.radius)); }$/;"	f	struct:BallPointStuff
minimumOnObjectObject	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^  double minimumOnObjectObject(const Vector2d &v1, const Vector2d &v2) { ++calls; return (v1 - v2).squaredNorm(); }$/;"	f	struct:PointPointMinimizer
minimumOnObjectObject	tools/eigen/unsupported/test/BVH.cpp	/^  double minimumOnObjectObject(const BallType &b, const VectorType &v){ ++calls; return SQR((std::max)(0., (b.center - v).norm() - b.radius)); }$/;"	f	struct:BallPointStuff
minimumOnObjectObject	tools/eigen/unsupported/test/BVH.cpp	/^  double minimumOnObjectObject(const BallType &b1, const BallType &b2){ ++calls; return SQR((std::max)(0., (b1.center - b2.center).norm() - b1.radius - b2.radius)); }$/;"	f	struct:BallPointStuff
minimumOnObjectVolume	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^  double minimumOnObjectVolume(const Vector2d &v, const Box2d &r) { ++calls; return r.squaredExteriorDistance(v); }$/;"	f	struct:PointPointMinimizer
minimumOnObjectVolume	tools/eigen/unsupported/test/BVH.cpp	/^  double minimumOnObjectVolume(const BallType &b, const BoxType &r) { ++calls; return SQR((std::max)(0., r.exteriorDistance(b.center) - b.radius)); }$/;"	f	struct:BallPointStuff
minimumOnVolume	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Scalar minimumOnVolume(const Volume1 &vol) { return minimizer.minimumOnVolumeObject(vol, stored); }$/;"	f	struct:Eigen::internal::minimizer_helper1
minimumOnVolume	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Scalar minimumOnVolume(const Volume2 &vol) { return minimizer.minimumOnObjectVolume(stored, vol); }$/;"	f	struct:Eigen::internal::minimizer_helper2
minimumOnVolume	tools/eigen/unsupported/test/BVH.cpp	/^  double minimumOnVolume(const BoxType &r) { ++calls; return r.squaredExteriorDistance(p); }$/;"	f	struct:BallPointStuff
minimumOnVolumeObject	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^  double minimumOnVolumeObject(const Box2d &r, const Vector2d &v) { ++calls; return r.squaredExteriorDistance(v); }$/;"	f	struct:PointPointMinimizer
minimumOnVolumeObject	tools/eigen/unsupported/test/BVH.cpp	/^  double minimumOnVolumeObject(const BoxType &r, const BallType &b) { ++calls; return SQR((std::max)(0., r.exteriorDistance(b.center) - b.radius)); }$/;"	f	struct:BallPointStuff
minimumOnVolumeObject	tools/eigen/unsupported/test/BVH.cpp	/^  double minimumOnVolumeObject(const BoxType &r, const VectorType &v) { ++calls; return r.squaredExteriorDistance(v); }$/;"	f	struct:BallPointStuff
minimumOnVolumeVolume	tools/eigen/unsupported/doc/examples/BVH_Example.cpp	/^  double minimumOnVolumeVolume(const Box2d &r1, const Box2d &r2) { ++calls; return r1.squaredExteriorDistance(r2); }$/;"	f	struct:PointPointMinimizer
minimumOnVolumeVolume	tools/eigen/unsupported/test/BVH.cpp	/^  double minimumOnVolumeVolume(const BoxType &r1, const BoxType &r2) { ++calls; return r1.squaredExteriorDistance(r2); }$/;"	f	struct:BallPointStuff
minimum_degree_ordering	tools/eigen/Eigen/src/OrderingMethods/Amd.h	/^void minimum_degree_ordering(SparseMatrix<Scalar,ColMajor,StorageIndex>& C, PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm)$/;"	f	namespace:Eigen::internal
minres	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        void minres(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
minsize	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^const size_t minsize = 16;$/;"	v
minval	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal minval(mp_prec_t prec)$/;"	f	namespace:mpfr
misc	tools/eigen/scripts/eigen_gen_credits.cpp	/^  string misc;$/;"	m	struct:contributor	file:
miscMatrices	tools/eigen/test/miscmatrices.cpp	/^template<typename MatrixType> void miscMatrices(const MatrixType& m)$/;"	f
misra1a_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    misra1a_functor(void) : Functor<double>(2,14) {}$/;"	f	struct:misra1a_functor
misra1a_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct misra1a_functor : Functor<double>$/;"	s	file:
misra1a_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    misra1a_functor(void) : DenseFunctor<double>(2,14) {}$/;"	f	struct:misra1a_functor
misra1a_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct misra1a_functor : DenseFunctor<double>$/;"	s	file:
misra1d_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    misra1d_functor(void) : Functor<double>(2,14) {}$/;"	f	struct:misra1d_functor
misra1d_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct misra1d_functor : Functor<double>$/;"	s	file:
misra1d_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    misra1d_functor(void) : DenseFunctor<double>(2,14) {}$/;"	f	struct:misra1d_functor
misra1d_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct misra1d_functor : DenseFunctor<double>$/;"	s	file:
mixingtypes	tools/eigen/test/mixingtypes.cpp	/^template<int SizeAtCompileType> void mixingtypes(int size = SizeAtCompileType)$/;"	f
mmtr	tools/eigen/test/product_mmtr.cpp	/^template<typename Scalar> void mmtr(int size)$/;"	f
mod	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mod (const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
model	tools/eigen/test/denseLM.cpp	/^  VectorType model(const VectorType& uv, VectorType& x)$/;"	f	struct:DenseLM
model	tools/eigen/test/sparseLM.cpp	/^  VectorType model(const VectorType& uv, VectorType& x)$/;"	f	struct:sparseGaussianTest
modf	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal modf(const mpreal& v, mpreal& n)$/;"	f	namespace:mpfr
mouseMoveEvent	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^void MandelbrotWidget::mouseMoveEvent(QMouseEvent *event)$/;"	f	class:MandelbrotWidget
mouseMoveEvent	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::mouseMoveEvent(QMouseEvent* e)$/;"	f	class:RenderingWidget
mousePressEvent	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^void MandelbrotWidget::mousePressEvent(QMouseEvent *event)$/;"	f	class:MandelbrotWidget
mousePressEvent	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::mousePressEvent(QMouseEvent* e)$/;"	f	class:RenderingWidget
mouseReleaseEvent	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::mouseReleaseEvent(QMouseEvent*)$/;"	f	class:RenderingWidget
mp	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    mpfr_t mp;$/;"	m	class:mpfr::mpreal
mpCamera	tools/eigen/demos/opengl/trackball.h	/^    Camera* mpCamera;$/;"	m	class:Trackball
mp_matrix	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Ref<const MatrixType> mp_matrix;$/;"	m	class:Eigen::IterativeSolverBase
mp_matrix	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackMatrixRef mp_matrix;$/;"	m	class:Eigen::UmfPackLU
mp_target	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    SparseMatrixType* mp_target;$/;"	m	class:Eigen::RandomSetter
mpfr	tools/eigen/unsupported/test/mpreal/mpreal.h	/^namespace mpfr {$/;"	n
mpfr_is_initialized	tools/eigen/unsupported/test/mpreal/mpreal.h	97;"	d
mpfr_ptr	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline ::mpfr_ptr     mpreal::mpfr_ptr()             { return mp; }$/;"	f	class:mpfr::mpreal
mpfr_ptr	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline ::mpfr_srcptr  mpreal::mpfr_ptr()    const    { return mp; }$/;"	f	class:mpfr::mpreal
mpfr_set_uninitialized	tools/eigen/unsupported/test/mpreal/mpreal.h	98;"	d
mpfr_srcptr	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline ::mpfr_srcptr  mpreal::mpfr_srcptr() const    { return mp; }$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^class mpreal {$/;"	c	namespace:mpfr
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal() $/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const char* s, mp_prec_t prec, int base, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const double u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const int u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const int64_t u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const long double u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const long int u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const mpf_t u)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const mpfr_t  u, bool shared)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const mpq_t u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const mpreal& u) $/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const mpz_t u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const std::string& s, mp_prec_t prec, int base, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const uint64_t u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const unsigned int u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(const unsigned long int u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::mpreal(mpreal&& other)$/;"	f	class:mpfr::mpreal
mr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = (EIGEN_PLAIN_ENUM_MIN(16,NumberOfRegisters)\/2\/nr)*ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
mr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 3*LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
mr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
mr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = Vectorizable ? 3*LhsPacketSize : default_mr,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
ms_from	tools/eigen/Eigen/src/Core/util/Meta.h	/^  static From ms_from;$/;"	m	struct:Eigen::internal::is_convertible_impl
mtl4_interface	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^class mtl4_interface {$/;"	c
mu_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  std::mutex mu_;$/;"	m	class:Eigen::Notification
mu_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  std::mutex mu_;$/;"	m	class:Eigen::ThreadPool
mul	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline GroupElement mul(Generator g1, Generator g2) const$/;"	f	class:Eigen::DynamicSGroup
mul	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline GroupElement mul(Generator g1, GroupElement g2) const$/;"	f	class:Eigen::DynamicSGroup
mul	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline GroupElement mul(GroupElement g1, Generator g2) const$/;"	f	class:Eigen::DynamicSGroup
mul	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^inline DynamicSGroup::GroupElement DynamicSGroup::mul(GroupElement g1, GroupElement g2) const$/;"	f	class:Eigen::DynamicSGroup
mul_2si	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mul_2si(const mpreal& v, long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
mul_2ui	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mul_2ui(const mpreal& v, unsigned long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
mul_assign_op	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct mul_assign_op {$/;"	s	namespace:Eigen::internal
multMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^    static void multMatrix(const Matrix<double,4,4, _Flags, 4,4>& mat) { glMultMatrixd(mat.data()); }$/;"	f	struct:GlMatrixHelper
multMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^    static void multMatrix(const Matrix<double,4,4, _Flags, 4,4>& mat) { glMultMatrixd(mat.transpose().eval().data()); }$/;"	f	struct:GlMatrixHelper
multMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^    static void multMatrix(const Matrix<float, 4,4, _Flags, 4,4>&  mat) { glMultMatrixf(mat.data()); }$/;"	f	struct:GlMatrixHelper
multMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^    static void multMatrix(const Matrix<float, 4,4, _Flags, 4,4>&  mat) { glMultMatrixf(mat.transpose().eval().data()); }$/;"	f	struct:GlMatrixHelper
multMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^void GpuHelper::multMatrix(const Matrix<Scalar,4,4, _Flags, 4,4>& mat, GLenum matrixTarget)$/;"	f	class:GpuHelper
multiplied_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename apply_op_from_right<Multiply, current_generator, elements>::type multiplied_elements;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_generator
multiplier	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  UnsignedType multiplier;$/;"	m	struct:Eigen::internal::TensorIntDivisor
multiply_assign_using_evaluator	tools/eigen/test/evaluators.cpp	/^  void multiply_assign_using_evaluator(const DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen
muluh	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_ALWAYS_INLINE uint64_t muluh(const uint64_t a, const T b) {$/;"	f	namespace:Eigen::internal::__anon66
muluh	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE uint32_t muluh(const uint32_t a, const T b) {$/;"	f	namespace:Eigen::internal::__anon66
muluh	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^ EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE uint64_t muluh(const uint64_t a, const T b) {$/;"	f	namespace:Eigen::internal::__anon66
my_exception	tools/eigen/test/exceptions.cpp	/^  my_exception() {}$/;"	f	struct:my_exception
my_exception	tools/eigen/test/exceptions.cpp	/^struct my_exception$/;"	s	file:
my_functor	tools/eigen/unsupported/test/NumericalDiff.cpp	/^    my_functor(void): Functor<double>(3,15) {}$/;"	f	struct:my_functor
my_functor	tools/eigen/unsupported/test/NumericalDiff.cpp	/^struct my_functor : Functor<double>$/;"	s	file:
n	problem.hh	/^    int n;                                \/\/ number of training examples$/;"	m	class:Entity
n	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   n; \/\/ Number of columns in the matrix  $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
n	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  uint16_t k, m, n;$/;"	m	struct:size_triple_t	file:
n	tools/eigen/doc/snippets/BiCGSTAB_simple.cpp	/^  int n = 10000;$/;"	v
n	tools/eigen/doc/snippets/BiCGSTAB_step_by_step.cpp	/^  int n = 10000;$/;"	v
n	tools/eigen/doc/snippets/Triangular_solve.cpp	/^     << m.triangularView<Eigen::Upper>().solve<Eigen::OnTheRight>(n);$/;"	v
n	tools/eigen/doc/snippets/Triangular_solve.cpp	/^Matrix3d n = Matrix3d::Ones();$/;"	v
n	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index n;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
n	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index n;$/;"	m	class:Eigen::LevenbergMarquardt
n	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index n;$/;"	m	class:Eigen::HybridNonLinearSolver
n	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index n;$/;"	m	class:Eigen::LevenbergMarquardt
n32	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^    unsigned long int n32[2] ;$/;"	m	union:X86_Timer::__anon734
n32	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^    unsigned long int n32[2] ;$/;"	m	union:X86_Timer::__anon735
n64	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^    unsigned long long n64 ;$/;"	m	union:X86_Timer::__anon734
n64	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^    unsigned long long n64 ;$/;"	m	union:X86_Timer::__anon735
nOrder	tools/SimpleIni.h	/^        int             nOrder;$/;"	m	struct:CSimpleIniTempl::Entry
n_	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  size_t n_;$/;"	m	class:BenchmarkSuite
n_block_idx	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index n_block_idx;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
n_blocks	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index n_blocks;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
n_dims	tools/eigen/doc/snippets/Tutorial_Map_using.cpp	/^const int n_dims = 5;$/;"	v
name	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  static inline std::string name( void )$/;"	f	class:Action_aat_product
name	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  static inline std::string name( void )$/;"	f	class:Action_ata_product
name	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  static inline std::string name() { return "atv_" + Interface::name(); }$/;"	f	class:Action_atv_product
name	tools/eigen/bench/btl/actions/action_axpby.hh	/^  static inline std::string name( void )$/;"	f	class:Action_axpby
name	tools/eigen/bench/btl/actions/action_axpy.hh	/^  static inline std::string name( void )$/;"	f	class:Action_axpy
name	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  static inline std::string name( void )$/;"	f	class:Action_cholesky
name	tools/eigen/bench/btl/actions/action_ger.hh	/^  static inline std::string name( void )$/;"	f	class:Action_ger
name	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  static inline std::string name( void ) { return "tridiagonalization_"+Interface::name(); }$/;"	f	class:Action_tridiagonalization
name	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  static inline std::string name( void )$/;"	f	class:Action_hessenberg
name	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  static inline std::string name( void )$/;"	f	class:Action_lu_decomp
name	tools/eigen/bench/btl/actions/action_lu_solve.hh	/^  static inline std::string name( void )$/;"	f	class:Action_lu_solve
name	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  static inline std::string name( void )$/;"	f	class:Action_matrix_matrix_product
name	tools/eigen/bench/btl/actions/action_matrix_matrix_product_bis.hh	/^  static inline std::string name( void )$/;"	f	class:Action_matrix_matrix_product_bis
name	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  static inline std::string name( void )$/;"	f	class:Action_matrix_vector_product
name	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  static inline std::string name( void )$/;"	f	class:Action_partial_lu
name	tools/eigen/bench/btl/actions/action_rot.hh	/^  static inline std::string name( void )$/;"	f	class:Action_rot
name	tools/eigen/bench/btl/actions/action_symv.hh	/^  static inline std::string name( void )$/;"	f	class:Action_symv
name	tools/eigen/bench/btl/actions/action_syr2.hh	/^  static inline std::string name( void )$/;"	f	class:Action_syr2
name	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  static inline std::string name( void )$/;"	f	class:Action_trisolve
name	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  static inline std::string name( void )$/;"	f	class:Action_trisolve_matrix
name	tools/eigen/bench/btl/actions/action_trmm.hh	/^  static inline std::string name( void )$/;"	f	class:Action_trmm
name	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline std::string name()$/;"	f	class:blas_interface
name	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline std::string name( void )$/;"	f	class:STL_interface
name	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline std::string name() { return "blaze"; }$/;"	f	class:blaze_interface
name	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline std::string name() { return "blitz"; }$/;"	f	class:blitz_interface
name	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline std::string name() { return "tiny_blitz"; }$/;"	f	class:tiny_blitz_interface
name	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline std::string name( void )$/;"	f	class:eigen2_interface
name	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline std::string name( void )$/;"	f	class:eigen3_interface
name	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline std::string name( void )$/;"	f	class:gmm_interface
name	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline std::string name() { return "mtl4"; }$/;"	f	class:mtl4_interface
name	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static inline std::string name( void )$/;"	f	class:tensor_interface
name	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline std::string name() { return "tiny_tvmet"; }$/;"	f	class:tvmet_interface
name	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline std::string name( void ) { return "ublas"; }$/;"	f	class:ublas_interface
name	tools/eigen/scripts/eigen_gen_credits.cpp	/^  string name;$/;"	m	struct:contributor	file:
nameof	tools/eigen/bench/benchFFT.cpp	/^template <> string nameof<double>() {return "double";}$/;"	f
nameof	tools/eigen/bench/benchFFT.cpp	/^template <> string nameof<float>() {return "float";}$/;"	f
nameof	tools/eigen/bench/benchFFT.cpp	/^template <> string nameof<long double>() {return "long double";}$/;"	f
nbThreads	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^inline int nbThreads()$/;"	f	namespace:Eigen
nb_load	tools/eigen/test/unalignedcount.cpp	/^static int nb_load;$/;"	v	file:
nb_loadu	tools/eigen/test/unalignedcount.cpp	/^static int nb_loadu;$/;"	v	file:
nb_of_subdiagonals	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Index nb_of_subdiagonals;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
nb_of_superdiagonals	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Index nb_of_superdiagonals;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
nb_op_base	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_aat_product
nb_op_base	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_ata_product
nb_op_base	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  double nb_op_base( void ) { return 2.0*_size*_size; }$/;"	f	class:Action_atv_product
nb_op_base	tools/eigen/bench/btl/actions/action_axpby.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_axpby
nb_op_base	tools/eigen/bench/btl/actions/action_axpy.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_axpy
nb_op_base	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_cholesky
nb_op_base	tools/eigen/bench/btl/actions/action_ger.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_ger
nb_op_base	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_hessenberg
nb_op_base	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_tridiagonalization
nb_op_base	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_lu_decomp
nb_op_base	tools/eigen/bench/btl/actions/action_lu_solve.hh	/^  static double nb_op_base(int size){$/;"	f	class:Action_lu_solve
nb_op_base	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_matrix_matrix_product
nb_op_base	tools/eigen/bench/btl/actions/action_matrix_matrix_product_bis.hh	/^  static double nb_op_base(int size){$/;"	f	class:Action_matrix_matrix_product_bis
nb_op_base	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_matrix_vector_product
nb_op_base	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_partial_lu
nb_op_base	tools/eigen/bench/btl/actions/action_rot.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_rot
nb_op_base	tools/eigen/bench/btl/actions/action_symv.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_symv
nb_op_base	tools/eigen/bench/btl/actions/action_syr2.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_syr2
nb_op_base	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_trisolve
nb_op_base	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_trisolve_matrix
nb_op_base	tools/eigen/bench/btl/actions/action_trmm.hh	/^  double nb_op_base( void ){$/;"	f	class:Action_trmm
nb_store	tools/eigen/test/unalignedcount.cpp	/^static int nb_store;$/;"	v	file:
nb_storeu	tools/eigen/test/unalignedcount.cpp	/^static int nb_storeu;$/;"	v	file:
nb_temporaries	tools/eigen/test/main.h	/^static long int nb_temporaries;$/;"	v
nb_temporaries	tools/eigen/test/sparse_ref.cpp	/^static long int nb_temporaries;$/;"	v	file:
nc	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index nc() const { return m_nc; }$/;"	f	class:Eigen::internal::level3_blocking
nc	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index nc;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
ncfail	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index ncfail;$/;"	m	class:Eigen::HybridNonLinearSolver
ncsuc	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index ncsuc;$/;"	m	class:Eigen::HybridNonLinearSolver
need_to_pack	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const bool need_to_pack;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
negate	tools/eigen/test/packetmath.cpp	/^template<typename T> T negate(const T& x) { return -x; }$/;"	f	namespace:Eigen::internal
negation_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct negation_op {$/;"	s	namespace:Eigen::internal
nentries	tools/eigen/bench/sparse_randomsetter.cpp	/^static double nentries;$/;"	v	file:
nestByValue	tools/eigen/Eigen/src/Core/NestByValue.h	/^DenseBase<Derived>::nestByValue() const$/;"	f	class:Eigen::DenseBase
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^struct nested<TensorIndexTupleOp<XprType>, 1,$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^struct nested<TensorTupleReducerOp<ReduceOp, Dims, XprType>, 1,$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^struct nested<TensorAssignOp<LhsXprType, RhsXprType>, 1, typename eval<TensorAssignOp<LhsXprType, RhsXprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^struct nested<TensorBroadcastingOp<Broadcast, XprType>, 1, typename eval<TensorBroadcastingOp<Broadcast, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^struct nested<TensorChippingOp<DimId, XprType>, 1, typename eval<TensorChippingOp<DimId, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^struct nested<TensorConcatenationOp<Axis, LhsXprType, RhsXprType>, 1, typename eval<TensorConcatenationOp<Axis, LhsXprType, RhsXprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^struct nested<TensorContractionOp<Dimensions, LhsXprType, RhsXprType>, 1, typename eval<TensorContractionOp<Dimensions, LhsXprType, RhsXprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^struct nested<TensorConversionOp<TargetType, XprType>, 1, typename eval<TensorConversionOp<TargetType, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^struct nested<TensorConvolutionOp<Dimensions, InputXprType, KernelXprType>, 1, typename eval<TensorConvolutionOp<Dimensions, InputXprType, KernelXprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^struct nested<TensorCustomBinaryOp<CustomBinaryFunc, LhsXprType, RhsXprType> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^struct nested<TensorCustomUnaryOp<CustomUnaryFunc, XprType> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^struct nested<TensorEvalToOp<XprType>, 1, typename eval<TensorEvalToOp<XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct nested<TensorCwiseBinaryOp<BinaryOp, LhsXprType, RhsXprType>, 1, typename eval<TensorCwiseBinaryOp<BinaryOp, LhsXprType, RhsXprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct nested<TensorCwiseUnaryOp<UnaryOp, XprType>, 1, typename eval<TensorCwiseUnaryOp<UnaryOp, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct nested<TensorSelectOp<IfXprType, ThenXprType, ElseXprType>, 1, typename eval<TensorSelectOp<IfXprType, ThenXprType, ElseXprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^struct nested<TensorForcedEvalOp<XprType>, 1, typename eval<TensorForcedEvalOp<XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^struct nested<TensorGeneratorOp<Generator, XprType>, 1, typename eval<TensorGeneratorOp<Generator, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^struct nested<TensorImagePatchOp<Rows, Cols, XprType>, 1, typename eval<TensorImagePatchOp<Rows, Cols, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^struct nested<TensorInflationOp<Strides, XprType>, 1, typename eval<TensorInflationOp<Strides, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^struct nested<TensorLayoutSwapOp<XprType>, 1, typename eval<TensorLayoutSwapOp<XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct nested<TensorReshapingOp<NewDimensions, XprType>, 1, typename eval<TensorReshapingOp<NewDimensions, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct nested<TensorSlicingOp<StartIndices, Sizes, XprType>, 1, typename eval<TensorSlicingOp<StartIndices, Sizes, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^struct nested<TensorPaddingOp<PaddingDimensions, XprType>, 1, typename eval<TensorPaddingOp<PaddingDimensions, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^struct nested<TensorPatchOp<PatchDim, XprType>, 1, typename eval<TensorPatchOp<PatchDim, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct nested<TensorReductionOp<Op, Dims, XprType>, 1, typename eval<TensorReductionOp<Op, Dims, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^struct nested<TensorReverseOp<ReverseDimensions, XprType>, 1,$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^struct nested<TensorShufflingOp<Shuffle, XprType>, 1, typename eval<TensorShufflingOp<Shuffle, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^struct nested<TensorStridingOp<Strides, XprType>, 1, typename eval<TensorStridingOp<Strides, XprType> >::type>$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct nested<Tensor<Scalar_, NumIndices_, Options_, IndexType_> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct nested<TensorFixedSize<Scalar_, Dimensions, Options, IndexType_> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct nested<TensorMap<PlainObjectType, Options> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct nested<TensorRef<PlainObjectType> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct nested<const Tensor<Scalar_, NumIndices_, Options_, IndexType_> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct nested<const TensorFixedSize<Scalar_, Dimensions, Options, IndexType_> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct nested<const TensorMap<PlainObjectType, Options> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct nested<const TensorRef<PlainObjectType> >$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^template<typename T, int n=1, typename PlainObject = void> struct nested$/;"	s	namespace:Eigen::internal
nested	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^struct nested<TensorVolumePatchOp<Planes, Rows, Cols, XprType>, 1, typename eval<TensorVolumePatchOp<Planes, Rows, Cols, XprType> >::type>$/;"	s	namespace:Eigen::internal
nestedExpression	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::ArrayWrapper
nestedExpression	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::MatrixWrapper
nestedExpression	tools/eigen/Eigen/src/Core/Block.h	/^    const typename internal::remove_all<typename XprType::Nested>::type& nestedExpression() const$/;"	f	class:Eigen::internal::BlockImpl_dense
nestedExpression	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() { return m_xpr.const_cast_derived(); }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	tools/eigen/Eigen/src/Core/Diagonal.h	/^    nestedExpression() const $/;"	f	class:Eigen::Diagonal
nestedExpression	tools/eigen/Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC const XprTypeNestedCleaned& nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::Inverse
nestedExpression	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    const PermutationType& nestedExpression() const { return m_permutation; }$/;"	f	class:Eigen::Transpose
nestedExpression	tools/eigen/Eigen/src/Core/Redux.h	/^  const XprType & nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::internal::redux_evaluator
nestedExpression	tools/eigen/Eigen/src/Core/Replicate.h	/^    const _MatrixTypeNested& nestedExpression() const$/;"	f	class:Eigen::Replicate
nestedExpression	tools/eigen/Eigen/src/Core/Reverse.h	/^    nestedExpression() const $/;"	f	class:Eigen::Reverse
nestedExpression	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNestedCleaned& nestedExpression() { return *const_cast<MatrixTypeNestedCleaned*>(&m_matrix); }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	tools/eigen/Eigen/src/Core/Transpose.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::Transpose
nestedExpression	tools/eigen/Eigen/src/Core/Transpose.h	/^    nestedExpression() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::Transpose
nestedExpression	tools/eigen/Eigen/src/Core/Transpositions.h	/^    const TranspositionType& nestedExpression() const { return m_transpositions; }$/;"	f	class:Eigen::Transpose
nestedExpression	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    NestedExpression& nestedExpression() { return *const_cast<NestedExpression*>(&m_matrix); }$/;"	f	class:Eigen::TriangularView
nestedExpression	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    const NestedExpression& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::TriangularView
nestedExpression	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    const NestedExpression& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::Homogeneous
nestedExpression	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const _MatrixTypeNested& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::BlockImpl
nestedExpression	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const _MatrixTypeNested& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
nestedExpression	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SparseView
nestedExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::TensorCwiseNullaryOp
nestedExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::TensorCwiseUnaryOp
nested_eval	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^struct nested_eval<ReturnByValue<Derived>, n, PlainObject>$/;"	s	namespace:Eigen::internal
nested_eval	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T, int n, typename PlainObject = typename eval<T>::type> struct nested_eval$/;"	s	struct:Eigen::internal::promote_index_type
new_Pivot_Vector	tools/eigen/bench/btl/libs/blitz/blitz_LU_solve_interface.hh	/^  inline static void new_Pivot_Vector(Pivot_Vector & pivot,int N)$/;"	f	class:blitz_LU_solve_interface
new_Pivot_Vector	tools/eigen/bench/btl/libs/gmm/gmm_LU_solve_interface.hh	/^  inline static void new_Pivot_Vector(Pivot_Vector & pivot,int N)$/;"	f	class:blitz_LU_solve_interface
new_Pivot_Vector	tools/eigen/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh	/^  inline static void new_Pivot_Vector(Pivot_Vector & pivot,int N)$/;"	f	class:blitz_LU_solve_interface
new_coset_rep	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename Multiply<rep_element, g>::type new_coset_rep;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
new_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename _ac4r::type new_elements;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
new_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename _helper::type new_elements;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
new_elements	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename concat<elements, multiplied_elements>::type new_elements;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_generator
new_rep_pos	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int new_rep_pos = rep_pos + sub_group_elements::count;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
new_stop_condition	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static bool new_stop_condition = new_rep_pos >= new_elements::count;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
next	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^      StorageIndex next;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
next	tools/eigen/debug/gdb/printers.py	/^		def next(self):$/;"	m	class:EigenMatrixPrinter._iterator
next	tools/eigen/debug/gdb/printers.py	/^		def next(self):$/;"	m	class:EigenQuaternionPrinter._iterator
next_generators	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename skip<1, generators>::type next_generators;$/;"	t	struct:Eigen::internal::group_theory::dimino_first_step_elements
next_generators	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename skip<1, remaining_generators>::type next_generators;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
next_subset	tools/eigen/bench/analyze-blocking-sizes.cpp	/^void next_subset(vector<size_t>& inout_subset, size_t set_size)$/;"	f
nextabove	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal nextabove  (const mpreal& x)$/;"	f	namespace:mpfr
nextbelow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal nextbelow  (const mpreal& x)$/;"	f	namespace:mpfr
nexttoward	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal nexttoward (const mpreal& x, const mpreal& y)$/;"	f	namespace:mpfr
nfev	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index nfev() { return m_nfev; }$/;"	f	class:Eigen::LevenbergMarquardt
nfev	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index nfev;$/;"	m	class:Eigen::HybridNonLinearSolver
nfev	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index nfev;$/;"	m	class:Eigen::LevenbergMarquardt
njev	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    Index njev() { return m_njev; }$/;"	f	class:Eigen::LevenbergMarquardt
njev	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index njev;$/;"	m	class:Eigen::HybridNonLinearSolver
njev	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index njev;$/;"	m	class:Eigen::LevenbergMarquardt
nlerp	tools/eigen/bench/quat_slerp.cpp	/^EIGEN_DONT_INLINE Q nlerp(const Q& a, const Q& b, typename Q::Scalar t)$/;"	f
nnz	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon152::__anon153
no	tools/eigen/Eigen/src/Core/util/Meta.h	/^  struct no  {int a[2];};$/;"	s	struct:Eigen::internal::is_convertible_impl
no_assignment_operator	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^class no_assignment_operator$/;"	c	namespace:Eigen::internal
no_more_assert	tools/eigen/test/main.h	/^    static bool no_more_assert = false;$/;"	m	namespace:Eigen
noalias	tools/eigen/Eigen/src/Core/NoAlias.h	/^NoAlias<Derived,MatrixBase> MatrixBase<Derived>::noalias()$/;"	f	class:Eigen::MatrixBase
node.expandToggle.onclick	tools/eigen/doc/eigen_navtree_hacks.js	/^    node.expandToggle.href = "javascript:void(0)";$/;"	f
noiseLevel	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    int noiseLevel() const { return m_noise; }$/;"	f	class:Eigen::IterationController
nomalloc	tools/eigen/test/nomalloc.cpp	/^template<typename MatrixType> void nomalloc(const MatrixType& m)$/;"	f
nonZeros	tools/eigen/Eigen/src/Core/DenseBase.h	/^    inline Index nonZeros() const { return size(); }$/;"	f	class:Eigen::DenseBase
nonZeros	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^Index AmbiVector<_Scalar,_StorageIndex>::nonZeros() const$/;"	f	class:Eigen::internal::AmbiVector
nonZeros	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index nonZeros() const { return Dynamic; }$/;"	f	class:Eigen::BlockImpl
nonZeros	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index nonZeros() const$/;"	f	class:Eigen::BlockImpl
nonZeros	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index nonZeros() const$/;"	f	class:Eigen::SparseCompressedBase
nonZeros	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Index nonZeros() const  { return m_data.size(); }$/;"	f	class:Eigen::SparseVector
nonZeros	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index nonZeros() const {$/;"	f	class:Eigen::SkylineMatrix
nonZeros	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Index nonZeros() const {$/;"	f	class:Eigen::SkylineMatrixBase
nonZeros	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index nonZeros() const { return m_nonzeros; }$/;"	f	class:Eigen::BlockSparseMatrix
nonZeros	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    Index nonZeros() const$/;"	f	class:Eigen::DynamicSparseMatrix
nonZeros	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    Index nonZeros() const$/;"	f	class:Eigen::RandomSetter
nonZerosBlocks	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index nonZerosBlocks() const { return m_nonzerosblocks; }$/;"	f	class:Eigen::BlockSparseMatrix
nonZerosEstimate	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::evaluator
nonZerosEstimate	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::binary_evaluator
nonZerosEstimate	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::evaluator
nonZerosEstimate	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  Index nonZerosEstimate() const { return m_matrix->nonZeros(); }$/;"	f	struct:Eigen::internal::evaluator
non_const_type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  >::type non_const_type;$/;"	t	struct:Eigen::internal::promote_index_type::ref_selector
non_projective_only	tools/eigen/test/geo_transformations.cpp	/^template<typename Scalar, int Mode, int Options> void non_projective_only()$/;"	f
noncopyable	tools/eigen/Eigen/src/Core/util/Meta.h	/^  EIGEN_DEVICE_FUNC noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
noncopyable	tools/eigen/Eigen/src/Core/util/Meta.h	/^class noncopyable$/;"	c	namespace:Eigen::internal
nonpot_block_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  size_triple_t nonpot_block_size;$/;"	m	struct:inputfile_entry_t	file:
nonunit	tools/eigen/bench/bench_gemm.cpp	/^static char nonunit = 'N';$/;"	v	file:
nonunit	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	/^static char nonunit = 'N';$/;"	v
nonzeroPivots	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivLU
nonzeroPivots	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::ColPivHouseholderQR
nonzeroPivots	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivHouseholderQR
nonzeroSingularValues	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  Index nonzeroSingularValues() const$/;"	f	class:Eigen::SVDBase
norm	tools/eigen/Eigen/src/Core/Dot.h	/^inline typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::norm() const$/;"	f	class:Eigen::MatrixBase
norm	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const NormReturnType norm() const$/;"	f	class:Eigen::VectorwiseOp
norm	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar norm() const { return coeffs().norm(); }$/;"	f	class:Eigen::QuaternionBase
norm	tools/eigen/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::norm() const$/;"	f	class:Eigen::SparseMatrixBase
norm1	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(norm1, Scalar) norm1(const Scalar& x)$/;"	f	namespace:Eigen::numext
norm1_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl$/;"	s	namespace:Eigen::internal
norm1_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
norm1_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct norm1_impl : norm1_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
norm1_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct norm1_retval$/;"	s	namespace:Eigen::internal
norm_diff	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline real norm_diff(const stl_matrix & A, const stl_matrix & B)$/;"	f	class:STL_interface
norm_diff	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline real norm_diff(const stl_vector & A, const stl_vector & B)$/;"	f	class:STL_interface
normal	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline ConstNormalReturnType normal() const { return ConstNormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline NormalReturnType normal() { return NormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normalize	tools/eigen/Eigen/src/Core/Dot.h	/^inline void MatrixBase<Derived>::normalize()$/;"	f	class:Eigen::MatrixBase
normalize	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    EIGEN_DEVICE_FUNC void normalize() {$/;"	f	class:Eigen::VectorwiseOp
normalize	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  void normalize(void)$/;"	f	class:Eigen::Hyperplane
normalize	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline void normalize() { coeffs().normalize(); }$/;"	f	class:Eigen::QuaternionBase
normalized	tools/eigen/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::normalized() const$/;"	f	class:Eigen::MatrixBase
normalized	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    normalized() const { return m_matrix.cwiseQuotient(extendedToOpposite(this->norm())); }$/;"	f	class:Eigen::VectorwiseOp
normalized	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion<Scalar> normalized() const { return Quaternion<Scalar>(coeffs().normalized()); }$/;"	f	class:Eigen::QuaternionBase
normalized_graph	Top-scalable.cc	/^sp_mat Top::normalized_graph(const sp_mat& A) {$/;"	f	class:Top
normalized_graph	Top.cc	/^sp_mat Top::normalized_graph(const sp_mat& G) {$/;"	f	class:Top
not_equal_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct not_equal_op     { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a != b)  { return a != b;  } };$/;"	s	namespace:Eigen::internal
not_equal_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct not_equal_op {$/;"	s	namespace:Eigen::internal
not_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct not_op {$/;"	s	namespace:Eigen::internal
notified_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  bool notified_;$/;"	m	class:Eigen::Notification
notrans	tools/eigen/bench/bench_gemm.cpp	/^static char notrans = 'N';$/;"	v	file:
notrans	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	/^static char notrans = 'N';$/;"	v
nr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon270
nr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon271
nr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon272
nr	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon273
nr_etdfs	tools/eigen/Eigen/src/SparseCore/SparseColEtree.h	/^void nr_etdfs (typename IndexVector::Scalar n, IndexVector& parent, IndexVector& first_kid, IndexVector& next_kid, IndexVector& post, typename IndexVector::Scalar postnum)$/;"	f	namespace:Eigen::internal
nrm2	tools/eigen/blas/level1_real_impl.h	/^Scalar EIGEN_BLAS_FUNC(nrm2)(int *n, RealScalar *px, int *incx)$/;"	f
nrm2_	tools/eigen/blas/level1_cplx_impl.h	/^RealScalar EIGEN_CAT(EIGEN_CAT(REAL_SCALAR_SUFFIX,SCALAR_SUFFIX),nrm2_)(int *n, RealScalar *px, int *incx)$/;"	f
nslow1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index nslow1, nslow2;$/;"	m	class:Eigen::HybridNonLinearSolver
nslow2	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index nslow1, nslow2;$/;"	m	class:Eigen::HybridNonLinearSolver
nsuper	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index nsuper() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
null_function	tools/eigen/bench/btl/generic_bench/init/init_function.hh	/^double null_function(int \/*index*\/)$/;"	f
null_function	tools/eigen/bench/btl/generic_bench/init/init_function.hh	/^double null_function(int \/*index_i*\/, int \/*index_j*\/)$/;"	f
null_type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct null_type { };$/;"	s	namespace:Eigen::internal
nullaryExpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    nullaryExpr(const CustomNullaryOp& func) const {$/;"	f	class:Eigen::TensorBase
numThreads	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE size_t numThreads() const {$/;"	f	struct:Eigen::DefaultDevice
numThreads	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE size_t numThreads() const {$/;"	f	struct:Eigen::GpuDevice
numThreads	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE size_t numThreads() const {$/;"	f	struct:Eigen::ThreadPoolDevice
num_blockAs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index num_blockAs;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
num_expansions	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   num_expansions; $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
num_threads	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const Index num_threads;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
num_threads_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  size_t num_threads_;$/;"	m	struct:Eigen::ThreadPoolDevice
number_of_subsets_limit	tools/eigen/bench/analyze-blocking-sizes.cpp	/^const size_t number_of_subsets_limit = 100;$/;"	v
numeric_limits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<double>$/;"	s	namespace:Eigen::internal::device
numeric_limits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<float>$/;"	s	namespace:Eigen::internal::device
numeric_limits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<int>$/;"	s	namespace:Eigen::internal::device
numeric_limits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<long long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct numeric_limits$/;"	s	namespace:Eigen::internal::device
numeric_limits	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    class numeric_limits<mpfr::mpreal>$/;"	c	namespace:std
numeric_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct numeric_list { constexpr static std::size_t count = sizeof...(nn); };$/;"	s	namespace:Eigen::internal
numeric_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct numeric_list<T, n, nn...> { constexpr static std::size_t count = sizeof...(nn) + 1; constexpr static T first_value = n; };$/;"	s	namespace:Eigen::internal
numext	tools/eigen/Eigen/src/Core/MathFunctions.h	/^namespace numext {$/;"	n	namespace:Eigen
numext	tools/eigen/Eigen/src/Core/util/Meta.h	/^namespace numext {$/;"	n
nzlmax	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzlmax; \/\/ Current max size of lsub$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nzlumax	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzlumax; \/\/ Current max size of lusup$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nzumax	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzumax; \/\/ Current max size of ucol$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
o.node.getChildrenUL	tools/eigen/doc/eigen_navtree_hacks.js	/^  o.node.childrenUL = document.createElement("ul");$/;"	f
object	tools/eigen/bench/geometry.cpp	/^  T object;$/;"	m	struct:ToRotationMatrixWrapper	file:
object_count	tools/eigen/test/ctorleak.cpp	/^  static Index object_count;$/;"	m	struct:Foo	file:
object_count	tools/eigen/test/ctorleak.cpp	/^Index Foo::object_count = 0;$/;"	m	class:Foo	file:
object_limit	tools/eigen/test/ctorleak.cpp	/^  static Index object_limit;$/;"	m	struct:Foo	file:
object_limit	tools/eigen/test/ctorleak.cpp	/^Index Foo::object_limit = 0;$/;"	m	class:Foo	file:
objective	Top-scalable.cc	/^val Top::objective(const mat& L, const mat& R, const Relation& r) {$/;"	f	class:Top
objective	Top.cc	/^val Top::objective($/;"	f	class:Top
objective_PMF	Top-scalable.cc	/^val Top::objective_PMF(const mat& L, const mat& R, const Relation& r) {$/;"	f	class:Top
objects	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  ObjectList objects;$/;"	m	class:Eigen::KdBVH
offset	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar& offset() { return m_coeffs(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline const Scalar& offset() const { return m_coeffs.coeff(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set x2label "" offset 0,0$/;"	v
offset	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set xlabel "matrix size" offset 0,0$/;"	v
offset	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set y2label "" offset 0,0$/;"	v
offset	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set ylabel "MFLOPS" offset 0,0$/;"	v
offset	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set zlabel "" offset 0,0$/;"	v
offset	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  const Index offset() const { return m_offset; }$/;"	f	class:Eigen::TensorChippingOp
offset_	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^  const float offset_;$/;"	m	struct:UserReducer	file:
ok	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  inline bool ok() const {$/;"	f	struct:Eigen::GpuDevice
on_temporary_creation	tools/eigen/test/main.h	/^inline void on_temporary_creation(long int size) {$/;"	f
on_temporary_creation	tools/eigen/test/sparse_ref.cpp	/^inline void on_temporary_creation() {$/;"	f
one	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^      int one;$/;"	m	struct:Eigen::DynamicSGroup::Generator
ones	tools/eigen/doc/snippets/ComplexEigenSolver_eigenvalues.cpp	/^MatrixXcf ones = MatrixXcf::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/ComplexEigenSolver_eigenvectors.cpp	/^MatrixXcf ones = MatrixXcf::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/EigenSolver_eigenvalues.cpp	/^MatrixXd ones = MatrixXd::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/EigenSolver_eigenvectors.cpp	/^MatrixXd ones = MatrixXd::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/MatrixBase_eigenvalues.cpp	/^MatrixXd ones = MatrixXd::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/MatrixBase_operatorNorm.cpp	/^MatrixXd ones = MatrixXd::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/SelfAdjointEigenSolver_eigenvalues.cpp	/^MatrixXd ones = MatrixXd::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/SelfAdjointEigenSolver_eigenvectors.cpp	/^MatrixXd ones = MatrixXd::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/SelfAdjointView_eigenvalues.cpp	/^MatrixXd ones = MatrixXd::Ones(3,3);$/;"	v
ones	tools/eigen/doc/snippets/SelfAdjointView_operatorNorm.cpp	/^MatrixXd ones = MatrixXd::Ones(3,3);$/;"	v
only_cubic_sizes	tools/eigen/bench/analyze-blocking-sizes.cpp	/^bool only_cubic_sizes = false;$/;"	v
op_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  Op op_;$/;"	m	class:Eigen::internal::BlockReducer
operator !	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^operator!() const$/;"	f
operator !=	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    inline bool operator!=(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator !=	tools/eigen/test/exceptions.cpp	/^    bool operator!=(const ScalarWithExceptions& other) const$/;"	f	class:ScalarWithExceptions
operator !=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator!=(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator !=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^bool operator!=(const Tuple<U, V>& x, const Tuple<U, V>& y) {$/;"	f	namespace:Eigen
operator !=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator!=(const Scalar& a, const AutoDiffScalar& b) { return a != b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator !=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator!=(const Scalar& other) const  { return m_value != other; }$/;"	f	class:Eigen::AutoDiffScalar
operator !=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator!=(const AutoDiffScalar<OtherDerType>& b) const  { return m_value != b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator !=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator != (const mpreal& a, const mpreal& b){    return (mpfr_lessgreater_p   (a.mpfr_srcptr(),b.mpfr_srcptr()) !=0 );    }$/;"	f	namespace:mpfr
operator &&	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator&&(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator &&	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator&&(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator ()	tools/SimpleIni.h	/^            bool operator()(const Entry & lhs, const Entry & rhs) const {$/;"	f	struct:CSimpleIniTempl::Entry::KeyOrder
operator ()	tools/SimpleIni.h	/^            bool operator()(const Entry & lhs, const Entry & rhs) const {$/;"	f	struct:CSimpleIniTempl::Entry::LoadOrder
operator ()	tools/SimpleIni.h	/^    bool operator()(const SI_CHAR * pLeft, const SI_CHAR * pRight) const {$/;"	f	struct:SI_GenericCase
operator ()	tools/SimpleIni.h	/^    bool operator()(const SI_CHAR * pLeft, const SI_CHAR * pRight) const {$/;"	f	struct:SI_GenericNoCase
operator ()	tools/SimpleIni.h	/^    bool operator()(const SI_CHAR * pLeft, const SI_CHAR * pRight) const {$/;"	f	struct:SI_NoCase
operator ()	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType operator()(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const {$/;"	f	struct:Eigen::internal::generic_product_impl::adds
operator ()	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::add
operator ()	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::set
operator ()	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::sub
operator ()	tools/eigen/Eigen/src/Core/Random.h	/^  inline const Scalar operator() (Index, Index = 0) const { return random<Scalar>(); }$/;"	f	struct:Eigen::internal::scalar_random_op
operator ()	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& operator()(Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& operator()(Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar operator()(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
operator ()	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& operator()(Index row, Index col)$/;"	f	class:Eigen::TriangularBase
operator ()	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC inline result_type operator()(const DenseBase<Derived>& mat) const$/;"	f	struct:Eigen::internal::member_redux
operator ()	tools/eigen/Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::max_coeff_visitor
operator ()	tools/eigen/Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::min_coeff_visitor
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a \/ m_other; }$/;"	f	struct:Eigen::internal::scalar_quotient1_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a && b; }$/;"	f	struct:Eigen::internal::scalar_boolean_and_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a || b; }$/;"	f	struct:Eigen::internal::scalar_boolean_or_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const Scalar& a, const Scalar& b) const {return !(a<=b || b<=a);}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const Scalar& a, const Scalar& b) const {return a!=b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const Scalar& a, const Scalar& b) const {return a<=b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const Scalar& a, const Scalar& b) const {return a<b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const Scalar& a, const Scalar& b) const {return a==b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& _x, const Scalar& _y) const$/;"	f	struct:Eigen::internal::scalar_hypot_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a + b; }$/;"	f	struct:Eigen::internal::scalar_sum_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a - b; }$/;"	f	struct:Eigen::internal::scalar_difference_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return numext::maxi(a, b); }$/;"	f	struct:Eigen::internal::scalar_max_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return numext::mini(a, b); }$/;"	f	struct:Eigen::internal::scalar_min_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a * b; }$/;"	f	struct:Eigen::internal::scalar_product_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a \/ b; }$/;"	f	struct:Eigen::internal::scalar_quotient_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar1& a) const { return a * m_other; }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar1& a) const { return a \/ m_other; }$/;"	f	struct:Eigen::internal::scalar_quotient2_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return a + m_other; }$/;"	f	struct:Eigen::internal::scalar_add_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return m_other \/ a; }$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a * m_other; }$/;"	f	struct:Eigen::internal::scalar_multiple_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline Scalar operator() (const Scalar& a) const { return a - m_other; }$/;"	f	struct:Eigen::internal::scalar_sub_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline Scalar operator() (const Scalar& a) const { return m_other - a; }$/;"	f	struct:Eigen::internal::scalar_rsub_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline Scalar operator() (const Scalar& a) const { return numext::pow(a, m_exponent); }$/;"	f	struct:Eigen::internal::scalar_pow_op
operator ()	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline Scalar operator() (const Scalar& a, const OtherScalar& b) const { return numext::pow(a, b); }$/;"	f	struct:Eigen::internal::scalar_binary_pow_op
operator ()	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (Index i) const $/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (Index i) const { return impl(i); }$/;"	f	struct:Eigen::internal::linspaced_op
operator ()	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (Index i) const { return m_low+i*m_step; }$/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (Index row, Index col) const $/;"	f	struct:Eigen::internal::linspaced_op
operator ()	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (Index row, Index col) const { return row==col ? Scalar(1) : Scalar(0); }$/;"	f	struct:Eigen::internal::scalar_identity_op
operator ()	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (Index, Index = 0) const { return m_other; }$/;"	f	struct:Eigen::internal::scalar_constant_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a) const { return !a; }$/;"	f	struct:Eigen::internal::scalar_boolean_not_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const NewType operator() (const Scalar& a) const { return cast<Scalar, NewType>(a); }$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return -a; }$/;"	f	struct:Eigen::internal::scalar_opposite_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::ceil(a); }$/;"	f	struct:Eigen::internal::scalar_ceil_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::floor(a); }$/;"	f	struct:Eigen::internal::scalar_floor_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::round(a); }$/;"	f	struct:Eigen::internal::scalar_round_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scal&, const result_type& a) const { return a; }$/;"	f	struct:Eigen::internal::abs_knowing_score
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { using numext::arg; return arg(a); }$/;"	f	struct:Eigen::internal::scalar_arg_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { using std::abs; return abs(a); }$/;"	f	struct:Eigen::internal::scalar_abs_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a, const Score&) const { using std::abs; return abs(a); }$/;"	f	struct:Eigen::internal::abs_knowing_score
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return (numext::isfinite)(a); }$/;"	f	struct:Eigen::internal::scalar_isfinite_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return (numext::isinf)(a); }$/;"	f	struct:Eigen::internal::scalar_isinf_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return (numext::isnan)(a); }$/;"	f	struct:Eigen::internal::scalar_isnan_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return Scalar(1)\/a; }$/;"	f	struct:Eigen::internal::scalar_inverse_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return a*a*a; }$/;"	f	struct:Eigen::internal::scalar_cube_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return a*a; }$/;"	f	struct:Eigen::internal::scalar_square_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { using std::cos; return cos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::acos; return acos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::asin; return asin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::exp; return exp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::log10; return log10(a); }$/;"	f	struct:Eigen::internal::scalar_log10_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::log; return log(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::sin; return sin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::sqrt; return Scalar(1)\/sqrt(a); }$/;"	f	struct:Eigen::internal::scalar_rsqrt_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::sqrt; return sqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { using std::tan; return tan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { using numext::conj; return conj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return numext::abs2(a); }$/;"	f	struct:Eigen::internal::scalar_abs2_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return numext::imag(a); }$/;"	f	struct:Eigen::internal::scalar_imag_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return numext::real(a); }$/;"	f	struct:Eigen::internal::scalar_real_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return numext::imag_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_imag_ref_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return numext::real_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_real_ref_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::atan; return atan(a); }$/;"	f	struct:Eigen::internal::scalar_atan_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::cosh; return cosh(a); }$/;"	f	struct:Eigen::internal::scalar_cosh_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::sinh; return sinh(a); }$/;"	f	struct:Eigen::internal::scalar_sinh_op
operator ()	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::tanh; return tanh(a); }$/;"	f	struct:Eigen::internal::scalar_tanh_op
operator ()	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(Scalar* blockA, const DataMapper& lhs, Index depth, Index rows, Index stride, Index offset)$/;"	f	class:Eigen::internal::gemm_pack_lhs
operator ()	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(Scalar* blockB, const DataMapper& rhs, Index depth, Index cols, Index stride, Index offset)$/;"	f	class:Eigen::internal::gemm_pack_rhs
operator ()	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(const DataMapper& res, const LhsScalar* blockA, const RhsScalar* blockB,$/;"	f	class:Eigen::internal::gebp_kernel
operator ()	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void operator() (Index row, Index rows, Index col=0, Index cols=-1, GemmParallelInfo<Index>* info=0) const$/;"	f	struct:Eigen::internal::gemm_functor
operator ()	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  void operator()(ResScalar* _res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index size, Index depth, const ResScalar& alpha)$/;"	f	struct:Eigen::internal::tribb_kernel
operator ()	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockA, const Scalar* _lhs, Index lhsStride, Index cols, Index rows)$/;"	f	struct:Eigen::internal::symm_pack_lhs
operator ()	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockB, const Scalar* _rhs, Index rhsStride, Index rows, Index cols, Index k2)$/;"	f	struct:Eigen::internal::symm_pack_rhs
operator ()	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE Scalar operator()(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
operator ()	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE Scalar& operator()(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
operator ()	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE Scalar& operator()(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
operator ()	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  inline T operator()(const T& x) { return numext::conj(x); }$/;"	f	struct:Eigen::internal::conj_if
operator ()	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  inline const T& operator()(const T& x) { return x; }$/;"	f	struct:Eigen::internal::conj_if
operator ()	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Scalar operator() (Index row, Index col) const { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Scalar& operator() (Index row, Index col) { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::IncompleteLUT::keep_diag
operator ()	tools/eigen/Eigen/src/MetisSupport/MetisSupport.h	/^  void operator() (const MatrixType& A, PermutationType& matperm)$/;"	f	class:Eigen::MetisOrdering
operator ()	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^    void operator() (const MatrixType& mat, PermutationType& perm)$/;"	f	class:Eigen::COLAMDOrdering
operator ()	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const MatrixType& \/*mat*\/, PermutationType& perm)$/;"	f	class:Eigen::NaturalOrdering
operator ()	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const MatrixType& mat, PermutationType& perm)$/;"	f	class:Eigen::AMDOrdering
operator ()	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const SparseSelfAdjointView<SrcType, SrcUpLo>& mat, PermutationType& perm)$/;"	f	class:Eigen::AMDOrdering
operator ()	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::SimplicialCholeskyBase::keep_diag
operator ()	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline bool operator() (const Index&, const Index&, const Scalar& value) const$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
operator ()	tools/eigen/blas/level1_cplx_impl.h	/^  inline RealScalar operator() (const Scalar& a) const { return numext::norm1(a); }$/;"	f	struct:scalar_norm1_op
operator ()	tools/eigen/doc/examples/class_CwiseBinaryOp.cpp	/^  complex<Scalar> operator()(const Scalar& a, const Scalar& b) const { return complex<Scalar>(a,b); }$/;"	f	struct:MakeComplexOp
operator ()	tools/eigen/doc/examples/class_CwiseUnaryOp.cpp	/^  const Scalar operator()(const Scalar& x) const { return x<m_inf ? m_inf : (x>m_sup ? m_sup : x); }$/;"	f	struct:CwiseClampOp
operator ()	tools/eigen/test/denseLM.cpp	/^  int operator()(const VectorType& uv, VectorType& fvec)$/;"	f	struct:DenseLM
operator ()	tools/eigen/test/sparseLM.cpp	/^  int operator()(const VectorType& uv, VectorType& fvec)$/;"	f	struct:sparseGaussianTest
operator ()	tools/eigen/test/sparse_solver.h	/^  bool operator()(Index, Index col, const Scalar&) const {$/;"	f	struct:prune_column
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& operator()(Index index)$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& operator()(const array<Index, NumIndices>& indices)$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar& operator()(Index index) const$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar& operator()(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1)$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1, Index i2)$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1, Index i2, Index i3)$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1, Index i2, Index i3, Index i4)$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i0, Index i1) const$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i0, Index i1, Index i2) const$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i0, Index i1, Index i2, Index i3) const$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i0, Index i1, Index i2, Index i3, Index i4) const$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline Scalar& operator()(Index firstIndex, Index secondIndex, IndexTypes... otherIndices)$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    inline const Scalar& operator()(Index firstIndex, Index secondIndex, IndexTypes... otherIndices) const$/;"	f	class:Eigen::Tensor
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Scalar operator()(Index i) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Scalar operator()(Index i, Index j) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE Scalar operator()(Index row) const {$/;"	f	class:Eigen::internal::BaseTensorContractionMapper
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE Scalar operator()(Index row, Index col) const {$/;"	f	class:Eigen::internal::BaseTensorContractionMapper
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE int operator() (const int \/*kernelSize*\/) const {$/;"	f	struct:Eigen::GetKernelSize
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE int operator() (const int kernelSize) const {$/;"	f	struct:Eigen::GetKernelSize
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  EIGEN_ALWAYS_INLINE bool operator() () const {$/;"	f	struct:Eigen::internal::all_indices_known_statically
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  EIGEN_ALWAYS_INLINE bool operator() () const {$/;"	f	struct:Eigen::internal::indices_statically_known_to_increase
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  EIGEN_ALWAYS_INLINE bool operator() (const DenseIndex) const {$/;"	f	struct:Eigen::internal::index_known_statically
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  EIGEN_ALWAYS_INLINE bool operator() (const DenseIndex, const DenseIndex) const {$/;"	f	struct:Eigen::internal::index_statically_eq
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  EIGEN_ALWAYS_INLINE bool operator() (const DenseIndex, const DenseIndex) const {$/;"	f	struct:Eigen::internal::index_statically_gt
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  EIGEN_ALWAYS_INLINE bool operator() (const DenseIndex, const DenseIndex) const {$/;"	f	struct:Eigen::internal::index_statically_lt
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  EIGEN_ALWAYS_INLINE bool operator() (const DenseIndex, const DenseIndex) const {$/;"	f	struct:Eigen::internal::index_statically_ne
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  constexpr bool operator() () const {$/;"	f	struct:Eigen::internal::all_indices_known_statically
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  constexpr bool operator() () const {$/;"	f	struct:Eigen::internal::indices_statically_known_to_increase
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  constexpr bool operator() (const DenseIndex i, const DenseIndex value) const {$/;"	f	struct:Eigen::internal::index_statically_eq
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  constexpr bool operator() (const DenseIndex i, const DenseIndex value) const {$/;"	f	struct:Eigen::internal::index_statically_gt
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  constexpr bool operator() (const DenseIndex i, const DenseIndex value) const {$/;"	f	struct:Eigen::internal::index_statically_lt
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  constexpr bool operator() (const DenseIndex i, const DenseIndex value) const {$/;"	f	struct:Eigen::internal::index_statically_ne
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  constexpr bool operator() (const DenseIndex) const {$/;"	f	struct:Eigen::internal::index_known_statically
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index index)$/;"	f	class:Eigen::TensorFixedSize
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(const array<Index, NumIndices>& indices)$/;"	f	class:Eigen::TensorFixedSize
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index index) const$/;"	f	class:Eigen::TensorFixedSize
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::TensorFixedSize
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    inline Scalar& operator()(Index firstIndex, IndexTypes... otherIndices)$/;"	f	class:Eigen::TensorFixedSize
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    inline const Scalar& operator()(Index firstIndex, IndexTypes... otherIndices) const$/;"	f	class:Eigen::TensorFixedSize
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^   __device__ float operator()(Index, Index = 0) const {$/;"	f	class:Eigen::internal::NormalRandomGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T operator()(const T& x) const {$/;"	f	struct:Eigen::internal::scalar_sigmoid_op
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  T operator()(Index, Index = 0) const {$/;"	f	class:Eigen::internal::NormalRandomGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  T operator()(Index, Index = 0) const {$/;"	f	class:Eigen::internal::UniformRandomGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  T operator()(const array<Index, NumDims>& coordinates) const {$/;"	f	class:Eigen::internal::GaussianGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  __device__ double operator()(Index, Index = 0) const {$/;"	f	class:Eigen::internal::NormalRandomGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  __device__ std::complex<double> operator()(Index, Index = 0) const {$/;"	f	class:Eigen::internal::NormalRandomGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  __device__ std::complex<float> operator()(Index, Index = 0) const {$/;"	f	class:Eigen::internal::NormalRandomGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  double operator()(Index, Index = 0) const {$/;"	f	class:Eigen::internal::UniformRandomGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  float operator()(Index, Index = 0) const {$/;"	f	class:Eigen::internal::UniformRandomGenerator
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() () const {$/;"	f	struct:Eigen::internal::all_indices_known_statically
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() () const {$/;"	f	struct:Eigen::internal::indices_statically_known_to_increase
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (DenseIndex) const {$/;"	f	struct:Eigen::internal::index_known_statically
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (DenseIndex, DenseIndex) const {$/;"	f	struct:Eigen::internal::index_statically_eq
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (DenseIndex, DenseIndex) const {$/;"	f	struct:Eigen::internal::index_statically_gt
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (DenseIndex, DenseIndex) const {$/;"	f	struct:Eigen::internal::index_statically_lt
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (DenseIndex, DenseIndex) const {$/;"	f	struct:Eigen::internal::index_statically_ne
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (const DenseIndex i) const {$/;"	f	struct:Eigen::internal::index_known_statically
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (const DenseIndex i, const DenseIndex value) const {$/;"	f	struct:Eigen::internal::index_statically_eq
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (const DenseIndex i, const DenseIndex value) const {$/;"	f	struct:Eigen::internal::index_statically_gt
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (const DenseIndex i, const DenseIndex value) const {$/;"	f	struct:Eigen::internal::index_statically_lt
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool operator() (const DenseIndex i, const DenseIndex value) const {$/;"	f	struct:Eigen::internal::index_statically_ne
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index firstIndex, IndexTypes... otherIndices)$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1)$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1, Index i2)$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1, Index i2, Index i3)$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1, Index i2, Index i3, Index i4)$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index index)$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(const array<Index, NumIndices>& indices)$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index firstIndex, IndexTypes... otherIndices) const$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i0, Index i1) const$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i0, Index i1, Index i2) const$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i0, Index i1, Index i2, Index i3) const$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i0, Index i1, Index i2, Index i3, Index i4) const$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index index) const$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(const array<Index, NumIndices>& indices) const$/;"	f	class:Eigen::TensorMap
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC bool operator ()(Index val) const { return val > 4*1024*1024; }$/;"	f	struct:Eigen::__anon117::MemcpyTriggerForSlicing
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC bool operator ()(Index val) const { return val > threshold_; }$/;"	f	struct:Eigen::__anon117::MemcpyTriggerForSlicing
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i0, Index i1, Index i2, Index i3)$/;"	f	class:Eigen::TensorRef
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar operator()(Index firstIndex, IndexTypes... otherIndices) const$/;"	f	class:Eigen::TensorRef
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar operator()(Index i0, Index i1) const$/;"	f	class:Eigen::TensorRef
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar operator()(Index i0, Index i1, Index i2) const$/;"	f	class:Eigen::TensorRef
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar operator()(Index i0, Index i1, Index i2, Index i3) const$/;"	f	class:Eigen::TensorRef
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar operator()(Index i0, Index i1, Index i2, Index i3, Index i4) const$/;"	f	class:Eigen::TensorRef
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE const Scalar operator()(Index index) const$/;"	f	class:Eigen::TensorRef
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline internal::tensor_symmetry_value_setter<Tensor_, DynamicSGroup> operator()(Tensor_& tensor, std::array<typename Tensor_::Index, Tensor_::NumIndices> const& indices) const$/;"	f	class:Eigen::DynamicSGroup
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline internal::tensor_symmetry_value_setter<Tensor_, DynamicSGroup> operator()(Tensor_& tensor, typename Tensor_::Index firstIndex, IndexTypes... otherIndices) const$/;"	f	class:Eigen::DynamicSGroup
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    inline internal::tensor_symmetry_value_setter<Tensor_, StaticSGroup<Gen...>> operator()(Tensor_& tensor, std::array<typename Tensor_::Index, Tensor_::NumIndices> const& indices) const$/;"	f	class:Eigen::StaticSGroup
operator ()	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    inline internal::tensor_symmetry_value_setter<Tensor_, StaticSGroup<Gen...>> operator()(Tensor_& tensor, typename Tensor_::Index firstIndex, IndexTypes... otherIndices) const$/;"	f	class:Eigen::StaticSGroup
operator ()	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  void operator() (const InputType& x, ValueType* v, JacobianType* _jac=0) const$/;"	f	class:Eigen::AutoDiffJacobian
operator ()	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    CoeffType operator() (Index i) { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
operator ()	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    const CoeffType operator() (Index i) const { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
operator ()	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^    inline bool operator()(const VIPair &v1, const VIPair &v2) const { return v1.first[dim] < v2.first[dim]; }$/;"	f	struct:Eigen::KdBVH::VectorComparator
operator ()	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  void operator()(const ObjectList &objects, BoxIter boxBegin, BoxIter boxEnd, VolumeList &outBoxes)$/;"	f	struct:Eigen::internal::get_boxes_helper
operator ()	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  void operator()(const ObjectList &objects, int, int, VolumeList &outBoxes)$/;"	f	struct:Eigen::internal::get_boxes_helper
operator ()	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^  inline const ComplexScalar operator() (const ComplexScalar& x) const$/;"	f	struct:Eigen::internal::MatrixExponentialScalingOp
operator ()	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^  inline const RealScalar operator() (const RealScalar& x) const$/;"	f	struct:Eigen::internal::MatrixExponentialScalingOp
operator ()	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    const MatrixPowerParenthesesReturnValue<MatrixType> operator()(RealScalar p)$/;"	f	class:Eigen::MatrixPower
operator ()	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    EIGEN_STRONG_INLINE const _Scalar operator()(Index row, Index col ) const$/;"	f	class:Eigen::internal::companion
operator ()	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^  bool operator()(const Triplet& a, const Triplet& b)$/;"	f	struct:Eigen::internal::TripletComp
operator ()	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    Scalar& operator() (Index row, Index col)$/;"	f	class:Eigen::RandomSetter
operator ()	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^  typename Spline<_Scalar, _Dim, _Degree>::PointType Spline<_Scalar, _Dim, _Degree>::operator()(Scalar u) const$/;"	f	class:Eigen::Spline
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:Bennett5_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:BoxBOD_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH09_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH10_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH17_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:chwirut2_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:eckerle4_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:hahn1_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:lanczos1_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:misra1a_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:misra1d_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:rat42_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:rat43_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:thurber_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:hybrd_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:lmder_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:lmdif_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec)$/;"	f	struct:hybrj_functor
operator ()	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec)$/;"	f	struct:lmstr_functor
operator ()	tools/eigen/unsupported/test/NumericalDiff.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:my_functor
operator ()	tools/eigen/unsupported/test/autodiff.cpp	/^  void operator() (const InputType& x, ValueType* v, JacobianType* _j) const$/;"	f	struct:TestFunc1
operator ()	tools/eigen/unsupported/test/autodiff.cpp	/^  void operator() (const Matrix<T,InputsAtCompileTime,1>& x, Matrix<T,ValuesAtCompileTime,1>* _v) const$/;"	f	struct:TestFunc1
operator ()	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^  float operator()(const array<Eigen::DenseIndex, 1>& coordinates) const {$/;"	f	struct:Generator1D
operator ()	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^  float operator()(const array<Eigen::DenseIndex, 2>& coordinates) const {$/;"	f	struct:Generator2D
operator ()	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^  int operator()(Eigen::DenseIndex element_location, Eigen::DenseIndex \/*unused*\/ = 0) const {$/;"	f	struct:MyGenerator
operator ()	tools/eigen/unsupported/test/forward_adolc.cpp	/^  void operator() (const InputType& x, ValueType* v, JacobianType* _j) const$/;"	f	struct:TestFunc1
operator ()	tools/eigen/unsupported/test/forward_adolc.cpp	/^  void operator() (const Matrix<T,InputsAtCompileTime,1>& x, Matrix<T,ValuesAtCompileTime,1>* _v) const$/;"	f	struct:TestFunc1
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:Bennett5_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:BoxBOD_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH09_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH10_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH17_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:chwirut2_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:eckerle4_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:hahn1_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:lanczos1_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:misra1a_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:misra1d_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:rat42_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:rat43_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:thurber_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:lmder_functor
operator ()	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:lmdif_functor
operator *	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const MatrixBase<MatrixDerived> &matrix) const$/;"	f	class:Eigen::DiagonalBase
operator *	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar) const$/;"	f	class:Eigen::DiagonalBase
operator *	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar, const DiagonalBase& other)$/;"	f	class:Eigen::DiagonalBase
operator *	tools/eigen/Eigen/src/Core/DiagonalProduct.h	/^MatrixBase<Derived>::operator*(const DiagonalBase<DiagonalDerived> &a_diagonal) const$/;"	f	class:Eigen::MatrixBase
operator *	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
operator *	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
operator *	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const PermutationBase<Other>& other) const$/;"	f	class:Eigen::PermutationBase
operator *	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const Transpose<PermutationBase<Other> >& other) const$/;"	f	class:Eigen::PermutationBase
operator *	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const Transpose<PermutationBase<Other> >& other, const PermutationBase& perm)$/;"	f	class:Eigen::PermutationBase
operator *	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix) const$/;"	f	class:Eigen::Transpose
operator *	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix, const Transpose& trPerm)$/;"	f	class:Eigen::Transpose
operator *	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^operator*(const MatrixBase<MatrixDerived> &matrix,$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^operator*(const PermutationBase<PermutationDerived> &permutation,$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SelfAdjointView& rhs)$/;"	f	class:Eigen::SelfAdjointView
operator *	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SelfAdjointView
operator *	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const Scalar& s, const SelfAdjointView& mat)$/;"	f	class:Eigen::SelfAdjointView
operator *	tools/eigen/Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<OtherDerived>& matrix) const$/;"	f	class:Eigen::Transpose
operator *	tools/eigen/Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<OtherDerived>& matrix, const Transpose& trt)$/;"	f	class:Eigen::Transpose
operator *	tools/eigen/Eigen/src/Core/Transpositions.h	/^operator*(const MatrixBase<MatrixDerived> &matrix,$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/Core/Transpositions.h	/^operator*(const TranspositionsBase<TranspositionsDerived> &transpositions,$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const TriangularViewImpl& rhs)$/;"	f	class:Eigen::TriangularViewImpl
operator *	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::TriangularViewImpl
operator *	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    operator*(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator *	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  friend inline QuaternionType operator* (const QuaternionType& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const AngleAxis& other) const$/;"	f	class:Eigen::AngleAxis
operator *	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const QuaternionType& other) const$/;"	f	class:Eigen::AngleAxis
operator *	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Lhs>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Rhs>& rhs) const$/;"	f	class:Eigen::Homogeneous
operator *	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const Transform<Scalar,Dim,Mode,Options>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::operator* (const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
operator *	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  Vector2 operator* (const Vector2& vec) const$/;"	f	class:Eigen::Rotation2D
operator *	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D operator*(const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
operator *	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    friend inline Transform<Scalar,Dim,Affine> operator*(const DiagonalMatrix<Scalar,Dim>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType operator*(const EigenBase<OtherDerived>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::RotationBase
operator *	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim,Isometry> operator*(const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim,Mode> operator*(const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::RotationBase
operator *	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    operator*(const EigenBase<OtherDerived>& e) const$/;"	f	class:Eigen::RotationBase
operator *	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline Matrix<Scalar,Dim,Dim> operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::UniformScaling
operator *	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline Transform<Scalar,Dim,(int(Mode)==int(Isometry)?Affine:Mode)> operator* (const Transform<Scalar,Dim, Mode, Options>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling operator* (const UniformScaling& other) const$/;"	f	class:Eigen::UniformScaling
operator *	tools/eigen/Eigen/src/Geometry/Scaling.h	/^  inline typename internal::plain_matrix_type<Derived>::type operator* (const MatrixBase<Derived>& other) const$/;"	f	class:Eigen::UniformScaling
operator *	tools/eigen/Eigen/src/Geometry/Scaling.h	/^MatrixBase<Derived>::operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::MatrixBase
operator *	tools/eigen/Eigen/src/Geometry/Scaling.h	/^UniformScaling<Scalar>::operator* (const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &b) const$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^    operator * (const EigenBase<OtherDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^    operator * (const Transform<Scalar,Dim,OtherMode,OtherOptions>& other) const$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline TransformTimeDiagonalReturnType operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline const Transform operator * (const Transform& other) const$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^  operator * (const EigenBase<OtherDerived> &other) const$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const TranslationType& t) const$/;"	f	class:Eigen::Transform
operator *	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline AffineTransformType operator*(const EigenBase<OtherDerived>& linear, const Translation& t)$/;"	f	class:Eigen::Translation
operator *	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline IsometryTransformType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Translation
operator *	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Transform<Scalar,Dim,Mode> operator* (const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::Translation
operator *	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Translation operator* (const Translation& other) const$/;"	f	class:Eigen::Translation
operator *	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline VectorType operator* (const VectorType& other) const$/;"	f	class:Eigen::Translation
operator *	tools/eigen/Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const EigenBase<OtherDerived>& linear) const$/;"	f	class:Eigen::Translation
operator *	tools/eigen/Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const UniformScaling<Scalar>& other) const$/;"	f	class:Eigen::Translation
operator *	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    typename internal::matrix_type_times_scalar_type<Scalar, OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::HouseholderSequence
operator *	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^typename internal::matrix_type_times_scalar_type<typename VectorsType::Scalar,OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other, const HouseholderSequence<VectorsType,CoeffsType,Side>& h)$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation operator*(const JacobiRotation& other)$/;"	f	class:Eigen::JacobiRotation
operator *	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct<SPQRType, Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SPQRMatrixQReturnType
operator *	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct<SPQRType,Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SPQRMatrixQTransposeReturnType
operator *	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const DiagonalBase<OtherDerived> &lhs, const SparseMatrixBase& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const DiagonalBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const MatrixBase<OtherDerived> &lhs, const SparseMatrixBase& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^operator*( const PermutationBase<PermDerived>& perm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const PermutationBase<PermDerived>& perm)$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const Transpose<PermutationBase<PermDerived> >& tperm)$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const Transpose<PermutationBase<PermDerived> >& tperm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	tools/eigen/Eigen/src/SparseCore/SparseProduct.h	/^SparseMatrixBase<Derived>::operator*(const SparseMatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const SparseMatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const SparseMatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct<SparseQRType, Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
operator *	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct<SparseQRType,Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SparseQRMatrixQTransposeReturnType
operator *	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator*(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator *	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const Scalar& scalar) const$/;"	f
operator *	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const Scalar& scalar, const StorageBaseType& matrix)$/;"	f
operator *	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const std::complex<Scalar>& scalar) const$/;"	f
operator *	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const std::complex<Scalar>& scalar, const StorageBaseType& matrix)$/;"	f
operator *	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions operator*(const ScalarWithExceptions& other) const$/;"	f	class:ScalarWithExceptions
operator *	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator* (Scalar rhs) const {$/;"	f	class:Eigen::TensorBase
operator *	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator*(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator *	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator*(const AutoDiffScalar<OtherDerType>& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator *	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator*(const Scalar& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator *	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator*(const Scalar& other, const AutoDiffScalar& a)$/;"	f	class:Eigen::AutoDiffScalar
operator *	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  operator*(const Real& other) const$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator *	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  operator*(const Real& other, const AutoDiffScalar<_DerType>& a)$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator *	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator*(const BaseScalar& other) const$/;"	f	class:Eigen::AutoDiffVector
operator *	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator*(const Scalar& other, const AutoDiffVector& v)$/;"	f	class:Eigen::AutoDiffVector
operator *	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^SkylineMatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const {$/;"	f	class:Eigen::SkylineMatrixBase
operator *	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockSparseTimeDenseProduct<BlockSparseMatrix, VecType> operator*(const VecType& lhs) const$/;"	f	class:Eigen::BlockSparseMatrix
operator *	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    operator*(const Lhs& lhs, const mpreal& rhs){ return mpreal(rhs) *= lhs;    } $/;"	f	namespace:mpfr
operator *	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    operator*(const mpreal& lhs, const Rhs& rhs){ return mpreal(lhs) *= rhs;    }$/;"	f	namespace:mpfr
operator *	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator*(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
operator *=	tools/eigen/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator*=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator *=	tools/eigen/Eigen/src/Core/MatrixBase.h	/^MatrixBase<Derived>::operator*=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator *=	tools/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h	/^inline Derived& DenseBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator *=	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator*=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = derived().nestedExpression() * other; }$/;"	f	class:Eigen::TriangularViewImpl
operator *=	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator*=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator *=	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator*= (const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator *=	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D& operator*=(const Rotation2D& other)$/;"	f	class:Eigen::Rotation2D
operator *=	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const DiagonalMatrix<Scalar,Dim>& s) { linear() *= s; return *this; }$/;"	f	class:Eigen::Transform
operator *=	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const EigenBase<OtherDerived>& other) { return *this = *this * other; }$/;"	f	class:Eigen::Transform
operator *=	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const RotationBase<Derived,Dim>& r) { return rotate(r.toRotationMatrix()); }$/;"	f	class:Eigen::Transform
operator *=	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const TranslationType& t) { return translate(t.vector()); }$/;"	f	class:Eigen::Transform
operator *=	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const UniformScaling<Scalar>& s) { return scale(s.factor()); }$/;"	f	class:Eigen::Transform
operator *=	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator *=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    Derived& operator*=(const OtherDerived& other) {$/;"	f	class:Eigen::TensorBase
operator *=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator*=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator *=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator*=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator *=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  inline AutoDiffScalar<_DerType>& operator*=(const Scalar& other)$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator *=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector& operator*=(const AutoDiffVector<OtherValueType,OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
operator *=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector& operator*=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffVector
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*= (const mpreal& v)$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const double v)$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const int v)$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const int64_t  u){    *this *= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;    }$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const long double v)$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const long int v)$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const mpq_t v)$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const mpz_t v)$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const uint64_t u){    *this *= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;    }$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const unsigned int v)$/;"	f	class:mpfr::mpreal
operator *=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const unsigned long int v)$/;"	f	class:mpfr::mpreal
operator +	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    operator+(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator +	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator+(const Scalar& scalar) const$/;"	f
operator +	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator+(const Scalar& scalar,const EIGEN_CURRENT_STORAGE_BASE_CLASS<Derived>& other)$/;"	f
operator +	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions operator+(const ScalarWithExceptions& other) const$/;"	f	class:ScalarWithExceptions
operator +	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator+ (Scalar rhs) const {$/;"	f	class:Eigen::TensorBase
operator +	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator+(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator +	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline const AutoDiffScalar<DerType&> operator+(const Scalar& a, const AutoDiffScalar& b)$/;"	f	class:Eigen::AutoDiffScalar
operator +	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline const AutoDiffScalar<DerType&> operator+(const Scalar& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator +	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator+(const AutoDiffScalar<OtherDerType>& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator +	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  friend inline const AutoDiffScalar<DerType&> operator+(const Real& a, const AutoDiffScalar<_DerType>& b)$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator +	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  inline const AutoDiffScalar<DerType&> operator+(const Real& other) const$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator +	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator+(const AutoDiffVector<OtherValueType,OtherJacobianType>& other) const$/;"	f	class:Eigen::AutoDiffVector
operator +	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    operator+(const Lhs& lhs, const mpreal& rhs){ return mpreal(rhs) += lhs;    } $/;"	f	namespace:mpfr
operator +	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    operator+(const mpreal& lhs, const Rhs& rhs){ return mpreal(lhs) += rhs;    }$/;"	f	namespace:mpfr
operator +	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal::operator+()const    {    return mpreal(*this); }$/;"	f	class:mpfr::mpreal
operator +	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator+(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
operator ++	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE InnerIterator& operator++()   { m_iter.operator++(); return *this; }$/;"	f	class:Eigen::InnerIterator
operator ++	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector& operator++() { m_inner++; return *this; }$/;"	f	class:Eigen::internal::inner_iterator_selector
operator ++	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    Iterator& operator++()$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline OuterVectorInnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++() { ++m_sparseIter; return *this; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::TriangularViewImpl::InnerIterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::SparseVector::InnerIterator
operator ++	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline InnerIterator& operator++()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
operator ++	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void operator ++() { (*this)++; }$/;"	f	class:Eigen::IterationController
operator ++	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void operator ++(int) { m_nit++; m_written = false; m_resadd += m_res; }$/;"	f	class:Eigen::IterationController
operator ++	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline InnerLowerIterator & operator++() {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
operator ++	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline InnerUpperIterator & operator++() {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
operator ++	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline BlockInnerIterator& operator++() {m_id++; return *this; }$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
operator ++	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline InnerIterator& operator++()$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
operator ++	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline MatrixMarketIterator& operator++()$/;"	f	class:Eigen::MatrixMarketIterator
operator ++	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal::operator++ (int)$/;"	f	class:mpfr::mpreal
operator ++	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator++() $/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator+=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator +=	tools/eigen/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator+=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator +=	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator+=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator +=	tools/eigen/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator+=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator +=	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator+=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator +=	tools/eigen/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator +=	tools/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h	/^inline Derived& ArrayBase<Derived>::operator+=(const Scalar& other)$/;"	f	class:Eigen::ArrayBase
operator +=	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator+=(const DenseBase<Other>& other) {$/;"	f	class:Eigen::TriangularViewImpl
operator +=	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator+=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator +=	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator+=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator +=	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator+=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator +=	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions& operator+=(const ScalarWithExceptions& other)$/;"	f	class:ScalarWithExceptions
operator +=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    Derived& operator+=(const OtherDerived& other) {$/;"	f	class:Eigen::TensorBase
operator +=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    EIGEN_STRONG_INLINE TensorDevice& operator+=(const OtherDerived& other) {$/;"	f	class:Eigen::TensorDevice
operator +=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator+=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator +=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator+=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator +=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  inline AutoDiffScalar<_DerType>& operator+=(const Real& other)$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator +=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator+=(const AutoDiffVector<OtherValueType,OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
operator +=	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline InnerLowerIterator & operator+=(Index shift) {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
operator +=	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline InnerUpperIterator & operator+=(Index shift) {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+= (const double u)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+= (const long double u)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const int u)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const int64_t  u){    *this += mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;    }$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const long int u)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const mpf_t u)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const mpq_t u)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const mpreal& v)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const mpz_t u)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const uint64_t u){    *this += mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;    }$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const unsigned int u)$/;"	f	class:mpfr::mpreal
operator +=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const unsigned long int u)$/;"	f	class:mpfr::mpreal
operator ,	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
operator ,	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
operator -	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    operator-(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator -	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator-(const Scalar& scalar) const$/;"	f
operator -	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator-(const Scalar& scalar,const EIGEN_CURRENT_STORAGE_BASE_CLASS<Derived>& other)$/;"	f
operator -	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator-() const { return NegativeReturnType(derived()); }$/;"	f
operator -	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions operator-(const ScalarWithExceptions& other) const$/;"	f	class:ScalarWithExceptions
operator -	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator- (Scalar rhs) const {$/;"	f	class:Eigen::TensorBase
operator -	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator-() const {$/;"	f	class:Eigen::TensorBase
operator -	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator-(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator -	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline const AutoDiffScalar<DerType&> operator-(const Scalar& b) const$/;"	f	class:Eigen::AutoDiffScalar
operator -	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator-() const$/;"	f	class:Eigen::AutoDiffScalar
operator -	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator-(const AutoDiffScalar<OtherDerType>& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator -	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator-(const Scalar& a, const AutoDiffScalar& b)$/;"	f	class:Eigen::AutoDiffScalar
operator -	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator-() const$/;"	f	class:Eigen::AutoDiffVector
operator -	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator-(const AutoDiffVector<OtherValueType,OtherJacobianType>& other) const$/;"	f	class:Eigen::AutoDiffVector
operator -	tools/eigen/unsupported/doc/examples/FFT.cpp	/^vector<T> operator-(const vector<T> & a,const vector<T> & b )$/;"	f
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    operator-(const Lhs& lhs, const mpreal& rhs){ return mpreal(lhs) -= rhs;    }$/;"	f	namespace:mpfr
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    operator-(const mpreal& lhs, const Rhs& rhs){ return mpreal(lhs) -= rhs;    }$/;"	f	namespace:mpfr
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal::operator-()const$/;"	f	class:mpfr::mpreal
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const double  b, const mpreal& a)$/;"	f	namespace:mpfr
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const int b, const mpreal& a)$/;"	f	namespace:mpfr
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const long int b, const mpreal& a)$/;"	f	namespace:mpfr
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const unsigned int b, const mpreal& a)$/;"	f	namespace:mpfr
operator -	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const unsigned long int b, const mpreal& a)$/;"	f	namespace:mpfr
operator --	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline ReverseInnerIterator& operator--() { --m_id; return *this; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
operator --	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator& operator--()$/;"	f	class:Eigen::TriangularViewImpl::ReverseInnerIterator
operator --	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline ReverseInnerIterator& operator--() { m_id--; return *this; }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
operator --	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal::operator-- (int)$/;"	f	class:mpfr::mpreal
operator --	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator--() $/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator-=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator -=	tools/eigen/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator-=(const ArrayBase<OtherDerived> &other)$/;"	f	class:Eigen::ArrayBase
operator -=	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator-=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator -=	tools/eigen/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator-=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator -=	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator-=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator -=	tools/eigen/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator -=	tools/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h	/^inline Derived& ArrayBase<Derived>::operator-=(const Scalar& other)$/;"	f	class:Eigen::ArrayBase
operator -=	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator-=(const DenseBase<Other>& other) {$/;"	f	class:Eigen::TriangularViewImpl
operator -=	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator-=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator -=	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator-=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator -=	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator-=(const SparseMatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator -=	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions& operator-=(const ScalarWithExceptions& other)$/;"	f	class:ScalarWithExceptions
operator -=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    Derived& operator-=(const OtherDerived& other) {$/;"	f	class:Eigen::TensorBase
operator -=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    EIGEN_STRONG_INLINE TensorDevice& operator-=(const OtherDerived& other) {$/;"	f	class:Eigen::TensorDevice
operator -=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator-=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator -=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator-=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator -=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator-=(const AutoDiffVector<OtherValueType,OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const double v)$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const int v)$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const int64_t  u){    *this -= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;    }$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const long double v)$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const long int v)$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const mpq_t v)$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const mpreal& v)$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const mpz_t v)$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const uint64_t u){    *this -= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;    }$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const unsigned int v)$/;"	f	class:mpfr::mpreal
operator -=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const unsigned long int v)$/;"	f	class:mpfr::mpreal
operator /	tools/eigen/Eigen/src/Core/GlobalFunctions.h	/^    operator\/(const typename Derived::Scalar& s, const Eigen::ArrayBase<Derived>& a)$/;"	f	namespace:Eigen
operator /	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    operator\/(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator /	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator\/(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator /	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator\/(const Scalar& scalar) const$/;"	f
operator /	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator\/ (Scalar rhs) const {$/;"	f	class:Eigen::TensorBase
operator /	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator\/(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator /	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^static EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T operator \/ (const T& numerator, const TensorIntDivisor<T>& divisor) {$/;"	f	namespace:Eigen::internal
operator /	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator\/(const AutoDiffScalar<OtherDerType>& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator /	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator\/(const Scalar& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator /	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator\/(const Scalar& other, const AutoDiffScalar& a)$/;"	f	class:Eigen::AutoDiffScalar
operator /	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    operator\/(const Lhs& lhs, const mpreal& rhs){ return mpreal(lhs) \/= rhs;    }$/;"	f	namespace:mpfr
operator /	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    operator\/(const mpreal& lhs, const Rhs& rhs){ return mpreal(lhs) \/= rhs;    }$/;"	f	namespace:mpfr
operator /	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const double  b, const mpreal& a)$/;"	f	namespace:mpfr
operator /	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const int b, const mpreal& a)$/;"	f	namespace:mpfr
operator /	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const long int b, const mpreal& a)$/;"	f	namespace:mpfr
operator /	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
operator /	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const unsigned int b, const mpreal& a)$/;"	f	namespace:mpfr
operator /	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const unsigned long int b, const mpreal& a)$/;"	f	namespace:mpfr
operator /=	tools/eigen/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator\/=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator /=	tools/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h	/^inline Derived& DenseBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator /=	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator\/=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = derived().nestedExpression() \/ other; }$/;"	f	class:Eigen::TriangularViewImpl
operator /=	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator\/=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator /=	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator /=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    Derived& operator\/=(const OtherDerived& other) {$/;"	f	class:Eigen::TensorBase
operator /=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator\/=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator /=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator\/=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const double v)$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const int v)$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const int64_t  u){    *this \/= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;    }$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const long double v)$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const long int v)$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const mpq_t v)$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const mpreal& v)$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const mpz_t v)$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const uint64_t u){    *this \/= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;    }$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const unsigned int v)$/;"	f	class:mpfr::mpreal
operator /=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const unsigned long int v)$/;"	f	class:mpfr::mpreal
operator <	tools/SimpleIni.h	/^        bool operator<(const Entry & rhs) const { return LoadOrder()(*this, rhs); }$/;"	f	struct:CSimpleIniTempl::Entry
operator <	tools/eigen/bench/btl/data/mean.cxx	/^  bool operator < ( const Lib_Mean &right) const $/;"	f	class:Lib_Mean
operator <	tools/eigen/scripts/eigen_gen_credits.cpp	/^  bool operator < (const contributor& other)$/;"	f	struct:contributor
operator <	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator<(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator <	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator< (const Scalar& a, const AutoDiffScalar& b) { return a <  b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator <	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator< (const Scalar& other) const  { return m_value <  other; }$/;"	f	class:Eigen::AutoDiffScalar
operator <	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator< (const AutoDiffScalar<OtherDerType>& b) const  { return m_value <  b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator <	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator <  (const mpreal& a, const mpreal& b){    return (mpfr_less_p          (a.mpfr_srcptr(),b.mpfr_srcptr()) !=0 );    }$/;"	f	namespace:mpfr
operator <<	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^DenseBase<Derived>::operator<<(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator <<	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^inline CommaInitializer<Derived> DenseBase<Derived>::operator<< (const Scalar& s)$/;"	f	class:Eigen::DenseBase
operator <<	tools/eigen/Eigen/src/Core/IO.h	/^    friend std::ostream & operator << (std::ostream & s, const WithFormat& wf)$/;"	f	class:Eigen::WithFormat
operator <<	tools/eigen/Eigen/src/Core/IO.h	/^std::ostream & operator <<$/;"	f	namespace:Eigen
operator <<	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet16uc & v)$/;"	f	namespace:Eigen::internal
operator <<	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2d & v)$/;"	f	namespace:Eigen::internal
operator <<	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4f & v)$/;"	f	namespace:Eigen::internal
operator <<	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4i & v)$/;"	f	namespace:Eigen::internal
operator <<	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4ui & v)$/;"	f	namespace:Eigen::internal
operator <<	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrix& m)$/;"	f	class:Eigen::SparseMatrix
operator <<	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrixBase& m)$/;"	f	class:Eigen::SparseMatrixBase
operator <<	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseVector& m)$/;"	f	class:Eigen::SparseVector
operator <<	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  friend ostream& operator<<(ostream& s, const results_entry_t& entry)$/;"	f	struct:evaluate_defaults_action_t
operator <<	tools/eigen/bench/analyze-blocking-sizes.cpp	/^ostream& operator<<(ostream& s, const size_triple_t& t)$/;"	f
operator <<	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIO.h	/^std::ostream& operator << (std::ostream& os, const TensorBase<T, ReadOnlyAccessors>& expr) {$/;"	f	namespace:Eigen
operator <<	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend  std::ostream & operator << (std::ostream & s, const AutoDiffScalar& a)$/;"	f	class:Eigen::AutoDiffScalar
operator <<	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    friend std::ostream & operator <<(std::ostream & s, const SkylineMatrix & m) {$/;"	f	class:Eigen::SkylineMatrix
operator <<	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    friend std::ostream & operator <<(std::ostream & s, const SkylineMatrixBase& m) {$/;"	f	class:Eigen::SkylineMatrixBase
operator <<	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    friend std::ostream & operator << (std::ostream & s, const BlockSparseMatrix& m)$/;"	f	class:Eigen::BlockSparseMatrix
operator <<	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator<<(const mpreal& v, const int k)$/;"	f	namespace:mpfr
operator <<	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator<<(const mpreal& v, const long int k)$/;"	f	namespace:mpfr
operator <<	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator<<(const mpreal& v, const unsigned int k)$/;"	f	namespace:mpfr
operator <<	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator<<(const mpreal& v, const unsigned long int k)$/;"	f	namespace:mpfr
operator <<	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline std::ostream& operator<<(std::ostream& os, const mpreal& v)$/;"	f	namespace:mpfr
operator <<=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator<<=(const int u)$/;"	f	class:mpfr::mpreal
operator <<=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator<<=(const long int u)$/;"	f	class:mpfr::mpreal
operator <<=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator<<=(const unsigned int u)$/;"	f	class:mpfr::mpreal
operator <<=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator<<=(const unsigned long int u)$/;"	f	class:mpfr::mpreal
operator <=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator<=(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator <=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator<=(const Scalar& a, const AutoDiffScalar& b) { return a <= b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator <=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator<=(const Scalar& other) const  { return m_value <= other; }$/;"	f	class:Eigen::AutoDiffScalar
operator <=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator<=(const AutoDiffScalar<OtherDerType>& b) const  { return m_value <= b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator <=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator <= (const mpreal& a, const mpreal& b){    return (mpfr_lessequal_p     (a.mpfr_srcptr(),b.mpfr_srcptr()) !=0 );    }$/;"	f	namespace:mpfr
operator =	tools/SimpleIni.h	/^        Converter & operator=(const Converter & rhs) {$/;"	f	class:CSimpleIniTempl::Converter
operator =	tools/SimpleIni.h	/^        Entry & operator=(const Entry & rhs) {$/;"	f	struct:CSimpleIniTempl::Entry
operator =	tools/SimpleIni.h	/^    SI_ConvertA & operator=(const SI_ConvertA & rhs) {$/;"	f	class:SI_ConvertA
operator =	tools/SimpleIni.h	/^    SI_ConvertW & operator=(const SI_ConvertW & rhs) {$/;"	f	class:SI_ConvertW
operator =	tools/eigen/Eigen/src/Core/Array.h	/^    Array& operator=(Array&& other)$/;"	f	class:Eigen::Array
operator =	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const Array& other)$/;"	f	class:Eigen::Array
operator =	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::Array
operator =	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Array
operator =	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const Scalar &value)$/;"	f	class:Eigen::Array
operator =	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    Derived& operator=(const ArrayBase& other)$/;"	f	class:Eigen::ArrayBase
operator =	tools/eigen/Eigen/src/Core/ArrayBase.h	/^    Derived& operator=(const Scalar &value)$/;"	f	class:Eigen::ArrayBase
operator =	tools/eigen/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase& other)$/;"	f	class:Eigen::DenseBase
operator =	tools/eigen/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	tools/eigen/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	tools/eigen/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	tools/eigen/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)$/;"	f	class:Eigen::MatrixBase
operator =	tools/eigen/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    DenseStorage& operator=(DenseStorage&& other)$/;"	f	class:Eigen::DenseStorage
operator =	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    DenseStorage& operator=(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
operator =	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage& other) $/;"	f	class:Eigen::DenseStorage
operator =	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
operator =	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage&) { return *this; }$/;"	f	class:Eigen::DenseStorage
operator =	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalMatrix& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	tools/eigen/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator =	tools/eigen/Eigen/src/Core/MapBase.h	/^    Derived& operator=(const MapBase& other)$/;"	f	class:Eigen::MapBase
operator =	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
operator =	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
operator =	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const Matrix& other)$/;"	f	class:Eigen::Matrix
operator =	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::Matrix
operator =	tools/eigen/Eigen/src/Core/Matrix.h	/^    Matrix& operator=(Matrix&& other)$/;"	f	class:Eigen::Matrix
operator =	tools/eigen/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase& other)$/;"	f	class:Eigen::PermutationBase
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& tr)$/;"	f	class:Eigen::PermutationBase
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::Map
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::Map
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationMatrix& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
operator =	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
operator =	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const PlainObjectBase& other)$/;"	f	class:Eigen::PlainObjectBase
operator =	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::PlainObjectBase
operator =	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    PlainObjectBase& operator=(PlainObjectBase&& other)$/;"	f	class:Eigen::PlainObjectBase
operator =	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^      Unusable& operator=(const Unusable&) {return *this;}$/;"	f	class:Eigen::ReturnByValue::Unusable
operator =	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^Derived& DenseBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Map& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Map
operator =	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const Transpositions& other)$/;"	f	class:Eigen::Transpositions
operator =	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
operator =	tools/eigen/Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	tools/eigen/Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsWrapper& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& operator=(const TriangularView &other)$/;"	f	class:Eigen::TriangularView
operator =	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& operator=(const TriangularViewImpl& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^TriangularViewImpl<MatrixType, Mode, Dense>::operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^TriangularViewImpl<MatrixType, Mode, Dense>::operator=(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator =	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper& operator=(const T &v) {$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator =	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
operator =	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const QuaternionBase<QuatDerived>& q)$/;"	f	class:Eigen::AngleAxis
operator =	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const AngleAxisType& aa)$/;"	f	class:Eigen::QuaternionBase
operator =	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE QuaternionBase<Derived>& QuaternionBase<Derived>::operator=(const QuaternionBase<Derived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^inline Derived& QuaternionBase<Derived>::operator=(const MatrixBase<MatrixDerived>& xpr)$/;"	f	class:Eigen::QuaternionBase
operator =	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^::operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
operator =	tools/eigen/Eigen/src/Geometry/Transform.h	/^  Transform& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator=(const Transform& other)$/;"	f	class:Eigen::Transform
operator =	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QMatrix& other)$/;"	f	class:Eigen::Transform
operator =	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QTransform& other)$/;"	f	class:Eigen::Transform
operator =	tools/eigen/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const RotationBase<Derived,Dim>& r)$/;"	f	class:Eigen::Transform
operator =	tools/eigen/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const TranslationType& t)$/;"	f	class:Eigen::Transform
operator =	tools/eigen/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
operator =	tools/eigen/Eigen/src/Geometry/Translation.h	/^  Translation& operator=(const Translation& other)$/;"	f	class:Eigen::Translation
operator =	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage& operator=(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
operator =	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^Derived& SparseMatrixBase<Derived>::operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^Derived& SparseMatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^inline Derived& SparseMatrixBase<Derived>::operator=(const Derived& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^inline Derived& SparseMatrixBase<Derived>::operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockType& operator=(const BlockType& other)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
operator =	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockType& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
operator =	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
operator =	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE SparseMatrix<Scalar,_Options,_Index>& SparseMatrix<Scalar,_Options,_Index>::operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView<SrcMatrixType,SrcMode>& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSymmetricPermutationProduct<SrcMatrixType,SrcMode>& permutedMatrix)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
operator =	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseVector
operator =	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
operator =	tools/eigen/Eigen/src/StlSupport/details.h	/^    inline T& operator=(const OtherT& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	tools/eigen/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support& operator=(const workaround_msvc_stl_support& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix& operator=(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
operator =	tools/eigen/demos/opengl/camera.cpp	/^Camera& Camera::operator=(const Camera& other)$/;"	f	class:Camera
operator =	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  EulerAngles& operator=(const Matrix3& m)$/;"	f	class:EulerAngles
operator =	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  EulerAngles& operator=(const QuaternionType& q)$/;"	f	class:EulerAngles
operator =	tools/eigen/doc/examples/CustomizingEigen_Inheritance.cpp	/^    MyVectorType& operator=(const Eigen::MatrixBase <OtherDerived>& other)$/;"	f	class:MyVectorType
operator =	tools/eigen/test/exceptions.cpp	/^    ScalarWithExceptions& operator=(const ScalarWithExceptions& other)$/;"	f	class:ScalarWithExceptions
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Tensor& operator=(const OtherDerived& other)$/;"	f	class:Eigen::Tensor
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_STRONG_INLINE Tensor& operator=(const Tensor& other)$/;"	f	class:Eigen::Tensor
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_STRONG_INLINE TensorChippingOp& operator = (const OtherDerived& other)$/;"	f	class:Eigen::TensorChippingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_STRONG_INLINE TensorChippingOp& operator = (const TensorChippingOp& other)$/;"	f	class:Eigen::TensorChippingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    EIGEN_STRONG_INLINE TensorConcatenationOp& operator = (const OtherDerived& other)$/;"	f	class:Eigen::TensorConcatenationOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    EIGEN_STRONG_INLINE TensorConcatenationOp& operator = (const TensorConcatenationOp& other)$/;"	f	class:Eigen::TensorConcatenationOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h	/^    EIGEN_STRONG_INLINE TensorDevice& operator=(const OtherDerived& other) {$/;"	f	class:Eigen::TensorDevice
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC DSizes& operator = (const array<DenseIndex, NumDims>& other) {$/;"	f	struct:Eigen::DSizes
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  template <typename T> Sizes& operator = (const T& \/*other*\/) {$/;"	f	struct:Eigen::Sizes
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE TensorFixedSize& operator=(const OtherDerived& other)$/;"	f	class:Eigen::TensorFixedSize
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE TensorFixedSize& operator=(const TensorFixedSize& other)$/;"	f	class:Eigen::TensorFixedSize
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    EIGEN_STRONG_INLINE TensorLayoutSwapOp& operator = (const OtherDerived& other)$/;"	f	class:Eigen::TensorLayoutSwapOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^    EIGEN_STRONG_INLINE TensorLayoutSwapOp& operator = (const TensorLayoutSwapOp& other)$/;"	f	class:Eigen::TensorLayoutSwapOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Self& operator=(const Self& other)$/;"	f	class:Eigen::TensorMap
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    Self& operator=(const OtherDerived& other)$/;"	f	class:Eigen::TensorMap
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  Tuple& operator= (const Tuple& rhs) {$/;"	f	struct:Eigen::Tuple
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    EIGEN_STRONG_INLINE TensorReshapingOp& operator = (const OtherDerived& other)$/;"	f	class:Eigen::TensorReshapingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    EIGEN_STRONG_INLINE TensorReshapingOp& operator = (const TensorReshapingOp& other)$/;"	f	class:Eigen::TensorReshapingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    EIGEN_STRONG_INLINE TensorSlicingOp& operator = (const OtherDerived& other)$/;"	f	class:Eigen::TensorSlicingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    EIGEN_STRONG_INLINE TensorSlicingOp& operator = (const TensorSlicingOp& other)$/;"	f	class:Eigen::TensorSlicingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE TensorRef& operator = (const Expression& expr) {$/;"	f	class:Eigen::TensorRef
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    TensorRef& operator = (const TensorRef& other) {$/;"	f	class:Eigen::TensorRef
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    EIGEN_STRONG_INLINE TensorReverseOp& operator = (const OtherDerived& other)$/;"	f	class:Eigen::TensorReverseOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    EIGEN_STRONG_INLINE TensorReverseOp& operator = (const TensorReverseOp& other)$/;"	f	class:Eigen::TensorReverseOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    EIGEN_STRONG_INLINE TensorShufflingOp& operator = (const OtherDerived& other)$/;"	f	class:Eigen::TensorShufflingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    EIGEN_STRONG_INLINE TensorShufflingOp& operator = (const TensorShufflingOp& other)$/;"	f	class:Eigen::TensorShufflingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC Self& operator=(const Self& other)$/;"	f	class:Eigen::TensorStorage
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    EIGEN_STRONG_INLINE TensorStridingOp& operator = (const OtherDerived& other)$/;"	f	class:Eigen::TensorStridingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    EIGEN_STRONG_INLINE TensorStridingOp& operator = (const TensorStridingOp& other)$/;"	f	class:Eigen::TensorStridingOp
operator =	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroup& operator=(DynamicSGroup&& o) { m_numIndices = o.m_numIndices; std::swap(m_elements, o.m_elements); m_generators = o.m_generators; m_globalFlags = o.m_globalFlags; return *this; }$/;"	f	class:Eigen::DynamicSGroup
operator =	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroup& operator=(const DynamicSGroup& o) { m_numIndices = o.m_numIndices; m_elements = o.m_elements; m_generators = o.m_generators; m_globalFlags = o.m_globalFlags; return *this; }$/;"	f	class:Eigen::DynamicSGroup
operator =	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroupFromTemplateArgs<Gen...>& operator=(DynamicSGroupFromTemplateArgs<Gen...>&& o) { DynamicSGroup::operator=(o); return *this; }$/;"	f	class:Eigen::DynamicSGroupFromTemplateArgs
operator =	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline DynamicSGroupFromTemplateArgs<Gen...>& operator=(const DynamicSGroupFromTemplateArgs<Gen...>& o) { DynamicSGroup::operator=(o); return *this; }$/;"	f	class:Eigen::DynamicSGroupFromTemplateArgs
operator =	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    inline SGroup<Gen...>& operator=(SGroup<Gen...>&& other) { Base::operator=(other); return *this; }$/;"	f	class:Eigen::SGroup
operator =	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    inline SGroup<Gen...>& operator=(const SGroup<Gen...>& other) { Base::operator=(other); return *this; }$/;"	f	class:Eigen::SGroup
operator =	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    inline tensor_symmetry_value_setter<Tensor_, Symmetry_, Flags>& operator=(Scalar const& value)$/;"	f	class:Eigen::internal::tensor_symmetry_value_setter
operator =	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator=(const AutoDiffScalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator =	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator =	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector& operator=(const AutoDiffVector& other)$/;"	f	class:Eigen::AutoDiffVector
operator =	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector& operator=(const AutoDiffVector<OtherValueType, OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
operator =	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^            inline SkylineMatrix & operator=(const SkylineMatrixBase<OtherDerived>& other) {$/;"	f	class:Eigen::SkylineMatrix
operator =	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix & operator=(const SkylineMatrix & other) {$/;"	f	class:Eigen::SkylineMatrix
operator =	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^            inline Derived & operator=(const SkylineMatrixBase<OtherDerived>& other) {$/;"	f	class:Eigen::SkylineMatrixBase
operator =	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Derived & operator=(const Derived& other) {$/;"	f	class:Eigen::SkylineMatrixBase
operator =	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    SkylineStorage & operator=(const SkylineStorage& other) {$/;"	f	class:Eigen::SkylineStorage
operator =	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    BlockSparseMatrix& operator=(BlockSparseMatrix other)$/;"	f	class:Eigen::BlockSparseMatrix
operator =	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline BlockSparseMatrix& operator=(const MatrixType& spmat)$/;"	f	class:Eigen::BlockSparseMatrix
operator =	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline DynamicSparseMatrix& operator=(const DynamicSparseMatrix& other)$/;"	f	class:Eigen::DynamicSparseMatrix
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const char* s)$/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const double v)                $/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const int v)$/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const long double v)        $/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const long int v)            $/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const mpf_t v)$/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const mpq_t v)$/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const mpreal& v)$/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const mpz_t v)$/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const std::string& s)$/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const unsigned int v)        $/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const unsigned long int v)    $/;"	f	class:mpfr::mpreal
operator =	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(mpreal&& other)$/;"	f	class:mpfr::mpreal
operator ==	tools/eigen/Eigen/src/Core/MatrixBase.h	/^    inline bool operator==(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator ==	tools/eigen/test/exceptions.cpp	/^    bool operator==(const ScalarWithExceptions& other) const$/;"	f	class:ScalarWithExceptions
operator ==	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator==(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator ==	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^bool operator==(const Tuple<U, V>& x, const Tuple<U, V>& y) {$/;"	f	namespace:Eigen
operator ==	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator==(const Scalar& a, const AutoDiffScalar& b) { return a == b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator ==	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator==(const Scalar& other) const  { return m_value == other; }$/;"	f	class:Eigen::AutoDiffScalar
operator ==	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator==(const AutoDiffScalar<OtherDerType>& b) const  { return m_value == b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator ==	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const double b            ){    return (mpfr_cmp_d (a.mpfr_srcptr(),b) == 0 );    }$/;"	f	namespace:mpfr
operator ==	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const int b               ){    return (mpfr_cmp_si(a.mpfr_srcptr(),b) == 0 );    }$/;"	f	namespace:mpfr
operator ==	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const long double b       ){    return (mpfr_cmp_ld(a.mpfr_srcptr(),b) == 0 );    }$/;"	f	namespace:mpfr
operator ==	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const long int b          ){    return (mpfr_cmp_si(a.mpfr_srcptr(),b) == 0 );    }$/;"	f	namespace:mpfr
operator ==	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const mpreal& b){    return (mpfr_equal_p         (a.mpfr_srcptr(),b.mpfr_srcptr()) !=0 );    }$/;"	f	namespace:mpfr
operator ==	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const unsigned int b      ){    return (mpfr_cmp_ui(a.mpfr_srcptr(),b) == 0 );    }$/;"	f	namespace:mpfr
operator ==	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const unsigned long int b ){    return (mpfr_cmp_ui(a.mpfr_srcptr(),b) == 0 );    }$/;"	f	namespace:mpfr
operator >	tools/SimpleIni.h	/^        bool operator>(const Entry & rhs) const { return LoadOrder()(rhs, *this); }$/;"	f	struct:CSimpleIniTempl::Entry
operator >	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator>(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator >	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator> (const Scalar& a, const AutoDiffScalar& b) { return a >  b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator >	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator> (const Scalar& other) const  { return m_value >  other; }$/;"	f	class:Eigen::AutoDiffScalar
operator >	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator> (const AutoDiffScalar<OtherDerType>& b) const  { return m_value >  b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator >	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator >  (const mpreal& a, const mpreal& b){    return (mpfr_greater_p       (a.mpfr_srcptr(),b.mpfr_srcptr()) !=0 );    }$/;"	f	namespace:mpfr
operator >=	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator>=(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operator >=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator>=(const Scalar& a, const AutoDiffScalar& b) { return a >= b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator >=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator>=(const Scalar& other) const  { return m_value >= other; }$/;"	f	class:Eigen::AutoDiffScalar
operator >=	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator>=(const AutoDiffScalar<OtherDerType>& b) const  { return m_value >= b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator >=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool operator >= (const mpreal& a, const mpreal& b){    return (mpfr_greaterequal_p  (a.mpfr_srcptr(),b.mpfr_srcptr()) !=0 );    }$/;"	f	namespace:mpfr
operator >>	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator>>(const mpreal& v, const int k)$/;"	f	namespace:mpfr
operator >>	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator>>(const mpreal& v, const long int k)$/;"	f	namespace:mpfr
operator >>	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator>>(const mpreal& v, const unsigned int k)$/;"	f	namespace:mpfr
operator >>	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator>>(const mpreal& v, const unsigned long int k)$/;"	f	namespace:mpfr
operator >>	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline std::istream& operator>>(std::istream &is, mpreal& v)$/;"	f	namespace:mpfr
operator >>=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator>>=(const int u)$/;"	f	class:mpfr::mpreal
operator >>=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator>>=(const long int u)$/;"	f	class:mpfr::mpreal
operator >>=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator>>=(const unsigned int u)$/;"	f	class:mpfr::mpreal
operator >>=	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator>>=(const unsigned long int u)$/;"	f	class:mpfr::mpreal
operator DenseIndex	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr operator DenseIndex() const { return n; }$/;"	f	struct:Eigen::type2index
operator Derived&	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  operator Derived&() { return m_matrix->const_cast_derived(); }$/;"	f	struct:Eigen::internal::evaluator
operator QuaternionType	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  operator QuaternionType() { return QuaternionType(toRotationMatrix()); }$/;"	f	class:EulerAngles
operator SparseMatrixType&	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  operator SparseMatrixType&() { return m_matrix->const_cast_derived(); }$/;"	f	struct:Eigen::internal::evaluator
operator SparseVectorType&	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  operator SparseVectorType&() { return m_matrix.const_cast_derived(); }$/;"	f	struct:Eigen::internal::evaluator
operator T&	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE operator T&() { return m_val; }$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator T&	tools/eigen/Eigen/src/StlSupport/details.h	/^    inline operator T& () { return *static_cast<T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator []	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator []	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator []	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& operator[](Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& operator[](Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	tools/eigen/Eigen/src/Core/util/Memory.h	/^  T& operator[](std::ptrdiff_t i) { return m_ptr[i]; }$/;"	f	class:Eigen::internal::scoped_array
operator []	tools/eigen/Eigen/src/Core/util/Memory.h	/^  const T& operator[](std::ptrdiff_t i) const { return m_ptr[i]; }$/;"	f	class:Eigen::internal::scoped_array
operator []	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex operator[](Index i) const { return i==m_index ? m_value : 0; }$/;"	f	class:Eigen::SparseMatrix::SingletonVector
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE T& operator[] (size_t index) { return values[index]; }$/;"	f	class:Eigen::array
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  EIGEN_STRONG_INLINE const T& operator[] (size_t index) const { return values[index]; }$/;"	f	class:Eigen::array
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar& operator[](Index index)$/;"	f	class:Eigen::Tensor
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar& operator[](Index index) const$/;"	f	class:Eigen::Tensor
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  const Index operator[] (const Index i) const { return i; }$/;"	f	struct:Eigen::DimensionList
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::ptrdiff_t operator[] (const std::size_t index) const {$/;"	f	struct:Eigen::Sizes
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE Scalar& operator[](Index index)$/;"	f	class:Eigen::TensorFixedSize
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_STRONG_INLINE const Scalar& operator[](Index index) const$/;"	f	class:Eigen::TensorFixedSize
operator []	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC constexpr DenseIndex operator[] (const DenseIndex i) const {$/;"	f	struct:Eigen::IndexList
operator []	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    CoeffType operator[] (Index i) { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
operator []	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    const CoeffType operator[] (Index i) const { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
operator bool	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE operator bool() const         { return m_iter; }$/;"	f	class:Eigen::InnerIterator
operator bool	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE operator bool() const { return m_inner < m_end && m_inner>=0; }$/;"	f	class:Eigen::internal::inner_iterator_selector
operator bool	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    operator bool() const { return m_cachedIndex>=0; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline operator bool() const { return EvalIterator::operator bool() && EvalIterator::index() < m_end; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline operator bool() const { return m_outerPos < m_end; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline operator bool() const { return (m_id > m_start); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return (m_lhsIter && m_rhsIter); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_id>=0; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_lhsIter; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_rhsIter; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE operator bool() const { return LhsIterator::operator bool() && (!m_empty); }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline operator bool() const  { return m_sparseIter; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::TriangularViewImpl::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::TriangularViewImpl::ReverseInnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::SparseVector::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline operator bool() const { return (m_id > m_start); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
operator bool	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE operator bool() const { return m_inner < m_end && m_inner>=0; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator bool	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline operator bool() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
operator bool	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline operator bool() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
operator bool	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline operator bool() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
operator bool	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
operator bool	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline operator bool() const$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
operator bool	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline operator bool() const { return m_isvalid;}$/;"	f	class:Eigen::MatrixMarketIterator
operator bool	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator bool               () const { return toBool();       }$/;"	f	class:mpfr::mpreal
operator const Derived&	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^  operator const Derived&() const { return *m_matrix; }$/;"	f	struct:Eigen::internal::evaluator
operator const ExpressionType&	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::ForceAlignedAccess
operator const ExpressionType&	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::NestByValue
operator const Scalar	tools/eigen/Eigen/src/Core/Product.h	/^  operator const Scalar() const$/;"	f	class:Eigen::internal::dense_product_base
operator const SparseMatrixType&	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  operator const SparseMatrixType&() const { return *m_matrix; }$/;"	f	struct:Eigen::internal::evaluator
operator const SparseVectorType&	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  operator const SparseVectorType&() const { return m_matrix; }$/;"	f	struct:Eigen::internal::evaluator
operator const T&	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE operator const T&() const { return m_val; }$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator const T&	tools/eigen/Eigen/src/StlSupport/details.h	/^    inline operator const T& () const { return *static_cast<const T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator const T*	tools/eigen/Eigen/src/Core/util/Memory.h	/^  operator const T*() const { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
operator const char*	tools/eigen/bench/btl/generic_bench/btl.hh	/^    operator const char* () const { return c_str(); }$/;"	f	class:BtlString
operator double	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator double             () const { return toDouble();     }$/;"	f	class:mpfr::mpreal
operator float	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator float              () const { return toFloat();      }$/;"	f	class:mpfr::mpreal
operator int	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator int                () const { return int(toLong());  }$/;"	f	class:mpfr::mpreal
operator int64_t	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator int64_t   () const { return toInt64();      }$/;"	f	class:mpfr::mpreal
operator long	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator long               () const { return toLong();       }$/;"	f	class:mpfr::mpreal
operator long double	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator long double        () const { return toLDouble();    }$/;"	f	class:mpfr::mpreal
operator long long	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator long long          () const { return toLong();       }$/;"	f	class:mpfr::mpreal
operator uint64_t	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator uint64_t  () const { return toUInt64();     }$/;"	f	class:mpfr::mpreal
operator unsigned	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator unsigned           () const { return unsigned(toULong()); }$/;"	f	class:mpfr::mpreal
operator unsigned long	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator unsigned long      () const { return toULong();      }$/;"	f	class:mpfr::mpreal
operator unsigned long long	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    explicit operator unsigned long long () const { return toULong();      }$/;"	f	class:mpfr::mpreal
operator ||	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator||(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator ||	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    operator||(const OtherDerived& other) const {$/;"	f	class:Eigen::TensorBase
operatorInverseSqrt	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorInverseSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
operatorInverseSqrt	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  Matrix<Scalar, Dynamic, Dynamic> operatorInverseSqrt() const$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
operatorNorm	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::operatorNorm() const$/;"	f	class:Eigen::MatrixBase
operatorNorm	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::operatorNorm() const$/;"	f	class:Eigen::SelfAdjointView
operatorSqrt	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
operatorSqrt	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  Matrix<Scalar, Dynamic, Dynamic> operatorSqrt() const$/;"	f	class:Eigen::ArpackGeneralizedSelfAdjointEigenSolver
options	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline superlu_options_t& options() { return m_sluOptions; }$/;"	f	class:Eigen::SuperLUBase
order	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType order ; \/* pivot ordering of this column, if col is dead *\/$/;"	m	union:internal::colamd_col::__anon185
order_children	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline  void order_children$/;"	f	namespace:internal
ordering	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^void SimplicialCholeskyBase<Derived>::ordering(const MatrixType& a, ConstCholMatrixPtr &pmat, CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
orderingMethod	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    int orderingMethod() const {$/;"	f	class:Eigen::SkylineInplaceLU
ordering_helper_at_plus_a	tools/eigen/Eigen/src/OrderingMethods/Ordering.h	/^void ordering_helper_at_plus_a(const MatrixType& mat, MatrixType& symmat)$/;"	f	namespace:Eigen::internal
orientation	tools/eigen/demos/opengl/camera.h	/^    Eigen::Quaternionf orientation;$/;"	m	class:Frame
orientation	tools/eigen/demos/opengl/camera.h	/^    inline const Eigen::Quaternionf& orientation(void) const { return mFrame.orientation; }$/;"	f	class:Camera
origin	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType& origin() { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  const VectorType& origin() const { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set origin 0,0$/;"	v
originalMatrix	tools/eigen/Eigen/src/misc/Image.h	/^  inline const MatrixType& originalMatrix() const { return m_originalMatrix; }$/;"	f	struct:Eigen::internal::image_retval_base
orthomethods	tools/eigen/test/geo_orthomethods.cpp	/^template<typename Scalar, int Size> void orthomethods(int size=Size)$/;"	f
orthomethods_3	tools/eigen/test/geo_orthomethods.cpp	/^template<typename Scalar> void orthomethods_3()$/;"	f
other	tools/eigen/Eigen/src/Core/util/Memory.h	/^    typedef aligned_allocator<U> other;$/;"	t	struct:Eigen::aligned_allocator::rebind
other	tools/eigen/Eigen/src/StlSupport/details.h	/^      typedef aligned_allocator_indirection<U> other;$/;"	t	struct:Eigen::aligned_allocator_indirection::rebind
other_matrix_type	tools/eigen/test/swap.cpp	/^struct other_matrix_type$/;"	s	file:
other_matrix_type	tools/eigen/test/swap.cpp	/^struct other_matrix_type<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	file:
out	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::Tensor<float, 3>& out() { return out_; }$/;"	f	struct:CPUContext
out	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::TensorMap<Eigen::Tensor<float, 3> >& out() { return out_; }$/;"	f	struct:GPUContext
out_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::Tensor<float, 3>& out_;$/;"	m	struct:CPUContext	file:
out_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::TensorMap<Eigen::Tensor<float, 3> >& out_;$/;"	m	struct:GPUContext	file:
outer	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    outer = Index \/ DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling::__anon645
outer	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^    outer = Index \/ DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon646
outer	tools/eigen/Eigen/src/Core/Redux.h	/^    outer = Start \/ Derived::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon633
outer	tools/eigen/Eigen/src/Core/Redux.h	/^    outer = index \/ int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon635
outer	tools/eigen/Eigen/src/Core/Stride.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::Stride
outer	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index outer()  const { return 0; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
outer	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index outer()  const { return EvalIterator::outer() - (IsRowMajor ? m_block.startRow() : m_block.startCol()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
outer	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
outer	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
outer	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
outer	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index outer() const  { return m_sparseIter.outer(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
outer	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
outer	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index outer() const {return m_outer; }$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
outer	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::DynamicSparseMatrix::InnerIterator
outer	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
outerBlocks	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index outerBlocks() const { return m_outerBSize; }$/;"	f	class:Eigen::BlockSparseMatrix
outerInd	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *outerInd;$/;"	m	struct:Eigen::SluMatrix::__anon152
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* outerIndexPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* outerIndexPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* outerIndexPtr() { return derived().outerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* outerIndexPtr() const { return derived().outerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* outerIndexPtr()   { return Base::m_outerIndex; }$/;"	f	class:Eigen::SparseMapBase
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::SparseMapBase
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* outerIndexPtr() { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* outerIndexPtr() { return derived().nestedExpression().outerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
outerIndexPtr	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* outerIndexPtr() const { return derived().nestedExpression().outerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
outerIndexPtr	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline StorageIndex *outerIndexPtr() {return m_outerIndex; }$/;"	f	class:Eigen::BlockSparseMatrix
outerIndexPtr	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline const StorageIndex* outerIndexPtr() const {return m_outerIndex; }$/;"	f	class:Eigen::BlockSparseMatrix
outerSize	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index outerSize() const   { return m_dstExpr.outerSize(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
outerSize	tools/eigen/Eigen/src/Core/DenseBase.h	/^    Index outerSize() const$/;"	f	class:Eigen::DenseBase
outerSize	tools/eigen/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index outerSize() const { return m_xpr.outerSize(); }$/;"	f	class:Eigen::internal::redux_evaluator
outerSize	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::SparseMapBase
outerSize	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
outerSize	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index outerSize() const { return (int(Flags)&RowMajorBit) ? this->rows() : this->cols(); }$/;"	f	class:Eigen::SparseMatrixBase
outerSize	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index outerSize() const { return 1; }$/;"	f	class:Eigen::SparseVector
outerSize	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  inline Index outerSize() const { return m_matrix.outerSize(); }$/;"	f	class:Eigen::SparseView
outerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index outerSize() const {$/;"	f	class:Eigen::SkylineMatrix
outerSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    Index outerSize() const {$/;"	f	class:Eigen::SkylineMatrixBase
outerSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index outerSize() const$/;"	f	class:Eigen::BlockSparseMatrixView
outerSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index outerSize() const$/;"	f	class:Eigen::BlockSparseMatrix
outerSize	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index outerSize() const { return convert_index(m_data.size()); }$/;"	f	class:Eigen::DynamicSparseMatrix
outerStride	tools/eigen/Eigen/src/Core/Array.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Array
outerStride	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ArrayWrapper
outerStride	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::MatrixWrapper
outerStride	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index outerStride() const { return m_dstExpr.outerStride(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
outerStride	tools/eigen/Eigen/src/Core/Block.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::internal::BlockImpl_dense
outerStride	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
outerStride	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
outerStride	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Diagonal
outerStride	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
outerStride	tools/eigen/Eigen/src/Core/Map.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Map
outerStride	tools/eigen/Eigen/src/Core/Matrix.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Matrix
outerStride	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::NestByValue
outerStride	tools/eigen/Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC inline Index outerStride() const$/;"	f	class:Eigen::RefBase
outerStride	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::SelfAdjointView
outerStride	tools/eigen/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return derived().nestedExpression().outerStride(); }$/;"	f	class:Eigen::TransposeImpl
outerStride	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return derived().nestedExpression().outerStride(); }$/;"	f	class:Eigen::TriangularViewImpl
outerStride	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return derived().outerStride(); }$/;"	f	class:Eigen::TriangularBase
outerToBlock	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index outerToBlock(Index outer) const$/;"	f	class:Eigen::BlockSparseMatrix
outer_product_selector_run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^EIGEN_DONT_INLINE void outer_product_selector_run(Dst& dst, const Lhs &lhs, const Rhs &rhs, const Func& func, const false_type&)$/;"	f	namespace:Eigen::internal
outer_product_selector_run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^EIGEN_DONT_INLINE void outer_product_selector_run(Dst& dst, const Lhs &lhs, const Rhs &rhs, const Func& func, const true_type&)$/;"	f	namespace:Eigen::internal
outer_stride_at_compile_time	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time$/;"	s	namespace:Eigen::internal
outer_stride_at_compile_time	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
output	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  OutputMapper& output;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
output	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline std::ostream& mpreal::output(std::ostream& os) const $/;"	f	class:mpfr::mpreal
outputCols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index outputCols() const { return m_outputCols; }$/;"	f	struct:Eigen::TensorEvaluator
outputCols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index outputCols() const { return m_outputCols; }$/;"	f	struct:Eigen::TensorEvaluator
outputPlanes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index outputPlanes() const { return m_outputPlanes; }$/;"	f	struct:Eigen::TensorEvaluator
outputRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index outputRows() const { return m_outputRows; }$/;"	f	struct:Eigen::TensorEvaluator
outputRows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index outputRows() const { return m_outputRows; }$/;"	f	struct:Eigen::TensorEvaluator
overwriteResults	tools/eigen/bench/btl/generic_bench/btl.hh	/^  bool overwriteResults;$/;"	m	class:BtlConfig
p	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType p ;   \/* used as a row pointer in init_rows_cols () *\/$/;"	m	union:internal::Colamd_Row::__anon188
p	tools/eigen/doc/snippets/Tutorial_Map_using.cpp	/^float *p = &m2(0);  \/\/ get the address storing the data for m2$/;"	v
p	tools/eigen/unsupported/test/BVH.cpp	/^  VectorType p;$/;"	m	struct:BallPointStuff	file:
p0	tools/eigen/doc/snippets/MatrixBase_all.cpp	/^Vector3f p0 = Vector3f::Random(), p1 = Vector3f::Random().cwiseAbs();$/;"	v
p1	tools/eigen/doc/snippets/MatrixBase_all.cpp	/^Vector3f p0 = Vector3f::Random(), p1 = Vector3f::Random().cwiseAbs();$/;"	v
p16uc_COMPLEX32_REV	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV = vec_sld(p16uc_REVERSE32, p16uc_REVERSE32, 8);                                         \/\/{ 4,5,6,7, 0,1,2,3, 12,13,14,15, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX32_REV2	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV2 = vec_sld(p16uc_FORWARD, p16uc_FORWARD, 8);                                            \/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX32_REV2	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV2 = vec_sld(p16uc_PSET64_HI, p16uc_PSET64_LO, 8);                                            \/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_DUPLICATE32_HI	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_DUPLICATE32_HI = { 0,1,2,3, 0,1,2,3, 4,5,6,7, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_FORWARD	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_FORWARD = p16uc_REVERSE32; $/;"	m	namespace:Eigen::internal
p16uc_FORWARD	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_FORWARD = vec_lvsl(0, (float*)0); $/;"	m	namespace:Eigen::internal
p16uc_HALF64_0_16	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_HALF64_0_16 = vec_sld((Packet16uc)p4i_ZERO, vec_splat((Packet16uc) vec_abs(p4i_MINUS16), 3), 8);      \/\/{ 0,0,0,0, 0,0,0,0, 16,16,16,16, 16,16,16,16};$/;"	m	namespace:Eigen::internal
p16uc_HALF64_0_16	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_HALF64_0_16 = vec_sld(vec_splat((Packet16uc) vec_abs(p4i_MINUS16), 0), (Packet16uc)p4i_ZERO, 8);      \/\/{ 0,0,0,0, 0,0,0,0, 16,16,16,16, 16,16,16,16};$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WEVEN	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WEVEN  = vec_sld(p16uc_DUPLICATE32_HI, (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WEVEN	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WEVEN = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WODD	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WODD   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WODD	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WODD = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 1), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_HI	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET64_HI = (Packet16uc) vec_mergeh((Packet4ui)p16uc_PSET32_WODD, (Packet4ui)p16uc_PSET32_WEVEN);     \/\/{ 0,1,2,3, 4,5,6,7, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_LO	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET64_LO = (Packet16uc) vec_mergel((Packet4ui)p16uc_PSET32_WODD, (Packet4ui)p16uc_PSET32_WEVEN);     \/\/{ 8,9,10,11, 12,13,14,15, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE32	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_REVERSE32 = { 12,13,14,15, 8,9,10,11, 4,5,6,7, 0,1,2,3 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE64	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_REVERSE64 = { 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_HI	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_HI = vec_add(p16uc_PSET64_HI, p16uc_HALF64_0_16);                                         \/\/{ 0,1,2,3, 4,5,6,7, 16,17,18,19, 20,21,22,23};$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_LO	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_LO = vec_add(p16uc_PSET64_LO, p16uc_HALF64_0_16);                                         \/\/{ 8,9,10,11, 12,13,14,15, 24,25,26,27, 28,29,30,31};$/;"	m	namespace:Eigen::internal
p2d_COUNTDOWN	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_COUNTDOWN = (Packet2d) vec_sld((Packet16uc) p2d_ONE, (Packet16uc) p2d_ZERO, 8);$/;"	m	namespace:Eigen::internal
p2d_COUNTDOWN	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_COUNTDOWN = (Packet2d) vec_sld((Packet16uc) p2d_ZERO, (Packet16uc) p2d_ONE, 8);$/;"	m	namespace:Eigen::internal
p2d_ONE	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_ONE = { 1.0, 1.0 }; $/;"	m	namespace:Eigen::internal
p2d_ZERO	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_ZERO = (Packet2d) p4f_ZERO;$/;"	m	namespace:Eigen::internal
p2d_ZERO_	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_ZERO_ = { -0.0, -0.0 };$/;"	m	namespace:Eigen::internal
p2l_ZERO	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2l p2l_ZERO = (Packet2l) p4i_ZERO;$/;"	m	namespace:Eigen::internal
p2ui_CONJ_XOR	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^static uint32x2_t p2ui_CONJ_XOR = EIGEN_INIT_NEON_PACKET2(0x00000000, 0x80000000);$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^static uint64x2_t p2ul_CONJ_XOR = EIGEN_INIT_NEON_PACKET2(0x0, 0x8000000000000000);$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR1	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR1 = (Packet2ul) vec_sld((Packet4ui) p2d_ZERO_, (Packet4ui) p2l_ZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR1	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR1 = (Packet2ul) vec_sld((Packet4ui) p2l_ZERO,  (Packet4ui) p2d_ZERO_, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR2	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR2 = (Packet2ul) vec_sld((Packet4ui) p2d_ZERO_, (Packet4ui) p2l_ZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR2	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR2 = (Packet2ul) vec_sld((Packet4ui) p2l_ZERO,  (Packet4ui) p2d_ZERO_, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p4f_COUNTDOWN	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_COUNTDOWN = { 0.0, 1.0, 2.0, 3.0 };$/;"	m	namespace:Eigen::internal
p4f_ONE	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_ONE = vec_ctf(p4i_ONE, 0); \/\/{ 1.0, 1.0, 1.0, 1.0}$/;"	m	namespace:Eigen::internal
p4f_ZERO_	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_ZERO_ = (Packet4f) vec_sl((Packet4ui)p4i_MINUS1, (Packet4ui)p4i_MINUS1); \/\/{ 0x80000000, 0x80000000, 0x80000000, 0x80000000}$/;"	m	namespace:Eigen::internal
p4i_COUNTDOWN	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4i p4i_COUNTDOWN = { 0, 1, 2, 3 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet4ui  p4ui_CONJ_XOR = vec_mergeh((Packet4ui)p4i_ZERO, (Packet4ui)p4f_ZERO_);\/\/{ 0x00000000, 0x80000000, 0x00000000, 0x80000000 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^static uint32x4_t p4ui_CONJ_XOR = EIGEN_INIT_NEON_PACKET4(0x00000000, 0x80000000, 0x00000000, 0x80000000);$/;"	m	namespace:Eigen::internal
pComment	tools/SimpleIni.h	/^        const SI_CHAR * pComment;$/;"	m	struct:CSimpleIniTempl::Entry
pItem	tools/SimpleIni.h	/^        const SI_CHAR * pItem;$/;"	m	struct:CSimpleIniTempl::Entry
pabs	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pabs(const Packet& a) { using std::abs; return abs(a); }$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pabs(const Packet4d& a)$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pabs(const Packet8f& a)$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double2 pabs<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float4  pabs<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a) { return vabsq_f64(a); }$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vabsq_f32(a); }$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vabsq_s32(a); }$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pabs	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a)$/;"	f	namespace:Eigen::internal
paccum	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typename Eval::PacketReturnType paccum;$/;"	m	struct:Eigen::internal::FullReducerShard
pack	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void pack(Scalar* blockA, const const_blas_data_mapper<Scalar,Index,StorageOrder>& lhs, Index cols, Index i, Index& count)$/;"	f	struct:Eigen::internal::symm_pack_lhs
packLhs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  static void packLhs(const packLArg arg) {$/;"	f	struct:Eigen::TensorEvaluator
packLhsArg	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^struct packLhsArg {$/;"	s	namespace:Eigen::internal
packRhsAndKernel	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  static void packRhsAndKernel(packRKArg arg) {$/;"	f	struct:Eigen::TensorEvaluator
packRhsAndKernelArg	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^struct packRhsAndKernelArg {$/;"	s	namespace:Eigen::internal
packedMatrix	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const MatrixType& packedMatrix() const$/;"	f	class:Eigen::HessenbergDecomposition
packedMatrix	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline const MatrixType& packedMatrix() const$/;"	f	class:Eigen::Tridiagonalization
packed_rank2_update_selector	tools/eigen/blas/Rank2Update.h	/^struct packed_rank2_update_selector$/;"	s	namespace:internal
packed_triangular_matrix_vector_product	tools/eigen/blas/PackedTriangularMatrixVector.h	/^struct packed_triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,ColMajor>$/;"	s	namespace:internal
packed_triangular_matrix_vector_product	tools/eigen/blas/PackedTriangularMatrixVector.h	/^struct packed_triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,RowMajor>$/;"	s	namespace:internal
packed_triangular_solve_vector	tools/eigen/blas/PackedTriangularSolverVector.h	/^struct packed_triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, ColMajor>$/;"	s	namespace:internal
packed_triangular_solve_vector	tools/eigen/blas/PackedTriangularSolverVector.h	/^struct packed_triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, RowMajor>$/;"	s	namespace:internal
packed_triangular_solve_vector	tools/eigen/blas/PackedTriangularSolverVector.h	/^struct packed_triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheRight, Mode, Conjugate, StorageOrder>$/;"	s	namespace:internal
packet	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::ArrayWrapper
packet	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::MatrixWrapper
packet	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::ArrayWrapper
packet	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::MatrixWrapper
packet	tools/eigen/Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
packet	tools/eigen/Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const $/;"	f	struct:Eigen::internal::mapbase_evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const $/;"	f	struct:Eigen::internal::unary_evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::binary_evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::unary_evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const $/;"	f	struct:Eigen::internal::mapbase_evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const $/;"	f	struct:Eigen::internal::unary_evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::binary_evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
packet	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::unary_evaluator
packet	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::CwiseNullaryOp
packet	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::CwiseNullaryOp
packet	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^  Packet packet[N];$/;"	m	struct:Eigen::internal::PacketBlock
packet	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::MapBase
packet	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
packet	tools/eigen/Eigen/src/Core/NestByValue.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::NestByValue
packet	tools/eigen/Eigen/src/Core/NestByValue.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
packet	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::PlainObjectBase
packet	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
packet	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet(Index idx) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  const PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	tools/eigen/Eigen/src/Core/Redux.h	/^  PacketReturnType packet(Index index) const$/;"	f	class:Eigen::internal::redux_evaluator
packet	tools/eigen/Eigen/src/Core/Redux.h	/^  PacketReturnType packet(Index row, Index col) const$/;"	f	class:Eigen::internal::redux_evaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  EIGEN_DEVICE_FUNC PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC PacketReturnType packet(Index index) const {$/;"	f	struct:Eigen::TensorContractionEvaluatorBase
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE TgtPacket packet(Index index) const {$/;"	f	struct:Eigen::PacketConverter
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(const Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC PacketReturnType packet(const Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  EIGEN_DEVICE_FUNC PacketReturnType packet(Index index) const {$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  EIGEN_DEVICE_FUNC PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packetByOuterInner	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packetByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
packetByOuterInner	tools/eigen/Eigen/src/Core/Redux.h	/^  PacketReturnType packetByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::internal::redux_evaluator
packetColMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packetColMajor(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packetColMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packetColMajor(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packetCount_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^    int packetCount_;$/;"	m	struct:Eigen::internal::MeanReducer
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_multiple_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_quotient1_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_difference_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_max_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_min_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_product_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_quotient_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_sum_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_add_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_rsub_op
packetOp	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_sub_op
packetOp	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index i) const { return impl.packetOp(i); }$/;"	f	struct:Eigen::internal::linspaced_op
packetOp	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index i) const$/;"	f	struct:Eigen::internal::linspaced_op_impl
packetOp	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index row, Index col) const$/;"	f	struct:Eigen::internal::linspaced_op
packetOp	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index) const { return m_base = padd(m_base,m_packetStep); }$/;"	f	struct:Eigen::internal::linspaced_op_impl
packetOp	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_STRONG_INLINE const PacketType packetOp(Index, Index = 0) const { return internal::pset1<PacketType>(m_other); }$/;"	f	struct:Eigen::internal::scalar_constant_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const { return internal::pconj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs2_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_arg_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_opposite_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pacos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pasin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::patan(a); }$/;"	f	struct:Eigen::internal::scalar_atan_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pceil(a); }$/;"	f	struct:Eigen::internal::scalar_ceil_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pcos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pcosh(a); }$/;"	f	struct:Eigen::internal::scalar_cosh_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pexp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pfloor(a); }$/;"	f	struct:Eigen::internal::scalar_floor_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::plog(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::plog10(a); }$/;"	f	struct:Eigen::internal::scalar_log10_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pround(a); }$/;"	f	struct:Eigen::internal::scalar_round_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::prsqrt(a); }$/;"	f	struct:Eigen::internal::scalar_rsqrt_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::psin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::psinh(a); }$/;"	f	struct:Eigen::internal::scalar_sinh_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::psqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::ptan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::ptanh(a); }$/;"	f	struct:Eigen::internal::scalar_tanh_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_cube_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_inverse_op
packetOp	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_square_op
packetOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^   __device__ float4 packetOp(Index, Index = 0) const {$/;"	f	class:Eigen::internal::NormalRandomGenerator
packetOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  __device__ double2 packetOp(Index, Index = 0) const {$/;"	f	class:Eigen::internal::NormalRandomGenerator
packetOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  inline Packet packetOp(const Packet& x) const {$/;"	f	struct:Eigen::internal::scalar_sigmoid_op
packetOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  typename internal::packet_traits<T>::type packetOp(Index, Index = 0) const {$/;"	f	class:Eigen::internal::NormalRandomGenerator
packetOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  typename internal::packet_traits<T>::type packetOp(Index, Index = 0) const {$/;"	f	class:Eigen::internal::UniformRandomGenerator
packetOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  typename internal::packet_traits<double>::type packetOp(Index i, Index j = 0) const {$/;"	f	class:Eigen::internal::UniformRandomGenerator
packetOp	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  typename internal::packet_traits<float>::type packetOp(Index i, Index j = 0) const {$/;"	f	class:Eigen::internal::UniformRandomGenerator
packetOp	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^  typename internal::packet_traits<int>::type packetOp($/;"	f	struct:MyGenerator
packetRowMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packetRowMajor(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packetRowMajor	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packetRowMajor(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packetWithPossibleZero	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packetWithPossibleZero(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packetWithPossibleZero	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packetWithPossibleZero(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packetWithPossibleZero	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType packetWithPossibleZero(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
packet_access_bit	tools/eigen/Eigen/src/Core/Matrix.h	/^      packet_access_bit = packet_traits<_Scalar>::Vectorizable && (actual_alignment>=required_alignment) ? PacketAccessBit : 0$/;"	e	enum:Eigen::internal::traits::__anon292
packet_access_bit	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    packet_access_bit = packet_traits<Scalar>::Vectorizable && aligned_bit ? PacketAccessBit : 0$/;"	e	enum:Eigen::internal::compute_tensor_flags::__anon107
packet_helper	tools/eigen/test/packetmath.cpp	/^struct packet_helper$/;"	s	file:
packet_helper	tools/eigen/test/packetmath.cpp	/^struct packet_helper<false,Packet>$/;"	s	file:
packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet_impl(Index row, Index col, Index id, internal::false_type) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
packet_impl	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet_impl(Index row, Index col, Index id, internal::true_type) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
packet_traits	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename T> struct packet_traits : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename T> struct packet_traits<const T> : packet_traits<T> { };$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct packet_traits<float> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<double>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packetmath	tools/eigen/test/packetmath.cpp	/^template<typename Scalar> void packetmath()$/;"	f
packetmath_complex	tools/eigen/test/packetmath.cpp	/^template<typename Scalar> void packetmath_complex()$/;"	f
packetmath_notcomplex	tools/eigen/test/packetmath.cpp	/^template<typename Scalar> void packetmath_notcomplex()$/;"	f
packetmath_real	tools/eigen/test/packetmath.cpp	/^template<typename Scalar> void packetmath_real()$/;"	f
packetmath_scatter_gather	tools/eigen/test/packetmath.cpp	/^template<typename Scalar> void packetmath_scatter_gather() {$/;"	f
pacos	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet pacos(const Packet& a) { using std::acos; return acos(a); }$/;"	f	namespace:Eigen::internal
pad	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    pad(const PaddingDimensions& padding) const {$/;"	f	class:Eigen::TensorBase
padd	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^padd(const Packet& a,$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd padd<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_add_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf padd<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_add_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d padd<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_add_pd(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f padd<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_add_ps(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_add(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_add(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_add(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_add(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_add(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 padd<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 padd<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(padd<Packet2d>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(padd<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return vaddq_f64(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return vaddq_f32(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return vaddq_s32(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_add_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_add_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_add_pd(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_add_ps(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_add_epi32(a,b); }$/;"	f	namespace:Eigen::internal
padd	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^DoublePacket<Packet> padd(const DoublePacket<Packet> &a, const DoublePacket<Packet> &b)$/;"	f	namespace:Eigen::internal
padding	tools/eigen/bench/tensors/tensor_benchmarks.h	/^ void padding(int num_iters) {$/;"	f	class:BenchmarkSuite
padding	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(padding);$/;"	v
padding	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^    const PaddingDimensions& padding() const { return m_padding_dims; }$/;"	f	class:Eigen::TensorPaddingOp
padding_bottom	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex padding_bottom() const { return m_padding_bottom; }$/;"	f	class:Eigen::TensorImagePatchOp
padding_bottom	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex padding_bottom() const { return m_padding_bottom; }$/;"	f	class:Eigen::TensorVolumePatchOp
padding_bottom_z	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex padding_bottom_z() const { return m_padding_bottom_z; }$/;"	f	class:Eigen::TensorVolumePatchOp
padding_explicit	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    bool padding_explicit() const { return m_padding_explicit; }$/;"	f	class:Eigen::TensorImagePatchOp
padding_explicit	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    bool padding_explicit() const { return m_padding_explicit; }$/;"	f	class:Eigen::TensorVolumePatchOp
padding_left	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex padding_left() const { return m_padding_left; }$/;"	f	class:Eigen::TensorImagePatchOp
padding_left	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex padding_left() const { return m_padding_left; }$/;"	f	class:Eigen::TensorVolumePatchOp
padding_right	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex padding_right() const { return m_padding_right; }$/;"	f	class:Eigen::TensorImagePatchOp
padding_right	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex padding_right() const { return m_padding_right; }$/;"	f	class:Eigen::TensorVolumePatchOp
padding_top	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex padding_top() const { return m_padding_top; }$/;"	f	class:Eigen::TensorImagePatchOp
padding_top	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex padding_top() const { return m_padding_top; }$/;"	f	class:Eigen::TensorVolumePatchOp
padding_top_z	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex padding_top_z() const { return m_padding_top_z; }$/;"	f	class:Eigen::TensorVolumePatchOp
padding_type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    PaddingType padding_type() const { return m_padding_type; }$/;"	f	class:Eigen::TensorImagePatchOp
padding_type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    PaddingType padding_type() const { return m_padding_type; }$/;"	f	class:Eigen::TensorVolumePatchOp
padding_value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    Scalar padding_value() const { return m_padding_value; }$/;"	f	class:Eigen::TensorImagePatchOp
padding_value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    Scalar padding_value() const { return m_padding_value; }$/;"	f	class:Eigen::TensorVolumePatchOp
paintEvent	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^void MandelbrotWidget::paintEvent(QPaintEvent *)$/;"	f	class:MandelbrotWidget
paintGL	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::paintGL()$/;"	f	class:RenderingWidget
pair	eval.py	/^        pair = line.split()$/;"	v
palign	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^inline void palign(PacketType& first, const PacketType& second)$/;"	f	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^struct palign_impl$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^struct palign_impl<Offset,Packet2cd>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^struct palign_impl<Offset,Packet4cf>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^struct palign_impl<Offset,Packet4d>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^struct palign_impl<Offset,Packet8f>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pand(const Packet& a, const Packet& b) { return a & b; }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pand   <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_and_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pand   <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_and_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pand<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_and_pd(a,b); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pand<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_and_ps(a,b); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_and(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_and(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vandq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_and_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_and_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_and_pd(a,b); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_and_ps(a,b); }$/;"	f	namespace:Eigen::internal
pand	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_and_si128(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pandnot(const Packet& a, const Packet& b) { return a & (!b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pandnot<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_andnot_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pandnot<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_andnot_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pandnot<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pandnot<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_and(a.v, vec_nor(b.v,b.v))); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_and(a.v, vec_nor(b.v,b.v))); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vbicq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_andnot_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_andnot_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_andnot_si128(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/bench/bench_norm.cpp	/^Packet2d pandnot(const Packet2d& a, Packet2d& b) { return _mm_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	tools/eigen/bench/bench_norm.cpp	/^Packet4f pandnot(const Packet4f& a, Packet4f& b) { return _mm_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
panel_bmod	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^void SparseLUImpl<Scalar,StorageIndex>::panel_bmod(const Index m, const Index w, const Index jcol, $/;"	f	class:Eigen::internal::SparseLUImpl
panel_dfs	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^void SparseLUImpl<Scalar,StorageIndex>::panel_dfs(const Index m, const Index w, const Index jcol, MatrixType& A, IndexVector& perm_r, Index& nseg, ScalarVector& dense, IndexVector& panel_lsub, IndexVector& segrep, IndexVector& repfnz, IndexVector& xprune, IndexVector& marker, IndexVector& parent, IndexVector& xplore, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
panel_dfs_traits	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  panel_dfs_traits(Index jcol, StorageIndex* marker)$/;"	f	struct:Eigen::internal::panel_dfs_traits
panel_dfs_traits	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^struct panel_dfs_traits$/;"	s	namespace:Eigen::internal
panel_size	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index panel_size; \/\/ a panel consists of at most <panel_size> consecutive columns$/;"	m	struct:Eigen::internal::perfvalues
par	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar par, sum;$/;"	m	class:Eigen::LevenbergMarquardt
parallelize_gemm	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^void parallelize_gemm(const Functor& func, Index rows, Index cols, bool transpose)$/;"	f	namespace:Eigen::internal
parameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Parameters parameters;$/;"	m	class:Eigen::HybridNonLinearSolver
parameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Parameters parameters;$/;"	m	class:Eigen::LevenbergMarquardt
parametrizedline	tools/eigen/test/geo_parametrizedline.cpp	/^template<typename LineType> void parametrizedline(const LineType& _line)$/;"	f
parametrizedline_alignment	tools/eigen/test/geo_parametrizedline.cpp	/^template<typename Scalar> void parametrizedline_alignment()$/;"	f
pardisoInit	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoInit(int type)$/;"	f	class:Eigen::PardisoImpl
pardisoParameterArray	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ParameterType& pardisoParameterArray()$/;"	f	class:Eigen::PardisoImpl
pardisoRelease	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoRelease()$/;"	f	class:Eigen::PardisoImpl
pardiso_run_selector	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector$/;"	s	namespace:Eigen::internal
pardiso_run_selector	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector<long long int>$/;"	s	namespace:Eigen::internal
pardiso_traits	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLDLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
parent	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType parent ;  \/* parent in parent tree super-column structure, if *\/$/;"	m	union:internal::colamd_col::__anon184
parg	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^parg(const Packet& a) { using numext::arg; return arg(a); }$/;"	f	namespace:Eigen::internal
partialPivLu	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::partialPivLu() const$/;"	f	class:Eigen::MatrixBase
partial_lu_decomp	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void partial_lu_decomp(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:blas_interface
partial_lu_decomp	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void partial_lu_decomp(const gene_matrix & X, gene_matrix & C, int  N){$/;"	f	class:eigen3_interface
partial_lu_decomp	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void partial_lu_decomp(const gene_matrix & X, gene_matrix & R, int N){$/;"	f	class:gmm_interface
partial_lu_impl	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^struct partial_lu_impl$/;"	s	namespace:Eigen::internal
partial_lu_inplace	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^void partial_lu_inplace(MatrixType& lu, TranspositionType& row_transpositions, typename TranspositionType::StorageIndex& nb_transpositions)$/;"	f	namespace:Eigen::internal
partition_action_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^struct partition_action_t : action_t$/;"	s	file:
pasin	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet pasin(const Packet& a) { using std::asin; return asin(a); }$/;"	f	namespace:Eigen::internal
pasin	tools/eigen/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	/^template<> EIGEN_DONT_INLINE Packet4f pasin(Packet4f x)$/;"	f	namespace:Eigen::internal
pasin	tools/eigen/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	/^template<typename Packet> inline static Packet pasin(Packet a) { return std::asin(a); }$/;"	f	namespace:Eigen::internal
pastix_traits	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLDLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
patan	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet patan(const Packet& a) { using std::atan; return atan(a); }$/;"	f	namespace:Eigen::internal
patch_cols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex patch_cols() const { return m_patch_cols; }$/;"	f	class:Eigen::TensorImagePatchOp
patch_cols	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex patch_cols() const { return m_patch_cols; }$/;"	f	class:Eigen::TensorVolumePatchOp
patch_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^    const PatchDim& patch_dims() const { return m_patch_dims; }$/;"	f	class:Eigen::TensorPatchOp
patch_planes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex patch_planes() const { return m_patch_planes; }$/;"	f	class:Eigen::TensorVolumePatchOp
patch_rows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex patch_rows() const { return m_patch_rows; }$/;"	f	class:Eigen::TensorImagePatchOp
patch_rows	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex patch_rows() const { return m_patch_rows; }$/;"	f	class:Eigen::TensorVolumePatchOp
pblend	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pblend(const Selector<unpacket_traits<Packet>::size>& ifPacket, const Packet& thenPacket, const Packet& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pblend(const Selector<4>& ifPacket, const Packet4d& thenPacket, const Packet4d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pblend(const Selector<8>& ifPacket, const Packet8f& thenPacket, const Packet8f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<>  EIGEN_STRONG_INLINE Packet2cf pblend(const Selector<2>& ifPacket, const Packet2cf& thenPacket, const Packet2cf& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pblend(const Selector<2>& ifPacket, const Packet2d& thenPacket, const Packet2d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pblend(const Selector<4>& ifPacket, const Packet4f& thenPacket, const Packet4f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pblend(const Selector<4>& ifPacket, const Packet4i& thenPacket, const Packet4i& elsePacket) {$/;"	f	namespace:Eigen::internal
pblueNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar pblueNorm(const T& v)$/;"	f
pbroadcast2	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^inline void pbroadcast2(const typename unpacket_traits<Packet>::type *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^inline void pbroadcast4(const typename unpacket_traits<Packet>::type *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet2d>(const double *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet4f>(const float *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet4i>(const int *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^pbroadcast4<Packet2d>(const double *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^pbroadcast4<Packet4f>(const float *a,$/;"	f	namespace:Eigen::internal
pcast	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pcast(const SrcPacket& a) {$/;"	f	namespace:Eigen::internal
pcast	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pcast(const SrcPacket& a, const SrcPacket& \/*b*\/) {$/;"	f	namespace:Eigen::internal
pcast	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8f pcast<Packet8i, Packet8f>(const Packet8i& a) {$/;"	f	namespace:Eigen::internal
pcast	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8i pcast<Packet8f, Packet8i>(const Packet8f& a) {$/;"	f	namespace:Eigen::internal
pcast	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet2d pcast<Packet4f, Packet2d>(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
pcast	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4f pcast<Packet2d, Packet4f>(const Packet2d& a, const Packet2d& b) {$/;"	f	namespace:Eigen::internal
pcast	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4f pcast<Packet4i, Packet4f>(const Packet4i& a) {$/;"	f	namespace:Eigen::internal
pcast	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4i pcast<Packet4f, Packet4i>(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
pceil	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet pceil(const Packet& a) { using numext::ceil; return ceil(a); }$/;"	f	namespace:Eigen::internal
pcgIter	Top.hh	/^    int pcgIter;$/;"	m	class:Top
pcgTol	Top.hh	/^    val pcgTol;$/;"	m	class:Top
pconj	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pconj(const Packet& a) { return numext::conj(a); }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pconj(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pconj(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pconj(const Packet4d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pconj(const Packet8f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pconj(const Packet8i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a) { return Packet1cd((Packet2d)vec_xor((Packet2d)a.v, (Packet2d)p2ul_CONJ_XOR2)); }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a) { return Packet2cf((Packet4f)vec_xor((Packet4ui)a.v, p4ui_CONJ_XOR)); }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pconj(const double2& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pconj(const float4& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a) { return Packet1cd(vreinterpretq_f64_u64(veorq_u64(vreinterpretq_u64_f64(a.v), p2ul_CONJ_XOR))); }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  inline T pconj(const T& x) { return internal::pconj(x); }$/;"	f	struct:Eigen::internal::conj_if
pconj	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  inline const T& pconj(const T& x) { return x; }$/;"	f	struct:Eigen::internal::conj_if
pcos	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet pcos(const Packet& a) { using std::cos; return cos(a); }$/;"	f	namespace:Eigen::internal
pcos	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pcos<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pcosh	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet pcosh(const Packet& a) { using std::cosh; return cosh(a); }$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline Packet pcplxflip(const Packet& a)$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pcplxflip<Packet2cd>(const Packet2cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pcplxflip<Packet4cf>(const Packet4cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet2cf pcplxflip\/*<Packet2cf>*\/(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pdiv(const Packet& a,$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pdiv<Packet2cd>(const Packet2cd& a, const Packet2cd& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pdiv<Packet4cf>(const Packet4cf& a, const Packet4cf& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pdiv<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_div_pd(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pdiv<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_div_ps(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pdiv<Packet8i>(const Packet8i& \/*a*\/, const Packet8i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_div(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pdiv<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pdiv<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return vdivq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_div_pd(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_div_ps(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pending_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  std::deque<std::function<void()>> pending_;       \/\/ Queue of pending work$/;"	m	class:Eigen::ThreadPool
performFrancisQRStep	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::performFrancisQRStep(Index il, Index im, Index iu, bool computeU, const Vector3s& firstHouseholderVector, Scalar* workspace)$/;"	f	class:Eigen::RealSchur
perfvalues	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^struct perfvalues {$/;"	s	namespace:Eigen::internal
perm	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const Perm& perm() const { return m_perm; }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
permutation	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    PermutationType permutation() {return m_permutation; }$/;"	f	class:Eigen::LevenbergMarquardt
permutation	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    PermutationMatrix<Dynamic,Dynamic> permutation;$/;"	m	class:Eigen::LevenbergMarquardt
permutationP	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline const PermutationPType& permutationP() const$/;"	f	class:Eigen::FullPivLU
permutationP	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    inline const PermutationType& permutationP() const$/;"	f	class:Eigen::PartialPivLU
permutationP	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& permutationP() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationP	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::SuperLU
permutationP	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::UmfPackLU
permutationPinv	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& permutationPinv() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationQ	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline const PermutationQType& permutationQ() const$/;"	f	class:Eigen::FullPivLU
permutationQ	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::SuperLU
permutationQ	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::UmfPackLU
permutation_matrix_product	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct permutation_matrix_product<ExpressionType, Side, Transposed, DenseShape>$/;"	s	namespace:Eigen::internal
permutation_matrix_product	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^struct permutation_matrix_product<MatrixType, Side, Transposed, SparseShape>$/;"	s	namespace:Eigen::internal
permutationmatrices	tools/eigen/test/permutationmatrices.cpp	/^template<typename MatrixType> void permutationmatrices(const MatrixType& m)$/;"	f
permute_symm_to_fullsymm	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_fullsymm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DestOrder,typename MatrixType::StorageIndex>& _dest, const typename MatrixType::StorageIndex* perm)$/;"	f	namespace:Eigen::internal
permute_symm_to_symm	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_symm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DstOrder,typename MatrixType::StorageIndex>& _dest, const typename MatrixType::StorageIndex* perm)$/;"	f	namespace:Eigen::internal
perturbCol0	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::perturbCol0$/;"	f	class:Eigen::BDCSVD
pexp	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet pexp(const Packet& a) { using std::exp; return exp(a); }$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^pexp<Packet4d>(const Packet4d& _x) {$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^pexp<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 pexp<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 pexp<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/NEON/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type pfirst(const Packet& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> pfirst<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet4d>(const Packet4d& a) {$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet8f>(const Packet8f& a) {$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet8i>(const Packet8i& a) {$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double  pfirst<Packet2d>(const Packet2d& a) { double EIGEN_ALIGN16 x[2]; pstore(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x[4]; vec_st(a, 0, x); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int   EIGEN_ALIGN16 x[4]; vec_st(a, 0, x); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double pfirst<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  pfirst<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(a, 0); }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x[4]; vst1q_f32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int   EIGEN_ALIGN16 x[4]; vst1q_s32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double x = _mm_cvtsd_f64(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return _mm_cvtsd_f64(a); }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return a.m128d_f64[0]; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float x = _mm_cvtss_f32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return _mm_cvtss_f32(a); }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return a.m128_f32[0]; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int x = _mm_cvtsi128_si32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { return _mm_cvtsi128_si32(a); }$/;"	f	namespace:Eigen::internal
pfloor	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet pfloor(const Packet& a) { using numext::floor; return floor(a); }$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^ template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline Packet pgather(const Scalar* from, Index \/*stride*\/)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cd pgather<std::complex<double>, Packet2cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4cf pgather<std::complex<float>, Packet4cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4d pgather<double, Packet4d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet8f pgather<float, Packet8f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet1cd pgather<std::complex<double>, Packet1cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double2 pgather<double, double2>(const double* from, Index stride) {$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float4 pgather<float, float4>(const float* from, Index stride) {$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet1cd pgather<std::complex<double>, Packet1cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pivotL	tools/eigen/Eigen/src/SparseLU/SparseLU_pivotL.h	/^Index SparseLUImpl<Scalar,StorageIndex>::pivotL(const Index jcol, const RealScalar& diagpivotthresh, IndexVector& perm_r, IndexVector& iperm_c, Index& pivrow, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  EIGEN_DEVICE_FUNC plain_array() {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  EIGEN_DEVICE_FUNC plain_array(constructor_without_unaligned_array_assert) {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  plain_array() $/;"	f	struct:Eigen::internal::plain_array
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  plain_array()$/;"	f	struct:Eigen::internal::plain_array
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert) $/;"	f	struct:Eigen::internal::plain_array
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert)$/;"	f	struct:Eigen::internal::plain_array
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^struct plain_array$/;"	s	namespace:Eigen::internal
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, 0, MatrixOrArrayOptions, Alignment>$/;"	s	namespace:Eigen::internal
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 16>$/;"	s	namespace:Eigen::internal
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 32>$/;"	s	namespace:Eigen::internal
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 64>$/;"	s	namespace:Eigen::internal
plain_array	tools/eigen/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 8>$/;"	s	namespace:Eigen::internal
plain_matrix_type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct plain_matrix_type<T,Dense>$/;"	s	struct:Eigen::internal::promote_index_type
plain_matrix_type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct plain_matrix_type<T,DiagonalShape>$/;"	s	struct:Eigen::internal::promote_index_type
plain_matrix_type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct plain_matrix_type<T,Sparse>$/;"	s	namespace:Eigen::internal
plain_matrix_type_column_major	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct plain_matrix_type_column_major$/;"	s	struct:Eigen::internal::promote_index_type
plain_matrix_type_dense	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct plain_matrix_type_dense<T,ArrayXpr>$/;"	s	struct:Eigen::internal::promote_index_type
plain_matrix_type_dense	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct plain_matrix_type_dense<T,MatrixXpr>$/;"	s	struct:Eigen::internal::promote_index_type
plain_matrix_type_row_major	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct plain_matrix_type_row_major$/;"	s	struct:Eigen::internal::promote_index_type
planeInflateStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index planeInflateStride() const { return m_plane_inflate_strides; }$/;"	f	struct:Eigen::TensorEvaluator
planePaddingTop	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index planePaddingTop() const { return m_planePaddingTop; }$/;"	f	struct:Eigen::TensorEvaluator
plane_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex plane_inflate_strides() const { return m_plane_inflate_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
plane_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex plane_strides() const { return m_plane_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
planes	tools/eigen/test/geo_hyperplane.cpp	/^template<typename Scalar> void planes()$/;"	f
pload	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pload(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pload <Packet2cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pload <Packet4cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet4cf(pload<Packet8f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pload<Packet4d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_pd(from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pload<Packet8f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_ps(from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pload<Packet8i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_si256(reinterpret_cast<const __m256i*>(from)); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet1cd(pload<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double* from) { EIGEN_DEBUG_ALIGNED_LOAD return (Packet2d) vec_ld(0, (const float *) from); } \/\/FIXME$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from) { EIGEN_DEBUG_ALIGNED_LOAD return vec_ld(0, from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return vec_ld(0, from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pload<double2>(const double* from) {$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pload<float4>(const float* from) {$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet1cd(pload<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double* from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_f64(from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*   from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_pd(from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_ps(from); }$/;"	f	namespace:Eigen::internal
pload	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_si128(reinterpret_cast<const __m128i*>(from)); }$/;"	f	namespace:Eigen::internal
pload1	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pload1(const typename unpacket_traits<Packet>::type  *a) { return pset1<Packet>(*a); }$/;"	f	namespace:Eigen::internal
pload1	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pload1<Packet4d>(const double* from) { return _mm256_broadcast_sd(from); }$/;"	f	namespace:Eigen::internal
pload1	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pload1<Packet8f>(const float*  from) { return _mm256_broadcast_ss(from); }$/;"	f	namespace:Eigen::internal
pload1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload1<Packet4f>(const float *from) {$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^ploaddup(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd ploaddup<Packet2cd>(const std::complex<double>* from) { return pset1<Packet2cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf ploaddup<Packet4cf>(const std::complex<float>* from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d ploaddup<Packet4d>(const double* from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploaddup<Packet8f>(const float* from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>*     from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>*     from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*   from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double2 ploaddup<double2>(const double*  from) {$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float4 ploaddup<float4>(const float*   from) {$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>* from) { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*   from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>* from) { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*  from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploadquad	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^ploadquad(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadquad	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploadquad<Packet8f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadt	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet ploadt(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadt_ro	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^inline Packet ploadt_ro(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadt_ro	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE double2 ploadt_ro<double2, Aligned>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE double2 ploadt_ro<double2, Unaligned>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE float4 ploadt_ro<float4, Aligned>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE float4 ploadt_ro<float4, Unaligned>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^ploadu(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd ploadu<Packet2cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf ploadu<Packet4cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet4cf(ploadu<Packet8f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d ploadu<Packet4d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_pd(from); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploadu<Packet8f>(const float* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_ps(from); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i ploadu<Packet8i>(const int* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_si256(reinterpret_cast<const __m256i*>(from)); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet1cd(ploadu<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 ploadu<double2>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 ploadu<float4>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet1cd(ploadu<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_f64(from); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)   { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm_loadu_pd(from); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*  from) {$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int*    from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm_loadu_si128(reinterpret_cast<const __m128i*>(from)); }$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
plog	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet plog(const Packet& a) { using std::log; return log(a); }$/;"	f	namespace:Eigen::internal
plog	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^plog<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
plog	tools/eigen/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plog	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 plog<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
plog	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 plog<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
plog	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plog10	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet plog10(const Packet& a) { using std::log10; return log10(a); }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^plset(const typename unpacket_traits<Packet>::type& a) { return a; }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d plset<Packet4d>(const double& a) { return _mm256_add_pd(_mm256_set1_pd(a), _mm256_set_pd(3.0,2.0,1.0,0.0)); }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f plset<Packet8f>(const float& a) { return _mm256_add_ps(_mm256_set1_ps(a), _mm256_set_ps(7.0,6.0,5.0,4.0,3.0,2.0,1.0,0.0)); }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a) { return vec_add(pset1<Packet2d>(a), p2d_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a) { return vec_add(pset1<Packet4f>(a), p4f_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a)   { return vec_add(pset1<Packet4i>(a), p4i_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 plset<double2>(const double& a) {$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 plset<float4>(const float& a) {$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a)$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a)$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a)$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a) { return _mm_add_pd(pset1<Packet2d>(a),_mm_set_pd(1,0)); }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a) { return _mm_add_ps(pset1<Packet4f>(a), _mm_set_ps(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plset	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a) { return _mm_add_epi32(pset1<Packet4i>(a),_mm_set_epi32(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plt	tools/eigen/bench/bench_norm.cpp	/^Packet2d plt(const Packet2d& a, Packet2d& b) { return _mm_cmplt_pd(a,b); }$/;"	f	namespace:Eigen::internal
plt	tools/eigen/bench/bench_norm.cpp	/^Packet4f plt(const Packet4f& a, Packet4f& b) { return _mm_cmplt_ps(a,b); }$/;"	f	namespace:Eigen::internal
pm	tools/eigen/doc/snippets/HessenbergDecomposition_packedMatrix.cpp	/^Matrix4d pm = hessOfA.packedMatrix();$/;"	v
pm	tools/eigen/doc/snippets/Tridiagonalization_packedMatrix.cpp	/^Matrix4d pm = triOfA.packedMatrix();$/;"	v
pmadd	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pmadd(const Packet&  a,$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmadd(const Packet2cd& x, const Packet2cd& y, const Packet2cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmadd(const Packet2cd& x, const Packet4d& y, const Packet2cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmadd(const Packet4d& x, const Packet2cd& y, const Packet2cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmadd(const Packet4cf& x, const Packet4cf& y, const Packet4cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmadd(const Packet4cf& x, const Packet8f& y, const Packet4cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmadd(const Packet8f& x, const Packet4cf& y, const Packet4cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmadd(const Packet4d& a, const Packet4d& b, const Packet4d& c) {$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmadd(const Packet8f& a, const Packet8f& b, const Packet8f& c) {$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vfmaq_f64(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vmlaq_f64(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vfmaq_f32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vmlaq_f32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return vmlaq_s32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet2d& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet2d& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet4f& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet4f& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return _mm_fmadd_pd(a,b,c); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return _mm_fmadd_ps(a,b,c); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }$/;"	f	namespace:Eigen::internal
pmadd	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const { return internal::pmadd(x,y,c); }$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const RealScalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const RealScalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmax	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pmax(const Packet& a,$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmax<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_max_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmax<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_max_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmax<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmax<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return vmaxq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmaxq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmaxq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_max_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_max_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmax	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pmin(const Packet& a,$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmin<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_min_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmin<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_min_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmin<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmin<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return vminq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vminq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vminq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_min_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_min_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmin	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pmul(const Packet& a,$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<double> pmul(const std::complex<double>& a, const std::complex<double>& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<float> pmul(const std::complex<float>& a, const std::complex<float>& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmul(const Packet2cd& a, const Packet2cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmul(const Packet2cd& x, const Packet4d& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmul(const Packet4d& x, const Packet2cd& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmul(const Packet4cf& a, const Packet4cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmul(const Packet4cf& x, const Packet8f& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmul(const Packet8f& x, const Packet4cf& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pmul<Packet2cd>(const Packet2cd& a, const Packet2cd& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pmul<Packet4cf>(const Packet4cf& a, const Packet4cf& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmul<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_mul_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmul<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_mul_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_madd(a,b,p2d_ZERO); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_madd(a,b,p4f_ZERO); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmul<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmul<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return vmulq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmulq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmulq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& x, const Packet2d& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet2d& x, const Packet1cd& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& x, const Packet4f& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet4f& x, const Packet2cf& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_mul_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_mul_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmul	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const { return internal::pmul(x,y); }$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const RealScalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const RealScalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pnegate	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pnegate(const Packet& a) { return -a; }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pnegate(const Packet2cd& a) { return Packet2cd(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pnegate(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pnegate(const Packet4d& a)$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pnegate(const Packet8f& a)$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(Packet2d(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a) { return psub<Packet2d>(p2d_ZERO, a); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return psub<Packet4f>(p4f_ZERO, a); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return psub<Packet4i>(p4i_ZERO, a); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pnegate(const double2& a) {$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pnegate(const float4& a) {$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate<Packet2d>(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate<Packet4f>(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a) { return vnegq_f64(a); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return vnegq_f32(a); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return vnegq_s32(a); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(Packet2d(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pnegate	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pnorm	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar pnorm, xnorm, fnorm1;$/;"	m	class:Eigen::HybridNonLinearSolver
pnorm	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
pointAt	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::pointAt(const _Scalar& t) const$/;"	f	class:Eigen::ParametrizedLine
pointer	tools/eigen/Eigen/src/Core/util/Memory.h	/^  typedef T*              pointer;$/;"	t	class:Eigen::aligned_allocator
pointer	tools/eigen/Eigen/src/StlSupport/details.h	/^    typedef T*        pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
poly_eval	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^T poly_eval( const Polynomials& poly, const T& x )$/;"	f	namespace:Eigen
poly_eval_horner	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^T poly_eval_horner( const Polynomials& poly, const T& x )$/;"	f	namespace:Eigen
polynomialsolver	tools/eigen/unsupported/test/polynomialsolver.cpp	/^void polynomialsolver(int deg)$/;"	f
pool_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  ThreadPoolInterface* pool_;$/;"	m	struct:Eigen::ThreadPoolDevice
popMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^inline void GpuHelper::popMatrix(GLenum matrixTarget)$/;"	f	class:GpuHelper
popProjectionMode2D	tools/eigen/demos/opengl/gpuhelper.cpp	/^void GpuHelper::popProjectionMode2D(void)$/;"	f	class:GpuHelper
por	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^por(const Packet& a, const Packet& b) { return a | b; }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd por    <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_or_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf por    <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_or_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d por<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_or_pd(a,b); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f por<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_or_ps(a,b); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_or(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_or(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vorrq_s32(a,b); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_or_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_or_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_or_pd(a,b); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_or_ps(a,b); }$/;"	f	namespace:Eigen::internal
por	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_or_si128(a,b); }$/;"	f	namespace:Eigen::internal
position	tools/eigen/demos/opengl/camera.h	/^    Eigen::Vector3f position;$/;"	m	class:Frame
position	tools/eigen/demos/opengl/camera.h	/^    inline const Eigen::Vector3f& position(void) const { return mFrame.position; }$/;"	f	class:Camera
pot_block_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  uint16_t pot_block_size;$/;"	m	struct:inputfile_entry_t	file:
pow	tools/eigen/Eigen/src/Core/GlobalFunctions.h	/^  pow(const Eigen::ArrayBase<Derived>& x, const Eigen::ArrayBase<ExponentDerived>& exponents) $/;"	f	namespace:Eigen
pow	tools/eigen/Eigen/src/Core/GlobalFunctions.h	/^  pow(const Eigen::ArrayBase<Derived>& x, const typename Derived::Scalar& exponent) {$/;"	f	namespace:Eigen
pow	tools/eigen/Eigen/src/Core/GlobalFunctions.h	/^  pow(const typename Derived::Scalar& x, const Eigen::ArrayBase<Derived>& exponents) $/;"	f	namespace:Eigen
pow	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(pow, Scalar) pow(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::numext
pow	tools/eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^pow(const ArrayBase<ExponentDerived>& exponents) const$/;"	f
pow	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^pow(const Scalar& exponent) const$/;"	f
pow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    pow(Scalar exponent) const {$/;"	f	class:Eigen::TensorBase
pow	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^pow(const Eigen::AutoDiffScalar<DerType>& x, typename Eigen::internal::traits<DerType>::Scalar y)$/;"	f	namespace:Eigen
pow	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^const MatrixComplexPowerReturnValue<Derived> MatrixBase<Derived>::pow(const std::complex<RealScalar>& p) const$/;"	f	class:Eigen::MatrixBase
pow	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^const MatrixPowerReturnValue<Derived> MatrixBase<Derived>::pow(const RealScalar& p) const$/;"	f	class:Eigen::MatrixBase
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const long int b, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const mpreal& b, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const mpz_t b, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const unsigned long int b, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const mpreal& b, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct pow_default_impl$/;"	s	namespace:Eigen::internal
pow_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct pow_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
pow_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct pow_impl : pow_default_impl<Scalar, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
pow_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct pow_retval$/;"	s	namespace:Eigen::internal
precision	tools/eigen/Eigen/src/Core/IO.h	/^  int precision;$/;"	m	struct:Eigen::IOFormat
precision	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    RealScalar precision() const {$/;"	f	class:Eigen::SkylineInplaceLU
precondition_map_L	Top-scalable.cc	/^mat Top::precondition_map_L(const mat&L, const mat& R, const Relation& r, const mat& inv_T) {$/;"	f	class:Top
precondition_map_R	Top-scalable.cc	/^mat Top::precondition_map_R(const mat& L, const mat& R, const Relation& r, const mat& inv_T) {$/;"	f	class:Top
preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner& preconditioner() { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
preconditioner	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const Preconditioner& preconditioner() const { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
predict	Top-scalable.cc	/^Result Top::predict(const Entity& e1, const Entity& e2, const Relation& r, const char* output) {$/;"	f	class:Top
predict	Top.cc	/^bool Top::predict(const Entity& e1, const Entity& e2, const Relation& r, const char* output) {$/;"	f	class:Top
predicted	eval.py	/^    predicted = getRankedLists(sys.argv[2])$/;"	v
predux	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux(const Packet& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return (vget_low_f64(a) + vget_high_f64(a))[0]; }$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return vget_lane_f64(vget_low_f64(a) + vget_high_f64(a), 0); }$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return pfirst<Packet2d>(_mm_hadd_pd(a, a)); }$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_max_op
predux	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_min_op
predux	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_sum_op
predux	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_product_op
predux4	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^predux4(const Packet& a)$/;"	f	namespace:Eigen::internal
predux4	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f predux4<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux4	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const DoublePacket<Packet>& predux4(const DoublePacket<Packet> &a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_max(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux_max<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux_max<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(vpmaxq_f64(a, a), 0); }$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_min(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux_min<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux_min<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(vpminq_f64(a, a), 0); }$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_mul(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a) { return (vget_low_f64(a) * vget_high_f64(a))[0]; }$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a) { return vget_lane_f64(vget_low_f64(a) * vget_high_f64(a), 0); }$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^preduxp(const Packet* vecs) { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd preduxp<Packet2cd>(const Packet2cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf preduxp<Packet4cf>(const Packet4cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d preduxp<Packet4d>(const Packet4d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f preduxp<Packet8f>(const Packet8f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs) { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar> inline void prefetch(const Scalar* addr)$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { vec_dstt((long *)addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { vec_dstt((float *)addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { vec_dstt((const float *) addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float* addr) { vec_dstt(addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*     addr) { vec_dstt(addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { EIGEN_ARM_PREFETCH((double *)addr); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { EIGEN_ARM_PREFETCH((float *)addr); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float* addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*     addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE void prefetch(int i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
prefetch	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_STRONG_INLINE void prefetch(Index \/*i*\/) { }$/;"	f	class:Eigen::internal::BaseTensorContractionMapper
prefetchIntoRegisters	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	100;"	d
prefetchIntoRegisters	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	291;"	d
prefetch_lhs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	542;"	d
prefetch_lhs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	687;"	d
preloadKernel	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void preloadKernel() {$/;"	f	struct:Eigen::TensorEvaluator
preloadKernel	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  EIGEN_STRONG_INLINE void preloadKernel() {$/;"	f	struct:Eigen::TensorEvaluator
preprocessed_inputfile_entry_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^struct preprocessed_inputfile_entry_t$/;"	s	file:
preprocessed_inputfile_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  preprocessed_inputfile_t(const inputfile_t& inputfile)$/;"	f	struct:preprocessed_inputfile_t
preprocessed_inputfile_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^struct preprocessed_inputfile_t$/;"	s	file:
prered	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar actred, prered;$/;"	m	class:Eigen::HybridNonLinearSolver
prered	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
prerotate	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prerotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
prescale	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prescale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prescale	tools/eigen/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::prescale(const Scalar& s)$/;"	f	class:Eigen::Transform
preserve_inner_most_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct preserve_inner_most_dims {$/;"	s	namespace:Eigen::internal
preserve_inner_most_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct preserve_inner_most_dims<ReducedDims, NumTensorDims, ColMajor>{$/;"	s	namespace:Eigen::internal
preserve_inner_most_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct preserve_inner_most_dims<ReducedDims, NumTensorDims, RowMajor>{$/;"	s	namespace:Eigen::internal
preshear	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::preshear(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Transform
pretranslate	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::pretranslate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
pretty_printers_dict	tools/eigen/debug/gdb/printers.py	/^pretty_printers_dict = {}$/;"	v
prev	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType prev ;  \/* previous column in degree list, if col is in a *\/$/;"	m	union:internal::colamd_col::__anon186
preverse	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline Packet preverse(const Packet& a)$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd preverse(const Packet2cd& a) {$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf preverse(const Packet4cf& a) {$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d preverse(const Packet4d& a)$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f preverse(const Packet8f& a)$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a) { return (Packet2d)vec_perm((Packet16uc)a,(Packet16uc)a, p16uc_REVERSE64); }$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a) { return (Packet4f)vec_perm((Packet16uc)a,(Packet16uc)a, p16uc_REVERSE32); }$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a) { return (Packet4i)vec_perm((Packet16uc)a,(Packet16uc)a, p16uc_REVERSE32); }$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a) { return vcombine_f64(vget_high_f64(a), vget_low_f64(a)); }$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a) {$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a) { return Packet2cf(_mm_castpd_ps(preverse(Packet2d(_mm_castps_pd(a.v))))); }$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
printBenchStyle	tools/eigen/bench/spbench/spbenchstyle.h	/^void printBenchStyle(std::ofstream& out)$/;"	f
printInfoLog	tools/eigen/unsupported/test/openglsupport.cpp	/^void printInfoLog(GLuint objectID)$/;"	f
printStatheader	tools/eigen/bench/spbench/spbenchsolver.h	/^void printStatheader(std::ofstream& out)$/;"	f
print_array	tools/eigen/demos/mix_eigen_and_c/example.c	/^void print_array(double *array, int n)$/;"	f
print_matrix	tools/eigen/Eigen/src/Core/IO.h	/^std::ostream & print_matrix(std::ostream & s, const Derived& _m, const IOFormat& fmt)$/;"	f	namespace:Eigen::internal
print_mode	tools/eigen/bench/product_threshold.cpp	/^void print_mode(int mode)$/;"	f
print_n	tools/eigen/bench/product_threshold.cpp	/^template<> struct print_n<END> { static void run(){} };$/;"	s	file:
print_n	tools/eigen/bench/product_threshold.cpp	/^template<int N> struct print_n$/;"	s	file:
print_partition	tools/eigen/bench/analyze-blocking-sizes.cpp	/^void print_partition($/;"	f
print_size	tools/eigen/doc/examples/function_taking_eigenbase.cpp	/^void print_size(const EigenBase<Derived>& b)$/;"	f
processRow	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void processRow(const LhsEval& lhsEval, const DenseRhsType& rhs, DenseResType& res, const typename Res::Scalar& alpha, Index i, Index col)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
processTriangularMatrix	tools/eigen/unsupported/test/matrix_functions.h	/^struct processTriangularMatrix$/;"	s
processTriangularMatrix	tools/eigen/unsupported/test/matrix_functions.h	/^struct processTriangularMatrix<MatrixType,0>$/;"	s
prod	tools/eigen/Eigen/src/Core/Product.h	/^prod(const Lhs& lhs, const Rhs& rhs)$/;"	f	namespace:Eigen
prod	tools/eigen/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::prod() const$/;"	f	class:Eigen::DenseBase
prod	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const ProdReturnType prod() const$/;"	f	class:Eigen::VectorwiseOp
prod	tools/eigen/bench/product_threshold.cpp	/^EIGEN_DONT_INLINE void prod(const Lhs& a, const Rhs& b, Res& c)$/;"	f
prod	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    prod() const {$/;"	f	class:Eigen::TensorBase
prod	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    prod(const Dims& dims) const {$/;"	f	class:Eigen::TensorBase
product	tools/eigen/test/product.h	/^template<typename MatrixType> void product(const MatrixType& m)$/;"	f
product1x1	tools/eigen/test/product_small.cpp	/^void product1x1()$/;"	f
product_evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, LazyCoeffBasedProductMode, DenseShape, DenseShape, typename traits<Lhs>::Scalar, typename traits<Rhs>::Scalar > $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, DenseShape, DenseShape, typename Lhs::Scalar, typename Rhs::Scalar > $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, Options>, ProductTag, LhsShape, RhsShape, typename traits<Lhs>::Scalar, typename traits<Rhs>::Scalar,$/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, ProductKind>, ProductTag, DenseShape, DiagonalShape, typename Lhs::Scalar, typename Rhs::Scalar> $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, ProductKind>, ProductTag, DiagonalShape, DenseShape, typename Lhs::Scalar, typename Rhs::Scalar> $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, DenseShape, HomogeneousShape>$/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, HomogeneousShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, OuterProduct, DenseShape, SparseShape, typename traits<Lhs>::Scalar, typename traits<Rhs>::Scalar> $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, OuterProduct, SparseShape, DenseShape, typename traits<Lhs>::Scalar, typename traits<Rhs>::Scalar> $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  explicit product_evaluator(const XprType& xpr) : Base(xpr.lhs(), xpr.rhs().diagonal().transpose()) {}$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  explicit product_evaluator(const XprType& xpr) : Base(xpr.rhs(), xpr.lhs().diagonal()) {}$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, ProductTag, DiagonalShape, SparseShape, typename traits<Lhs>::Scalar, typename traits<Rhs>::Scalar> $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, ProductTag, SparseShape, DiagonalShape, typename traits<Lhs>::Scalar, typename traits<Rhs>::Scalar> $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^  explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^struct product_evaluator<Product<Lhs, Rhs, AliasFreeProduct>, ProductTag, PermutationShape, SparseShape, typename traits<Lhs>::Scalar, typename traits<Rhs>::Scalar> $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^struct product_evaluator<Product<Lhs, Rhs, AliasFreeProduct>, ProductTag, SparseShape, PermutationShape, typename traits<Lhs>::Scalar, typename traits<Rhs>::Scalar> $/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct product_evaluator<Product<Lhs, RhsView, DefaultProduct>, ProductTag, SparseShape, SparseSelfAdjointShape, typename traits<Lhs>::Scalar, typename traits<RhsView>::Scalar>$/;"	s	namespace:Eigen::internal
product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct product_evaluator<Product<LhsView, Rhs, DefaultProduct>, ProductTag, SparseSelfAdjointShape, SparseShape, typename traits<LhsView>::Scalar, typename traits<Rhs>::Scalar>$/;"	s	namespace:Eigen::internal
product_extra	tools/eigen/test/product_extra.cpp	/^template<typename MatrixType> void product_extra(const MatrixType& m)$/;"	f
product_notemporary	tools/eigen/test/product_notemporary.cpp	/^template<typename MatrixType> void product_notemporary(const MatrixType& m)$/;"	f
product_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct product_op       { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a * b)   { return a * b;   } };$/;"	s	namespace:Eigen::internal
product_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct product_op {$/;"	s	namespace:Eigen::internal
product_promote_storage_type	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Dense,Sparse, OuterProduct> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Sparse,Dense, OuterProduct> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<PermutationStorage, Sparse,             ProductTag> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<Sparse,             PermutationStorage, ProductTag> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_result_scalar	tools/eigen/Eigen/src/Core/Product.h	/^  struct product_result_scalar<Lhs, Rhs, LhsShape, PermutationShape>$/;"	s	namespace:Eigen::internal
product_result_scalar	tools/eigen/Eigen/src/Core/Product.h	/^  struct product_result_scalar<Lhs, Rhs, LhsShape, TranspositionsShape>$/;"	s	namespace:Eigen::internal
product_result_scalar	tools/eigen/Eigen/src/Core/Product.h	/^struct product_result_scalar$/;"	s	namespace:Eigen::internal
product_result_scalar	tools/eigen/Eigen/src/Core/Product.h	/^struct product_result_scalar<Lhs, Rhs, PermutationShape, RhsShape>$/;"	s	namespace:Eigen::internal
product_result_scalar	tools/eigen/Eigen/src/Core/Product.h	/^struct product_result_scalar<Lhs, Rhs, TranspositionsShape, RhsShape>$/;"	s	namespace:Eigen::internal
product_selfadjoint	tools/eigen/test/product_selfadjoint.cpp	/^template<typename MatrixType> void product_selfadjoint(const MatrixType& m)$/;"	f
product_selfadjoint_matrix	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,LhsSelfAdjoint,ConjugateLhs, RhsStorageOrder,RhsSelfAdjoint,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^    uint16_t product_size;$/;"	m	struct:evaluate_defaults_action_t::results_entry_t	file:
product_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  uint16_t product_size;$/;"	m	struct:inputfile_entry_t	file:
product_size	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  uint16_t product_size;$/;"	m	struct:preprocessed_inputfile_entry_t	file:
product_size_category	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<int Size, int MaxSize> struct product_size_category$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,LhsIsTriangular,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,false,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,true,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix_trmm	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^struct product_triangular_matrix_matrix_trmm :$/;"	s	namespace:Eigen::internal
product_type	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<typename Lhs, typename Rhs> struct product_type$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	s	namespace:Eigen::internal
project	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  static inline void project(MatrixSolver &OP, int n, int k, Scalar *vecs)$/;"	f	struct:Eigen::internal::OP
projection	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline VectorType projection(const VectorType& p) const { return p - signedDistance(p) * normal(); }$/;"	f	class:Eigen::Hyperplane
projection	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType projection(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
projectionMatrix	tools/eigen/demos/opengl/camera.cpp	/^const Matrix4f& Camera::projectionMatrix(void) const$/;"	f	class:Camera
projective_transform_inverse	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse$/;"	s	namespace:Eigen::internal
projective_transform_inverse	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse<TransformType, Projective>$/;"	s	namespace:Eigen::internal
promote	tools/eigen/unsupported/test/FFTW.cpp	/^complex<long double>  promote(complex<T> x) { return complex<long double>(x.real(),x.imag()); }$/;"	f
promote	tools/eigen/unsupported/test/FFTW.cpp	/^complex<long double>  promote(double x) { return complex<long double>( x); }$/;"	f
promote	tools/eigen/unsupported/test/FFTW.cpp	/^complex<long double>  promote(float x) { return complex<long double>( x); }$/;"	f
promote	tools/eigen/unsupported/test/FFTW.cpp	/^complex<long double>  promote(long double x) { return complex<long double>( x); }$/;"	f
promote_index_type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^struct promote_index_type$/;"	s	namespace:Eigen::internal
protate	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<size_t offset, typename Packet> EIGEN_DEVICE_FUNC inline Packet protate(const Packet& a)$/;"	f	namespace:Eigen::internal
protate_impl	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^struct protate_impl$/;"	s	namespace:Eigen::internal
protate_impl	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^struct protate_impl<offset, Packet2d>$/;"	s	namespace:Eigen::internal
protate_impl	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^struct protate_impl<offset, Packet4f>$/;"	s	namespace:Eigen::internal
protate_impl	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^struct protate_impl<offset, Packet4i>$/;"	s	namespace:Eigen::internal
protate_impl	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct protate_impl<offset, Packet2d>$/;"	s	namespace:Eigen::internal
protate_impl	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct protate_impl<offset, Packet4f>$/;"	s	namespace:Eigen::internal
protate_impl	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct protate_impl<offset, Packet4i>$/;"	s	namespace:Eigen::internal
pround	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet pround(const Packet& a) { using numext::round; return round(a); }$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet prsqrt(const Packet& a) {$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet4d prsqrt<Packet4d>(const Packet4d& x) {$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f prsqrt<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f prsqrt<Packet8f>(const Packet8f& x) {$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 prsqrt<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 prsqrt<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d prsqrt<Packet2d>(const Packet2d& x) {$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& x) {$/;"	f	namespace:Eigen::internal
prune	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::internal::CompressedStorage
prune	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const KeepFunc& keep = KeepFunc())$/;"	f	class:Eigen::SparseMatrix
prune	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseMatrix
prune	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseVector
prune	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    void prune(Scalar reference, RealScalar epsilon = dummy_precision<RealScalar > ()) {$/;"	f	class:Eigen::SkylineMatrix
prune	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void prune(Scalar reference, RealScalar epsilon = dummy_precision<RealScalar>()) {$/;"	f	class:Eigen::SkylineStorage
prune	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void prune(Scalar reference, RealScalar epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::DynamicSparseMatrix
pruneL	tools/eigen/Eigen/src/SparseLU/SparseLU_pruneL.h	/^void SparseLUImpl<Scalar,StorageIndex>::pruneL(const Index jcol, const IndexVector& perm_r, const Index pivrow, const Index nseg,$/;"	f	class:Eigen::internal::SparseLUImpl
prune_column	tools/eigen/test/sparse_solver.h	/^  prune_column(Index col) : m_col(col) {}$/;"	f	struct:prune_column
prune_column	tools/eigen/test/sparse_solver.h	/^struct prune_column {$/;"	s
pruned	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^SparseMatrixBase<Derived>::pruned(const Scalar& reference,$/;"	f	class:Eigen::SparseMatrixBase
pscatter	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^ template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pscatter(Scalar* to, const Packet& from, Index \/*stride*\/)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet2cd>(std::complex<double>* to, const Packet2cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet4cf>(std::complex<float>* to, const Packet4cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet4d>(double* to, const Packet4d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet8f>(float* to, const Packet8f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet1cd>(std::complex<double>* to, const Packet1cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, double2>(double* to, const double2& from, Index stride) {$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, float4>(float* to, const float4& from, Index stride) {$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet1cd>(std::complex<double>* to, const Packet1cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pset1(const typename unpacket_traits<Packet>::type& a) { return a; }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pset1<Packet2cd>(const std::complex<double>& from)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pset1<Packet4cf>(const std::complex<float>& from)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pset1<Packet4d>(const double& from) { return _mm256_set1_pd(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pset1<Packet8f>(const float&  from) { return _mm256_set1_ps(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pset1<Packet8i>(const int&    from) { return _mm256_set1_epi32(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double&  from) {$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) {$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)   {$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pset1<double2>(const double& from) {$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pset1<float4>(const float&  from) {$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double&  from) { return vdupq_n_f64(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return vdupq_n_f32(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)   { return vdupq_n_s32(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set1_pd(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set_pd(from,from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps1(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set1_epi32(from); }$/;"	f	namespace:Eigen::internal
pset1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set_epi32(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pseudoEigenvalueMatrix	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^MatrixType EigenSolver<MatrixType>::pseudoEigenvalueMatrix() const$/;"	f	class:Eigen::EigenSolver
pseudoEigenvectors	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    const MatrixType& pseudoEigenvectors() const$/;"	f	class:Eigen::EigenSolver
pseudo_inverse	tools/eigen/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	/^void pseudo_inverse(const CMatrix &C, CINVMatrix &CINV)$/;"	f	namespace:Eigen::internal
pseudo_random	tools/eigen/bench/btl/generic_bench/init/init_function.hh	/^double pseudo_random(int \/*index*\/)$/;"	f
pseudo_random	tools/eigen/bench/btl/generic_bench/init/init_function.hh	/^double pseudo_random(int \/*index_i*\/, int \/*index_j*\/)$/;"	f
psin	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet psin(const Packet& a) { using std::sin; return sin(a); }$/;"	f	namespace:Eigen::internal
psin	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^psin<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
psin	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psin<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psinh	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet psinh(const Packet& a) { using std::sinh; return sinh(a); }$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet psqrt(const Packet& a) { using std::sqrt; return sqrt(a); }$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet4d psqrt<Packet4d>(const Packet4d& x) {$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f psqrt<Packet8f>(const Packet8f& x) {$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/arch/AVX/MathFunctions.h	/^psqrt<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 psqrt<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 psqrt<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d psqrt<Packet2d>(const Packet2d& x) { return _mm_sqrt_pd(x); }$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psqrt	tools/eigen/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& x) { return _mm_sqrt_ps(x); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pstore(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet2cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float>* to, const Packet4cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore(&numext::real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet4d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_store_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet8f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_store_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet8i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_storeu_si256(reinterpret_cast<__m256i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double*   to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE vec_st((Packet4f)from, 0, (float *)to); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE vec_st(from, 0, to); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE vec_st(from, 0, to); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstore<double>(double* to, const double2& from) {$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstore<float>(float*   to, const float4& from) {$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double*   to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_f64(to, from); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, Packet2d(from.v)); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore(&numext::real_ref(*to), Packet4f(from.v)); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstore	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_si128(reinterpret_cast<__m128i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstore1	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^inline void pstore1(typename unpacket_traits<Packet>::type* to, const typename unpacket_traits<Packet>::type& a)$/;"	f	namespace:Eigen::internal
pstore1	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet4d>(double* to, const double& a)$/;"	f	namespace:Eigen::internal
pstore1	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet8f>(float* to, const float& a)$/;"	f	namespace:Eigen::internal
pstore1	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet8i>(int* to, const int& a)$/;"	f	namespace:Eigen::internal
pstore1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet2d>(double* to, const double& a)$/;"	f	namespace:Eigen::internal
pstore1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet4f>(float* to, const float& a)$/;"	f	namespace:Eigen::internal
pstoret	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void pstoret(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pstoreu(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet2cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float>* to, const Packet4cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(&numext::real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet4d& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*   to, const Packet8f& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*       to, const Packet8i& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_si256(reinterpret_cast<__m256i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double*  to, const Packet2d& from)$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*   to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*       to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const double2& from) {$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const float4& from) {$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double*  to, const Packet2d& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_f64(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, Packet2d(from.v)); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(&numext::real_ref(*to), Packet4f(from.v)); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet2d& from) {$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), Packet2d(_mm_castps_pd(from))); }$/;"	f	namespace:Eigen::internal
pstoreu	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), Packet2d(_mm_castsi128_pd(from))); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^psub(const Packet& a,$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd psub<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_sub_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf psub<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_sub_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d psub<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_sub_pd(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f psub<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_sub_ps(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_sub(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_sub(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_sub(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_sub(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_sub(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 psub<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 psub<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(psub<Packet2d>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(psub<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return vsubq_f64(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return vsubq_f32(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return vsubq_s32(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_sub_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_sub_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_sub_pd(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_sub_ps(a,b); }$/;"	f	namespace:Eigen::internal
psub	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_sub_epi32(a,b); }$/;"	f	namespace:Eigen::internal
ptan	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet ptan(const Packet& a) { using std::tan; return tan(a); }$/;"	f	namespace:Eigen::internal
ptanh	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^Packet ptanh(const Packet& a) { using std::tanh; return tanh(a); }$/;"	f	namespace:Eigen::internal
ptr	tools/eigen/Eigen/src/Core/util/Memory.h	/^  T* &ptr() { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
ptr	tools/eigen/Eigen/src/Core/util/Memory.h	/^  const T* ptr() const { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
ptr	tools/eigen/test/mapstaticmethods.cpp	/^float *ptr;$/;"	v
ptranspose	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^ptranspose(PacketBlock<Packet,1>& \/*kernel*\/) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^ptranspose(PacketBlock<Packet2cd,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^ptranspose(PacketBlock<Packet4cf,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet4d,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet8f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet8f,8>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet1cd,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet2cf,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^ptranspose(PacketBlock<double2,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^ptranspose(PacketBlock<float4,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet1cd,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^ptranspose(PacketBlock<Packet2cf,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^ptranspose(PacketBlock<Packet2cf,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
punpackp	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^EIGEN_STRONG_INLINE void punpackp(Packet4f* vecs)$/;"	f	namespace:Eigen::internal
pushDownZero	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::pushDownZero(Index z, Index f, Index l)$/;"	f	class:Eigen::RealQZ
pushMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^inline void GpuHelper::pushMatrix(GLenum matrixTarget)$/;"	f	class:GpuHelper
pushMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^inline void GpuHelper::pushMatrix(const Matrix<Scalar,4,4, _Flags, 4,4>& mat, GLenum matrixTarget)$/;"	f	class:GpuHelper
pushMatrix	tools/eigen/demos/opengl/gpuhelper.h	/^void GpuHelper::pushMatrix($/;"	f	class:GpuHelper
pushProjectionMode2D	tools/eigen/demos/opengl/gpuhelper.cpp	/^void GpuHelper::pushProjectionMode2D(ProjectionMode2D pm)$/;"	f	class:GpuHelper
push_assert	tools/eigen/test/main.h	/^        static bool push_assert = false;$/;"	m	namespace:Eigen::internal
push_back	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^  void push_back(const value_type& x)$/;"	f	class:std::deque
push_back	tools/eigen/Eigen/src/StlSupport/StdList.h	/^    void push_back(const value_type& x)$/;"	f	class:std::list
push_back	tools/eigen/Eigen/src/StlSupport/StdVector.h	/^  void push_back(const value_type& x)$/;"	f	class:std::vector
push_front	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^  void push_front(const value_type& x)$/;"	f	class:std::deque
putMarketHeader	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void putMarketHeader(std::string& header,int sym)$/;"	f	namespace:Eigen::internal
putVectorElt	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void putVectorElt(Scalar value, std::ofstream& out)$/;"	f	namespace:Eigen::internal
putVectorElt	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void putVectorElt(std::complex<Scalar> value, std::ofstream& out)$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^pxor(const Packet& a, const Packet& b) { return a ^ b; }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pxor   <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_xor_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pxor   <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_xor_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pxor<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_xor_pd(a,b); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pxor<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_xor_ps(a,b); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_xor(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_xor(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return veorq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_xor_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_xor_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_xor_pd(a,b); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_xor_ps(a,b); }$/;"	f	namespace:Eigen::internal
pxor	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_xor_si128(a,b); }$/;"	f	namespace:Eigen::internal
q	eval.py	/^        q = pair[0]$/;"	v
qr	tools/eigen/test/qr.cpp	/^template<typename MatrixType> void qr(const MatrixType& m)$/;"	f
qr	tools/eigen/test/qr_colpivoting.cpp	/^template<typename MatrixType> void qr()$/;"	f
qr	tools/eigen/test/qr_fullpivoting.cpp	/^template<typename MatrixType> void qr()$/;"	f
qr_fixedsize	tools/eigen/test/qr.cpp	/^template<typename MatrixType, int Cols2> void qr_fixedsize()$/;"	f
qr_fixedsize	tools/eigen/test/qr_colpivoting.cpp	/^template<typename MatrixType, int Cols2> void qr_fixedsize()$/;"	f
qr_invertible	tools/eigen/test/qr.cpp	/^template<typename MatrixType> void qr_invertible()$/;"	f
qr_invertible	tools/eigen/test/qr_colpivoting.cpp	/^template<typename MatrixType> void qr_invertible()$/;"	f
qr_invertible	tools/eigen/test/qr_fullpivoting.cpp	/^template<typename MatrixType> void qr_invertible()$/;"	f
qr_preconditioner_impl	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^> struct qr_preconditioner_impl {};$/;"	s	namespace:Eigen::internal
qr_preconditioner_impl	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, QRPreconditioner, Case, false>$/;"	c	namespace:Eigen::internal
qr_preconditioner_should_do_anything	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^struct qr_preconditioner_should_do_anything$/;"	s	namespace:Eigen::internal
qr_verify_assert	tools/eigen/test/qr.cpp	/^template<typename MatrixType> void qr_verify_assert()$/;"	f
qr_verify_assert	tools/eigen/test/qr_colpivoting.cpp	/^template<typename MatrixType> void qr_verify_assert()$/;"	f
qr_verify_assert	tools/eigen/test/qr_fullpivoting.cpp	/^template<typename MatrixType> void qr_verify_assert()$/;"	f
qrsolv	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h	/^void qrsolv($/;"	f	namespace:Eigen::internal
qtf	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::HybridNonLinearSolver
qtf	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::LevenbergMarquardt
quat_conj	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^template<int Arch, class Derived, typename Scalar, int _Options> struct quat_conj$/;"	s	namespace:Eigen::internal
quat_conj	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_conj<Architecture::SSE, Derived, double, Alignment>$/;"	s	namespace:Eigen::internal
quat_conj	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_conj<Architecture::SSE, Derived, float, Alignment>$/;"	s	namespace:Eigen::internal
quat_product	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^template<int Arch, class Derived1, class Derived2, typename Scalar, int _Options> struct quat_product$/;"	s	namespace:Eigen::internal
quat_product	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, double, Alignment>$/;"	s	namespace:Eigen::internal
quat_product	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, float, Aligned16>$/;"	s	namespace:Eigen::internal
quaternion	tools/eigen/test/geo_quaternion.cpp	/^template<typename Scalar, int Options> void quaternion(void)$/;"	f
quaternionAlignment	tools/eigen/test/geo_quaternion.cpp	/^template<typename Scalar> void quaternionAlignment(void){$/;"	f
quaternionbase_assign_impl	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,3,3>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,4,1>$/;"	s	namespace:Eigen::internal
quatmul_default	tools/eigen/bench/quatmul.cpp	/^EIGEN_DONT_INLINE void quatmul_default(const Quat& a, const Quat& b, Quat& c)$/;"	f
quatmul_novec	tools/eigen/bench/quatmul.cpp	/^EIGEN_DONT_INLINE void quatmul_novec(const Quat& a, const Quat& b, Quat& c)$/;"	f
queryCacheSizes	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_amd	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_amd(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel(int& l1, int& l2, int& l3, int max_std_funcs)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_codes	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_codes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_direct	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_direct(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryL1CacheSize	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline int queryL1CacheSize()$/;"	f	namespace:Eigen::internal
queryTopLevelCacheSize	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline int queryTopLevelCacheSize()$/;"	f	namespace:Eigen::internal
quiet_NaN	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static const mpfr::mpreal quiet_NaN()        { return mpfr::mpreal().setNan();    }$/;"	f	class:std::numeric_limits
r	tools/eigen/blas/f2c/datatypes.h	/^typedef struct { doublereal r, i; } doublecomplex;$/;"	m	struct:__anon136
r	tools/eigen/blas/f2c/datatypes.h	/^typedef struct { real r, i; } complex;$/;"	m	struct:__anon135
r1mpyq	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h	/^void r1mpyq(DenseIndex m, DenseIndex n, Scalar *a, const std::vector<JacobiRotation<Scalar> > &v_givens, const std::vector<JacobiRotation<Scalar> > &w_givens)$/;"	f	namespace:Eigen::internal
r1updt	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/r1updt.h	/^void r1updt($/;"	f	namespace:Eigen::internal
r_cnjg	tools/eigen/blas/f2c/r_cnjg.c	/^void r_cnjg(complex *r, complex *z) {$/;"	f
radius	tools/eigen/unsupported/test/BVH.cpp	/^  double radius;$/;"	m	struct:Ball	file:
radix	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^T radix(){ return 2; }$/;"	f	namespace:Eigen::internal
radix	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const int  radix             = 2;    $/;"	m	class:std::numeric_limits
radix2	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^T radix2(){ return radix<T>()*radix<T>(); }$/;"	f	namespace:Eigen::internal
ramp	tools/eigen/doc/examples/class_CwiseUnaryOp_ptrfun.cpp	/^double ramp(double x)$/;"	f
randMatrixSpecialUnitary	tools/eigen/test/umeyama.cpp	/^Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic> randMatrixSpecialUnitary(int size)$/;"	f
randMatrixUnitary	tools/eigen/test/umeyama.cpp	/^Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic> randMatrixUnitary(int size)$/;"	f
random	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random()$/;"	f	namespace:Eigen::internal
random	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::internal
random	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void random(int num_iters) {$/;"	f	class:BenchmarkSuite
random	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(random);$/;"	v
random	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    random() const {$/;"	f	class:Eigen::TensorBase
random	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    random(const RandomGenerator& gen = RandomGenerator()) const {$/;"	f	class:Eigen::TensorBase
random	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal random(unsigned int seed = 0)$/;"	f	namespace:mpfr
random2	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal random2 (mp_size_t size, mp_exp_t exp)$/;"	f	namespace:mpfr
randomMatrixWithImagEivals	tools/eigen/unsupported/test/matrix_function.cpp	/^struct randomMatrixWithImagEivals$/;"	s	file:
randomMatrixWithImagEivals	tools/eigen/unsupported/test/matrix_function.cpp	/^struct randomMatrixWithImagEivals<MatrixType, 0>$/;"	s	file:
randomMatrixWithImagEivals	tools/eigen/unsupported/test/matrix_function.cpp	/^struct randomMatrixWithImagEivals<MatrixType, 1>$/;"	s	file:
randomMatrixWithRealEivals	tools/eigen/unsupported/test/matrix_function.cpp	/^MatrixType randomMatrixWithRealEivals(const typename MatrixType::Index size)$/;"	f
randomPermutationVector	tools/eigen/test/main.h	/^void randomPermutationVector(PermutationVectorType& v, Index size)$/;"	f	namespace:Eigen
randomTest	tools/eigen/unsupported/test/matrix_exponential.cpp	/^void randomTest(const MatrixType& m, double tol)$/;"	f
random_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl {};$/;"	s	namespace:Eigen::internal
random_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
random_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
random_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
random_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct random_impl : random_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
random_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^template<> struct random_impl<bool>$/;"	s	namespace:Eigen::internal
random_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct random_retval$/;"	s	namespace:Eigen::internal
rank	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivLU
rank	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::ColPivHouseholderQR
rank	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivHouseholderQR
rank	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    Index rank() const$/;"	f	class:Eigen::SPQR
rank	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  inline Index rank() const$/;"	f	class:Eigen::SVDBase
rank	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    Index rank() const$/;"	f	class:Eigen::SparseQR
rank	tools/eigen/Eigen/src/misc/Image.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::image_retval_base
rank	tools/eigen/Eigen/src/misc/Kernel.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::kernel_retval_base
rank	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index                         rank()                   const { return NumIndices; }$/;"	f	class:Eigen::Tensor
rank	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE size_t rank() const {$/;"	f	struct:Eigen::DSizes
rank	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::ptrdiff_t rank() const {$/;"	f	struct:Eigen::Sizes
rank	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index                      rank()                   const { return NumIndices; }$/;"	f	class:Eigen::TensorFixedSize
rank	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Index rank() const { return m_dimensions.rank(); }$/;"	f	class:Eigen::TensorMap
rank	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Index rank() const { return m_evaluator->dimensions().size(); }$/;"	f	class:Eigen::TensorRef
rank2_update_selector	tools/eigen/blas/Rank2Update.h	/^struct rank2_update_selector$/;"	s	namespace:internal
rankUpdate	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::rankUpdate(const MatrixBase<Derived>& w, const typename LDLT<MatrixType,_UpLo>::RealScalar& sigma)$/;"	f	class:Eigen::LDLT
rankUpdate	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static Index rankUpdate(MatrixType& mat, const VectorType& vec, const RealScalar& sigma)$/;"	f	struct:Eigen::internal::llt_inplace
rankUpdate	tools/eigen/Eigen/src/Cholesky/LLT.h	/^LLT<_MatrixType,_UpLo> LLT<_MatrixType,_UpLo>::rankUpdate(const VectorType& v, const RealScalar& sigma)$/;"	f	class:Eigen::LLT
rankUpdate	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const Scalar& alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	tools/eigen/Eigen/src/Core/products/SelfadjointRank2Update.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const MatrixBase<DerivedV>& v, const Scalar& alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^SparseSelfAdjointView<MatrixType,Mode>::rankUpdate(const SparseMatrixBase<DerivedU>& u, const Scalar& alpha)$/;"	f	class:Eigen::SparseSelfAdjointView
rat42_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    rat42_functor(void) : Functor<double>(3,9) {}$/;"	f	struct:rat42_functor
rat42_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct rat42_functor : Functor<double>$/;"	s	file:
rat42_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    rat42_functor(void) : DenseFunctor<double>(3,9) {}$/;"	f	struct:rat42_functor
rat42_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct rat42_functor : DenseFunctor<double>$/;"	s	file:
rat43_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    rat43_functor(void) : Functor<double>(4,15) {}$/;"	f	struct:rat43_functor
rat43_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct rat43_functor : Functor<double>$/;"	s	file:
rat43_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    rat43_functor(void) : DenseFunctor<double>(4,15) {}$/;"	f	struct:rat43_functor
rat43_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct rat43_functor : DenseFunctor<double>$/;"	s	file:
ratio	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set size ratio 0 1,1$/;"	v
ratio	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar ratio;$/;"	m	class:Eigen::HybridNonLinearSolver
ratio	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar ratio;$/;"	m	class:Eigen::LevenbergMarquardt
rawMatrix	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const CholMatrixType rawMatrix() const {$/;"	f	class:Eigen::SimplicialCholesky
read_xy_file	tools/eigen/bench/btl/data/regularize.cxx	/^void read_xy_file(const string & filename, vector<int> & tab_sizes, vector<double> & tab_mflops){$/;"	f
read_xy_file	tools/eigen/bench/btl/data/smooth.cxx	/^void read_xy_file(const string & filename, vector<int> & tab_sizes, vector<double> & tab_mflops){$/;"	f
read_xy_file	tools/eigen/bench/btl/generic_bench/utils/xy_file.hh	/^bool read_xy_file(const std::string & filename, std::vector<int> & tab_sizes,$/;"	f
ready	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^    bool ready;$/;"	m	struct:Eigen::ThreadPool::Waiter
real	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real, Scalar) real(const Scalar& x)$/;"	f	namespace:Eigen::numext
real	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() const { return RealReturnType(derived()); }$/;"	f
real	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() { return NonConstRealReturnType(derived()); }$/;"	f
real	tools/eigen/blas/f2c/datatypes.h	/^typedef float real;$/;"	t
real	tools/eigen/test/exceptions.cpp	/^ScalarWithExceptions real(const ScalarWithExceptions &x) { return x; }$/;"	f
real	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline const AutoDiffScalar<DerType>& real(const AutoDiffScalar<DerType>& x)  { return x; }$/;"	f	namespace:Eigen
realRoots	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline void realRoots( Stl_back_insertion_sequence& bi_seq,$/;"	f	class:Eigen::PolynomialSolverBase
realRoots_to_monicPolynomial_scalar	tools/eigen/unsupported/test/polynomialutils.cpp	/^template<typename _Scalar> void realRoots_to_monicPolynomial_scalar()$/;"	f
realRoots_to_monicPolynomial_test	tools/eigen/unsupported/test/polynomialutils.cpp	/^void realRoots_to_monicPolynomial_test(int deg)$/;"	f
real_2x2_jacobi_svd	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^void real_2x2_jacobi_svd(const MatrixType& matrix, Index p, Index q,$/;"	f	namespace:Eigen::internal
real_complex	tools/eigen/test/linearstructure.cpp	/^template<typename MatrixType> void real_complex(DenseIndex rows = MatrixType::RowsAtCompileTime, DenseIndex cols = MatrixType::ColsAtCompileTime)$/;"	f
real_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct real_default_impl$/;"	s	namespace:Eigen::internal
real_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct real_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
real_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct real_impl : real_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
real_qz	tools/eigen/test/real_qz.cpp	/^template<typename MatrixType> void real_qz(const MatrixType& m)$/;"	f
real_ref	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) real_ref(Scalar& x)$/;"	f	namespace:Eigen::numext
real_ref	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) >::type real_ref(const Scalar& x)$/;"	f	namespace:Eigen::numext
real_ref_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct real_ref_impl$/;"	s	namespace:Eigen::internal
real_ref_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct real_ref_retval$/;"	s	namespace:Eigen::internal
real_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct real_retval$/;"	s	namespace:Eigen::internal
real_twiddles	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    Complex * real_twiddles(int ncfft2)$/;"	f	struct:Eigen::internal::kissfft_impl
real_type	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  typedef real                      real_type;$/;"	t	class:c_interface_base
real_type	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  typedef real real_type ;$/;"	t	class:STL_interface
real_type	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  typedef real real_type ;$/;"	t	class:blaze_interface
real_type	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  typedef real real_type ;$/;"	t	class:blitz_interface
real_type	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  typedef real real_type ;$/;"	t	class:tiny_blitz_interface
real_type	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  typedef real real_type;$/;"	t	class:eigen2_interface
real_type	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  typedef real real_type;$/;"	t	class:eigen3_interface
real_type	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  typedef real real_type ;$/;"	t	class:gmm_interface
real_type	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  typedef real real_type ;$/;"	t	class:mtl4_interface
real_type	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  typedef real real_type;$/;"	t	class:tensor_interface
real_type	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  typedef real real_type ;$/;"	t	class:tvmet_interface
real_type	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  typedef real real_type ;$/;"	t	class:ublas_interface
realclock	tools/eigen/bench/btl/generic_bench/btl.hh	/^  bool realclock;$/;"	m	class:BtlConfig
reallocate	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    void reallocate(Index size)$/;"	f	class:Eigen::internal::AmbiVector
reallocate	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline void reallocate(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
reallocate	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline void reallocate(Index diagSize, Index upperProfileSize, Index lowerProfileSize, Index upperSize, Index lowerSize) {$/;"	f	class:Eigen::SkylineStorage
reallocateSparse	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    void reallocateSparse()$/;"	f	class:Eigen::internal::AmbiVector
rebind	tools/eigen/Eigen/src/Core/util/Memory.h	/^  struct rebind$/;"	s	class:Eigen::aligned_allocator
rebind	tools/eigen/Eigen/src/StlSupport/details.h	/^    struct rebind$/;"	s	class:Eigen::aligned_allocator_indirection
rec_sqrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rec_sqrt(const mpreal& v, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
reconstructedMatrix	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^MatrixType LDLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LDLT
reconstructedMatrix	tools/eigen/Eigen/src/Cholesky/LLT.h	/^MatrixType LLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LLT
reconstructedMatrix	tools/eigen/Eigen/src/LU/FullPivLU.h	/^MatrixType FullPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::FullPivLU
reconstructedMatrix	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^MatrixType PartialPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::PartialPivLU
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^> struct reduce<Reducer, A, B, Ts...>$/;"	s	namespace:Eigen::internal
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^> struct reduce<Reducer, A, Ts...>$/;"	s	namespace:Eigen::internal
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    reduce(const Dims& dims, const Reducer& reducer) const {$/;"	f	class:Eigen::TensorBase
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const T t, T* accum) const {$/;"	f	struct:Eigen::internal::ArgMaxTupleReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const T t, T* accum) const {$/;"	f	struct:Eigen::internal::MaxReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const T t, T* accum) const {$/;"	f	struct:Eigen::internal::MinReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const T t, T* accum) const {$/;"	f	struct:Eigen::internal::ProdReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const T t, T* accum) const {$/;"	f	struct:Eigen::internal::SumReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const T t, T* accum) {$/;"	f	struct:Eigen::internal::MeanReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const T& t, T* accum) const {$/;"	f	struct:Eigen::internal::ArgMinTupleReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE typename Self::CoeffReturnType reduce(const Self& self, typename Self::Index firstIndex, typename Self::Index numValuesToReduce, Op& reducer) {$/;"	f	struct:Eigen::internal::InnerMostDimReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const Self& self, typename Self::Index firstIndex, Op& reducer, typename Self::CoeffReturnType* accum) {$/;"	f	struct:Eigen::internal::GenericDimReducer
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const Self& self, typename Self::Index firstIndex, Op& reducer, typename Self::PacketReturnType* accum) {$/;"	f	struct:Eigen::internal::InnerMostDimPreserver
reduce	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reduce(const Self&, typename Self::Index, Op&, typename Self::PacketReturnType*) {$/;"	f	struct:Eigen::internal::InnerMostDimPreserver
reduce	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^  void reduce(const float val, float* accum) { *accum += val * val; }$/;"	f	struct:UserReducer
reduceMatrix	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	402;"	d
reduceMatrix	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	421;"	d
reduceNoiseLevel	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void reduceNoiseLevel() { if (m_noise > 0) m_noise--; }$/;"	f	class:Eigen::IterationController
reducePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reducePacket(const Packet& p, Packet* accum) const {$/;"	f	struct:Eigen::internal::MaxReducer
reducePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reducePacket(const Packet& p, Packet* accum) const {$/;"	f	struct:Eigen::internal::MinReducer
reducePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reducePacket(const Packet& p, Packet* accum) const {$/;"	f	struct:Eigen::internal::ProdReducer
reducePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reducePacket(const Packet& p, Packet* accum) const {$/;"	f	struct:Eigen::internal::SumReducer
reducePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void reducePacket(const Packet& p, Packet* accum) {$/;"	f	struct:Eigen::internal::MeanReducer
reduceRow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	392;"	d
reduceRow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	420;"	d
reduceToTriangularForm	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^void ComplexSchur<MatrixType>::reduceToTriangularForm(bool computeU)$/;"	f	class:Eigen::ComplexSchur
reduce_dims	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  const Dims& reduce_dims() const { return m_reduce_dims; }$/;"	f	class:Eigen::TensorTupleReducerOp
reduce_op	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  const ReduceOp& reduce_op() const { return m_reduce_op; }$/;"	f	class:Eigen::TensorTupleReducerOp
reducer	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^    const Op& reducer() const { return m_reducer; }$/;"	f	class:Eigen::TensorReductionOp
reduction	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void reduction(int num_iters) {$/;"	f	class:BenchmarkSuite
reduction	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(reduction);$/;"	v
redux	tools/eigen/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::redux(const Func& func) const$/;"	f	class:Eigen::DenseBase
redux	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    redux(const BinaryOp& func = BinaryOp()) const$/;"	f	class:Eigen::VectorwiseOp
redux	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    redux(const Func& func) const$/;"	f	class:Eigen::Homogeneous
redux_evaluator	tools/eigen/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC explicit redux_evaluator(const XprType &xpr) : m_evaluator(xpr), m_xpr(xpr) {}$/;"	f	class:Eigen::internal::redux_evaluator
redux_evaluator	tools/eigen/Eigen/src/Core/Redux.h	/^class redux_evaluator$/;"	c	namespace:Eigen::internal
redux_impl	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, DefaultTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, SliceVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_impl<Func,Derived, DefaultTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller$/;"	s	namespace:Eigen::internal
redux_novec_unroller	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 0>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
redux_traits	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_traits$/;"	s	namespace:Eigen::internal
redux_vec_unroller	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_vec_unroller$/;"	s	namespace:Eigen::internal
redux_vec_unroller	tools/eigen/Eigen/src/Core/Redux.h	/^struct redux_vec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
refCount	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  int refCount() const { return m_refcount; }$/;"	f	class:Eigen::internal::TensorLazyBaseEvaluator
refX	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline VectorType& refX() $/;"	f	class:Eigen::MatrixMarketIterator
ref_matrix	tools/eigen/test/ref.cpp	/^template<typename MatrixType> void ref_matrix(const MatrixType& m)$/;"	f
ref_selector	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^struct ref_selector$/;"	s	struct:Eigen::internal::promote_index_type
ref_vector	tools/eigen/test/ref.cpp	/^template<typename VectorType> void ref_vector(const VectorType& m)$/;"	f
reference	tools/eigen/Eigen/src/Core/util/Memory.h	/^  typedef T&              reference;$/;"	t	class:Eigen::aligned_allocator
reference	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar reference;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
reference	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  Scalar reference() const { return m_reference; }$/;"	f	class:Eigen::SparseView
reference	tools/eigen/Eigen/src/StlSupport/details.h	/^    typedef T&        reference;$/;"	t	class:Eigen::aligned_allocator_indirection
register_eigen_printers	tools/eigen/debug/gdb/printers.py	/^def register_eigen_printers(obj):$/;"	f
regression_bug_654	tools/eigen/test/array_for_matrix.cpp	/^void regression_bug_654()$/;"	f
regularize_curve	tools/eigen/bench/btl/data/regularize.cxx	/^void regularize_curve(const string & filename,$/;"	f
relavenceLists	eval.py	/^    relavenceLists = {}$/;"	v
relax	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index relax; \/\/ To control degree of relaxing supernodes. If the number of nodes (columns) $/;"	m	struct:Eigen::internal::perfvalues
relax_snode	tools/eigen/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^void SparseLUImpl<Scalar,StorageIndex>::relax_snode (const Index n, IndexVector& et, const Index relax_columns, IndexVector& descendants, IndexVector& relax_end)$/;"	f	class:Eigen::internal::SparseLUImpl
relerr	tools/eigen/unsupported/test/matrix_functions.h	/^double relerr(const MatrixBase<Derived>& A, const MatrixBase<OtherDerived>& B)$/;"	f
rem	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rem (const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
remainder	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal remainder (const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
remove_all	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_all	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_const	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	s	namespace:Eigen::internal
remove_const	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	s	namespace:Eigen::internal
remove_pointer	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	s	namespace:Eigen::internal
remquo	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal remquo (long* q, const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
render	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^template<typename Real> void MandelbrotThread::render(int img_width, int img_height)$/;"	f	class:MandelbrotThread
rep_element	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename get<rep_pos, elements>::type rep_element;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
rep_pos	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  constexpr static int rep_pos = elements::count;$/;"	m	struct:Eigen::internal::group_theory::dimino_add_generator
repeat	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^array<t, n> repeat(t v) {$/;"	f	namespace:Eigen::internal
replicate	tools/eigen/Eigen/src/Core/DenseBase.h	/^    const Replicate<Derived, Dynamic, Dynamic> replicate(Index rowFactor, Index colFactor) const$/;"	f	class:Eigen::DenseBase
replicate	tools/eigen/Eigen/src/Core/Replicate.h	/^DenseBase<Derived>::replicate() const$/;"	f	class:Eigen::DenseBase
replicate	tools/eigen/Eigen/src/Core/Replicate.h	/^VectorwiseOp<ExpressionType,Direction>::replicate(Index factor) const$/;"	f	class:Eigen::VectorwiseOp
replicate	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    replicate(Index factor = Factor) const$/;"	f	class:Eigen::VectorwiseOp
replicate	tools/eigen/test/array_replicate.cpp	/^template<typename MatrixType> void replicate(const MatrixType& m)$/;"	f
report_on_cerr_on_assert_failure	tools/eigen/test/main.h	/^    static bool report_on_cerr_on_assert_failure = true;$/;"	m	namespace:Eigen
representation	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^      std::vector<int> representation;$/;"	m	struct:Eigen::DynamicSGroup::GroupElement
reps	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  unsigned int reps;  \/\/ Number of trials$/;"	m	class:STL_Timer
required_alignment	tools/eigen/Eigen/src/Core/Matrix.h	/^      required_alignment = unpacket_traits<PacketScalar>::alignment,$/;"	e	enum:Eigen::internal::traits::__anon292
res	tools/eigen/Eigen/src/Core/Visitor.h	/^  Scalar res;$/;"	m	struct:Eigen::internal::coeff_visitor
res	tools/eigen/doc/snippets/PartialRedux_count.cpp	/^Matrix<ptrdiff_t, 3, 1> res = (m.array() >= 0.5).rowwise().count();$/;"	v
res	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	262;"	d
res	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	494;"	d
reserve	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    void reserve(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
reserve	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(Index reserveSize)$/;"	f	class:Eigen::SparseMatrix
reserve	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(const SizesType& reserveSizes, const typename SizesType::value_type& enableif =$/;"	f	class:Eigen::SparseMatrix
reserve	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline void reserve(Index reserveSize) { m_data.reserve(reserveSize); }$/;"	f	class:Eigen::SparseVector
reserve	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void reserve(Index reserveSize, Index reserveUpperSize, Index reserveLowerSize) {$/;"	f	class:Eigen::SkylineMatrix
reserve	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void reserve(Index size, Index upperProfileSize, Index lowerProfileSize, Index upperSize, Index lowerSize) {$/;"	f	class:Eigen::SkylineStorage
reserve	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline void reserve(const Index nonzerosblocks)$/;"	f	class:Eigen::BlockSparseMatrix
reserve	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void reserve(Index reserveSize = 1000)$/;"	f	class:Eigen::DynamicSparseMatrix
reserveInnerVectors	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserveInnerVectors(const SizesType& reserveSizes)$/;"	f	class:Eigen::SparseMatrix
reset	tools/eigen/bench/BenchTimer.h	/^  inline void reset()$/;"	f	class:Eigen::BenchTimer
reset	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline void reset() {$/;"	f	class:Eigen::SkylineStorage
resetCamera	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::resetCamera()$/;"	f	class:RenderingWidget
resetParameters	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    void resetParameters() $/;"	f	class:Eigen::LevenbergMarquardt
resetParameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    void resetParameters(void) { parameters = Parameters(); }$/;"	f	class:Eigen::HybridNonLinearSolver
resetParameters	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    void resetParameters(void) { parameters = Parameters(); }$/;"	f	class:Eigen::LevenbergMarquardt
reshape	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    reshape(const NewDimensions& newDimensions) const {$/;"	f	class:Eigen::TensorBase
reshape	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    reshape(const NewDimensions& newDimensions) {$/;"	f	class:Eigen::TensorBase
residual	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double residual() const { return m_res; }$/;"	f	class:Eigen::IterationController
resize	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.const_cast_derived().resize(newSize); }$/;"	f	class:Eigen::ArrayWrapper
resize	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.const_cast_derived().resize(newSize); }$/;"	f	class:Eigen::MatrixWrapper
resize	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index rows, Index cols) { m_expression.const_cast_derived().resize(rows,cols); }$/;"	f	class:Eigen::ArrayWrapper
resize	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index rows, Index cols) { m_expression.const_cast_derived().resize(rows,cols); }$/;"	f	class:Eigen::MatrixWrapper
resize	tools/eigen/Eigen/src/Core/DenseBase.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::DenseBase
resize	tools/eigen/Eigen/src/Core/DenseBase.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
resize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void resize(Index size, Index rows, Index)$/;"	f	class:Eigen::DenseStorage
resize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void resize(Index size, Index, Index cols)$/;"	f	class:Eigen::DenseStorage
resize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
resize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index, Index rows, Index cols) { m_rows = rows; m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
resize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index, Index rows, Index) { m_rows = rows; }$/;"	f	class:Eigen::DenseStorage
resize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
resize	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    void resize(Index, Index, Index cols) { m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
resize	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline void resize(Index size) { m_diagonal.resize(size); }$/;"	f	class:Eigen::DiagonalMatrix
resize	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline void resize(Index newSize)$/;"	f	class:Eigen::PermutationBase
resize	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resize(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
resize	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index rows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
resize	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index size)$/;"	f	class:Eigen::PlainObjectBase
resize	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(NoChange_t, Index cols)$/;"	f	class:Eigen::PlainObjectBase
resize	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline void resize(Index newSize)$/;"	f	class:Eigen::TranspositionsBase
resize	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::TriangularBase
resize	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    void resize(Index size)$/;"	f	class:Eigen::internal::AmbiVector
resize	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    void resize(Index size, double reserveSizeFactor = 0)$/;"	f	class:Eigen::internal::CompressedStorage
resize	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
resize	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseSelfAdjointView
resize	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::SparseVector
resize	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseVector
resize	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size)$/;"	f	class:std::deque
resize	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::deque
resize	tools/eigen/Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size)$/;"	f	class:std::list
resize	tools/eigen/Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size, const value_type& x)$/;"	f	class:std::list
resize	tools/eigen/Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size)$/;"	f	class:std::vector
resize	tools/eigen/Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::vector
resize	tools/eigen/test/array_for_matrix.cpp	/^template<typename MatrixTraits> void resize(const MatrixTraits& t)$/;"	f
resize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC void resize(const DSizes<Index, NumIndices>& dimensions) {$/;"	f	class:Eigen::Tensor
resize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC void resize(const array<Index, NumIndices>& dimensions)$/;"	f	class:Eigen::Tensor
resize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    void resize(Index firstDimension, IndexTypes... otherDimensions)$/;"	f	class:Eigen::Tensor
resize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    void resize(const Sizes<Indices...>& dimensions) {$/;"	f	class:Eigen::Tensor
resize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    void resize(const Sizes<V1, V2, V3, V4, V5>& dimensions) {$/;"	f	class:Eigen::Tensor
resize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index size, const array<Index, NumIndices_>& nbDimensions)$/;"	f	class:Eigen::TensorStorage
resize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    void resize(size_t rows, size_t cols) {$/;"	f	class:Eigen::SkylineMatrix
resize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void resize(Index diagSize, Index upperProfileSize, Index lowerProfileSize, Index upperSize, Index lowerSize, float reserveSizeFactor = 0) {$/;"	f	class:Eigen::SkylineStorage
resize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline void resize(Index brow, Index bcol)$/;"	f	class:Eigen::BlockSparseMatrix
resize	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::DynamicSparseMatrix
resizeAndKeepData	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void resizeAndKeepData(Index rows, Index cols)$/;"	f	class:Eigen::DynamicSparseMatrix
resizeEvent	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^void MandelbrotWidget::resizeEvent(QResizeEvent *)$/;"	f	class:MandelbrotWidget
resizeGL	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::resizeGL(int width, int height)$/;"	f	class:RenderingWidget
resizeHeight	tools/eigen/doc/eigen_navtree_hacks.js	/^function resizeHeight() $/;"	f
resizeLike	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resizeLike(const EigenBase<OtherDerived>& _other)$/;"	f	class:Eigen::PlainObjectBase
resizeLikeTest	tools/eigen/test/resize.cpp	/^void resizeLikeTest()$/;"	f
resizeLikeTest1020	tools/eigen/test/resize.cpp	/^void resizeLikeTest1020() { resizeLikeTest<10,20>(); }$/;"	f
resizeLikeTest12	tools/eigen/test/resize.cpp	/^void resizeLikeTest12() { resizeLikeTest<1,2>(); }$/;"	f
resizeLikeTest31	tools/eigen/test/resize.cpp	/^void resizeLikeTest31() { resizeLikeTest<3,1>(); }$/;"	f
resizeNonZeros	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    void resizeNonZeros(Index size)$/;"	f	class:Eigen::SparseMatrix
resizeNonZeros	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    void resizeNonZeros(Index size) { m_data.resize(size); }$/;"	f	class:Eigen::SparseVector
resizeNonZeros	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    void resizeNonZeros(Index size) {$/;"	f	class:Eigen::SkylineMatrix
restart	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::restart()$/;"	f	class:Eigen::internal::AmbiVector
restart	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  int restart() { return m_restart; }$/;"	f	class:Eigen::DGMRES
resu_stl	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  typename Interface::stl_matrix resu_stl;$/;"	m	class:Action_aat_product
resu_stl	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  typename Interface::stl_matrix resu_stl;$/;"	m	class:Action_ata_product
resu_stl	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  typename Interface::stl_vector resu_stl;$/;"	m	class:Action_atv_product
resu_stl	tools/eigen/bench/btl/actions/action_axpby.hh	/^  typename Interface::stl_vector resu_stl;$/;"	m	class:Action_axpby
resu_stl	tools/eigen/bench/btl/actions/action_axpy.hh	/^  typename Interface::stl_vector resu_stl;$/;"	m	class:Action_axpy
resu_stl	tools/eigen/bench/btl/actions/action_ger.hh	/^  typename Interface::stl_vector resu_stl;$/;"	m	class:Action_ger
resu_stl	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::stl_matrix resu_stl;$/;"	m	class:Action_hessenberg
resu_stl	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  typename Interface::stl_matrix resu_stl;$/;"	m	class:Action_tridiagonalization
resu_stl	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  typename Interface::stl_matrix resu_stl;$/;"	m	class:Action_lu_decomp
resu_stl	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  typename Interface::stl_matrix resu_stl;$/;"	m	class:Action_matrix_matrix_product
resu_stl	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  typename Interface::stl_vector resu_stl;$/;"	m	class:Action_matrix_vector_product
resu_stl	tools/eigen/bench/btl/actions/action_symv.hh	/^  typename Interface::stl_vector resu_stl;$/;"	m	class:Action_symv
resu_stl	tools/eigen/bench/btl/actions/action_syr2.hh	/^  typename Interface::stl_vector resu_stl;$/;"	m	class:Action_syr2
resu_stl	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  typename Interface::stl_vector resu_stl;$/;"	m	class:Action_trisolve
resu_stl	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  typename Interface::stl_matrix resu_stl;$/;"	m	class:Action_trisolve_matrix
resu_stl	tools/eigen/bench/btl/actions/action_trmm.hh	/^  typename Interface::stl_matrix resu_stl;$/;"	m	class:Action_trmm
result_of	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct result_of<scalar_cmp_op<Scalar, Cmp>(Scalar,Scalar)> {$/;"	s	namespace:Eigen::internal
result_of	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType)> {$/;"	s	namespace:Eigen::internal
result_of	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType0,ArgType1)> {$/;"	s	namespace:Eigen::internal
result_of	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct result_of { };$/;"	s	namespace:Eigen::internal
result_of	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct result_of {$/;"	s	namespace:Eigen::internal
result_type	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^                   >::type  result_type;$/;"	t	struct:Eigen::internal::member_redux
result_type	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_conj_product_op
result_type	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_product_op
result_type	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_quotient_op
result_type	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename scalar_product_traits<Scalar1,Scalar2>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_multiple2_op
result_type	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename scalar_product_traits<Scalar1,Scalar2>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_quotient2_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef NewType result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isfinite_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isinf_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isnan_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::abs_knowing_score
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs2_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_arg_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_ref_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_op
result_type	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_ref_op
result_type	tools/eigen/blas/level1_cplx_impl.h	/^  typedef RealScalar result_type;$/;"	t	struct:scalar_norm1_op
result_type	tools/eigen/doc/examples/class_CwiseBinaryOp.cpp	/^  typedef complex<Scalar> result_type;$/;"	t	struct:MakeComplexOp	file:
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<double>              {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<int64_t  >           {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<int>                 {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<long double>         {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<long int>            {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<mpq_t>               {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<mpreal>              {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<mpz_t>               {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<uint64_t >           {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<unsigned int>        {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<unsigned long int>   {typedef mpreal type;};    $/;"	s	namespace:mpfr::internal
result_type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <typename ArgumentType> struct result_type {};    $/;"	s	namespace:mpfr::internal
results_entry_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  struct results_entry_t {$/;"	s	struct:evaluate_defaults_action_t	file:
ret	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon288
ret	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon290
ret	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::InnerStrideAtCompileTime };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon287
ret	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::OuterStrideAtCompileTime };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon289
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    ret = selector::ret$/;"	e	enum:Eigen::internal::product_type::__anon592
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon595
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon603
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon602
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon604
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon597
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon601
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon606
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon605
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon611
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon614
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon609
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon612
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon600
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon599
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon607
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon596
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon610
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon613
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon608
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon598
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon594
ret	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon593
ret	tools/eigen/Eigen/src/Core/Transpose.h	/^  enum { ret =    bool(blas_traits<DerivedA>::IsTransposed) != DestIsTransposed$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon376
ret	tools/eigen/Eigen/src/Core/Transpose.h	/^  enum { ret = bool(blas_traits<OtherDerived>::IsTransposed) != DestIsTransposed };$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon375
ret	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar,typename SrcScalar> struct functor_is_product_like<mul_assign_op<DstScalar,SrcScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon397
ret	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Functor> struct functor_is_product_like { enum { ret = 0 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon419
ret	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_conj_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon421
ret	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon420
ret	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_quotient_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon422
ret	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_has_linear_access::__anon454
ret	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Scalar> struct functor_has_linear_access<scalar_identity_op<Scalar> > { enum { ret = 0 }; };$/;"	e	enum:Eigen::internal::functor_has_linear_access::__anon455
ret	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { ret = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0 };$/;"	e	enum:Eigen::internal::has_direct_access::__anon490
ret	tools/eigen/Eigen/src/Core/util/Meta.h	/^    enum { ret = meta_sqrt<Y,NewInf,NewSup>::ret };$/;"	e	enum:Eigen::internal::__anon549
ret	tools/eigen/Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	e	enum:Eigen::meta_sqrt::__anon550
ret	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    enum { ret = DirectAccessBit | LvalueBit | NestByRefBit | row_major_bit };$/;"	e	enum:Eigen::internal::promote_index_type::compute_matrix_flags::__anon566
ret	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { ret = (_Rows==Dynamic || _Cols==Dynamic) ? Dynamic : _Rows * _Cols };$/;"	e	enum:Eigen::internal::promote_index_type::size_at_compile_time::__anon567
ret	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { ret = size_at_compile_time<traits<XprType>::RowsAtCompileTime,traits<XprType>::ColsAtCompileTime>::ret };$/;"	e	enum:Eigen::internal::promote_index_type::size_of_xpr_at_compile_time::__anon568
ret	tools/eigen/Eigen/src/Householder/Householder.h	/^    ret = n==Dynamic ? n : n-1$/;"	e	enum:Eigen::internal::decrement_size::__anon181
ret	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^         ret = !( (QRPreconditioner == NoQRPreconditioner) ||$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon156
ret	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Dense,Sparse, OuterProduct> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Sparse,Dense, OuterProduct> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<PermutationStorage, Sparse,             ProductTag> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<Sparse,             PermutationStorage, ProductTag> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	tools/eigen/bench/product_threshold.cpp	/^    ret = M==1 && N==1 ? InnerProduct$/;"	e	enum:alt_prod::__anon728	file:
ret	tools/eigen/bench/product_threshold.cpp	/^template<>  struct map_size<10> { enum { ret = 20 }; };$/;"	e	enum:map_size::__anon724	file:
ret	tools/eigen/bench/product_threshold.cpp	/^template<>  struct map_size<11> { enum { ret = 50 }; };$/;"	e	enum:map_size::__anon725	file:
ret	tools/eigen/bench/product_threshold.cpp	/^template<>  struct map_size<12> { enum { ret = 100 }; };$/;"	e	enum:map_size::__anon726	file:
ret	tools/eigen/bench/product_threshold.cpp	/^template<>  struct map_size<13> { enum { ret = 300 }; };$/;"	e	enum:map_size::__anon727	file:
ret	tools/eigen/bench/product_threshold.cpp	/^template<int S> struct map_size { enum { ret = S }; };$/;"	e	enum:map_size::__anon723	file:
ret	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^template<> struct iters_before_test<double> { enum { ret = 16 }; };$/;"	e	enum:iters_before_test::__anon142	file:
ret	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^template<typename T> struct iters_before_test { enum { ret = 8 }; };$/;"	e	enum:iters_before_test::__anon141	file:
ret	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^    enum { ret = packet_access_bit | aligned_bit};$/;"	e	enum:Eigen::internal::compute_tensor_flags::__anon108
ret	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    ret = (Size == Dynamic) ? Dynamic : Size-1 };$/;"	e	enum:Eigen::internal::decrement_if_fixed_size::__anon31
ret	tools/eigen/unsupported/test/polynomialsolver.cpp	/^    ret = (Size == Dynamic) ? Dynamic : Size+1$/;"	e	enum:Eigen::internal::increment_if_fixed_size::__anon125	file:
ret	tools/eigen/unsupported/test/polynomialutils.cpp	/^    ret = (Size == Dynamic) ? Dynamic : Size+1$/;"	e	enum:Eigen::internal::increment_if_fixed_size::__anon124	file:
return_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  int return_dim() const { return m_return_dim; }$/;"	f	class:Eigen::TensorTupleReducerOp
retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar retval;$/;"	t	struct:Eigen::internal::pow_default_impl
reverse	tools/eigen/Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC ConstReverseReturnType reverse() const$/;"	f	class:Eigen::DenseBase
reverse	tools/eigen/Eigen/src/Core/Reverse.h	/^DenseBase<Derived>::reverse()$/;"	f	class:Eigen::DenseBase
reverse	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const ReverseReturnType reverse() const$/;"	f	class:Eigen::VectorwiseOp
reverse	tools/eigen/test/array_reverse.cpp	/^template<typename MatrixType> void reverse(const MatrixType& m)$/;"	f
reverse	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    reverse(const ReverseDimensions& rev) const {$/;"	f	class:Eigen::TensorBase
reverse	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    reverse(const ReverseDimensions& rev) {$/;"	f	class:Eigen::TensorBase
reverse	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^    const ReverseDimensions& reverse() const { return m_reverse_dims; }$/;"	f	class:Eigen::TensorReverseOp
reverseInPlace	tools/eigen/Eigen/src/Core/Reverse.h	/^inline void DenseBase<Derived>::reverseInPlace()$/;"	f	class:Eigen::DenseBase
reverseInPlace	tools/eigen/Eigen/src/Core/Reverse.h	/^void VectorwiseOp<ExpressionType,Direction>::reverseInPlace()$/;"	f	class:Eigen::VectorwiseOp
reverseIndex	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index reverseIndex($/;"	f	struct:Eigen::TensorEvaluator
reverse_packet	tools/eigen/Eigen/src/Core/Reverse.h	/^    typedef internal::reverse_packet_cond<PacketScalar,ReversePacket> reverse_packet;$/;"	t	class:Eigen::Reverse
reverse_packet_cond	tools/eigen/Eigen/src/Core/Reverse.h	/^template<typename PacketType, bool ReversePacket> struct reverse_packet_cond$/;"	s	namespace:Eigen::internal
reverse_packet_cond	tools/eigen/Eigen/src/Core/Reverse.h	/^template<typename PacketType> struct reverse_packet_cond<PacketType,false>$/;"	s	namespace:Eigen::internal
revertSchur	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^inline void MatrixPower<MatrixType>::revertSchur($/;"	f	class:Eigen::MatrixPower
rhs	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::CwiseBinaryOp
rhs	tools/eigen/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC const RhsNestedCleaned& rhs() const { return m_rhs; }$/;"	f	class:Eigen::Product
rhs	tools/eigen/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC const RhsType&       rhs() const { return m_rhs; }$/;"	f	class:Eigen::Solve
rhs	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const RhsType&       rhs()   const { return m_rhs; }$/;"	f	class:Eigen::SolveWithGuess
rhs	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  const RhsMapper& rhs;$/;"	m	struct:Eigen::internal::packRhsAndKernelArg
rhs	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE const _RhsNested& rhs() const {$/;"	f	class:Eigen::internal::SkylineProduct
rhs	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline VectorType& rhs() $/;"	f	class:Eigen::MatrixMarketIterator
rhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^    rhsExpression() const { return m_rhs_xpr; }$/;"	f	class:Eigen::TensorAssignOp
rhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^    rhsExpression() const { return m_rhs_xpr; }$/;"	f	class:Eigen::TensorConcatenationOp
rhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  rhsExpression() const { return m_rhs_xpr; }$/;"	f	class:Eigen::TensorContractionOp
rhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  rhsExpression() const { return m_rhs_xpr; }$/;"	f	class:Eigen::TensorCustomBinaryOp
rhsExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    rhsExpression() const { return m_rhs_xpr; }$/;"	f	class:Eigen::TensorCwiseBinaryOp
rhsNorm	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double rhsNorm() const { return m_rhsn; }$/;"	f	class:Eigen::IterationController
rhs_element	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	325;"	d
rhs_element	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	379;"	d
right	tools/eigen/bench/bench_gemm.cpp	/^static char right = 'R';$/;"	v	file:
right	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	/^static char right = 'R';$/;"	v
right	tools/eigen/demos/opengl/camera.cpp	/^Vector3f Camera::right(void) const$/;"	f	class:Camera
rightCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr rightCols(Index n)$/;"	f
rightCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr rightCols(Index n) const$/;"	f
rightCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type rightCols(Index n = N) const$/;"	f
rightCols	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type rightCols(Index n = N)$/;"	f
rightHouseholderSequence	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType,OnTheRight> rightHouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
right_dim_mapper_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, RDims> right_dim_mapper_t;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
right_dim_mapper_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, RDims> right_dim_mapper_t;$/;"	t	struct:Eigen::TensorEvaluator
right_dim_mapper_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef array<Index, RDims> right_dim_mapper_t;$/;"	t	struct:Eigen::TensorEvaluator
right_dim_mapper_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef array<Index, RDims> right_dim_mapper_t;$/;"	t	struct:Eigen::TensorEvaluator
right_nocontract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, max_n_1<RDims - ContractDims>::size> right_nocontract_t;$/;"	t	struct:Eigen::TensorContractionEvaluatorBase
right_nocontract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef array<Index, max_n_1<RDims - ContractDims>::size> right_nocontract_t;$/;"	t	struct:Eigen::TensorEvaluator
right_nocontract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	/^  typedef array<Index, max_n_1<RDims - ContractDims>::size> right_nocontract_t;$/;"	t	struct:Eigen::TensorEvaluator
right_nocontract_t	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	/^  typedef array<Index, max_n_1<RDims - ContractDims>::size> right_nocontract_t;$/;"	t	struct:Eigen::TensorEvaluator
rint	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint       (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(rint      );     }$/;"	f	namespace:mpfr
rint_ceil	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint_ceil  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(rint_ceil );     }$/;"	f	namespace:mpfr
rint_floor	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint_floor (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(rint_floor);     }$/;"	f	namespace:mpfr
rint_round	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint_round (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(rint_round);     }$/;"	f	namespace:mpfr
rint_trunc	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint_trunc (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(rint_trunc);     }$/;"	f	namespace:mpfr
rmse	problem.hh	/^    val rmse;$/;"	m	class:Result
root	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal root(const mpreal& x, unsigned long int k, mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
root_type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  >::type root_type;$/;"	t	struct:Eigen::internal::tensor_symmetry_pre_analysis
root_type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  typedef StaticSGroup<> root_type;$/;"	t	struct:Eigen::internal::tensor_symmetry_pre_analysis
rootdir	tools/eigen/scripts/relicense.py	/^rootdir = sys.argv[1]$/;"	v
roots	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RootsType& roots() const { return m_roots; }$/;"	f	class:Eigen::PolynomialSolverBase
roots_to_monicPolynomial	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^void roots_to_monicPolynomial( const RootVector& rv, Polynomial& poly )$/;"	f	namespace:Eigen
rot	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void rot(gene_vector & A,  gene_vector & B, SCALAR c, SCALAR s, int N){$/;"	f	class:blas_interface
rot	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static EIGEN_DONT_INLINE void rot(gene_vector & A,  gene_vector & B, real c, real s, int  \/*N*\/){$/;"	f	class:eigen3_interface
rot	tools/eigen/blas/level1_real_impl.h	/^int EIGEN_BLAS_FUNC(rot)(int *n, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar *pc, RealScalar *ps)$/;"	f
rot_	tools/eigen/blas/level1_cplx_impl.h	/^int EIGEN_CAT(EIGEN_CAT(SCALAR_SUFFIX,REAL_SCALAR_SUFFIX),rot_)(int *n, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar *pc, RealScalar *ps)$/;"	f
rotate	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
rotateAroundTarget	tools/eigen/demos/opengl/camera.cpp	/^void Camera::rotateAroundTarget(const Quaternionf& q)$/;"	f	class:Camera
rotation	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotation() const$/;"	f	class:Eigen::Transform
rotation_base_generic_product_selector	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector< RotationDerived, DiagonalMatrix<Scalar,Dim,MaxDim>, false >$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,MatrixType,false>$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,OtherVectorType,true>$/;"	s	namespace:Eigen::internal
rotg	tools/eigen/blas/level1_impl.h	/^int EIGEN_BLAS_FUNC(rotg)(RealScalar *pa, RealScalar *pb, RealScalar *pc, RealScalar *ps)$/;"	f
round	tools/eigen/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(round, Scalar) round(const Scalar& x)$/;"	f	namespace:Eigen::numext
round	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^round() const$/;"	f
round	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal round(const mpreal& v)$/;"	f	namespace:mpfr
round_error	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static mpfr::mpreal round_error(mp_prec_t precision = mpfr::mpreal::get_default_prec())$/;"	f	class:std::numeric_limits
round_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  struct round_impl {$/;"	s	namespace:Eigen::internal
round_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  struct round_impl$/;"	s	namespace:Eigen::internal
round_retval	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct round_retval$/;"	s	namespace:Eigen::internal
round_style	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static float_round_style round_style()$/;"	f	class:std::numeric_limits
round_style	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const std::float_round_style round_style = round_to_nearest;$/;"	m	class:std::numeric_limits
row	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Traits::RowsAtCompileTime$/;"	e	enum:Eigen::internal::all_unroller::__anon625
row	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Traits::RowsAtCompileTime$/;"	e	enum:Eigen::internal::any_unroller::__anon626
row	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index row() const             { return m_iter.row(); }$/;"	f	class:Eigen::InnerIterator
row	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::internal::inner_iterator_selector
row	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    row = (UnrollCount-1) % DstXprType::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_loop::__anon301
row	tools/eigen/Eigen/src/Core/Visitor.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::visitor_impl::__anon310
row	tools/eigen/Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
row	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index row()    const { return EvalIterator::row()   - m_block.startRow(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index row()    const { return IsRowMajor ? 0 : index(); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return Lhs::IsRowMajor ? m_lhsIter.row() : index(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_lhsIter.row(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_rhsIter.row(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index row()   const { return NeedToTranspose ? m_outer : LhsIterator::index(); }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index row() const    { return SparseXprType::IsRowMajor ? m_sparseIter.outer() : m_sparseIter.index(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^      Index row() const { return EvalIterator::col(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^      Index row() const { return EvalReverseIterator::col(); }$/;"	f	class:Eigen::internal::unary_evaluator::ReverseInnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index row() const { return (MatrixType::Flags&RowMajorBit ? Base::outer() : this->index()); }$/;"	f	class:Eigen::TriangularViewImpl::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index row() const { return Base::row(); }$/;"	f	class:Eigen::TriangularViewImpl::ReverseInnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  const StorageIndex& row() const { return m_row; }$/;"	f	class:Eigen::Triplet
row	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Index row() const { return IsColVector ? index() : 0; }$/;"	f	class:Eigen::SparseVector::InnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Index row() const { return IsColVector ? index() : 0; }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
row	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
row	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index row() const { return index(); }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
row	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowXpr row(Index i) const$/;"	f
row	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline RowXpr row(Index i)$/;"	f
row	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index row() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
row	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index row() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
row	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index row() const  {return index(); }$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
row	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index row() const { return index();}$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
row	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : Base::index(); }$/;"	f	class:Eigen::DynamicSparseMatrix::InnerIterator
row	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : Base::index(); }$/;"	f	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
rowIndex	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* rowIndex()  { return m_rowind; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndex	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* rowIndex() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndexByOuterInner	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static Index rowIndexByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
rowIndexByOuterInner	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
rowIndexPtr	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* rowIndexPtr() { return m_rowind_colptr; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndexPtr	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* rowIndexPtr() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowInflateStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index rowInflateStride() const { return m_row_inflate_strides; }$/;"	f	struct:Eigen::TensorEvaluator
rowInflateStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index rowInflateStride() const { return m_row_inflate_strides; }$/;"	f	struct:Eigen::TensorEvaluator
rowOffset	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value() > 0 ? 0 : -m_index.value(); }$/;"	f	struct:Eigen::internal::evaluator
rowOffset	tools/eigen/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value()>0 ? 0 : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
rowPaddingTop	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index rowPaddingTop() const { return m_rowPaddingTop; }$/;"	f	struct:Eigen::TensorEvaluator
rowPaddingTop	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index rowPaddingTop() const { return m_rowPaddingTop; }$/;"	f	struct:Eigen::TensorEvaluator
rowPrefix	tools/eigen/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSeparator	tools/eigen/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSpacer	tools/eigen/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowStride	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index rowStride() const$/;"	f	class:Eigen::DenseCoeffsBase
rowSuffix	tools/eigen/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
row_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex row_inflate_strides() const { return m_row_inflate_strides; }$/;"	f	class:Eigen::TensorImagePatchOp
row_inflate_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex row_inflate_strides() const { return m_row_inflate_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
row_major_bit	tools/eigen/Eigen/src/Core/Matrix.h	/^      row_major_bit = _Options&RowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon292
row_major_bit	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    enum { row_major_bit = Options&RowMajor ? RowMajorBit : 0 };$/;"	e	enum:Eigen::internal::promote_index_type::compute_matrix_flags::__anon565
row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^    DenseIndex row_strides() const { return m_row_strides; }$/;"	f	class:Eigen::TensorImagePatchOp
row_strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^    DenseIndex row_strides() const { return m_row_strides; }$/;"	f	class:Eigen::TensorVolumePatchOp
rowblk	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index rowblk; \/\/ The minimum row dimension for 2-D blocking to be used;$/;"	m	struct:Eigen::internal::perfvalues
rows	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LDLT
rows	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LLT
rows	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline StorageIndex rows() const { return internal::convert_index<StorageIndex, Index>(m_cholmodFactor->n); }$/;"	f	class:Eigen::CholmodBase
rows	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ArrayWrapper
rows	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::MatrixWrapper
rows	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index rows() const        { return m_dstExpr.rows(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
rows	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrix
rows	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
rows	tools/eigen/Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::internal::BlockImpl_dense
rows	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  Index rows() const $/;"	f	class:Eigen::internal::EvalToTemp
rows	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::CwiseBinaryOp
rows	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
rows	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::CwiseUnaryOp
rows	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::CwiseUnaryView
rows	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows() const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows(void) const {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows(void) const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC static Index rows(void) {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	tools/eigen/Eigen/src/Core/Diagonal.h	/^    inline Index rows() const$/;"	f	class:Eigen::Diagonal
rows	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline Index rows() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
rows	tools/eigen/Eigen/src/Core/EigenBase.h	/^  inline Index rows() const { return derived().rows(); }$/;"	f	struct:Eigen::EigenBase
rows	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ForceAlignedAccess
rows	tools/eigen/Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::Inverse
rows	tools/eigen/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::MapBase
rows	tools/eigen/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::NestByValue
rows	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline Index rows() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
rows	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline Index rows() const { return m_permutation.rows(); }$/;"	f	class:Eigen::Transpose
rows	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_storage.rows(); }$/;"	f	class:Eigen::PlainObjectBase
rows	tools/eigen/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::Product
rows	tools/eigen/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::internal::redux_evaluator
rows	tools/eigen/Eigen/src/Core/Replicate.h	/^    inline Index rows() const { return m_matrix.rows() * m_rowFactor.value(); }$/;"	f	class:Eigen::Replicate
rows	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return static_cast<const Derived*>(this)->rows(); }$/;"	f	class:Eigen::ReturnByValue
rows	tools/eigen/Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Reverse
rows	tools/eigen/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC Index rows() const { return m_condition.rows(); }$/;"	f	class:Eigen::Select
rows	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SelfAdjointView
rows	tools/eigen/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_dec.cols(); }$/;"	f	class:Eigen::Solve
rows	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  inline Index rows() const { return m_rhs.rows(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
rows	tools/eigen/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Transpose
rows	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Index rows() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
rows	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Index rows() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
rows	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::TriangularBase
rows	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::TriangularView
rows	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    Index rows() const { return (Direction==Vertical   ? 1 : m_matrix.rows()); }$/;"	f	class:Eigen::PartialReduxExpr
rows	tools/eigen/Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::internal::visitor_evaluator
rows	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index rows() const { return m_hess.packedMatrix().rows(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
rows	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
rows	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^    inline Index rows() const { return m_matrix.rows() + (int(Direction)==Vertical   ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
rows	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
rows	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
rows	tools/eigen/Eigen/src/Geometry/Transform.h	/^  Index rows() const { return int(Mode)==int(Projective) ? m_matrix.cols() : (m_matrix.cols()-1); }$/;"	f	class:Eigen::Transform
rows	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    Index rows() const { return Side==OnTheLeft ? m_vectors.rows() : m_vectors.cols(); }$/;"	f	class:Eigen::HouseholderSequence
rows	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index rows() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
rows	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::IncompleteLUT
rows	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index rows() const { return mp_matrix.rows(); }$/;"	f	class:Eigen::IterativeSolverBase
rows	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_dec.cols(); }$/;"	f	class:Eigen::SolveWithGuess
rows	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::FullPivLU
rows	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::PartialPivLU
rows	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PastixBase
rows	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
rows	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::ColPivHouseholderQR
rows	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::FullPivHouseholderQR
rows	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
rows	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::HouseholderQR
rows	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline Index rows() const {return m_cR->nrow; }$/;"	f	class:Eigen::SPQR
rows	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  inline Index rows() const { return m_transpose ? m_spqr.rows() : m_spqr.cols(); }$/;"	f	struct:Eigen::SPQR_QProduct
rows	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  inline Index rows() const { return m_rows; }$/;"	f	class:Eigen::SVDBase
rows	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
rows	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::BlockImpl
rows	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
rows	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::BlockImpl
rows	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::SparseMapBase
rows	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
rows	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::SparseMatrixBase
rows	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSelfAdjointView
rows	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
rows	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsColVector ? m_size : 1; }$/;"	f	class:Eigen::SparseVector
rows	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^  inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseView
rows	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    inline Index rows() const { return m_mat.rows(); }$/;"	f	class:Eigen::SparseLU
rows	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  Index rows() { return m_mapL.rows(); }$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
rows	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  Index rows() { return m_mapL.rows(); }$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
rows	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index rows() { return m_row; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rows	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    inline Index rows() const { return m_pmat.rows(); }$/;"	f	class:Eigen::SparseQR
rows	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  inline Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
rows	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  inline Index rows() const { return m_transpose ? m_qr.rows() : m_qr.cols(); }$/;"	f	struct:Eigen::SparseQR_QProduct
rows	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SuperLUBase
rows	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index rows() const { return mp_matrix.rows(); }$/;"	f	class:Eigen::UmfPackLU
rows	tools/eigen/Eigen/src/misc/Image.h	/^  inline Index rows() const { return m_dec.rows(); }$/;"	f	struct:Eigen::internal::image_retval_base
rows	tools/eigen/Eigen/src/misc/Kernel.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::kernel_retval_base
rows	tools/eigen/doc/snippets/Tutorial_commainit_02.cpp	/^int rows=5, cols=5;$/;"	v
rows	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    Index rows() const { return m_L.rows(); }$/;"	f	class:Eigen::IncompleteCholesky
rows	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::IncompleteLU
rows	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^    inline Index rows() const { return m_A.rows() * m_B.rows(); }$/;"	f	class:Eigen::KroneckerProductBase
rows	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    Index rows() const { return m_src.rows(); }$/;"	f	struct:Eigen::MatrixExponentialReturnValue
rows	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    Index rows() const { return m_A.rows(); }$/;"	f	class:Eigen::MatrixFunctionReturnValue
rows	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  Index rows() const { return m_A.rows(); }$/;"	f	class:Eigen::MatrixLogarithmReturnValue
rows	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index rows() const { return m_A.rows(); }$/;"	f	class:Eigen::MatrixComplexPowerReturnValue
rows	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index rows() const { return m_A.rows(); }$/;"	f	class:Eigen::MatrixPower
rows	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index rows() const { return m_A.rows(); }$/;"	f	class:Eigen::MatrixPowerReturnValue
rows	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^    Index rows() const { return m_pow.rows(); }$/;"	f	class:Eigen::MatrixPowerParenthesesReturnValue
rows	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    Index rows() const { return m_src.rows(); }$/;"	f	class:Eigen::MatrixSquareRootReturnValue
rows	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index rows() const {$/;"	f	class:Eigen::SkylineMatrix
rows	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Index rows() const {$/;"	f	class:Eigen::SkylineMatrixBase
rows	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::internal::SkylineProduct
rows	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    Index rows() const$/;"	f	class:Eigen::BlockSparseMatrixView
rows	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index rows() const { return (m_mat.m_blockSize==Dynamic) ? (m_mat.m_innerOffset[index()+1] - m_mat.m_innerOffset[index()]) : m_mat.m_blockSize; }$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
rows	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index rows() const$/;"	f	class:Eigen::BlockSparseMatrix
rows	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? outerSize() : m_innerSize; }$/;"	f	class:Eigen::DynamicSparseMatrix
rowsPermutation	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    inline const PermutationType& rowsPermutation() const$/;"	f	class:Eigen::SparseLU
rowsTranspositions	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    const IntDiagSizeVectorType& rowsTranspositions() const$/;"	f	class:Eigen::FullPivHouseholderQR
rows_select	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    rows_select = product_size_category<Rows,MaxRows>::value,$/;"	e	enum:Eigen::internal::product_type::__anon591
rowwise	tools/eigen/Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC inline ConstRowwiseReturnType rowwise() const {$/;"	f	class:Eigen::DenseBase
rowwise	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::rowwise()$/;"	f	class:Eigen::DenseBase
rrow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	310;"	d
rrow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	377;"	d
rsqrt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    rsqrt() const {$/;"	f	class:Eigen::TensorBase
rtime	tools/eigen/bench/sparse_randomsetter.cpp	/^static double rtime;$/;"	v	file:
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &, Index) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::dense_assignment_loop
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel, Index outer)$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_InnerUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel, Index outer)$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel& kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&, Index) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_InnerUnrolling
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&, Index, Index) {}$/;"	f	struct:Eigen::internal::unaligned_dense_assignment_loop
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static inline void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::dense_assignment_loop
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::dense_assignment_loop
run	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_DONT_INLINE void run(Kernel &kernel,$/;"	f	struct:Eigen::internal::unaligned_dense_assignment_loop
run	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived & \/*mat*\/) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::all_unroller
run	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &\/*mat*\/) { return true; }$/;"	f	struct:Eigen::internal::all_unroller
run	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::all_unroller
run	tools/eigen/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::any_unroller
run	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& m)$/;"	f	struct:Eigen::internal::setIdentity_impl
run	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^  static inline Index run(const Derived& m)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^  static inline Index run(const Derived&)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/Dot.h	/^  static inline RealScalar run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	tools/eigen/Eigen/src/Core/Dot.h	/^  static inline ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)$/;"	f	struct:Eigen::internal::dot_nocheck
run	tools/eigen/Eigen/src/Core/Dot.h	/^  static inline typename NumTraits<typename traits<Derived>::Scalar>::Real run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	tools/eigen/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isApprox_selector
run	tools/eigen/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	tools/eigen/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isApprox_selector
run	tools/eigen/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived&, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	tools/eigen/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	tools/eigen/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar&, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  static inline void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::gemv_dense_sense_selector
run	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  static void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::gemv_dense_sense_selector
run	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^  static inline void run(PacketType&, const PacketType&) {}$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/IO.h	/^  static inline int run()$/;"	f	struct:Eigen::internal::significant_decimals_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^    static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::arg_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^    static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::arg_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^    static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::round_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline NewType run(const OldType& x)$/;"	f	struct:Eigen::internal::cast_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::abs2_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::hypot_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const std::complex<RealScalar>& x)$/;"	f	struct:Eigen::internal::abs2_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run()$/;"	f	struct:Eigen::internal::random_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(Scalar x, Scalar y)$/;"	f	struct:Eigen::internal::pow_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::conj_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::log1p_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::pow_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::random_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline bool run()$/;"	f	struct:Eigen::internal::random_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  static inline const Scalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^  static EIGEN_ALWAYS_INLINE void run(Index rows, Index cols)$/;"	f	struct:Eigen::internal::check_rows_cols_for_overflow
run	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^  static EIGEN_ALWAYS_INLINE void run(Index, Index)$/;"	f	struct:Eigen::internal::check_rows_cols_for_overflow
run	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^  static inline void run(MatrixTypeA& a, MatrixTypeB& b)$/;"	f	struct:Eigen::internal::matrix_swap_impl
run	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index rows, Index cols)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index size)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^    static inline void run(Dest& dst, const PermutationType& perm, const ExpressionType& xpr)$/;"	f	struct:Eigen::internal::permutation_matrix_product
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index \/*row*\/, Index \/*col*\/, const Lhs& \/*lhs*\/, const Rhs& \/*rhs*\/, Index \/*innerDim*\/, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index \/*innerDim*\/, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index innerDim, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index innerDim, Packet& res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static inline void run(Dest& dst, const TranspositionType& tr, const ExpressionType& xpr)$/;"	f	struct:Eigen::internal::transposition_matrix_product
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const AssignFunc& func)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	tools/eigen/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC static Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	tools/eigen/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	tools/eigen/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	tools/eigen/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	tools/eigen/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	tools/eigen/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	tools/eigen/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived&, const Func&) { return Scalar(); }$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	tools/eigen/Eigen/src/Core/Redux.h	/^  static Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	tools/eigen/Eigen/src/Core/Reverse.h	/^  static inline PacketType run(const PacketType& x) { return preverse(x); }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	tools/eigen/Eigen/src/Core/Reverse.h	/^  static inline PacketType run(const PacketType& x) { return x; }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	tools/eigen/Eigen/src/Core/Reverse.h	/^  static void run(ExpressionType &xpr)$/;"	f	struct:Eigen::internal::vectorwise_reverse_inplace_impl
run	tools/eigen/Eigen/src/Core/Solve.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_selector
run	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs&, Rhs&) {}$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	tools/eigen/Eigen/src/Core/Transpose.h	/^    static void run(const Derived& dst, const OtherDerived& other)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	tools/eigen/Eigen/src/Core/Transpose.h	/^    static void run(const Derived&, const OtherDerived&)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	tools/eigen/Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const CwiseBinaryOp<BinOp,DerivedA,DerivedB>& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	tools/eigen/Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const OtherDerived& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	tools/eigen/Eigen/src/Core/Transpose.h	/^  static void run(MatrixType& m) {$/;"	f	struct:Eigen::internal::inplace_transpose_selector
run	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC static void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Kernel &) {}$/;"	f	struct:Eigen::internal::triangular_assignment_loop
run	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::triangular_assignment_loop
run	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived &mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	tools/eigen/Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived& mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cd& first, const Packet2cd& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet4cf& first, const Packet4cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4d& first, const Packet4d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet8f& first, const Packet8f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE static void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  static Packet2d run(const Packet2d& a) {$/;"	f	struct:Eigen::internal::protate_impl
run	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  static Packet4f run(const Packet4f& a) {$/;"	f	struct:Eigen::internal::protate_impl
run	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  static Packet4i run(const Packet4i& a) {$/;"	f	struct:Eigen::internal::protate_impl
run	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static Packet2d run(const Packet2d& a) {$/;"	f	struct:Eigen::internal::protate_impl
run	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static Packet4f run(const Packet4f& a) {$/;"	f	struct:Eigen::internal::protate_impl
run	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static Packet4i run(const Packet4i& a) {$/;"	f	struct:Eigen::internal::protate_impl
run	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, A& a, B& b, C& c, T& \/*t*\/)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, T& a, T& b, T& c, T& t)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^static void run(Index rows, Index cols, Index depth,$/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* _lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static void run(MatrixType& mat, const ProductType& prod, const typename MatrixType::Scalar& alpha)$/;"	f	struct:Eigen::general_product_to_triangular_selector
run	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,LhsMapper,ColMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::general_matrix_vector_product
run	tools/eigen/Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,LhsMapper,RowMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::general_matrix_vector_product
run	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_selfadjoint_matrix
run	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static void run(Dest &dst, const Lhs &a_lhs, const Rhs &a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_product_impl
run	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^EIGEN_DONT_INLINE void product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>::run($/;"	f	class:Eigen::internal::product_selfadjoint_matrix
run	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^EIGEN_DONT_INLINE void product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>::run($/;"	f	class:Eigen::internal::product_selfadjoint_matrix
run	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  static void run(Dest& dest, const Lhs &a_lhs, const Rhs &a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_product_impl
run	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^EIGEN_DONT_INLINE void selfadjoint_matrix_vector_product<Scalar,Index,StorageOrder,UpLo,ConjugateLhs,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::selfadjoint_matrix_vector_product
run	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(Index size, Scalar* mat, Index stride, const Scalar* vecX, const Scalar* vecY, const Scalar& alpha)$/;"	f	struct:Eigen::selfadjoint_rank1_update
run	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(MatrixType& mat, const OtherType& other, const typename MatrixType::Scalar& alpha)$/;"	f	struct:Eigen::selfadjoint_product_selector
run	tools/eigen/Eigen/src/Core/products/SelfadjointRank2Update.h	/^  static void run(Scalar* mat, Index stride, const UType& u, const VType& v, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_rank2_update_selector
run	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^                                                        RhsStorageOrder,ConjugateRhs,ColMajor,Version>::run($/;"	f	class:Eigen::internal::product_triangular_matrix_matrix
run	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_triangular_matrix_matrix
run	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  template<typename Dest> static void run(Dest& dst, const Lhs &a_lhs, const Rhs &a_rhs, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::triangular_product_impl
run	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^  ::run(Index _rows, Index _cols, const LhsScalar* _lhs, Index lhsStride,$/;"	f	class:Eigen::internal::triangular_matrix_vector_product
run	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^  static void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::trmv_selector
run	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^  template<typename Dest> static void run(Dest& dst, const Lhs &lhs, const Rhs &rhs, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::triangular_product_impl
run	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	/^  static void run($/;"	f	struct:Eigen::internal::triangular_solve_matrix
run	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	/^EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>::run($/;"	f	class:Eigen::internal::triangular_solve_matrix
run	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	/^EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>::run($/;"	f	class:Eigen::internal::triangular_solve_matrix
run	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	/^  static void run(Index size, const LhsScalar* _lhs, Index lhsStride, RhsScalar* rhs)$/;"	f	struct:Eigen::internal::triangular_solve_vector
run	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE To run(const From& x) { return x; }$/;"	f	struct:Eigen::internal::get_factor
run	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static EIGEN_STRONG_INLINE typename NumTraits<Scalar>::Real run(const Scalar& x) { return numext::real(x); }$/;"	f	struct:Eigen::internal::get_factor
run	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static const typename T::Scalar* run(const T& m)$/;"	f	struct:Eigen::internal::extract_data_selector
run	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  static typename T::Scalar* run(const T&) { return 0; }$/;"	f	struct:Eigen::internal::extract_data_selector
run	tools/eigen/Eigen/src/Core/util/Memory.h	/^  EIGEN_DEVICE_FUNC static inline void run(const T* start, const T* end, T* target)$/;"	f	struct:Eigen::internal::smart_copy_helper
run	tools/eigen/Eigen/src/Core/util/Memory.h	/^  static inline void run(const T* start, const T* end, T* target)$/;"	f	struct:Eigen::internal::smart_memmove_helper
run	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^  static void run(ComplexSchur<MatrixType>& _this, const MatrixType& matrix, bool computeU)$/;"	f	struct:Eigen::internal::complex_schur_reduce_to_hessenberg
run	tools/eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^  run(const MatrixBase<Derived>& m)$/;"	f	class:Eigen::internal::eigenvalues_selector::MatrixBase
run	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& eig, const typename SolverType::MatrixType& A, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& solver, const MatrixType& mat, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType&, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  static const type& run (const TransformType& x) { return x.matrix(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  static const type& run(const type &x) { return x; }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  static type run (const TransformType& x) { return x.affine(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^  static inline VectorType run(const Derived& src)$/;"	f	struct:Eigen::internal::unitOrthogonal_selector
run	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived1>& a, const QuaternionBase<Derived2>& b){$/;"	f	struct:Eigen::internal::quat_product
run	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived>& q){$/;"	f	struct:Eigen::internal::quat_conj
run	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> static inline void run(QuaternionBase<Derived>& q, const Other& mat)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> static inline void run(QuaternionBase<Derived>& q, const Other& vec)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^  static EIGEN_STRONG_INLINE ReturnType run(const RotationDerived& r, const OtherVectorType& v)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^  static inline ReturnType run(const RotationDerived& r, const DiagonalMatrix<Scalar,Dim,MaxDim>& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^  static inline ReturnType run(const RotationDerived& r, const MatrixType& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static EIGEN_STRONG_INLINE ResultType run(const TransformType& T, const MatrixType& other)$/;"	f	struct:Eigen::internal::transform_right_product_impl
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::transform_transform_product_impl
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other, const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other,const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static inline AffinePart run(MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static inline ConstAffinePart run(const MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static inline MatrixType& run(MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static inline const MatrixType& run(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,AffineCompact,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,Mode,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static inline void run(const TransformType& m, TransformType& res)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static inline void run(const TransformType&, TransformType&)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  static void run(MatrixType &mat)$/;"	f	struct:Eigen::internal::transform_make_affine
run	tools/eigen/Eigen/src/Geometry/Transform.h	/^  template<typename MatrixType> static void run(MatrixType &) { }$/;"	f	struct:Eigen::internal::transform_make_affine
run	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<double> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<double> run(const QuaternionBase<Derived>& q)$/;"	f	struct:Eigen::internal::quat_conj
run	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<float> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	tools/eigen/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<float> run(const QuaternionBase<Derived>& q)$/;"	f	struct:Eigen::internal::quat_conj
run	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/LU/Determinant.h	/^  static inline typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	tools/eigen/Eigen/src/LU/Determinant.h	/^  static typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	tools/eigen/Eigen/src/LU/FullPivLU.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/LU/InverseImpl.h	/^  static inline void run($/;"	f	struct:Eigen::internal::compute_inverse_and_det_with_check
run	tools/eigen/Eigen/src/LU/InverseImpl.h	/^  static inline void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse
run	tools/eigen/Eigen/src/LU/InverseImpl.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/LU/InverseImpl.h	/^  static void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/LU/arch/Inverse_SSE.h	/^  static void run(const MatrixType& mat, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    static IndexType run( _MKL_DSS_HANDLE_t pt, IndexType maxfct, IndexType mnum, IndexType type, IndexType phase, IndexType n, void *a,$/;"	f	struct:Eigen::internal::pardiso_run_selector
run	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^  static void run(MatrixQR& mat, HCoeffs& hCoeffs, Index maxBlockSize=32,$/;"	f	struct:Eigen::internal::householder_qr_inplace_blocked
run	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, QRPreconditioner>&, const MatrixType&)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  static void run(typename SVD::WorkMatrixType& work_matrix, SVD& svd, Index p, Index q)$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^  static void run(typename SVD::WorkMatrixType&, SVD&, Index, Index) {}$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    static void run(const InputMatrixType& input, ConstCholMatrixPtr &pmat, CholMatrixType &tmp)$/;"	f	struct:Eigen::internal::simplicial_cholesky_grab_input
run	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    static void run(const MatrixType& input, ConstMatrixPtr &pmat, MatrixType &\/*tmp*\/)$/;"	f	struct:Eigen::internal::simplicial_cholesky_grab_input
run	tools/eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	struct:Eigen::internal::conservative_sparse_sparse_product_selector
run	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(SparseMatrix<Scalar,Options,StorageIndex> &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(SparseMatrixBase<DstDerived> &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void run(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
run	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void run(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const typename Res::Scalar& alpha)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
run	tools/eigen/Eigen/src/SparseCore/SparsePermutation.h	/^    static inline void run(Dest& dst, const PermutationType& perm, const MatrixType& mat)$/;"	f	struct:Eigen::internal::permutation_matrix_product
run	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(DynamicSparseMatrix<DestScalar,ColMajor,StorageIndex>& dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<DestScalar,StorageOrder,StorageIndex> &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<Scalar,Options,DstIndex> &dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseSelfAdjointView<DestType,DestMode>& dst, const SrcXprType &src, const internal::assign_op<Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res, const RealScalar& tolerance)$/;"	f	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
run	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^  static void run(Dest& dst, const Src& src) {$/;"	f	struct:Eigen::internal::sparse_vector_assign_selector
run	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_selector
run	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
run	tools/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^EIGEN_DONT_INLINE void LU_kernel_bmod<1>::run(const Index \/*segsize*\/, BlockScalarVector& dense, ScalarVector& \/*tempv*\/, ScalarVector& lusup, Index& luptr,$/;"	f	class:Eigen::internal::LU_kernel_bmod
run	tools/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^EIGEN_DONT_INLINE void LU_kernel_bmod<SegSizeAtCompileTime>::run(const Index segsize, BlockScalarVector& dense, ScalarVector& tempv, ScalarVector& lusup, Index& luptr, const Index lda,$/;"	f	class:Eigen::internal::LU_kernel_bmod
run	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static void run(MatrixType& mat, SluMatrix& res)$/;"	f	struct:Eigen::SluMatrixMapHelper
run	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  virtual void run(const vector<string>&) const { abort(); }$/;"	f	struct:action_t
run	tools/eigen/bench/benchGeometry.cpp	/^    static EIGEN_DONT_INLINE res run( arg1& a1, arg2& a2 )$/;"	f	struct:func
run	tools/eigen/bench/benchGeometry.cpp	/^    static void run()$/;"	f	struct:test_transform
run	tools/eigen/bench/geometry.cpp	/^  static EIGEN_DONT_INLINE void run(const Transformation& t)$/;"	f	struct:bench_impl
run	tools/eigen/bench/geometry.cpp	/^  static EIGEN_DONT_INLINE void run(const Transformation&) {}$/;"	f	struct:bench_impl
run	tools/eigen/bench/product_threshold.cpp	/^  static void run()$/;"	f	struct:loop_on_k
run	tools/eigen/bench/product_threshold.cpp	/^  static void run()$/;"	f	struct:loop_on_m
run	tools/eigen/bench/product_threshold.cpp	/^  static void run()$/;"	f	struct:loop_on_n
run	tools/eigen/bench/product_threshold.cpp	/^  static void run()$/;"	f	struct:print_n
run	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_k<M,N,END> { static void run(){} };$/;"	f	struct:loop_on_k
run	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_m<END,N,K> { static void run(){} };$/;"	f	struct:loop_on_m
run	tools/eigen/bench/product_threshold.cpp	/^struct loop_on_n<M,END,K,Scalar,Mode> { static void run(){} };$/;"	f	struct:loop_on_n
run	tools/eigen/bench/product_threshold.cpp	/^template<> struct print_n<END> { static void run(){} };$/;"	f	struct:print_n
run	tools/eigen/blas/BandTriangularSolver.h	/^  static void run(Index size, Index k, const LhsScalar* _lhs, Index lhsStride, RhsScalar* _other)$/;"	f	struct:internal::band_solve_triangular_selector
run	tools/eigen/blas/GeneralRank1Update.h	/^  static void run(Index rows, Index cols, Scalar* mat, Index stride, const Scalar* u, const Scalar* v, Scalar alpha)$/;"	f	struct:internal::general_rank1_update
run	tools/eigen/blas/PackedSelfadjointProduct.h	/^  static void run(Index size, Scalar* mat, const Scalar* vec, RealScalar alpha)$/;"	f	struct:internal::selfadjoint_packed_rank1_update
run	tools/eigen/blas/PackedTriangularMatrixVector.h	/^  static void run(Index size, const LhsScalar* lhs, const RhsScalar* rhs, ResScalar* res, ResScalar alpha)$/;"	f	struct:internal::packed_triangular_matrix_vector_product
run	tools/eigen/blas/PackedTriangularSolverVector.h	/^  static void run(Index size, const LhsScalar* lhs, RhsScalar* rhs)$/;"	f	struct:internal::packed_triangular_solve_vector
run	tools/eigen/blas/Rank2Update.h	/^  static void run(Index size, Scalar* mat, Index stride, const Scalar* u, const Scalar* v, Scalar alpha)$/;"	f	struct:internal::rank2_update_selector
run	tools/eigen/blas/Rank2Update.h	/^  static void run(Index size, Scalar* mat, const Scalar* u, const Scalar* v, Scalar alpha)$/;"	f	struct:internal::packed_rank2_update_selector
run	tools/eigen/blas/level2_impl.h	/^  static void run(Index rows, Index cols,const Scalar *lhs, Index lhsStride, const Scalar *rhs, Index rhsIncr, Scalar* res, Index resIncr, Scalar alpha)$/;"	f	struct:general_matrix_vector_product_wrapper
run	tools/eigen/demos/mandelbrot/mandelbrot.cpp	/^void MandelbrotThread::run()$/;"	f	class:MandelbrotThread
run	tools/eigen/test/adjoint.cpp	/^  static void run(const Vec& v1, const Vec& v2, Vec& v3, const Mat& square, Scalar s1, Scalar s2) {$/;"	f	struct:adjoint_specific
run	tools/eigen/test/mapstaticmethods.cpp	/^  static void run(const PlainObjectType& m)$/;"	f	struct:mapstaticmethods_impl
run	tools/eigen/test/mapstaticmethods.cpp	/^  static void run(const PlainObjectType& v)$/;"	f	struct:mapstaticmethods_impl
run	tools/eigen/test/vectorization_logic.cpp	/^  static void run() {}$/;"	f	struct:vectorization_logic
run	tools/eigen/test/vectorization_logic.cpp	/^  static void run() {}$/;"	f	struct:vectorization_logic_half
run	tools/eigen/test/vectorization_logic.cpp	/^  static void run()$/;"	f	struct:vectorization_logic
run	tools/eigen/test/vectorization_logic.cpp	/^  static void run()$/;"	f	struct:vectorization_logic_half
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^  constexpr static inline A run(A a, Ts...) { return a; }$/;"	f	struct:Eigen::internal::reduce
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^  constexpr static inline auto run(A a, B b, Ts... ts) -> decltype(Reducer::run(a, reduce<Reducer, B, Ts...>::run(b, ts...))) {$/;"	f	struct:Eigen::internal::reduce
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static inline bool run(const array<A, 1>& a) {$/;"	f	struct:Eigen::internal::ArrayApplyAndReduce
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static inline bool run(const array<A, 1>& a, const array<B, 1>& b) {$/;"	f	struct:Eigen::internal::ArrayZipAndReduce
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static inline bool run(const array<A, N>& a) {$/;"	f	struct:Eigen::internal::ArrayApplyAndReduce
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static inline bool run(const array<A, N>& a, const array<B, N>& b) {$/;"	f	struct:Eigen::internal::ArrayZipAndReduce
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a != b; }$/;"	f	struct:Eigen::internal::not_equal_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a && b; }$/;"	f	struct:Eigen::internal::logical_and_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a * b; }$/;"	f	struct:Eigen::internal::product_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a + b; }$/;"	f	struct:Eigen::internal::sum_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a < b; }$/;"	f	struct:Eigen::internal::lesser_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a <= b; }$/;"	f	struct:Eigen::internal::lesser_equal_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a == b; }$/;"	f	struct:Eigen::internal::equal_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a > b; }$/;"	f	struct:Eigen::internal::greater_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a >= b; }$/;"	f	struct:Eigen::internal::greater_equal_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A, typename B> static inline bool run(A a, B b) { return a || b; }$/;"	f	struct:Eigen::internal::logical_or_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A> static inline bool run(A a) { return !a; }$/;"	f	struct:Eigen::internal::not_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A> static inline bool run(A a) { return -a; }$/;"	f	struct:Eigen::internal::negation_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  template<typename A> static inline bool run(A a) { return a >= 0; }$/;"	f	struct:Eigen::internal::greater_equal_zero_op
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  static void run(Notification* n, Function f, Args... args) {$/;"	f	struct:Eigen::FunctionWrapper
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  Index run(array<Index, NumIndices> const& indices, array<Index, NumIndices> const& dimensions)$/;"	f	struct:Eigen::internal::tensor_index_linearization_helper
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  Index run(array<Index, NumIndices> const& indices, array<Index, NumIndices> const&)$/;"	f	struct:Eigen::internal::tensor_index_linearization_helper
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  Index run(array<Index, NumIndices> const& indices, std::vector<DenseIndex> const& dimensions)$/;"	f	struct:Eigen::internal::tensor_vsize_index_linearization_helper
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  Index run(array<Index, NumIndices> const& indices, std::vector<DenseIndex> const&)$/;"	f	struct:Eigen::internal::tensor_vsize_index_linearization_helper
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static inline Index run(array<Index, NumIndices> const& indices,$/;"	f	struct:Eigen::internal::fixed_size_tensor_index_linearization_helper
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static inline Index run(const Index index,$/;"	f	struct:Eigen::internal::fixed_size_tensor_index_extraction_helper
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static inline bool run(Dims1& dims1, Dims2& dims2) {$/;"	f	struct:Eigen::internal::sizes_match_up_to_dim
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static inline bool run(Dims1&, Dims2&) {$/;"	f	struct:Eigen::internal::sizes_match_up_to_dim
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^  static inline void run(const Expression& expr, const DefaultDevice& device = DefaultDevice())$/;"	f	class:Eigen::internal::TensorExecutor
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^  static inline void run(const Expression& expr, const Device& device = Device())$/;"	f	class:Eigen::internal::TensorExecutor
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^  static inline void run(const Expression& expr, const GpuDevice& device)$/;"	f	class:Eigen::internal::TensorExecutor
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^  static inline void run(const Expression& expr, const ThreadPoolDevice& device)$/;"	f	class:Eigen::internal::TensorExecutor
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h	/^  static void run(Evaluator evaluator, const Index first, const Index last) {$/;"	f	struct:Eigen::internal::EvalRange
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInitializer.h	/^  static void run(TensorEvaluator<Derived, DefaultDevice>& tensor,$/;"	f	struct:Eigen::internal::Initializer
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static EIGEN_DEVICE_FUNC void run(const Self& self, Op& reducer, const Device&, typename Self::CoeffReturnType* output) {$/;"	f	struct:Eigen::internal::FullReducer
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static void run(const Eval& eval, typename Eval::Index firstIndex, typename Eval::Index numValuesToReduce, Op& reducer, FullReducerShard* shard) {$/;"	f	struct:Eigen::internal::FullReducerShard
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static void run(const InputDims& input_dims, const array<bool, Rank>&,$/;"	f	struct:Eigen::internal::DimInitializer
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static void run(const InputDims& input_dims,$/;"	f	struct:Eigen::internal::DimInitializer
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static void run(const Self& self, Op& reducer, const GpuDevice& device, OutputType* output) {$/;"	f	struct:Eigen::internal::FullReducer
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static void run(const Self& self, Op& reducer, const GpuDevice& device, float* output) {$/;"	f	struct:Eigen::internal::FullReducer
run	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static void run(const Self& self, Op& reducer, const ThreadPoolDevice& device, typename Self::CoeffReturnType* output) {$/;"	f	struct:Eigen::internal::FullReducer
run	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  constexpr static inline std::array<T, N> run(const std::array<T, N>& indices)$/;"	f	struct:Eigen::internal::tensor_static_symgroup_permutate
run	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  static inline RV run(const std::array<Index, NumIndices>& idx, RV initial, Args&&... args)$/;"	f	struct:Eigen::internal::tensor_static_symgroup_do_apply
run	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  static inline RV run(const std::array<Index, NumIndices>&, RV initial, Args&&...)$/;"	f	struct:Eigen::internal::tensor_static_symgroup_do_apply
run	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  static inline RV run(const std::vector<Index>& idx, RV initial, Args&&... args)$/;"	f	struct:Eigen::internal::tensor_static_symgroup_do_apply
run	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  static inline RV run(const std::vector<Index>&, RV initial, Args&&...)$/;"	f	struct:Eigen::internal::tensor_static_symgroup_do_apply
run	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  static inline int run(const std::array<Index, NumIndices>& transformed_indices, int transform_flags, int current_flags, const std::array<Index, NumIndices>& orig_indices)$/;"	f	struct:Eigen::internal::tensor_symmetry_calculate_flags
run	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  static inline int run(const std::array<Index, NumIndices>& transformed_indices, int transformation_flags, int dummy, Tensor_& tensor, const Scalar& value_)$/;"	f	struct:Eigen::internal::tensor_symmetry_assign_value
run	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  static void run(A& a, B& b) {$/;"	f	struct:Eigen::internal::make_coherent_impl
run	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  static void run(A&, B&) {}$/;"	f	struct:Eigen::internal::make_coherent_impl
run	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^  static void run(const MatrixType& arg, MatrixType& U, MatrixType& V, int& squarings)$/;"	f	struct:Eigen::internal::matrix_exp_computeUV
run	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^  static void run(const MatrixType& A, AtomicType& atomic, ResultType &result)$/;"	f	struct:Eigen::internal::matrix_function_compute
run	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^  static void run(const MatrixType &arg, ResultType &result)$/;"	f	struct:Eigen::internal::matrix_sqrt_compute
run	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    static void run(const Lhs& lhs, const Rhs& rhs, ResultType & res) {$/;"	f	struct:Eigen::internal::skyline_product_selector
run	tools/eigen/unsupported/test/cxx11_meta.cpp	/^struct times2_op { template<typename A> static A run(A v) { return v * 2; } };$/;"	f	struct:times2_op
run	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^  static inline int run(std::array<int, N> e, int flags, int dummy, std::set<uint64_t>& found, std::map<uint64_t, int> const& expected)$/;"	f	struct:checkIdx
run	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^  static inline int run(std::vector<int> e, int flags, int dummy, std::set<uint64_t>& found, std::map<uint64_t, int> const& expected)$/;"	f	struct:checkIdx
run	tools/eigen/unsupported/test/matrix_function.cpp	/^  static MatrixType run(const typename MatrixType::Index size)$/;"	f	struct:randomMatrixWithImagEivals
run	tools/eigen/unsupported/test/matrix_functions.h	/^  static void run(MatrixType& m, MatrixType& T, const MatrixType& U)$/;"	f	struct:processTriangularMatrix
run	tools/eigen/unsupported/test/matrix_functions.h	/^  static void run(MatrixType& result, typename MatrixType::Index size)$/;"	f	struct:generateTestMatrix
run	tools/eigen/unsupported/test/matrix_functions.h	/^  static void run(MatrixType&, MatrixType&, const MatrixType&)$/;"	f	struct:processTriangularMatrix
run_and_compare_to_cuda	tools/eigen/test/cuda_common.h	/^void run_and_compare_to_cuda(const Kernel& ker, int n, const Input& in, Output& out)$/;"	f
run_fixed_size_test	tools/eigen/test/umeyama.cpp	/^void run_fixed_size_test(int num_elements)$/;"	f
run_matrix_tests	tools/eigen/test/conservative_resize.cpp	/^void run_matrix_tests()$/;"	f
run_nesting_ops	tools/eigen/test/nesting_ops.cpp	/^template <typename MatrixType> void run_nesting_ops(const MatrixType& _m)$/;"	f
run_on_cpu	tools/eigen/test/cuda_common.h	/^void run_on_cpu(const Kernel& ker, int n, const Input& in, Output& out)$/;"	f
run_on_cuda	tools/eigen/test/cuda_common.h	/^void run_on_cuda(const Kernel& ker, int n, const Input& in, Output& out)$/;"	f
run_on_cuda_meta_kernel	tools/eigen/test/cuda_common.h	/^void run_on_cuda_meta_kernel(const Kernel ker, int n, const Input* in, Output* out)$/;"	f
run_test	tools/eigen/test/umeyama.cpp	/^void run_test(int dim, int num_elements)$/;"	f
run_trans	tools/eigen/bench/benchGeometry.cpp	88;"	d	file:
run_vec	tools/eigen/bench/benchGeometry.cpp	79;"	d	file:
run_vector_tests	tools/eigen/test/conservative_resize.cpp	/^void run_vector_tests()$/;"	f
rvalue_copyassign	tools/eigen/test/rvalue_types.cpp	/^void rvalue_copyassign(const MatrixType& m)$/;"	f
rvalue_copyassign	tools/eigen/test/rvalue_types.cpp	/^void rvalue_copyassign(const MatrixType&) {}$/;"	f
rwupdt	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h	/^void rwupdt($/;"	f	namespace:Eigen::internal
s	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    Scalar s() const { return m_s; }$/;"	f	class:Eigen::JacobiRotation
s	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    Scalar& s() { return m_s; }$/;"	f	class:Eigen::JacobiRotation
saccum	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typename Eval::CoeffReturnType saccum;$/;"	m	struct:Eigen::internal::FullReducerShard
sample	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType sample() const$/;"	f	class:Eigen::AlignedBox
sample_gaussian	tools/RedSVD.hh	/^	inline void sample_gaussian(MatrixType& mat)$/;"	f	namespace:RedSVD
sample_gaussian	tools/RedSVD.hh	/^	inline void sample_gaussian(Scalar& x, Scalar& y)$/;"	f	namespace:RedSVD
samples	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set samples 100, 100$/;"	v
samples	tools/eigen/doc/snippets/LLT_solve.cpp	/^DataMatrix samples = DataMatrix::Random(12,2);$/;"	v
saupd	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  static inline void saupd(int *ido, char *bmat, int *n, char *which,$/;"	f	struct:Eigen::internal::arpack_wrapper
saveAsBitmap	tools/eigen/doc/special_examples/Tutorial_sparse_example_details.cpp	/^void saveAsBitmap(const Eigen::VectorXd& x, int n, const char* filename)$/;"	f
saveMarket	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^bool saveMarket(const SparseMatrixType& mat, const std::string& filename, int sym = 0)$/;"	f	namespace:Eigen
saveMarketVector	tools/eigen/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^bool saveMarketVector (const VectorType& vec, const std::string& filename)$/;"	f	namespace:Eigen
saveSparseGraph	problem.cc	/^bool Entity::saveSparseGraph(const char* filename) {$/;"	f	class:Entity
scal	tools/eigen/blas/level1_impl.h	/^int EIGEN_BLAS_FUNC(scal)(int *n, RealScalar *palpha, RealScalar *px, int *incx)$/;"	f
scal_	tools/eigen/blas/level1_cplx_impl.h	/^int EIGEN_CAT(EIGEN_CAT(SCALAR_SUFFIX,REAL_SCALAR_SUFFIX),scal_)(int *n, RealScalar *palpha, RealScalar *px, int *incx)$/;"	f
scalarCount_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^    int scalarCount_;$/;"	m	struct:Eigen::internal::MeanReducer
scalar_abs2_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_abs2_op {$/;"	s	namespace:Eigen::internal
scalar_abs_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_abs_op {$/;"	s	namespace:Eigen::internal
scalar_acos_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_acos_op {$/;"	s	namespace:Eigen::internal
scalar_add_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline scalar_add_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_add_op
scalar_add_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline scalar_add_op(const scalar_add_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_add_op
scalar_add_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_add_op {$/;"	s	namespace:Eigen::internal
scalar_arg_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_arg_op {$/;"	s	namespace:Eigen::internal
scalar_asin_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_asin_op {$/;"	s	namespace:Eigen::internal
scalar_atan_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_atan_op {$/;"	s	namespace:Eigen::internal
scalar_binary_pow_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar, typename OtherScalar> struct scalar_binary_pow_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_and_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_boolean_and_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_not_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_boolean_not_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_or_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_boolean_or_op {$/;"	s	namespace:Eigen::internal
scalar_cast_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_cast_op {$/;"	s	namespace:Eigen::internal
scalar_ceil_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_ceil_op {$/;"	s	namespace:Eigen::internal
scalar_cmp_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_cmp_op<Scalar, cmp_EQ> {$/;"	s	namespace:Eigen::internal
scalar_cmp_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_cmp_op<Scalar, cmp_LE> {$/;"	s	namespace:Eigen::internal
scalar_cmp_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_cmp_op<Scalar, cmp_LT> {$/;"	s	namespace:Eigen::internal
scalar_cmp_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_cmp_op<Scalar, cmp_NEQ> {$/;"	s	namespace:Eigen::internal
scalar_cmp_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_cmp_op<Scalar, cmp_UNORD> {$/;"	s	namespace:Eigen::internal
scalar_conj_product_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct scalar_conj_product_op {$/;"	s	namespace:Eigen::internal
scalar_conjugate_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_conjugate_op {$/;"	s	namespace:Eigen::internal
scalar_constant_op	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_constant_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_constant_op(const scalar_constant_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^struct scalar_constant_op {$/;"	s	namespace:Eigen::internal
scalar_cos_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_cos_op {$/;"	s	namespace:Eigen::internal
scalar_cosh_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_cosh_op {$/;"	s	namespace:Eigen::internal
scalar_cube_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_cube_op {$/;"	s	namespace:Eigen::internal
scalar_difference_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_difference_op {$/;"	s	namespace:Eigen::internal
scalar_exp_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_exp_op {$/;"	s	namespace:Eigen::internal
scalar_floor_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_floor_op {$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_impl : scalar_fuzzy_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	tools/eigen/Eigen/src/Core/MathFunctions.h	/^template<> struct scalar_fuzzy_impl<bool>$/;"	s	namespace:Eigen::internal
scalar_hypot_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_hypot_op {$/;"	s	namespace:Eigen::internal
scalar_identity_op	tools/eigen/Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Scalar> struct scalar_identity_op {$/;"	s	namespace:Eigen::internal
scalar_imag_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_imag_op {$/;"	s	namespace:Eigen::internal
scalar_imag_ref_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_imag_ref_op {$/;"	s	namespace:Eigen::internal
scalar_inverse_mult_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  scalar_inverse_mult_op(const Scalar& other) : m_other(other) {}$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
scalar_inverse_mult_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_inverse_mult_op {$/;"	s	namespace:Eigen::internal
scalar_inverse_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_inverse_op {$/;"	s	namespace:Eigen::internal
scalar_isfinite_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isfinite_op {$/;"	s	namespace:Eigen::internal
scalar_isinf_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isinf_op {$/;"	s	namespace:Eigen::internal
scalar_isnan_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isnan_op {$/;"	s	namespace:Eigen::internal
scalar_log10_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_log10_op {$/;"	s	namespace:Eigen::internal
scalar_log_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_log_op {$/;"	s	namespace:Eigen::internal
scalar_max_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_max_op {$/;"	s	namespace:Eigen::internal
scalar_min_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_min_op {$/;"	s	namespace:Eigen::internal
scalar_multiple2_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_multiple2_op(const Scalar2& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
scalar_multiple2_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_multiple2_op(const scalar_multiple2_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
scalar_multiple2_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_multiple2_op {$/;"	s	namespace:Eigen::internal
scalar_multiple_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE scalar_multiple_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_multiple_op
scalar_multiple_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_STRONG_INLINE scalar_multiple_op(const scalar_multiple_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_multiple_op
scalar_multiple_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_multiple_op {$/;"	s	namespace:Eigen::internal
scalar_norm1_op	tools/eigen/blas/level1_cplx_impl.h	/^struct scalar_norm1_op {$/;"	s
scalar_opposite_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_opposite_op {$/;"	s	namespace:Eigen::internal
scalar_pow_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline scalar_pow_op(const Scalar& exponent) : m_exponent(exponent) {}$/;"	f	struct:Eigen::internal::scalar_pow_op
scalar_pow_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline scalar_pow_op(const scalar_pow_op& other) : m_exponent(other.m_exponent) { }$/;"	f	struct:Eigen::internal::scalar_pow_op
scalar_pow_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_pow_op {$/;"	s	namespace:Eigen::internal
scalar_product_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct scalar_product_op {$/;"	s	namespace:Eigen::internal
scalar_product_traits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct scalar_product_traits$/;"	s	namespace:Eigen
scalar_product_traits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<T,T>$/;"	s	namespace:Eigen
scalar_product_traits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<T,std::complex<T> >$/;"	s	namespace:Eigen
scalar_product_traits	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<std::complex<T>, T>$/;"	s	namespace:Eigen
scalar_product_traits	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct scalar_product_traits<T1, Ref<T2\/*, _Options, _StrideType*\/> >$/;"	s	namespace:Eigen::internal
scalar_product_traits	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct scalar_product_traits<A_Scalar, Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols> >$/;"	s	namespace:Eigen::internal
scalar_product_traits	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct scalar_product_traits<AutoDiffScalar<DerType>,typename DerType::Scalar>$/;"	s	namespace:Eigen::internal
scalar_product_traits	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct scalar_product_traits<Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols>,A_Scalar>$/;"	s	namespace:Eigen::internal
scalar_product_traits	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct scalar_product_traits<typename DerType::Scalar,AutoDiffScalar<DerType> >$/;"	s	namespace:Eigen::internal
scalar_quotient1_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_quotient1_op(const Scalar& other) : m_other(other) {}$/;"	f	struct:Eigen::internal::scalar_quotient1_op
scalar_quotient1_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_quotient1_op(const scalar_quotient1_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_quotient1_op
scalar_quotient1_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_quotient1_op {$/;"	s	namespace:Eigen::internal
scalar_quotient2_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_quotient2_op(const Scalar2& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_quotient2_op
scalar_quotient2_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_quotient2_op(const scalar_quotient2_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_quotient2_op
scalar_quotient2_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_quotient2_op {$/;"	s	namespace:Eigen::internal
scalar_quotient_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename LhsScalar,typename RhsScalar> struct scalar_quotient_op {$/;"	s	namespace:Eigen::internal
scalar_random_op	tools/eigen/Eigen/src/Core/Random.h	/^template<typename Scalar> struct scalar_random_op {$/;"	s	namespace:Eigen::internal
scalar_real_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_real_op {$/;"	s	namespace:Eigen::internal
scalar_real_ref_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_real_ref_op {$/;"	s	namespace:Eigen::internal
scalar_round_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_round_op {$/;"	s	namespace:Eigen::internal
scalar_rsqrt_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_rsqrt_op {$/;"	s	namespace:Eigen::internal
scalar_rsub_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline scalar_rsub_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_rsub_op
scalar_rsub_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline scalar_rsub_op(const scalar_rsub_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_rsub_op
scalar_rsub_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_rsub_op {$/;"	s	namespace:Eigen::internal
scalar_score_coeff_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_score_coeff_op : scalar_abs_op<Scalar>$/;"	s	namespace:Eigen::internal
scalar_sigmoid_op	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h	/^struct scalar_sigmoid_op {$/;"	s	namespace:Eigen::internal
scalar_sin_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sin_op {$/;"	s	namespace:Eigen::internal
scalar_sinh_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sinh_op {$/;"	s	namespace:Eigen::internal
scalar_sqrt_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sqrt_op {$/;"	s	namespace:Eigen::internal
scalar_square_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_square_op {$/;"	s	namespace:Eigen::internal
scalar_sub_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline scalar_sub_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_sub_op
scalar_sub_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline scalar_sub_op(const scalar_sub_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_sub_op
scalar_sub_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_sub_op {$/;"	s	namespace:Eigen::internal
scalar_sum_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  scalar_sum_op() {}$/;"	f	struct:Eigen::internal::scalar_sum_op
scalar_sum_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct scalar_sum_op<bool> : scalar_sum_op<int> {$/;"	s	namespace:Eigen::internal
scalar_sum_op	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename Scalar> struct scalar_sum_op {$/;"	s	namespace:Eigen::internal
scalar_tan_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_tan_op {$/;"	s	namespace:Eigen::internal
scalar_tanh_op	tools/eigen/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_tanh_op {$/;"	s	namespace:Eigen::internal
scalar_type	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef double scalar_type;$/;"	t	struct:Eigen::internal::fftw_plan
scalar_type	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef float scalar_type;$/;"	t	struct:Eigen::internal::fftw_plan
scalar_type	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef long double scalar_type;$/;"	t	struct:Eigen::internal::fftw_plan
scale	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::scale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
scale	tools/eigen/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::scale(const Scalar& s)$/;"	f	class:Eigen::Transform
scaleAndAddTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static inline void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl_base
scaleAndAddTo	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& a_lhs, const Rhs& a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, const typename Rhs::Scalar& alpha) const$/;"	f	class:Eigen::BlockSparseTimeDenseProduct
scatterPacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE void scatterPacket(Index i, Index j, const SubPacket &p) const {$/;"	f	class:Eigen::internal::blas_data_mapper
schur	tools/eigen/test/schur_complex.cpp	/^template<typename MatrixType> void schur(int size = MatrixType::ColsAtCompileTime)$/;"	f
schur	tools/eigen/test/schur_real.cpp	/^template<typename MatrixType> void schur(int size = MatrixType::ColsAtCompileTime)$/;"	f
schurValues	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^inline typename DGMRES<_MatrixType, _Preconditioner>::ComplexVector DGMRES<_MatrixType, _Preconditioner>::schurValues(const ComplexSchur<DenseMatrix>& schurofH) const$/;"	f	class:Eigen::DGMRES
schurValues	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^inline typename DGMRES<_MatrixType, _Preconditioner>::ComplexVector DGMRES<_MatrixType, _Preconditioner>::schurValues(const RealSchur<DenseMatrix>& schurofH) const$/;"	f	class:Eigen::DGMRES
scomplex	tools/eigen/Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<float>  scomplex;$/;"	t	namespace:Eigen
scoped_array	tools/eigen/Eigen/src/Core/util/Memory.h	/^  explicit scoped_array(std::ptrdiff_t size)$/;"	f	class:Eigen::internal::scoped_array
scoped_array	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> class scoped_array : noncopyable$/;"	c	namespace:Eigen::internal
score	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType score ; \/* the score used to maintain heap, if col is alive *\/$/;"	m	union:internal::colamd_col::__anon185
scores	tools/RedSVD.hh	/^		DenseMatrix scores() const$/;"	f	class:RedSVD::RedPCA
sdsdot	tools/eigen/blas/single.cpp	/^float BLASFUNC(sdsdot)(int* n, float* alpha, float* x, int* incx, float* y, int* incy)$/;"	f
searchLowerIndex	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
searchLowerIndex	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(Index start, Index end, Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
sec	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sec   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(sec  );    }$/;"	f	namespace:mpfr
sech	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sech  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(sech );    }$/;"	f	namespace:mpfr
second	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  Packet second;$/;"	m	struct:Eigen::internal::DoublePacket
second	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  Index second;$/;"	m	struct:Eigen::IndexPair
second	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  V second;$/;"	m	struct:Eigen::Tuple
second	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  int second;$/;"	m	struct:Eigen::internal::vector_int_pair
second_type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  typedef V second_type;$/;"	t	struct:Eigen::Tuple
secularEq	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^typename BDCSVD<MatrixType>::RealScalar BDCSVD<MatrixType>::secularEq(RealScalar mu, const ArrayRef& col0, const ArrayRef& diag, const IndicesRef &perm, const ArrayRef& diagShifted, RealScalar shift)$/;"	f	class:Eigen::BDCSVD
segment	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType segment(Index start, Index n) const$/;"	f
segment	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType segment(Index start, Index n)$/;"	f
segment	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type segment(Index start, Index n = N) const$/;"	f
segment	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type segment(Index start, Index n = N)$/;"	f
segmentFromRange	tools/eigen/doc/examples/class_VectorBlock.cpp	/^segmentFromRange(MatrixBase<Derived>& v, int start, int end)$/;"	f
segmentFromRange	tools/eigen/doc/examples/class_VectorBlock.cpp	/^segmentFromRange(const MatrixBase<Derived>& v, int start, int end)$/;"	f
select	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^  bool select[N];$/;"	m	struct:Eigen::internal::Selector
select	tools/eigen/Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const DenseBase<ThenDerived>& thenMatrix,$/;"	f	class:Eigen::DenseBase
select	tools/eigen/Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const typename ElseDerived::Scalar& thenScalar,$/;"	f	class:Eigen::DenseBase
select	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    select(const ThenDerived& thenTensor, const ElseDerived& elseTensor) const {$/;"	f	class:Eigen::TensorBase
selectAndHighlight	tools/eigen/doc/eigen_navtree_hacks.js	/^function selectAndHighlight(hash,n)$/;"	f
selectComplexRoot_withRespectToNorm	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RootType& selectComplexRoot_withRespectToNorm( squaredNormBinaryPredicate& pred ) const$/;"	f	class:Eigen::PolynomialSolverBase
selectRealRoot_withRespectToAbsRealPart	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& selectRealRoot_withRespectToAbsRealPart($/;"	f	class:Eigen::PolynomialSolverBase
selectRealRoot_withRespectToRealPart	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& selectRealRoot_withRespectToRealPart($/;"	f	class:Eigen::PolynomialSolverBase
selector	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^  typedef product_type_selector<rows_select, cols_select, depth_select> selector;$/;"	t	struct:Eigen::internal::product_type
selfadjoint	tools/eigen/test/selfadjoint.cpp	/^template<typename MatrixType> void selfadjoint(const MatrixType& m)$/;"	f
selfadjointView	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::MatrixBase
selfadjointView	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::MatrixBase
selfadjointView	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView()$/;"	f	class:Eigen::TriangularView
selfadjointView	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    const SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView() const$/;"	f	class:Eigen::TriangularView
selfadjointView	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^typename SparseMatrixBase<Derived>::template ConstSelfAdjointViewReturnType<UpLo>::Type SparseMatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::SparseMatrixBase
selfadjointView	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^typename SparseMatrixBase<Derived>::template SelfAdjointViewReturnType<UpLo>::Type SparseMatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::SparseMatrixBase
selfadjoint_matrix_vector_product	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_matrix_vector_product$/;"	s	namespace:Eigen::internal
selfadjoint_matrix_vector_product_symv	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^struct selfadjoint_matrix_vector_product_symv :$/;"	s	namespace:Eigen::internal
selfadjoint_packed_rank1_update	tools/eigen/blas/PackedSelfadjointProduct.h	/^struct selfadjoint_packed_rank1_update<Scalar,Index,ColMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:internal
selfadjoint_packed_rank1_update	tools/eigen/blas/PackedSelfadjointProduct.h	/^struct selfadjoint_packed_rank1_update<Scalar,Index,RowMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:internal
selfadjoint_product_impl	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct selfadjoint_product_impl<Lhs,LhsMode,false,Rhs,RhsMode,false>$/;"	s	namespace:Eigen::internal
selfadjoint_product_impl	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_product_impl<Lhs,0,true,Rhs,RhsMode,false>$/;"	s	namespace:Eigen::internal
selfadjoint_product_impl	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_product_impl<Lhs,LhsMode,false,Rhs,0,true>$/;"	s	namespace:Eigen::internal
selfadjoint_product_selector	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,false>$/;"	s	namespace:Eigen
selfadjoint_product_selector	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,true>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,ColMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	tools/eigen/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,RowMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank2_update_selector	tools/eigen/Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Lower>$/;"	s	namespace:Eigen::internal
selfadjoint_rank2_update_selector	tools/eigen/Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Upper>$/;"	s	namespace:Eigen::internal
selfadjointeigensolver	tools/eigen/test/eigensolver_selfadjoint.cpp	/^template<typename MatrixType> void selfadjointeigensolver(const MatrixType& m)$/;"	f
selfadjointeigensolver_essential_check	tools/eigen/test/eigensolver_selfadjoint.cpp	/^template<typename MatrixType> void selfadjointeigensolver_essential_check(const MatrixType& m)$/;"	f
sep	tools/eigen/doc/snippets/IOFormat.cpp	/^std::cout << m1 << sep;$/;"	v
sep	tools/eigen/doc/snippets/IOFormat.cpp	/^std::string sep = "\\n----------------------------------------\\n";$/;"	v
set	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
set	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC void set(const DenseIndex i, const DenseIndex value) {$/;"	f	struct:Eigen::IndexList
set	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static void set(const DenseIndex i, std::tuple<T...>& t, const DenseIndex value) {$/;"	f	struct:Eigen::internal::tuple_coeff
set	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  void set(DenseIndex val) {$/;"	f	struct:Eigen::type2index
setBlockLayout	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline void setBlockLayout(const VectorXi& rowBlocks, const VectorXi& colBlocks)$/;"	f	class:Eigen::BlockSparseMatrix
setBlockSize	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline void setBlockSize(Index blockSize)$/;"	f	class:Eigen::BlockSparseMatrix
setBlockStructure	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    void setBlockStructure(const MatrixType& blockPattern)$/;"	f	class:Eigen::BlockSparseMatrix
setBounds	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    void setBounds(Index start, Index end) { m_start = convert_index(start); m_end = convert_index(end); }$/;"	f	class:Eigen::internal::AmbiVector
setCallback	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setCallback(void (*t)(const IterationController&))$/;"	f	class:Eigen::IterationController
setCamera	tools/eigen/demos/opengl/trackball.h	/^    void setCamera(Camera* pCam) { mpCamera = pCam; }$/;"	f	class:Trackball
setConstant	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setConstant(const Scalar& val)$/;"	f	class:Eigen::DenseBase
setConstant	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index rows, Index cols, const Scalar& val)$/;"	f	class:Eigen::PlainObjectBase
setConstant	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index size, const Scalar& val)$/;"	f	class:Eigen::PlainObjectBase
setConstant	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setConstant(const Scalar& value)$/;"	f	class:Eigen::TriangularViewImpl
setConstant	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    EIGEN_STRONG_INLINE Derived& setConstant(const Scalar& val) {$/;"	f	class:Eigen::TensorBase
setCpuCacheSizes	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void setCpuCacheSizes(std::ptrdiff_t l1, std::ptrdiff_t l2, std::ptrdiff_t l3)$/;"	f	namespace:Eigen
setCudaSharedMemConfig	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^static inline void setCudaSharedMemConfig(cudaSharedMemConfig config) {$/;"	f	namespace:Eigen
setDirection	tools/eigen/demos/opengl/camera.cpp	/^void Camera::setDirection(const Vector3f& newDirection)$/;"	f	class:Camera
setDroptol	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::setDroptol(const RealScalar& droptol)$/;"	f	class:Eigen::IncompleteLUT
setEigenv	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  void setEigenv(const int neig) $/;"	f	class:Eigen::DGMRES
setEmpty	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline void setEmpty()$/;"	f	class:Eigen::AlignedBox
setEpsilon	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    void setEpsilon (RealScalar epsfcn) { m_epsfcn = epsfcn; }$/;"	f	class:Eigen::LevenbergMarquardt
setExternalScaling	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    void setExternalScaling(bool value) {m_useExternalScaling  = value; }$/;"	f	class:Eigen::LevenbergMarquardt
setFactor	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    void setFactor(RealScalar factor) { m_factor = factor; }    $/;"	f	class:Eigen::LevenbergMarquardt
setFillfactor	tools/eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::setFillfactor(int fillfactor)$/;"	f	class:Eigen::IncompleteLUT
setFlags	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    void setFlags(int f) {$/;"	f	class:Eigen::SkylineInplaceLU
setFovY	tools/eigen/demos/opengl/camera.cpp	/^void Camera::setFovY(float value)$/;"	f	class:Camera
setFrame	tools/eigen/demos/opengl/camera.cpp	/^void Camera::setFrame(const Frame& f)$/;"	f	class:Camera
setFromTriplets	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_Index>::setFromTriplets(const InputIterators& begin, const InputIterators& end)$/;"	f	class:Eigen::SparseMatrix
setFromTriplets	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    void setFromTriplets(const InputIterator& begin, const InputIterator& end)$/;"	f	class:Eigen::BlockSparseMatrix
setFromTwoVectors	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^inline Derived& QuaternionBase<Derived>::setFromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::QuaternionBase
setFtol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    void setFtol(RealScalar ftol) { m_ftol = ftol; }$/;"	f	class:Eigen::LevenbergMarquardt
setGtol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    void setGtol(RealScalar gtol) { m_gtol = gtol; }$/;"	f	class:Eigen::LevenbergMarquardt
setIdentity	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity()$/;"	f	class:Eigen::MatrixBase
setIdentity	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity(Index rows, Index cols)$/;"	f	class:Eigen::MatrixBase
setIdentity	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity() { m_diagonal.setOnes(); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity(Index size) { m_diagonal.setOnes(size); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity()$/;"	f	class:Eigen::PermutationBase
setIdentity	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity(Index newSize)$/;"	f	class:Eigen::PermutationBase
setIdentity	tools/eigen/Eigen/src/Core/Transpositions.h	/^    void setIdentity()$/;"	f	class:Eigen::TranspositionsBase
setIdentity	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline QuaternionBase& setIdentity() { coeffs() << Scalar(0), Scalar(0), Scalar(0), Scalar(1); return *this; }$/;"	f	class:Eigen::QuaternionBase
setIdentity	tools/eigen/Eigen/src/Geometry/Transform.h	/^  void setIdentity() { m_matrix.setIdentity(); }$/;"	f	class:Eigen::Transform
setIdentity	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setIdentity()$/;"	f	class:Eigen::SparseMatrix
setIdentity_impl	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^struct setIdentity_impl<Derived, true>$/;"	s	namespace:Eigen::internal
setInf	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::setInf(int sign) $/;"	f	class:mpfr::mpreal
setInfos	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    void setInfos(Index m, Index n, ScalarVector& nzval, IndexVector& nzval_colptr, IndexVector& rowind,$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
setInitialShift	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^    void setInitialShift(RealScalar shift) { m_initialShift = shift; }$/;"	f	class:Eigen::IncompleteCholesky
setInvalidKey	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  static void setInvalidKey(Type& map, const KeyType& k)$/;"	f	struct:Eigen::GoogleDenseHashMapTraits
setInvalidKey	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  static void setInvalidKey(Type&, const KeyType&) {}$/;"	f	struct:Eigen::GoogleSparseHashMapTraits
setInvalidKey	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  static void setInvalidKey(Type&, const KeyType&) {}$/;"	f	struct:Eigen::StdMapTraits
setInvalidKey	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  static void setInvalidKey(Type&, const KeyType&) {}$/;"	f	struct:Eigen::StdUnorderedMapTraits
setIteration	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setIteration(size_t i) { m_nit = i; }$/;"	f	class:Eigen::IterationController
setLength	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setLength(Index length)$/;"	f	class:Eigen::HouseholderSequence
setLerpMode	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::setLerpMode(int m)$/;"	f	class:RenderingWidget
setLinSpaced	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(Index newSize, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setLinSpaced	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setMatrixTarget	tools/eigen/demos/opengl/gpuhelper.h	/^inline void GpuHelper::setMatrixTarget(GLenum matrixTarget)$/;"	f	class:GpuHelper
setMaxEigenv	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  void setMaxEigenv(const int maxNeig) { m_maxNeig = maxNeig; }$/;"	f	class:Eigen::DGMRES
setMaxIterations	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::ComplexEigenSolver
setMaxIterations	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexSchur& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::ComplexSchur
setMaxIterations	tools/eigen/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::EigenSolver
setMaxIterations	tools/eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::GeneralizedEigenSolver
setMaxIterations	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^      RealQZ& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::RealQZ
setMaxIterations	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^    RealSchur& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::RealSchur
setMaxIterations	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::IterativeSolverBase
setMaxIterations	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setMaxIterations(size_t i) { m_maxiter = i; }$/;"	f	class:Eigen::IterationController
setMaxResidual	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setMaxResidual(double r) { m_resmax = r; }$/;"	f	class:Eigen::IterationController
setMaxfev	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    void setMaxfev(Index maxfev) {m_maxfev = maxfev; }$/;"	f	class:Eigen::LevenbergMarquardt
setMode	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void setMode(CholmodMode mode)$/;"	f	class:Eigen::CholmodDecomposition
setMode	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& setMode(SimplicialCholeskyMode mode)$/;"	f	class:Eigen::SimplicialCholesky
setNan	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::setNan() $/;"	f	class:mpfr::mpreal
setNavMode	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::setNavMode(int m)$/;"	f	class:RenderingWidget
setNbThreads	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^inline void setNbThreads(int v)$/;"	f	namespace:Eigen
setNoiseLevel	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setNoiseLevel(int n) { m_noise = n; }$/;"	f	class:Eigen::IterationController
setNull	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline void setNull() { setEmpty(); }$/;"	f	class:Eigen::AlignedBox
setOnes	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setOnes()$/;"	f	class:Eigen::DenseBase
setOnes	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setOnes	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setOnes	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setOnes() { return setConstant(Scalar(1)); }$/;"	f	class:Eigen::TriangularViewImpl
setOrderingMethod	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    void setOrderingMethod(int m) {$/;"	f	class:Eigen::SkylineInplaceLU
setOrientation	tools/eigen/demos/opengl/camera.cpp	/^void Camera::setOrientation(const Quaternionf& q)$/;"	f	class:Camera
setPivotThreshold	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void setPivotThreshold(const RealScalar& tol)$/;"	f	class:Eigen::SPQR
setPivotThreshold	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    void setPivotThreshold(const RealScalar& thresh)$/;"	f	class:Eigen::SparseLU
setPivotThreshold	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    void setPivotThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::SparseQR
setPolynomial	tools/eigen/unsupported/Eigen/src/Polynomials/Companion.h	/^    void setPolynomial( const VectorType& poly )$/;"	f	class:Eigen::internal::companion
setPolynomial	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline void setPolynomial( const OtherPolynomial& poly ){$/;"	f	class:Eigen::PolynomialSolverBase
setPosition	tools/eigen/demos/opengl/camera.cpp	/^void Camera::setPosition(const Vector3f& p)$/;"	f	class:Camera
setPrecision	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    void setPrecision(RealScalar v) {$/;"	f	class:Eigen::SkylineInplaceLU
setPrecision	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::setPrecision(int Precision, mp_rnd_t RoundingMode)$/;"	f	class:mpfr::mpreal
setRandom	tools/eigen/Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setRandom	tools/eigen/Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setRandom	tools/eigen/Eigen/src/Core/Random.h	/^inline Derived& DenseBase<Derived>::setRandom()$/;"	f	class:Eigen::DenseBase
setRandom	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    EIGEN_STRONG_INLINE Derived& setRandom() {$/;"	f	class:Eigen::TensorBase
setRhsNorm	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setRhsNorm(double r) { m_rhsn = r; }$/;"	f	class:Eigen::IterationController
setRotationMode	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::setRotationMode(int m)$/;"	f	class:RenderingWidget
setSPQROrdering	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void setSPQROrdering(int ord) { m_ordering = ord;}$/;"	f	class:Eigen::SPQR
setScalarType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setScalarType()$/;"	f	struct:Eigen::SluMatrix
setShift	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& setShift(const RealScalar& offset)$/;"	f	class:Eigen::CholmodBase
setShift	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setShift(Index shift)$/;"	f	class:Eigen::HouseholderSequence
setShift	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& setShift(const RealScalar& offset, const RealScalar& scale = 1)$/;"	f	class:Eigen::SimplicialCholeskyBase
setSign	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::setSign(int sign, mp_rnd_t RoundingMode)$/;"	f	class:mpfr::mpreal
setStorageType	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setStorageType(Stype_t t)$/;"	f	struct:Eigen::SluMatrix
setSwitchSize	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  void setSwitchSize(int s) $/;"	f	class:Eigen::BDCSVD
setTarget	tools/eigen/demos/opengl/camera.cpp	/^void Camera::setTarget(const Vector3f& target)$/;"	f	class:Camera
setThreshold	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivLU
setThreshold	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivLU
setThreshold	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivHouseholderQR
setThreshold	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivHouseholderQR
setThreshold	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  Derived& setThreshold(Default_t)$/;"	f	class:Eigen::SVDBase
setThreshold	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  Derived& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::SVDBase
setTolerance	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setTolerance(const RealScalar& tolerance)$/;"	f	class:Eigen::IterativeSolverBase
setTolerance	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    void setTolerance(double tol)$/;"	f	class:Eigen::IterScaling
setTrans	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setTrans(bool trans)$/;"	f	class:Eigen::HouseholderSequence
setValues	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    EIGEN_STRONG_INLINE Derived& setValues($/;"	f	class:Eigen::TensorBase
setViewport	tools/eigen/demos/opengl/camera.cpp	/^void Camera::setViewport(uint offsetx, uint offsety, uint width, uint height)$/;"	f	class:Camera
setViewport	tools/eigen/demos/opengl/camera.cpp	/^void Camera::setViewport(uint width, uint height)$/;"	f	class:Camera
setXtol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    void setXtol(RealScalar xtol) { m_xtol = xtol; }$/;"	f	class:Eigen::LevenbergMarquardt
setZero	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    void setZero()$/;"	f	class:Eigen::LDLT
setZero	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setZero()$/;"	f	class:Eigen::DenseBase
setZero	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setZero	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setZero	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero() { m_diagonal.setZero(); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero(Index size) { m_diagonal.setZero(size); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setZero() { return setConstant(Scalar(0)); }$/;"	f	class:Eigen::TriangularViewImpl
setZero	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::setZero()$/;"	f	class:Eigen::internal::AmbiVector
setZero	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setZero()$/;"	f	class:Eigen::SparseMatrix
setZero	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline void setZero() { m_data.clear(); }$/;"	f	class:Eigen::SparseVector
setZero	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    EIGEN_STRONG_INLINE Derived& setZero() {$/;"	f	class:Eigen::TensorBase
setZero	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void setZero() {$/;"	f	class:Eigen::SkylineMatrix
setZero	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void setZero()$/;"	f	class:Eigen::DynamicSparseMatrix
setZero	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal&    mpreal::setZero(int sign)$/;"	f	class:mpfr::mpreal
set_default_prec	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::set_default_prec(mp_prec_t prec)$/;"	f	class:mpfr::mpreal
set_default_rnd	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::set_default_rnd(mp_rnd_t rnd_mode)$/;"	f	class:mpfr::mpreal
set_emax	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::set_emax (mp_exp_t exp)$/;"	f	class:mpfr::mpreal
set_emin	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::set_emin (mp_exp_t exp)$/;"	f	class:mpfr::mpreal
set_exp	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::set_exp (mp_exp_t e)$/;"	f	class:mpfr::mpreal
set_from_triplets	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^void set_from_triplets(const InputIterator& begin, const InputIterator& end, SparseMatrixType& mat, int Options = 0)$/;"	f	namespace:Eigen::internal
set_is_malloc_allowed	tools/eigen/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool set_is_malloc_allowed(bool new_value) { return is_malloc_allowed_impl(true, new_value); }$/;"	f	namespace:Eigen::internal
set_prec	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::set_prec(mp_prec_t prec, mp_rnd_t rnd_mode)$/;"	f	class:mpfr::mpreal
set_repeat_from_string	tools/eigen/test/main.h	/^inline void set_repeat_from_string(const char *str)$/;"	f
set_restart	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  void set_restart(const int restart) { m_restart=restart; }$/;"	f	class:Eigen::DGMRES
set_restart	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  void set_restart(const Index restart) { m_restart=restart; }$/;"	f	class:Eigen::GMRES
set_seed_from_string	tools/eigen/test/main.h	/^inline void set_seed_from_string(const char *str)$/;"	f
setinnerrand_eigen	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setinnerrand_eigen(const Coordinates& coords, const Values& vals)$/;"	f
setrand_eigen_compact	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_eigen_compact(const Coordinates& coords, const Values& vals)$/;"	f
setrand_eigen_dynamic	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_eigen_dynamic(const Coordinates& coords, const Values& vals)$/;"	f
setrand_eigen_gnu_hash	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_eigen_gnu_hash(const Coordinates& coords, const Values& vals)$/;"	f
setrand_eigen_google_dense	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_eigen_google_dense(const Coordinates& coords, const Values& vals)$/;"	f
setrand_eigen_google_sparse	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_eigen_google_sparse(const Coordinates& coords, const Values& vals)$/;"	f
setrand_eigen_sumeq	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_eigen_sumeq(const Coordinates& coords, const Values& vals)$/;"	f
setrand_scipy	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_scipy(const Coordinates& coords, const Values& vals)$/;"	f
setrand_ublas_genvec	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_ublas_genvec(const Coordinates& coords, const Values& vals)$/;"	f
setrand_ublas_mapped	tools/eigen/bench/sparse_setter.cpp	/^EIGEN_DONT_INLINE Scalar* setrand_ublas_mapped(const Coordinates& coords, const Values& vals)$/;"	f
seupd	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  static inline void seupd(int *rvec, char *All, int *select, Scalar *d,$/;"	f	struct:Eigen::internal::arpack_wrapper
seupd	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  static inline void seupd(int *rvec, char *All, int *select, double *d,$/;"	f	struct:Eigen::internal::arpack_wrapper
seupd	tools/eigen/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h	/^  static inline void seupd(int *rvec, char *All, int *select, float *d,$/;"	f	struct:Eigen::internal::arpack_wrapper
sgn	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int sgn(const mpreal& op)$/;"	f	namespace:mpfr
shared1	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared1 ;$/;"	m	struct:internal::Colamd_Row	typeref:union:internal::Colamd_Row::__anon188
shared1	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared1 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon184
shared2	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared2 ;$/;"	m	struct:internal::Colamd_Row	typeref:union:internal::Colamd_Row::__anon189
shared2	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared2 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon185
shared3	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared3 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon186
shared4	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared4 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon187
sharedMemPerBlock	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  inline int sharedMemPerBlock() const {$/;"	f	struct:Eigen::GpuDevice
shear	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::shear(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Transform
shift	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    Index shift() const { return m_shift; }    \/**< \\brief Returns the shift of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
shift	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  int32_t shift;$/;"	m	class:Eigen::internal::TensorIntDivisor
shift1	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  int32_t shift1;$/;"	m	struct:Eigen::internal::TensorIntDivisor
shift2	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^  int32_t shift2;$/;"	m	struct:Eigen::internal::TensorIntDivisor
should_raise_an_assert	tools/eigen/test/main.h	/^    static const bool should_raise_an_assert = false;$/;"	m	namespace:Eigen
show_usage_and_exit	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  void show_usage_and_exit() const$/;"	f	struct:evaluate_defaults_action_t
show_usage_and_exit	tools/eigen/bench/analyze-blocking-sizes.cpp	/^void show_usage_and_exit(int argc, char* argv[],$/;"	f
shuffle	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    shuffle(const Shuffle& shuffle) const {$/;"	f	class:Eigen::TensorBase
shuffle	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    shuffle(const Shuffle& shuffle) {$/;"	f	class:Eigen::TensorBase
shuffleInc	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	390;"	d
shuffleInc	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	419;"	d
shufflePermutation	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^    const Shuffle& shufflePermutation() const { return m_shuffle; }$/;"	f	class:Eigen::TensorShufflingOp
shuffling	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void shuffling(int num_iters) {$/;"	f	class:BenchmarkSuite
shuffling	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(shuffling);$/;"	v
sigmoid	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    sigmoid() const {$/;"	f	class:Eigen::TensorBase
signDeterminant	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    Scalar signDeterminant()$/;"	f	class:Eigen::SparseLU
signaling_NaN	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        inline static const mpfr::mpreal signaling_NaN()    { return mpfr::mpreal().setNan();    }$/;"	f	class:std::numeric_limits
signedDistance	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar signedDistance(const VectorType& p) const { return normal().dot(p) + offset(); }$/;"	f	class:Eigen::Hyperplane
signed_integer_type_tests	tools/eigen/test/integer_types.cpp	/^template<typename MatrixType> void signed_integer_type_tests(const MatrixType& m)$/;"	f
significant_decimals_default_impl	tools/eigen/Eigen/src/Core/IO.h	/^struct significant_decimals_default_impl$/;"	s	namespace:Eigen::internal
significant_decimals_default_impl	tools/eigen/Eigen/src/Core/IO.h	/^struct significant_decimals_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
significant_decimals_impl	tools/eigen/Eigen/src/Core/IO.h	/^struct significant_decimals_impl$/;"	s	namespace:Eigen::internal
significant_decimals_impl	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIO.h	/^struct significant_decimals_impl<std::string>$/;"	s	namespace:Eigen::internal
simple_function	tools/eigen/bench/btl/generic_bench/init/init_function.hh	/^double simple_function(int index)$/;"	f
simple_function	tools/eigen/bench/btl/generic_bench/init/init_function.hh	/^double simple_function(int index_i, int index_j)$/;"	f
simplicial_cholesky_grab_input	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  struct simplicial_cholesky_grab_input {$/;"	s	namespace:Eigen::internal
simplicial_cholesky_grab_input	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  struct simplicial_cholesky_grab_input<MatrixType,MatrixType> {$/;"	s	namespace:Eigen::internal
sin	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sin() const$/;"	f
sin	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::sin() const$/;"	f	class:Eigen::MatrixBase
sin	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sin   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(sin  );    }$/;"	f	namespace:mpfr
sin_cos	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int sin_cos(mpreal& s, mpreal& c, const mpreal& v, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
sin_over_x	tools/eigen/bench/quat_slerp.cpp	/^inline T sin_over_x(T x)$/;"	f
sing	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    bool sing;$/;"	m	class:Eigen::HybridNonLinearSolver
single_precision	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    bool single_precision;$/;"	m	class:MandelbrotThread
singularValues	tools/RedSVD.hh	/^		ScalarVector singularValues() const$/;"	f	class:RedSVD::RedSVD
singularValues	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  const SingularValuesType& singularValues() const$/;"	f	class:Eigen::SVDBase
sinh	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sinh() const$/;"	f
sinh	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::sinh() const$/;"	f	class:Eigen::MatrixBase
sinh	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sinh  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(sinh );    }$/;"	f	namespace:mpfr
sinh_cosh	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int sinh_cosh(mpreal& s, mpreal& c, const mpreal& v, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
size	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index size() const        { return m_dstExpr.size(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
size	tools/eigen/Eigen/src/Core/EigenBase.h	/^  inline Index size() const { return rows() * cols(); }$/;"	f	struct:Eigen::EigenBase
size	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon258
size	tools/eigen/Eigen/src/Core/Matrix.h	/^  enum { size = internal::size_at_compile_time<_Rows,_Cols>::ret };$/;"	e	enum:Eigen::internal::traits::__anon291
size	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline Index size() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
size	tools/eigen/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index size() const { return m_xpr.size(); }$/;"	f	class:Eigen::internal::redux_evaluator
size	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Index size() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
size	tools/eigen/Eigen/src/Core/Transpositions.h	/^    Index size() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
size	tools/eigen/Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index size() const { return m_xpr.size(); }$/;"	f	class:Eigen::internal::visitor_evaluator
size	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon361
size	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon359
size	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon362
size	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon360
size	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon367
size	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^    size=8,$/;"	e	enum:Eigen::internal::packet_traits::__anon366
size	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon369
size	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon368
size	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon370
size	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon322
size	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon320
size	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon323
size	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon321
size	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon328
size	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=4$/;"	e	enum:Eigen::internal::packet_traits::__anon325
size	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon324
size	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon329
size	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon326
size	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon327
size	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon317
size	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon316
size	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon319
size	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon318
size	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon349
size	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon347
size	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon350
size	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon348
size	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon355
size	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon351
size	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon352
size	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon356
size	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon353
size	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon354
size	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon336
size	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon334
size	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon337
size	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon335
size	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon342
size	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon341
size	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon343
size	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon345
size	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon344
size	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon346
size	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex size() const { return m_size; }$/;"	f	class:Eigen::internal::AmbiVector
size	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index size() const { return m_size; }$/;"	f	class:Eigen::internal::CompressedStorage
size	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index size() const { return rows() * cols(); }$/;"	f	class:Eigen::SparseMatrixBase
size	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    int size;$/;"	m	class:MandelbrotWidget
size	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_ThreeWays.cpp	/^const int size = 6;$/;"	v
size	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const std::size_t size() { return n; }$/;"	f	class:Eigen::array
size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/Tensor.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index                         size()                   const { return m_storage.size(); }$/;"	f	class:Eigen::Tensor
size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFixedSize.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index                    size()                   const { return m_storage.size(); }$/;"	f	class:Eigen::TensorFixedSize
size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h	/^    EIGEN_STRONG_INLINE Index size() const { return m_dimensions.TotalSize(); }$/;"	f	class:Eigen::TensorMap
size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  static const size_t size = 1;$/;"	m	struct:Eigen::max_n_1
size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  static const size_t size = n;$/;"	m	struct:Eigen::max_n_1
size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE Index size() const { return m_evaluator->dimensions().TotalSize(); }$/;"	f	class:Eigen::TensorRef
size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index size() const { return m_dimensions.TotalSize(); }$/;"	f	class:Eigen::TensorStorage
size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^  EIGEN_STRONG_INLINE DenseIndex size() const { return m_dimensions.TotalSize(); }$/;"	f	class:Eigen::TensorStorage
size	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^    inline std::size_t size() const { return m_elements.size(); }$/;"	f	class:Eigen::DynamicSGroup
size	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static inline std::size_t size() {$/;"	f	class:Eigen::StaticSGroup
size	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  constexpr static std::size_t size = type::static_size;$/;"	m	struct:Eigen::internal::tensor_static_symgroup
size	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t size = 0;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_if
size	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    Index size() const { return m_values.size(); }$/;"	f	class:Eigen::AutoDiffVector
size	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline size_t size() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
size	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline size_t size() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
size	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Index size() const {$/;"	f	class:Eigen::SkylineMatrixBase
size	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index size() const$/;"	f	class:Eigen::BlockVectorReturn
size	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Index size() const$/;"	f	class:Eigen::BlockVectorView
size_at_compile_time	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<int _Rows, int _Cols> struct size_at_compile_time$/;"	s	struct:Eigen::internal::promote_index_type
size_lin_log	tools/eigen/bench/btl/generic_bench/utils/size_lin_log.hh	/^void size_lin_log(const int nb_point, const int \/*size_min*\/, const int size_max, Vector & X)$/;"	f
size_log	tools/eigen/bench/btl/generic_bench/utils/size_log.hh	/^void size_log(const int nb_point, const int size_min, const int size_max, Vector & X)$/;"	f
size_of_xpr_at_compile_time	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^template<typename XprType> struct size_of_xpr_at_compile_time$/;"	s	struct:Eigen::internal::promote_index_type
size_triple_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  size_triple_t() : k(0), m(0), n(0) {}$/;"	f	struct:size_triple_t
size_triple_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  size_triple_t(const size_triple_t& o) : k(o.k), m(o.m), n(o.n) {}$/;"	f	struct:size_triple_t
size_triple_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  size_triple_t(size_t _k, size_t _m, size_t _n) : k(_k), m(_m), n(_n) {}$/;"	f	struct:size_triple_t
size_triple_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  size_triple_t(uint16_t compact)$/;"	f	struct:size_triple_t
size_triple_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^struct size_triple_t$/;"	s	file:
size_type	tools/eigen/Eigen/src/Core/util/Memory.h	/^  typedef size_t          size_type;$/;"	t	class:Eigen::aligned_allocator
size_type	tools/eigen/Eigen/src/StlSupport/details.h	/^    typedef size_t    size_type;$/;"	t	class:Eigen::aligned_allocator_indirection
sizes	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline const CwiseBinaryOp< internal::scalar_difference_op<Scalar>, const VectorType, const VectorType> sizes() const$/;"	f	class:Eigen::AlignedBox
sizes	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    const Sizes& sizes() const { return m_sizes; }$/;"	f	class:Eigen::TensorSlicingOp
sizes_match_up_to_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct sizes_match_up_to_dim {$/;"	s	namespace:Eigen::internal
sizes_match_up_to_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct sizes_match_up_to_dim<Dims1, Dims2, 0, 0> {$/;"	s	namespace:Eigen::internal
sizes_match_up_to_dim	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct sizes_match_up_to_dim<Dims1, Dims2, n, n> {$/;"	s	namespace:Eigen::internal
skip	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n, typename a> struct skip { typedef decltype(h_skip<n>::helper(a())) type; };$/;"	s	namespace:Eigen::internal
skipAction	tools/eigen/bench/btl/generic_bench/btl.hh	/^  BTL_DONT_INLINE static bool skipAction(const std::string& _name)$/;"	f	class:BtlConfig
skyline_col_major_time_dense_product	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^EIGEN_DONT_INLINE void skyline_col_major_time_dense_product(const Lhs& lhs, const Rhs& rhs, Dest& dst) {$/;"	f	namespace:Eigen::internal
skyline_product_selector	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^struct skyline_product_selector<Lhs, Rhs, ResultType, ColMajor> {$/;"	s	namespace:Eigen::internal
skyline_product_selector	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^struct skyline_product_selector<Lhs, Rhs, ResultType, RowMajor> {$/;"	s	namespace:Eigen::internal
skyline_row_major_time_dense_product	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^EIGEN_DONT_INLINE void skyline_row_major_time_dense_product(const Lhs& lhs, const Rhs& rhs, Dest& dst) {$/;"	f	namespace:Eigen::internal
slerp	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::slerp(const Scalar& t, const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
slerp	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D slerp(const Scalar& t, const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
slerp_eigen	tools/eigen/bench/quat_slerp.cpp	/^EIGEN_DONT_INLINE Q slerp_eigen(const Q& a, const Q& b, typename Q::Scalar t)$/;"	f
slerp_gael	tools/eigen/bench/quat_slerp.cpp	/^EIGEN_DONT_INLINE Q slerp_gael(const Q& a, const Q& b, typename Q::Scalar t)$/;"	f
slerp_legacy	tools/eigen/bench/quat_slerp.cpp	/^EIGEN_DONT_INLINE Q slerp_legacy(const Q& a, const Q& b, typename Q::Scalar t)$/;"	f
slerp_legacy_nlerp	tools/eigen/bench/quat_slerp.cpp	/^EIGEN_DONT_INLINE Q slerp_legacy_nlerp(const Q& a, const Q& b, typename Q::Scalar t)$/;"	f
slerp_rw	tools/eigen/bench/quat_slerp.cpp	/^EIGEN_DONT_INLINE Q slerp_rw(const Q& a, const Q& b, typename Q::Scalar t)$/;"	f
slice	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int start, int count, typename a> struct slice : take<count, typename skip<start, a>::type> {};$/;"	s	namespace:Eigen::internal
slice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    slice(const StartIndices& startIndices, const Sizes& sizes) const {$/;"	f	class:Eigen::TensorBase
slice	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    slice(const StartIndices& startIndices, const Sizes& sizes) {$/;"	f	class:Eigen::TensorBase
slicing	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void slicing(int num_iters) {$/;"	f	class:BenchmarkSuite
slicing	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(slicing);$/;"	v
smallVectors	tools/eigen/test/smallvectors.cpp	/^template<typename Scalar> void smallVectors()$/;"	f
smallestAngle	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline Scalar smallestAngle() const {$/;"	f	class:Eigen::Rotation2D
smallestPositiveAngle	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^  inline Scalar smallestPositiveAngle() const {$/;"	f	class:Eigen::Rotation2D
smallestRealRoot	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& smallestRealRoot($/;"	f	class:Eigen::PolynomialSolverBase
smallestRoot	tools/eigen/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RootType& smallestRoot() const$/;"	f	class:Eigen::PolynomialSolverBase
smart_copy	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC void smart_copy(const T* start, const T* end, T* target)$/;"	f	namespace:Eigen::internal
smart_copy_helper	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,false> {$/;"	s	namespace:Eigen::internal
smart_copy_helper	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,true> {$/;"	s	namespace:Eigen::internal
smart_memmove	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> void smart_memmove(const T* start, const T* end, T* target)$/;"	f	namespace:Eigen::internal
smart_memmove_helper	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_memmove_helper<T,false> {$/;"	s	namespace:Eigen::internal
smart_memmove_helper	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_memmove_helper<T,true> {$/;"	s	namespace:Eigen::internal
smooth_curve	tools/eigen/bench/btl/data/smooth.cxx	/^void smooth_curve(const vector<double> & tab_mflops, vector<double> & smooth_tab_mflops,int window_half_width){$/;"	f
solve	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LDLT
solve	tools/eigen/Eigen/src/Cholesky/LLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LLT
solve	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^TriangularViewImpl<Derived,Mode,Dense>::solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solve	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularView
solve	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    inline const Rhs& solve(const Rhs& b) const { return b; }$/;"	f	class:Eigen::IdentityPreconditioner
solve	tools/eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::DiagonalPreconditioner
solve	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivLU
solve	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PartialPivLU
solve	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::ColPivHouseholderQR
solve	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivHouseholderQR
solve	tools/eigen/Eigen/src/QR/HouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::HouseholderQR
solve	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SVDBase
solve	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SparseSolverBase
solve	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SparseSolverBase
solve	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    inline const Solve<SparseQR, Rhs> solve(const MatrixBase<Rhs>& B) const $/;"	f	class:Eigen::SparseQR
solve	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^    inline const Solve<SparseQR, Rhs> solve(const SparseMatrixBase<Rhs>& B) const$/;"	f	class:Eigen::SparseQR
solve	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solve(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solve	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^bool SkylineInplaceLU<MatrixType>::solve(const MatrixBase<BDerived> &b, MatrixBase<XDerived>* x, const int transposed) const {$/;"	f	class:Eigen::SkylineInplaceLU
solveInPlace	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^bool LDLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LDLT
solveInPlace	tools/eigen/Eigen/src/Cholesky/LLT.h	/^void LLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LLT
solveInPlace	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^void TriangularViewImpl<MatrixType,Mode,Dense>::solveInPlace(const MatrixBase<OtherDerived>& _other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    void solveInPlace(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^void TriangularViewImpl<ExpressionType,Mode,Sparse>::solveInPlace(MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^void TriangularViewImpl<ExpressionType,Mode,Sparse>::solveInPlace(SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  template<typename Dest>   void solveInPlace(MatrixBase<Dest> &X) const$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
solveInPlace	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^  void solveInPlace( MatrixBase<Dest> &X) const$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
solveInPlace	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^void MappedSuperNodalMatrix<Scalar,Index_>::solveInPlace( MatrixBase<Dest>&X) const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
solveInit	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveInit(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveNumericalDiff	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveNumericalDiff(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveNumericalDiffInit	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveNumericalDiffInit(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveNumericalDiffOneStep	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveNumericalDiffOneStep(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveOneStep	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveOneStep(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveWithGuess	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  solveWithGuess(const MatrixBase<Rhs>& b, const Guess& x0) const$/;"	f	class:Eigen::IterativeSolverBase
solve_sparse_through_dense_panels	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^void solve_sparse_through_dense_panels(const Decomposition &dec, const Rhs& rhs, Dest &dest)$/;"	f	namespace:Eigen::internal
solve_traits	tools/eigen/Eigen/src/Core/Solve.h	/^struct solve_traits<Decomposition,RhsType,Dense>$/;"	s	namespace:Eigen::internal
solve_traits	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^struct solve_traits<Decomposition,RhsType,Sparse>$/;"	s	namespace:Eigen::internal
solver	tools/eigen/doc/snippets/BiCGSTAB_simple.cpp	/^  BiCGSTAB<SparseMatrix<double> > solver;$/;"	v
solver_stats	tools/eigen/test/sparse_solver.h	/^std::string solver_stats(const IterativeSolverBase<Derived> &solver)$/;"	f
solver_stats	tools/eigen/test/sparse_solver.h	/^std::string solver_stats(const SparseSolverBase<Derived> &\/*solver*\/)$/;"	f
some_non_vectorizable_type	tools/eigen/test/first_aligned.cpp	/^struct some_non_vectorizable_type { float x; };$/;"	s	file:
sortEigenvalues	tools/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::sortEigenvalues(bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
sortWithPermutation	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^void sortWithPermutation (VectorType& vec, IndexType& perm, typename IndexType::Scalar& ncut)$/;"	f	namespace:Eigen::internal
sourceExhausted	tools/ConvertUTF.h	/^	sourceExhausted,	\/* partial character in source, but hit end *\/$/;"	e	enum:__anon739
sourceIllegal	tools/ConvertUTF.h	/^	sourceIllegal		\/* source sequence is illegal\/malformed *\/$/;"	e	enum:__anon739
sp_mat	problem.hh	/^typedef Eigen::SparseMatrix<val, Eigen::RowMajor> sp_mat;$/;"	t
span	tools/eigen/unsupported/Eigen/src/Splines/Spline.h	/^  DenseIndex Spline<_Scalar, _Dim, _Degree>::span(Scalar u) const$/;"	f	class:Eigen::Spline
sparseGaussianTest	tools/eigen/test/sparseLM.cpp	/^  sparseGaussianTest(int inputs, int values) : SparseFunctor<Scalar,int>(inputs,values)$/;"	f	struct:sparseGaussianTest
sparseGaussianTest	tools/eigen/test/sparseLM.cpp	/^struct sparseGaussianTest : SparseFunctor<Scalar, int>$/;"	s	file:
sparseView	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^const SparseView<Derived> MatrixBase<Derived>::sparseView(const Scalar& reference,$/;"	f	class:Eigen::MatrixBase
sparse_basic	tools/eigen/test/sparse_basic.cpp	/^template<typename SparseMatrixType> void sparse_basic(const SparseMatrixType& ref)$/;"	f
sparse_block	tools/eigen/test/sparse_block.cpp	/^template<typename SparseMatrixType> void sparse_block(const SparseMatrixType& ref)$/;"	f
sparse_dense_outer_product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  sparse_dense_outer_product_evaluator(const ActualRhs &rhs, const Lhs1 &lhs)$/;"	f	struct:Eigen::internal::sparse_dense_outer_product_evaluator
sparse_dense_outer_product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^  sparse_dense_outer_product_evaluator(const Lhs1 &lhs, const ActualRhs &rhs)$/;"	f	struct:Eigen::internal::sparse_dense_outer_product_evaluator
sparse_dense_outer_product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_dense_outer_product_evaluator$/;"	s	namespace:Eigen::internal
sparse_diagonal_product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  sparse_diagonal_product_evaluator(const SparseXprType &sparseXpr, const DiagCoeffType &diagCoeff)$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
sparse_diagonal_product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  sparse_diagonal_product_evaluator(const SparseXprType &sparseXpr, const DiagonalCoeffType &diagCoeff)$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
sparse_diagonal_product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct sparse_diagonal_product_evaluator<SparseXprType, DiagCoeffType, SDP_AsCwiseProduct>$/;"	s	namespace:Eigen::internal
sparse_diagonal_product_evaluator	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct sparse_diagonal_product_evaluator<SparseXprType, DiagonalCoeffType, SDP_AsScalarProduct>$/;"	s	namespace:Eigen::internal
sparse_eval	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Cols> struct sparse_eval<T,1,Cols> {$/;"	s	namespace:Eigen::internal
sparse_eval	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows,int Cols> struct sparse_eval {$/;"	s	namespace:Eigen::internal
sparse_eval	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows> struct sparse_eval<T,Rows,1> {$/;"	s	namespace:Eigen::internal
sparse_eval	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct sparse_eval<T,1,1> {$/;"	s	namespace:Eigen::internal
sparse_extra	tools/eigen/unsupported/test/sparse_extra.cpp	/^template<typename SparseMatrixType> void sparse_extra(const SparseMatrixType& ref)$/;"	f
sparse_matrix_block_impl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline sparse_matrix_block_impl(const SparseMatrixType& xpr, Index i)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
sparse_matrix_block_impl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline sparse_matrix_block_impl(const SparseMatrixType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
sparse_matrix_block_impl	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^class sparse_matrix_block_impl$/;"	c	namespace:Eigen::internal
sparse_permutations	tools/eigen/test/sparse_permutations.cpp	/^template<int OtherStorage, typename SparseMatrixType> void sparse_permutations(const SparseMatrixType& ref)$/;"	f
sparse_permutations_all	tools/eigen/test/sparse_permutations.cpp	/^template<typename Scalar> void sparse_permutations_all(int size)$/;"	f
sparse_product	tools/eigen/test/sparse_product.cpp	/^template<typename SparseMatrixType> void sparse_product()$/;"	f
sparse_product_regression_test	tools/eigen/test/sparse_product.cpp	/^template<typename SparseMatrixType, typename DenseMatrixType> void sparse_product_regression_test()$/;"	f
sparse_selfadjoint_time_dense_product	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^inline void sparse_selfadjoint_time_dense_product(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	namespace:Eigen::internal
sparse_solve_triangular_selector	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_sparse_selector	tools/eigen/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_sparse_selector<Lhs,Rhs,Mode,UpLo,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solvers	tools/eigen/test/sparse_solvers.cpp	/^template<typename Scalar> void sparse_solvers(int rows, int cols)$/;"	f
sparse_sparse_product_with_pruning_impl	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^static void sparse_sparse_product_with_pruning_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res, const typename ResultType::RealScalar& tolerance)$/;"	f	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	tools/eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^inline void sparse_time_dense_product(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	namespace:Eigen::internal
sparse_time_dense_product_impl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, AlphaType, ColMajor, true>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, ColMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, RowMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, RowMajor, true>$/;"	s	namespace:Eigen::internal
sparse_vector	tools/eigen/test/sparse_vector.cpp	/^template<typename Scalar,typename Index> void sparse_vector(int rows, int cols)$/;"	f
sparse_vector_assign_selector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_Inner> {$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_Outer> {$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_RuntimeSwitch> {$/;"	s	namespace:Eigen::internal
sparselu_gemm	tools/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^void sparselu_gemm(Index m, Index n, Index d, const Scalar* A, Index lda, const Scalar* B, Index ldb, Scalar* C, Index ldc)$/;"	f	namespace:Eigen::internal
special_numbers	tools/eigen/test/special_numbers.cpp	/^template<typename Scalar> void special_numbers()$/;"	f
specificTest1	tools/eigen/test/geo_alignedbox.cpp	/^void specificTest1()$/;"	f
specificTest2	tools/eigen/test/geo_alignedbox.cpp	/^void specificTest2()$/;"	f
spline3d	tools/eigen/unsupported/test/splines.cpp	/^Spline<double, 3, Dynamic> spline3d()$/;"	f
split	tools/eigen/bench/btl/generic_bench/btl.hh	/^    std::vector<BtlString> split( const BtlString& delims = "\\t\\n ") const$/;"	f	class:BtlString
split	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^void MatrixPower<MatrixType>::split(RealScalar& p, RealScalar& intpart)$/;"	f	class:Eigen::MatrixPower
splitOffTwoRows	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::splitOffTwoRows(Index i)$/;"	f	class:Eigen::RealQZ
splitOffTwoRows	tools/eigen/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::splitOffTwoRows(Index iu, bool computeU, const Scalar& exshift)$/;"	f	class:Eigen::RealSchur
spr	tools/eigen/blas/level2_real_impl.h	/^int EIGEN_BLAS_FUNC(spr)(char *uplo, int *n, Scalar *palpha, Scalar *px, int *incx, Scalar *pap)$/;"	f
spr2	tools/eigen/blas/level2_real_impl.h	/^int EIGEN_BLAS_FUNC(spr2)(char *uplo, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar *pap)$/;"	f
sqr	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqr  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
sqrt	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sqrt() const$/;"	f
sqrt	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    sqrt() const {$/;"	f	class:Eigen::TensorBase
sqrt	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^const MatrixSquareRootReturnValue<Derived> MatrixBase<Derived>::sqrt() const$/;"	f	class:Eigen::MatrixBase
sqrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt  (const double v, mp_rnd_t rnd_mode)         {   return sqrt(mpreal(v),rnd_mode);    }$/;"	f	namespace:mpfr
sqrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt  (const long double v, mp_rnd_t rnd_mode)    {   return sqrt(mpreal(v),rnd_mode);    }$/;"	f	namespace:mpfr
sqrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
sqrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const int v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const long int v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const unsigned int v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const unsigned long int x, mp_rnd_t r)$/;"	f	namespace:mpfr
sqrtA	tools/eigen/doc/snippets/SelfAdjointEigenSolver_operatorSqrt.cpp	/^MatrixXd sqrtA = es.operatorSqrt();$/;"	v
sqrt_epsilon	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    static Scalar sqrt_epsilon()$/;"	f	class:Eigen::LevenbergMarquardt
sqsumNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar sqsumNorm(T& v)$/;"	f
square	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^square() const$/;"	f
square	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    square() const {$/;"	f	class:Eigen::TensorBase
squaredDistance	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  RealScalar squaredDistance(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
squaredExteriorDistance	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
squaredExteriorDistance	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const MatrixBase<Derived>& a_p) const$/;"	f	class:Eigen::AlignedBox
squaredNorm	tools/eigen/Eigen/src/Core/Dot.h	/^EIGEN_STRONG_INLINE typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::MatrixBase
squaredNorm	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const SquaredNormReturnType squaredNorm() const$/;"	f	class:Eigen::VectorwiseOp
squaredNorm	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar squaredNorm() const { return coeffs().squaredNorm(); }$/;"	f	class:Eigen::QuaternionBase
squaredNorm	tools/eigen/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::SparseMatrixBase
squeeze	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    void squeeze()$/;"	f	class:Eigen::internal::CompressedStorage
squeeze	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void squeeze() {$/;"	f	class:Eigen::SkylineMatrix
squeeze	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void squeeze() {$/;"	f	class:Eigen::SkylineStorage
srcCoeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index srcCoeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
srcCoeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index srcCoeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
srcCoeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index srcCoeff(Index index) const {$/;"	f	struct:Eigen::TensorEvaluator
srcCoeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index srcCoeff(Index index) const$/;"	f	struct:Eigen::TensorEvaluator
srcEvaluator	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC const SrcEvaluatorType& srcEvaluator() const { return m_src; }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
srotm_	tools/eigen/blas/f2c/srotm.c	/^\/* Subroutine *\/ int srotm_(integer *n, real *sx, integer *incx, real *sy, $/;"	f
srotmg_	tools/eigen/blas/f2c/srotmg.c	/^\/* Subroutine *\/ int srotmg_(real *sd1, real *sd2, real *sx1, real *sy1, real $/;"	f
ssbmv_	tools/eigen/blas/f2c/ssbmv.c	/^\/* Subroutine *\/ int ssbmv_(char *uplo, integer *n, integer *k, real *alpha, $/;"	f
sspmv_	tools/eigen/blas/f2c/sspmv.c	/^\/* Subroutine *\/ int sspmv_(char *uplo, integer *n, real *alpha, real *ap, $/;"	f
stableNorm	tools/eigen/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::stableNorm() const$/;"	f	class:Eigen::MatrixBase
stableNorm	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const StableNormReturnType stableNorm() const$/;"	f	class:Eigen::VectorwiseOp
stableNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar stableNorm(T& v)$/;"	f
stable_norm	tools/eigen/test/stable_norm.cpp	/^template<typename MatrixType> void stable_norm(const MatrixType& m)$/;"	f
stable_norm_kernel	tools/eigen/Eigen/src/Core/StableNorm.h	/^inline void stable_norm_kernel(const ExpressionType& bl, Scalar& ssq, Scalar& scale, Scalar& invScale)$/;"	f	namespace:Eigen::internal
start	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType start ;   \/* index for A of first col in this row *\/$/;"	m	struct:internal::Colamd_Row
start	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType start ;   \/* index for A of first row in this column, or DEAD *\/$/;"	m	struct:internal::colamd_col
start	tools/eigen/bench/BenchTimer.h	/^  inline void start()$/;"	f	class:Eigen::BenchTimer
start	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  void start(unsigned int r){$/;"	f	class:STL_Timer
start	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^    LARGE_INTEGER start;$/;"	m	struct:Portable_Timer::__anon736
start	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   void start() { QueryPerformanceCounter(&startVal); }$/;"	f	class:Portable_Timer
start	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  void start()$/;"	f	class:Portable_Timer
start	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  inline void start( void ){$/;"	f	class:X86_Timer
start	tools/eigen/demos/opengl/trackball.h	/^    void start(Mode m = Around) { mMode = m; mLastPointOk = false; }$/;"	f	class:Trackball
startCol	tools/eigen/Eigen/src/Core/Block.h	/^    StorageIndex startCol() const$/;"	f	class:Eigen::internal::BlockImpl_dense
startCol	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return IsRowMajor ? 0 : m_outerStart; }$/;"	f	class:Eigen::BlockImpl
startCol	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return IsRowMajor ? 0 : m_outerStart; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
startCol	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return m_startCol.value(); }$/;"	f	class:Eigen::BlockImpl
startFill	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void startFill(Index reserve)$/;"	f	class:Eigen::SparseVector
startFill	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED void startFill(Index reserveSize = 1000)$/;"	f	class:Eigen::DynamicSparseMatrix
startIndices	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^    const StartIndices& startIndices() const { return m_indices; }$/;"	f	class:Eigen::TensorSlicingOp
startRow	tools/eigen/Eigen/src/Core/Block.h	/^    StorageIndex startRow() const$/;"	f	class:Eigen::internal::BlockImpl_dense
startRow	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return IsRowMajor ? m_outerStart : 0; }$/;"	f	class:Eigen::BlockImpl
startRow	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return IsRowMajor ? m_outerStart : 0; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
startRow	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return m_startRow.value(); }$/;"	f	class:Eigen::BlockImpl
startVal	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   LARGE_INTEGER startVal;$/;"	m	class:Portable_Timer
startVec	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseMatrix
startVec	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseVector
startVec	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline void startVec(Index \/*outer*\/) {}$/;"	f	class:Eigen::DynamicSparseMatrix
start_baseline	tools/eigen/bench/btl/generic_bench/timers/STL_timer.hh	/^  void start_baseline(unsigned int r)$/;"	f	class:STL_Timer
static_assertion	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion {};$/;"	s	namespace:Eigen::internal
static_assertion	tools/eigen/Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion<true>$/;"	s	namespace:Eigen::internal
static_size	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static std::size_t static_size = ge::count;$/;"	m	class:Eigen::StaticSGroup
static_size_generator	tools/eigen/bench/btl/generic_bench/static/static_size_generator.hh	/^struct static_size_generator<1,Perf_Analyzer,Action,Interface>{  $/;"	s
static_size_generator	tools/eigen/bench/btl/generic_bench/static/static_size_generator.hh	/^struct static_size_generator{$/;"	s
stbmv_	tools/eigen/blas/f2c/stbmv.c	/^\/* Subroutine *\/ int stbmv_(char *uplo, char *trans, char *diag, integer *n, $/;"	f
std	tools/eigen/Eigen/src/StlSupport/StdDeque.h	/^namespace std {$/;"	n
std	tools/eigen/Eigen/src/StlSupport/StdList.h	/^namespace std$/;"	n
std	tools/eigen/Eigen/src/StlSupport/StdVector.h	/^namespace std {$/;"	n
std	tools/eigen/test/sparse.h	/^namespace std {$/;"	n
std	tools/eigen/unsupported/test/mpreal/mpreal.h	/^namespace std$/;"	n
stem_function	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^struct stem_function$/;"	s	namespace:Eigen::internal
stem_function_cos	tools/eigen/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^Scalar stem_function_cos(Scalar x, int n)$/;"	f	namespace:Eigen::internal
stem_function_cosh	tools/eigen/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^Scalar stem_function_cosh(Scalar x, int n)$/;"	f	namespace:Eigen::internal
stem_function_exp	tools/eigen/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^Scalar stem_function_exp(Scalar x, int)$/;"	f	namespace:Eigen::internal
stem_function_sin	tools/eigen/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^Scalar stem_function_sin(Scalar x, int n)$/;"	f	namespace:Eigen::internal
stem_function_sinh	tools/eigen/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^Scalar stem_function_sinh(Scalar x, int n)$/;"	f	namespace:Eigen::internal
step	tools/eigen/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::step(Index f, Index l, Index iter)$/;"	f	class:Eigen::RealQZ
stl_matrix	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  typedef std::vector<stl_vector >  stl_matrix;$/;"	t	class:c_interface_base
stl_matrix	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  typedef std::vector<stl_vector > stl_matrix;$/;"	t	class:STL_interface
stl_matrix	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  typedef std::vector<stl_vector > stl_matrix;$/;"	t	class:blaze_interface
stl_matrix	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  typedef std::vector<stl_vector > stl_matrix;$/;"	t	class:blitz_interface
stl_matrix	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  typedef std::vector<stl_vector > stl_matrix;$/;"	t	class:tiny_blitz_interface
stl_matrix	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  typedef std::vector<stl_vector> stl_matrix;$/;"	t	class:eigen2_interface
stl_matrix	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  typedef std::vector<stl_vector> stl_matrix;$/;"	t	class:eigen3_interface
stl_matrix	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  typedef std::vector<stl_vector > stl_matrix;$/;"	t	class:gmm_interface
stl_matrix	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  typedef std::vector<stl_vector > stl_matrix;$/;"	t	class:mtl4_interface
stl_matrix	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  typedef std::vector<stl_vector> stl_matrix;$/;"	t	class:tensor_interface
stl_matrix	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  typedef std::vector<stl_vector > stl_matrix;$/;"	t	class:tvmet_interface
stl_matrix	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  typedef std::vector<stl_vector> stl_matrix;$/;"	t	class:ublas_interface
stl_vector	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  typedef std::vector<real>         stl_vector;$/;"	t	class:c_interface_base
stl_vector	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  typedef std::vector<real>  stl_vector;$/;"	t	class:STL_interface
stl_vector	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  typedef std::vector<real>        stl_vector;$/;"	t	class:blaze_interface
stl_vector	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  typedef std::vector<real>  stl_vector;$/;"	t	class:blitz_interface
stl_vector	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  typedef std::vector<real>  stl_vector;$/;"	t	class:tiny_blitz_interface
stl_vector	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  typedef std::vector<real> stl_vector;$/;"	t	class:eigen2_interface
stl_vector	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  typedef std::vector<real> stl_vector;$/;"	t	class:eigen3_interface
stl_vector	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  typedef std::vector<real>  stl_vector;$/;"	t	class:gmm_interface
stl_vector	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  typedef std::vector<real>  stl_vector;$/;"	t	class:mtl4_interface
stl_vector	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  typedef std::vector<real> stl_vector;$/;"	t	class:tensor_interface
stl_vector	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  typedef std::vector<real>  stl_vector;$/;"	t	class:tvmet_interface
stl_vector	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  typedef std::vector<real> stl_vector;$/;"	t	class:ublas_interface
stop	tools/eigen/bench/BenchTimer.h	/^  inline void stop()$/;"	f	class:Eigen::BenchTimer
stop	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^    LARGE_INTEGER stop;$/;"	m	struct:Portable_Timer::__anon736
stop	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   void stop() { QueryPerformanceCounter(&stopVal); }$/;"	f	class:Portable_Timer
stop	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  void stop()$/;"	f	class:Portable_Timer
stop	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	/^  inline void stop( void ){$/;"	f	class:X86_Timer
stopAnimation	tools/eigen/demos/opengl/quaternion_demo.cpp	/^void RenderingWidget::stopAnimation()$/;"	f	class:RenderingWidget
stopVal	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   LARGE_INTEGER stopVal;$/;"	m	class:Portable_Timer
stopWatch	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   } stopWatch;$/;"	t	class:Portable_Timer	typeref:struct:Portable_Timer::__anon736
storage	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  } storage;$/;"	m	struct:Eigen::SluMatrix	typeref:struct:Eigen::SluMatrix::__anon152
storage_kind_to_evaluator_kind	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct storage_kind_to_evaluator_kind {$/;"	s	namespace:Eigen::internal
storage_kind_to_evaluator_kind	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct storage_kind_to_evaluator_kind<Sparse> {$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<Dense>                  { typedef DenseShape Shape;           };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<PermutationStorage>     { typedef PermutationShape Shape;     };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<TranspositionsStorage>  { typedef TranspositionsShape Shape;  };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^template<> struct storage_kind_to_shape<DiagonalShape> { typedef DiagonalShape Shape; };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	tools/eigen/Eigen/src/SparseCore/SparseAssign.h	/^struct storage_kind_to_shape<Sparse> {$/;"	s	namespace:Eigen::internal
store	tools/eigen/test/packetmath.cpp	/^  inline void store(T* to, const Packet& x) const { internal::pstore(to,x); }$/;"	f	struct:packet_helper
store	tools/eigen/test/packetmath.cpp	/^  inline void store(T* to, const T& x) const { *to = x; }$/;"	f	struct:packet_helper
storePacket	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE void storePacket(Index i, const Packet &p) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
storePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void storePacket(Index i, Packet p) const {$/;"	f	class:Eigen::internal::TensorContractionSubMapper
stored	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Object1 stored;$/;"	m	struct:Eigen::internal::intersector_helper2
stored	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Object1 stored;$/;"	m	struct:Eigen::internal::minimizer_helper2
stored	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Object2 stored;$/;"	m	struct:Eigen::internal::intersector_helper1
stored	tools/eigen/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Object2 stored;$/;"	m	struct:Eigen::internal::minimizer_helper1
stream	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_STRONG_INLINE const cudaStream_t& stream() const {$/;"	f	struct:Eigen::GpuDevice
stream	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  const cudaStream_t& stream() const { return *stream_; }$/;"	f	class:Eigen::CudaStreamDevice
stream_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  const StreamInterface* stream_;$/;"	m	struct:Eigen::GpuDevice
stream_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  const cudaStream_t* stream_;$/;"	m	class:Eigen::CudaStreamDevice
stream_	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  Eigen::CudaStreamDevice stream_;$/;"	m	struct:GPUContext	file:
strictConversion	tools/ConvertUTF.h	/^	strictConversion = 0,$/;"	e	enum:__anon740
stride	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index stride() const$/;"	f	class:Eigen::DenseCoeffsBase
stride	tools/eigen/Eigen/src/Core/util/BlasUtil.h	/^  const Index stride() const { return m_stride; }$/;"	f	class:Eigen::internal::blas_data_mapper
stride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    stride(const Strides& strides) const {$/;"	f	class:Eigen::TensorBase
stride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    stride(const Strides& strides) {$/;"	f	class:Eigen::TensorBase
stride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  Index stride() const {$/;"	f	class:Eigen::internal::BaseTensorContractionMapper
strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^    const Strides& strides() const { return m_strides; }$/;"	f	class:Eigen::TensorInflationOp
strides	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^    const Strides& strides() const { return m_dims; }$/;"	f	class:Eigen::TensorStridingOp
striding	tools/eigen/bench/tensors/tensor_benchmarks.h	/^ void striding(int num_iters) {$/;"	f	class:BenchmarkSuite
striding	tools/eigen/bench/tensors/tensor_benchmarks_gpu.cc	/^BM_FuncGPU(striding);$/;"	v
strip_identities	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct strip_identities<Equality, id, type_list<EIGEN_TPL_PP_SPEC_HACK_USE(ts)>>$/;"	s	namespace:Eigen::internal::group_theory
strip_identities	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^struct strip_identities<Equality, id, type_list<t, ts...>>$/;"	s	namespace:Eigen::internal::group_theory
structured_update	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::structured_update(Block<MatrixXr,Dynamic,Dynamic> A, const MatrixXr &B, Index n1)$/;"	f	class:Eigen::BDCSVD
sub	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<-1>::Type sub() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<-1>::Type sub()$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
sub	tools/eigen/test/svd_common.h	/^template<typename T> EIGEN_DONT_INLINE  T sub(T a, T b) { return a - b; }$/;"	f
subDiagonal	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::subDiagonal() const$/;"	f	class:Eigen::Tridiagonalization
subTo	tools/eigen/Eigen/src/Core/EigenBase.h	/^  inline void subTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
subTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static inline void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subTo	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^  static void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
subTo	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subVector	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    SubVector subVector(Index i)$/;"	f	class:Eigen::VectorwiseOp
subVectors	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    Index subVectors() const$/;"	f	class:Eigen::VectorwiseOp
sub_assign_op	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename Scalar> struct sub_assign_op {$/;"	s	namespace:Eigen::internal
subdiag	tools/eigen/doc/snippets/Tridiagonalization_diagonal.cpp	/^VectorXd subdiag = triOfA.subDiagonal();$/;"	v
subdiagonalEntryIsNeglegible	tools/eigen/Eigen/src/Eigenvalues/ComplexSchur.h	/^inline bool ComplexSchur<MatrixType>::subdiagonalEntryIsNeglegible(Index i)$/;"	f	class:Eigen::ComplexSchur
subnormalize	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::subnormalize (int t,mp_rnd_t rnd_mode)$/;"	f	class:mpfr::mpreal
subs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return derived().subs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
subs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrix
subs	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
subtract_assign_using_evaluator	tools/eigen/test/evaluators.cpp	/^  void subtract_assign_using_evaluator(const DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen
succeeded	tools/eigen/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    inline bool succeeded(void) const {$/;"	f	class:Eigen::SkylineInplaceLU
sum	tools/eigen/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::sum() const$/;"	f	class:Eigen::DenseBase
sum	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^    const SumReturnType sum() const$/;"	f	class:Eigen::VectorwiseOp
sum	tools/eigen/Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrix<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseMatrix
sum	tools/eigen/Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrixBase<Derived>::sum() const$/;"	f	class:Eigen::SparseMatrixBase
sum	tools/eigen/Eigen/src/SparseCore/SparseRedux.h	/^SparseVector<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseVector
sum	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    sum() const {$/;"	f	class:Eigen::TensorBase
sum	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    sum(const Dims& dims) const {$/;"	f	class:Eigen::TensorBase
sum	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    Scalar sum() const { \/*std::cerr << "sum \\n\\n";*\/ \/*std::cerr << m_jacobian.rowwise().sum() << "\\n\\n";*\/ return Scalar(m_values.sum(), m_jacobian.rowwise().sum()); }$/;"	f	class:Eigen::AutoDiffVector
sum	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar sum;$/;"	m	class:Eigen::HybridNonLinearSolver
sum	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar par, sum;$/;"	m	class:Eigen::LevenbergMarquardt
sum	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sum (const mpreal tab[], unsigned long int n, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
sum_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct sum_op           { template<typename A, typename B> constexpr static inline auto run(A a, B b) -> decltype(a + b)   { return a + b;   } };$/;"	s	namespace:Eigen::internal
sum_op	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct sum_op {$/;"	s	namespace:Eigen::internal
sum_precision	eval.py	/^                sum_precision = sum_precision + correct\/(pos+1)$/;"	v
sum_precision	eval.py	/^        sum_precision = 0.0$/;"	v
sumupDuplicates	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_Index>::sumupDuplicates()$/;"	f	class:Eigen::SparseMatrix
supIndex	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index supIndex() const { return m_supno; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
supToCol	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* supToCol() { return m_sup_to_col; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
supToCol	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* supToCol() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
super	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<1>::Type super() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
super	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<1>::Type super()$/;"	f	class:Eigen::internal::TridiagonalMatrix
supers	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return derived().supers(); }$/;"	f	class:Eigen::internal::BandMatrixBase
supers	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrix
supers	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
supno	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector supno; \/\/ Supernode number corresponding to this column (column to supernode mapping)$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
svd_all_trivial_2x2	tools/eigen/test/svd_common.h	/^void svd_all_trivial_2x2( void (*cb)(const MatrixType&,bool) )$/;"	f
svd_check_full	tools/eigen/test/svd_common.h	/^void svd_check_full(const MatrixType& m, const SvdType& svd)$/;"	f
svd_compare_to_full	tools/eigen/test/svd_common.h	/^void svd_compare_to_full(const MatrixType& m,$/;"	f
svd_fill_random	tools/eigen/test/svd_fill.h	/^void svd_fill_random(MatrixType &m, int Option = 0)$/;"	f
svd_inf_nan	tools/eigen/test/svd_common.h	/^void svd_inf_nan()$/;"	f
svd_least_square	tools/eigen/test/svd_common.h	/^void svd_least_square(const MatrixType& m, unsigned int computationOptions)$/;"	f
svd_min_norm	tools/eigen/test/svd_common.h	/^void svd_min_norm(const MatrixType& m, unsigned int computationOptions)$/;"	f
svd_preallocate	tools/eigen/test/svd_common.h	/^void svd_preallocate()$/;"	f
svd_precondition_2x2_block_to_be_real	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real {};$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, false>$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, true>$/;"	s	namespace:Eigen::internal
svd_test_all_computation_options	tools/eigen/test/svd_common.h	/^void svd_test_all_computation_options(const MatrixType& m, bool full_only)$/;"	f
svd_underoverflow	tools/eigen/test/svd_common.h	/^void svd_underoverflow()$/;"	f
svd_verify_assert	tools/eigen/test/svd_common.h	/^void svd_verify_assert(const MatrixType& m)$/;"	f
swap	tools/eigen/Eigen/src/Core/DenseBase.h	/^    void swap(PlainObjectBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
swap	tools/eigen/Eigen/src/Core/DenseBase.h	/^    void swap(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
swap	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& ) {}$/;"	f	class:Eigen::DenseStorage
swap	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_cols,other.m_cols); }$/;"	f	class:Eigen::DenseStorage
swap	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); }$/;"	f	class:Eigen::DenseStorage
swap	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); }$/;"	f	class:Eigen::DenseStorage
swap	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
swap	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    void swap(DenseBase<OtherDerived> & other)$/;"	f	class:Eigen::PlainObjectBase
swap	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    void swap(DenseBase<OtherDerived> const & other)$/;"	f	class:Eigen::PlainObjectBase
swap	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    void swap(MatrixBase<OtherDerived> const & other)$/;"	f	class:Eigen::TriangularViewImpl
swap	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    void swap(TriangularBase<OtherDerived> const & other)$/;"	f	class:Eigen::TriangularViewImpl
swap	tools/eigen/Eigen/src/Core/util/Memory.h	/^template<typename T> void swap(scoped_array<T> &a,scoped_array<T> &b)$/;"	f	namespace:Eigen::internal
swap	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> EIGEN_DEVICE_FUNC   void swap(T &a, T &b) { T tmp = b; b = a; a = tmp; }$/;"	f	namespace:numext
swap	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    void swap(CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
swap	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void swap(SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
swap	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline void swap(SparseVector& other)$/;"	f	class:Eigen::SparseVector
swap	tools/eigen/blas/level1_impl.h	/^int EIGEN_BLAS_FUNC(swap)(int *n, RealScalar *px, int *incx, RealScalar *py, int *incy)$/;"	f
swap	tools/eigen/test/swap.cpp	/^template<typename MatrixType> void swap(const MatrixType& m)$/;"	f
swap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMeta.h	/^  void swap(Tuple& rhs) {$/;"	f	struct:Eigen::Tuple
swap	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC  void swap(Self& other)$/;"	f	class:Eigen::TensorStorage
swap	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void swap(SkylineMatrix & other) {$/;"	f	class:Eigen::SkylineMatrix
swap	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void swap(SkylineStorage& other) {$/;"	f	class:Eigen::SkylineStorage
swap	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    friend void swap(BlockSparseMatrix& first, BlockSparseMatrix& second)$/;"	f	class:Eigen::BlockSparseMatrix
swap	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline void swap(DynamicSparseMatrix& other)$/;"	f	class:Eigen::DynamicSparseMatrix
swap	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    inline void swap(mpfr::mpreal& x, mpfr::mpreal& y) $/;"	f	namespace:std
swap	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline void         swap (mpreal& a, mpreal& b)            {    mpfr_swap(a.mp,b.mp);   }$/;"	f	namespace:mpfr
swap_assign_op	tools/eigen/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename Scalar> struct swap_assign_op {$/;"	s	namespace:Eigen::internal
swap_layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    swap_layout() const {$/;"	f	class:Eigen::TensorBase
swap_layout	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    swap_layout() {$/;"	f	class:Eigen::TensorBase
swap_using_evaluator	tools/eigen/test/evaluators.cpp	/^  void swap_using_evaluator(const DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen
sym	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline int sym() { return m_sym; }$/;"	f	class:Eigen::MatrixMarketIterator
sym_to_string	tools/eigen/test/sparse_solver.h	/^std::string sym_to_string(int sym)$/;"	f
symm	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(symm)(char *side, char *uplo, int *m, int *n, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *pb, int *ldb, RealScalar *pbeta, RealScalar *pc, int *ldc)$/;"	f
symm	tools/eigen/test/product_symm.cpp	/^template<typename Scalar, int Size, int OtherSize> void symm(int size = Size, int othersize = OtherSize)$/;"	f
symm_pack_lhs	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_lhs$/;"	s	namespace:Eigen::internal
symm_pack_rhs	tools/eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_rhs$/;"	s	namespace:Eigen::internal
symv	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void symv(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:blas_interface
symv	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void symv(gene_matrix & A, gene_vector & B, gene_vector & X, int N)$/;"	f	class:STL_interface
symv	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void symv(const gene_matrix & A, const gene_vector & B, gene_vector & X, int  \/*N*\/){$/;"	f	class:eigen3_interface
symv	tools/eigen/blas/level2_real_impl.h	/^int EIGEN_BLAS_FUNC(symv) (char *uplo, int *n, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *px, int *incx, RealScalar *pbeta, RealScalar *py, int *incy)$/;"	f
sync	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^  int volatile sync;$/;"	m	struct:Eigen::internal::GemmParallelInfo
synchronize	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void synchronize() const {$/;"	f	struct:Eigen::GpuDevice
syr	tools/eigen/blas/level2_real_impl.h	/^int EIGEN_BLAS_FUNC(syr)(char *uplo, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *pc, int *ldc)$/;"	f
syr2	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void syr2(gene_matrix & A, gene_vector & B, gene_vector & X, int N){$/;"	f	class:blas_interface
syr2	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void syr2(gene_matrix & A, gene_vector & B, gene_vector & X, int N)$/;"	f	class:STL_interface
syr2	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static EIGEN_DONT_INLINE void syr2(gene_matrix & A,  gene_vector & X, gene_vector & Y, int  N){$/;"	f	class:eigen3_interface
syr2	tools/eigen/blas/level2_real_impl.h	/^int EIGEN_BLAS_FUNC(syr2)(char *uplo, int *n, RealScalar *palpha, RealScalar *px, int *incx, RealScalar *py, int *incy, RealScalar *pc, int *ldc)$/;"	f
syr2k	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(syr2k)(char *uplo, char *op, int *n, int *k, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *pb, int *ldb, RealScalar *pbeta, RealScalar *pc, int *ldc)$/;"	f
syrk	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(syrk)(char *uplo, char *op, int *n, int *k, RealScalar *palpha, RealScalar *pa, int *lda, RealScalar *pbeta, RealScalar *pc, int *ldc)$/;"	f
syrk	tools/eigen/test/product_syrk.cpp	/^template<typename MatrixType> void syrk(const MatrixType& m)$/;"	f
szero	tools/eigen/bench/bench_gemm.cpp	/^static double szero = 0;$/;"	v	file:
tail	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType tail(Index n) const$/;"	f
tail	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType tail(Index n)$/;"	f
tail	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type tail(Index n = N) const$/;"	f
tail	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type tail(Index n = N)$/;"	f
tail	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const Tail tail;$/;"	m	struct:Eigen::internal::type_list
tailresult	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename make_type_list<T2, T3, T4, T5, T6, T7, T8>::type tailresult;$/;"	t	struct:Eigen::internal::make_type_list
take	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<>                                  struct take<0, type_list<>>         { typedef type_list<> type; };$/;"	s	namespace:Eigen::internal
take	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n, typename a, typename... as> struct take<n, type_list<a, as...>> : concat<type_list<a>, typename take<n-1, type_list<as...>>::type> {};$/;"	s	namespace:Eigen::internal
take	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n>                             struct take<n, type_list<>>         { typedef type_list<> type; };$/;"	s	namespace:Eigen::internal
take	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T a, T... as>        struct take<0, numeric_list<T, a, as...>> { typedef numeric_list<T> type; };$/;"	s	namespace:Eigen::internal
take	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, int n, T a, T... as> struct take<n, numeric_list<T, a, as...>> : concat<numeric_list<T, a>, typename take<n-1, numeric_list<T, as...>>::type> {};$/;"	s	namespace:Eigen::internal
take	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, int n>               struct take<n, numeric_list<T>>           { typedef numeric_list<T> type; };$/;"	s	namespace:Eigen::internal
take	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T>                      struct take<0, numeric_list<T>>           { typedef numeric_list<T> type; };$/;"	s	namespace:Eigen::internal
take	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a, typename... as>        struct take<0, type_list<a, as...>> { typedef type_list<> type; };$/;"	s	namespace:Eigen::internal
take_affine_part	tools/eigen/Eigen/src/Geometry/Transform.h	/^  typedef internal::transform_take_affine_part<Transform> take_affine_part;$/;"	t	class:Eigen::Transform
take_matrix_for_product	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product$/;"	s	namespace:Eigen::internal
take_matrix_for_product	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Mode, Options> >$/;"	s	namespace:Eigen::internal
take_matrix_for_product	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Projective, Options> >$/;"	s	namespace:Eigen::internal
tan	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^tan() const$/;"	f
tan	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal tan   (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(tan  );    }$/;"	f	namespace:mpfr
tanh	tools/eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^tanh() const$/;"	f
tanh	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    tanh() const {$/;"	f	class:Eigen::TensorBase
tanh	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal tanh  (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(tanh );    }$/;"	f	namespace:mpfr
target	tools/eigen/demos/opengl/camera.h	/^    inline const Eigen::Vector3f& target(void) { return mTarget; }$/;"	f	class:Camera
targetExhausted	tools/ConvertUTF.h	/^	targetExhausted,	\/* insuff. room in target for conversion *\/$/;"	e	enum:__anon739
tbsv	tools/eigen/blas/level2_impl.h	/^int EIGEN_BLAS_FUNC(tbsv)(char *uplo, char *op, char *diag, int *n, int *k, RealScalar *pa, int *lda, RealScalar *px, int *incx)$/;"	f
temp	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar temp;$/;"	m	class:Eigen::HybridNonLinearSolver
temp	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar temp, temp1, temp2;$/;"	m	class:Eigen::LevenbergMarquardt
temp1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar temp, temp1, temp2;$/;"	m	class:Eigen::LevenbergMarquardt
temp2	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar temp, temp1, temp2;$/;"	m	class:Eigen::LevenbergMarquardt
tensor_index_linearization_helper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct tensor_index_linearization_helper$/;"	s	namespace:Eigen::internal
tensor_index_linearization_helper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct tensor_index_linearization_helper<Index, NumIndices, 0, RowMajor>$/;"	s	namespace:Eigen::internal
tensor_interface	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^class tensor_interface$/;"	c
tensor_static_symgroup	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_do_apply	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_do_apply<internal::type_list<EIGEN_TPL_PP_SPEC_HACK_USE(empty)>>$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_do_apply	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_do_apply<internal::type_list<first, next...>>$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_element	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_element$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_element_ctor	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_element_ctor$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_equality	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_equality$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_identity_ctor	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_identity_ctor$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_if	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct tensor_static_symgroup_if$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_if	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct tensor_static_symgroup_if<true, NumIndices, Gens...> : tensor_static_symgroup<NumIndices, Gens...> {};$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_index_permute	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^constexpr static inline std::array<Index, N> tensor_static_symgroup_index_permute(std::array<Index, N> idx, internal::numeric_list<int, ii...>, internal::numeric_list<int, jj...>)$/;"	f	namespace:Eigen::internal
tensor_static_symgroup_index_permute	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^static inline std::vector<Index> tensor_static_symgroup_index_permute(std::vector<Index> idx, internal::numeric_list<int, ii...>)$/;"	f	namespace:Eigen::internal
tensor_static_symgroup_multiply	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_multiply$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_multiply_helper	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_multiply_helper$/;"	s	namespace:Eigen::internal
tensor_static_symgroup_permutate	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^struct tensor_static_symgroup_permutate<numeric_list<int, nn...>>$/;"	s	namespace:Eigen::internal
tensor_symmetry_assign_value	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct tensor_symmetry_assign_value$/;"	s	namespace:Eigen::internal
tensor_symmetry_calculate_flags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct tensor_symmetry_calculate_flags$/;"	s	namespace:Eigen::internal
tensor_symmetry_num_indices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^template<int One_, int Two_, typename... Sym> struct tensor_symmetry_num_indices<AntiHermiticity<One_, Two_>, Sym...>$/;"	s	namespace:Eigen::internal
tensor_symmetry_num_indices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^template<int One_, int Two_, typename... Sym> struct tensor_symmetry_num_indices<AntiSymmetry<One_, Two_>, Sym...>$/;"	s	namespace:Eigen::internal
tensor_symmetry_num_indices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^template<int One_, int Two_, typename... Sym> struct tensor_symmetry_num_indices<Hermiticity<One_, Two_>, Sym...>$/;"	s	namespace:Eigen::internal
tensor_symmetry_num_indices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^template<int One_, int Two_, typename... Sym> struct tensor_symmetry_num_indices<Symmetry<One_, Two_>, Sym...>$/;"	s	namespace:Eigen::internal
tensor_symmetry_num_indices	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^template<typename... Sym> struct tensor_symmetry_num_indices$/;"	s	namespace:Eigen::internal
tensor_symmetry_pre_analysis	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct tensor_symmetry_pre_analysis<NumIndices, Gen_, Gens_...>$/;"	s	namespace:Eigen::internal
tensor_symmetry_pre_analysis	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^struct tensor_symmetry_pre_analysis<NumIndices>$/;"	s	namespace:Eigen::internal
tensor_symmetry_value_setter	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^    inline tensor_symmetry_value_setter(Tensor_& tensor, Symmetry_ const& symmetry, std::array<Index, NumIndices> const& indices)$/;"	f	class:Eigen::internal::tensor_symmetry_value_setter
tensor_symmetry_value_setter	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^class tensor_symmetry_value_setter$/;"	c	namespace:Eigen::internal
tensor_vsize_index_linearization_helper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct tensor_vsize_index_linearization_helper$/;"	s	namespace:Eigen::internal
tensor_vsize_index_linearization_helper	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^struct tensor_vsize_index_linearization_helper<Index, NumIndices, 0, RowMajor>$/;"	s	namespace:Eigen::internal
test2dHyperbolicRotation	tools/eigen/unsupported/test/matrix_exponential.cpp	/^void test2dHyperbolicRotation(double tol)$/;"	f
test2dHyperbolicRotation	tools/eigen/unsupported/test/matrix_power.cpp	/^void test2dHyperbolicRotation(double tol)$/;"	f
test2dRotation	tools/eigen/unsupported/test/matrix_exponential.cpp	/^void test2dRotation(double tol)$/;"	f
test2dRotation	tools/eigen/unsupported/test/matrix_power.cpp	/^void test2dRotation(double tol)$/;"	f
test3dRotation	tools/eigen/unsupported/test/matrix_power.cpp	/^void test3dRotation(double tol)$/;"	f
testChkder	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testChkder()$/;"	f
testGeneral	tools/eigen/unsupported/test/matrix_power.cpp	/^void testGeneral(const MatrixType& m, double tol)$/;"	f
testGonioFunctions	tools/eigen/unsupported/test/matrix_function.cpp	/^void testGonioFunctions(const MatrixType& A)$/;"	f
testHybrd	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testHybrd()$/;"	f
testHybrd1	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testHybrd1()$/;"	f
testHybrj	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testHybrj()$/;"	f
testHybrj1	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testHybrj1()$/;"	f
testHyperbolicFunctions	tools/eigen/unsupported/test/matrix_function.cpp	/^void testHyperbolicFunctions(const MatrixType& A)$/;"	f
testIntersect1	tools/eigen/unsupported/test/BVH.cpp	/^  void testIntersect1()$/;"	f	struct:TreeTest
testIntersect2	tools/eigen/unsupported/test/BVH.cpp	/^  void testIntersect2()$/;"	f	struct:TreeTest
testLmder	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testLmder()$/;"	f
testLmder	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testLmder()$/;"	f
testLmder1	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testLmder1()$/;"	f
testLmder1	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testLmder1()$/;"	f
testLmdif	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testLmdif()$/;"	f
testLmdif	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testLmdif()$/;"	f
testLmdif1	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testLmdif1()$/;"	f
testLmdif1	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testLmdif1()$/;"	f
testLmstr	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testLmstr()$/;"	f
testLmstr1	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testLmstr1()$/;"	f
testLogThenExp	tools/eigen/unsupported/test/matrix_power.cpp	/^void testLogThenExp(const MatrixType& m_const, double tol)$/;"	f
testMatrix	tools/eigen/unsupported/test/matrix_function.cpp	/^void testMatrix(const MatrixType& A)$/;"	f
testMatrixExponential	tools/eigen/unsupported/test/matrix_function.cpp	/^void testMatrixExponential(const MatrixType& A)$/;"	f
testMatrixLogarithm	tools/eigen/unsupported/test/matrix_function.cpp	/^void testMatrixLogarithm(const MatrixType& A)$/;"	f
testMatrixSqrt	tools/eigen/unsupported/test/matrix_square_root.cpp	/^void testMatrixSqrt(const MatrixType& m)$/;"	f
testMatrixType	tools/eigen/test/nullary.cpp	/^void testMatrixType(const MatrixType& m)$/;"	f
testMatrixType	tools/eigen/unsupported/test/matrix_function.cpp	/^void testMatrixType(const MatrixType& m)$/;"	f
testMinimize1	tools/eigen/unsupported/test/BVH.cpp	/^  void testMinimize1()$/;"	f	struct:TreeTest
testMinimize2	tools/eigen/unsupported/test/BVH.cpp	/^  void testMinimize2()$/;"	f	struct:TreeTest
testNistBennett5	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistBennett5(void)$/;"	f
testNistBennett5	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistBennett5(void)$/;"	f
testNistBoxBOD	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistBoxBOD(void)$/;"	f
testNistBoxBOD	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistBoxBOD(void)$/;"	f
testNistChwirut2	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistChwirut2(void)$/;"	f
testNistChwirut2	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistChwirut2(void)$/;"	f
testNistEckerle4	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistEckerle4(void)$/;"	f
testNistEckerle4	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistEckerle4(void)$/;"	f
testNistHahn1	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistHahn1(void)$/;"	f
testNistHahn1	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistHahn1(void)$/;"	f
testNistLanczos1	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistLanczos1(void)$/;"	f
testNistLanczos1	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistLanczos1(void)$/;"	f
testNistMGH09	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistMGH09(void)$/;"	f
testNistMGH09	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistMGH09(void)$/;"	f
testNistMGH10	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistMGH10(void)$/;"	f
testNistMGH10	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistMGH10(void)$/;"	f
testNistMGH17	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistMGH17(void)$/;"	f
testNistMGH17	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistMGH17(void)$/;"	f
testNistMisra1a	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistMisra1a(void)$/;"	f
testNistMisra1a	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistMisra1a(void)$/;"	f
testNistMisra1d	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistMisra1d(void)$/;"	f
testNistMisra1d	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistMisra1d(void)$/;"	f
testNistRat42	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistRat42(void)$/;"	f
testNistRat42	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistRat42(void)$/;"	f
testNistRat43	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistRat43(void)$/;"	f
testNistRat43	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistRat43(void)$/;"	f
testNistThurber	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void testNistThurber(void)$/;"	f
testNistThurber	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void testNistThurber(void)$/;"	f
testPascal	tools/eigen/unsupported/test/matrix_exponential.cpp	/^void testPascal(double tol)$/;"	f
testSingular	tools/eigen/unsupported/test/matrix_power.cpp	/^void testSingular(const MatrixType& m_const, double tol)$/;"	f
testVectorType	tools/eigen/test/nullary.cpp	/^void testVectorType(const VectorType& base)$/;"	f
test_1D	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^static void test_1D()$/;"	f	file:
test_1d	tools/eigen/unsupported/test/cxx11_tensor_assign.cpp	/^static void test_1d()$/;"	f	file:
test_1d	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^static void test_1d()$/;"	f	file:
test_1d	tools/eigen/unsupported/test/cxx11_tensor_fixed_size.cpp	/^static void test_1d()$/;"	f	file:
test_1d	tools/eigen/unsupported/test/cxx11_tensor_map.cpp	/^static void test_1d()$/;"	f	file:
test_1d	tools/eigen/unsupported/test/cxx11_tensor_simple.cpp	/^static void test_1d()$/;"	f	file:
test_1d_convolution	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_1d_convolution(Context* context)$/;"	f	file:
test_2D	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^static void test_2D()$/;"	f	file:
test_2d	tools/eigen/unsupported/test/cxx11_tensor_assign.cpp	/^static void test_2d()$/;"	f	file:
test_2d	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^static void test_2d()$/;"	f	file:
test_2d	tools/eigen/unsupported/test/cxx11_tensor_fixed_size.cpp	/^static void test_2d()$/;"	f	file:
test_2d	tools/eigen/unsupported/test/cxx11_tensor_map.cpp	/^static void test_2d()$/;"	f	file:
test_2d	tools/eigen/unsupported/test/cxx11_tensor_simple.cpp	/^static void test_2d()$/;"	f	file:
test_2d_convolution	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_2d_convolution(Context* context)$/;"	f	file:
test_3d	tools/eigen/unsupported/test/cxx11_tensor_assign.cpp	/^static void test_3d()$/;"	f	file:
test_3d	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^static void test_3d()$/;"	f	file:
test_3d	tools/eigen/unsupported/test/cxx11_tensor_fixed_size.cpp	/^static void test_3d()$/;"	f	file:
test_3d	tools/eigen/unsupported/test/cxx11_tensor_map.cpp	/^static void test_3d()$/;"	f	file:
test_3d	tools/eigen/unsupported/test/cxx11_tensor_simple.cpp	/^static void test_3d()$/;"	f	file:
test_3d_convolution	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_3d_convolution(Context* context)$/;"	f	file:
test_BVH	tools/eigen/unsupported/test/BVH.cpp	/^void test_BVH()$/;"	f
test_FFTW	tools/eigen/unsupported/test/FFT.cpp	1;"	d	file:
test_FFTW	tools/eigen/unsupported/test/FFTW.cpp	/^void test_FFTW()$/;"	f
test_NonLinearOptimization	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^void test_NonLinearOptimization()$/;"	f
test_NumericalDiff	tools/eigen/unsupported/test/NumericalDiff.cpp	/^void test_NumericalDiff()$/;"	f
test_abs	tools/eigen/unsupported/test/cxx11_tensor_of_complex.cpp	/^static void test_abs()$/;"	f	file:
test_additions	tools/eigen/unsupported/test/cxx11_tensor_of_complex.cpp	/^static void test_additions()$/;"	f	file:
test_additions	tools/eigen/unsupported/test/cxx11_tensor_of_strings.cpp	/^static void test_additions()$/;"	f	file:
test_adjoint	tools/eigen/test/adjoint.cpp	/^void test_adjoint()$/;"	f
test_alignedvector3	tools/eigen/unsupported/test/alignedvector3.cpp	/^void test_alignedvector3()$/;"	f
test_apply_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_apply_op()$/;"	f	file:
test_arg_reductions	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_arg_reductions()$/;"	f	file:
test_argmax_dim	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^static void test_argmax_dim()$/;"	f	file:
test_argmax_tuple_reducer	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^static void test_argmax_tuple_reducer()$/;"	f	file:
test_argmin_dim	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^static void test_argmin_dim()$/;"	f	file:
test_argmin_tuple_reducer	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^static void test_argmin_tuple_reducer()$/;"	f	file:
test_array	tools/eigen/test/array.cpp	/^void test_array()$/;"	f
test_array	tools/eigen/unsupported/test/cxx11_tensor_fixed_size.cpp	/^static void test_array()$/;"	f	file:
test_array_for_matrix	tools/eigen/test/array_for_matrix.cpp	/^void test_array_for_matrix()$/;"	f
test_array_misc	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_array_misc()$/;"	f	file:
test_array_replicate	tools/eigen/test/array_replicate.cpp	/^void test_array_replicate()$/;"	f
test_array_reverse	tools/eigen/test/array_reverse.cpp	/^void test_array_reverse()$/;"	f
test_array_reverse_and_reduce	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_array_reverse_and_reduce()$/;"	f	file:
test_array_zip_and_apply	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_array_zip_and_apply()$/;"	f	file:
test_assign	tools/eigen/test/vectorization_logic.cpp	/^bool test_assign(const Dst&, const Src&, int traversal, int unrolling)$/;"	f
test_assign	tools/eigen/test/vectorization_logic.cpp	/^bool test_assign(int traversal, int unrolling)$/;"	f
test_assign	tools/eigen/unsupported/test/cxx11_tensor_of_const_values.cpp	/^static void test_assign()$/;"	f	file:
test_assign	tools/eigen/unsupported/test/cxx11_tensor_of_strings.cpp	/^static void test_assign()$/;"	f	file:
test_assign_of_const_tensor	tools/eigen/unsupported/test/cxx11_tensor_const.cpp	/^static void test_assign_of_const_tensor()$/;"	f	file:
test_auto_resize	tools/eigen/unsupported/test/cxx11_tensor_assign.cpp	/^static void test_auto_resize()$/;"	f	file:
test_autodiff	tools/eigen/unsupported/test/autodiff.cpp	/^void test_autodiff()$/;"	f
test_autodiff_jacobian	tools/eigen/unsupported/test/autodiff.cpp	/^void test_autodiff_jacobian()$/;"	f
test_autodiff_scalar	tools/eigen/unsupported/test/autodiff.cpp	/^void test_autodiff_scalar()$/;"	f
test_autodiff_scalar	tools/eigen/unsupported/test/autodiff_scalar.cpp	/^void test_autodiff_scalar()$/;"	f
test_autodiff_vector	tools/eigen/unsupported/test/autodiff.cpp	/^void test_autodiff_vector()$/;"	f
test_bandmatrix	tools/eigen/test/bandmatrix.cpp	/^void test_bandmatrix()$/;"	f
test_basicstuff	tools/eigen/test/basicstuff.cpp	/^void test_basicstuff()$/;"	f
test_bdcsvd	tools/eigen/test/bdcsvd.cpp	/^void test_bdcsvd()$/;"	f
test_bicgstab	tools/eigen/test/bicgstab.cpp	/^void test_bicgstab()$/;"	f
test_bicgstab_T	tools/eigen/test/bicgstab.cpp	/^template<typename T, typename I> void test_bicgstab_T()$/;"	f
test_big_to_small_type_cast	tools/eigen/unsupported/test/cxx11_tensor_casts.cpp	/^static void test_big_to_small_type_cast()$/;"	f	file:
test_block	tools/eigen/test/block.cpp	/^void test_block()$/;"	f
test_boolean	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^static void test_boolean()$/;"	f	file:
test_central	tools/eigen/unsupported/test/NumericalDiff.cpp	/^void test_central()$/;"	f
test_chip_as_lvalue	tools/eigen/unsupported/test/cxx11_tensor_chipping.cpp	/^static void test_chip_as_lvalue()$/;"	f	file:
test_chip_in_expr	tools/eigen/unsupported/test/cxx11_tensor_chipping.cpp	/^static void test_chip_in_expr() {$/;"	f	file:
test_chip_raw_data_col_major	tools/eigen/unsupported/test/cxx11_tensor_chipping.cpp	/^static void test_chip_raw_data_col_major()$/;"	f	file:
test_chip_raw_data_row_major	tools/eigen/unsupported/test/cxx11_tensor_chipping.cpp	/^static void test_chip_raw_data_row_major()$/;"	f	file:
test_chol_update	tools/eigen/test/cholesky.cpp	/^template<typename MatrixType,template <typename,int> class CholType> void test_chol_update(const MatrixType& symm)$/;"	f
test_cholesky	tools/eigen/test/cholesky.cpp	/^void test_cholesky()$/;"	f
test_cholmod_T	tools/eigen/test/cholmod_support.cpp	/^template<typename T> void test_cholmod_T()$/;"	f
test_cholmod_support	tools/eigen/test/cholmod_support.cpp	/^void test_cholmod_support()$/;"	f
test_coeff_ref	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^static void test_coeff_ref()$/;"	f	file:
test_commainitializer	tools/eigen/test/commainitializer.cpp	/^void test_commainitializer()$/;"	f
test_complex	tools/eigen/unsupported/test/FFTW.cpp	/^void test_complex(int nfft)$/;"	f
test_complex_generic	tools/eigen/unsupported/test/FFTW.cpp	/^void test_complex_generic(int nfft)$/;"	f
test_composition	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^static void test_composition()$/;"	f	file:
test_compound_assign	tools/eigen/unsupported/test/cxx11_tensor_assign.cpp	/^static void test_compound_assign()$/;"	f	file:
test_compound_assignment	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_compound_assignment(Context* context)$/;"	f	file:
test_compound_assignment	tools/eigen/unsupported/test/cxx11_tensor_lvalue.cpp	/^static void test_compound_assignment()$/;"	f	file:
test_compute_block_size	tools/eigen/test/product_extra.cpp	/^Index test_compute_block_size(Index m, Index n, Index k)$/;"	f
test_concat	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_concat()$/;"	f	file:
test_concat	tools/eigen/unsupported/test/cxx11_tensor_of_strings.cpp	/^static void test_concat()$/;"	f	file:
test_concatenation_as_lvalue	tools/eigen/unsupported/test/cxx11_tensor_concatenation.cpp	/^static void test_concatenation_as_lvalue()$/;"	f	file:
test_conj_helper	tools/eigen/test/packetmath.cpp	/^template<typename Scalar,bool ConjLhs,bool ConjRhs> void test_conj_helper(Scalar* data1, Scalar* data2, Scalar* ref, Scalar* pval)$/;"	f
test_conjugate_gradient	tools/eigen/test/conjugate_gradient.cpp	/^void test_conjugate_gradient()$/;"	f
test_conjugate_gradient_T	tools/eigen/test/conjugate_gradient.cpp	/^template<typename T, typename I> void test_conjugate_gradient_T()$/;"	f
test_conservative_resize	tools/eigen/test/conservative_resize.cpp	/^void test_conservative_resize()$/;"	f
test_consistency	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_consistency()$/;"	f	file:
test_const	tools/eigen/unsupported/test/cxx11_tensor_forced_eval.cpp	/^static void test_const()$/;"	f	file:
test_constants	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^static void test_constants()$/;"	f	file:
test_contained_in_list	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_contained_in_list()$/;"	f	file:
test_contextual_eval	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_contextual_eval(Context* context)$/;"	f	file:
test_contraction	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_contraction(Context* context)$/;"	f	file:
test_contraction_corner_cases	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^static void test_contraction_corner_cases()$/;"	f	file:
test_contraction_of_contraction	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_contraction_of_contraction()$/;"	f	file:
test_contractions	tools/eigen/unsupported/test/cxx11_tensor_of_complex.cpp	/^static void test_contractions()$/;"	f	file:
test_corners	tools/eigen/test/corners.cpp	/^void test_corners()$/;"	f
test_cpu	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_cpu() {$/;"	f	file:
test_ctorleak	tools/eigen/test/ctorleak.cpp	/^void test_ctorleak()$/;"	f
test_cuda_argmax_dim	tools/eigen/unsupported/test/cxx11_tensor_argmax_cuda.cpp	/^void test_cuda_argmax_dim()$/;"	f
test_cuda_argmin_dim	tools/eigen/unsupported/test/cxx11_tensor_argmax_cuda.cpp	/^void test_cuda_argmin_dim()$/;"	f
test_cuda_contraction	tools/eigen/unsupported/test/cxx11_tensor_contract_cuda.cpp	/^static void test_cuda_contraction(int m_size, int k_size, int n_size)$/;"	f	file:
test_cuda_contraction	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^static void test_cuda_contraction()$/;"	f	file:
test_cuda_convolution_1d	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^static void test_cuda_convolution_1d()$/;"	f	file:
test_cuda_convolution_2d	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^static void test_cuda_convolution_2d()$/;"	f	file:
test_cuda_convolution_3d	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^static void test_cuda_convolution_3d()$/;"	f	file:
test_cuda_convolution_inner_dim_col_major_1d	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^static void test_cuda_convolution_inner_dim_col_major_1d()$/;"	f	file:
test_cuda_convolution_inner_dim_row_major_1d	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^static void test_cuda_convolution_inner_dim_row_major_1d()$/;"	f	file:
test_cuda_elementwise	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^void test_cuda_elementwise()$/;"	f
test_cuda_elementwise_small	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^void test_cuda_elementwise_small() {$/;"	f
test_cuda_reduction	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^void test_cuda_reduction()$/;"	f
test_cuda_simple_argmax	tools/eigen/unsupported/test/cxx11_tensor_argmax_cuda.cpp	/^void test_cuda_simple_argmax()$/;"	f
test_current	tools/eigen/bench/perf_monitoring/gemm/run_gemm.sh	/^function test_current $/;"	f
test_custom	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^static void test_custom()$/;"	f	file:
test_custom_binary_op	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^static void test_custom_binary_op()$/;"	f	file:
test_custom_unary_op	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^static void test_custom_unary_op()$/;"	f	file:
test_cxx11_meta	tools/eigen/unsupported/test/cxx11_meta.cpp	/^void test_cxx11_meta()$/;"	f
test_cxx11_tensor_argmax	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^void test_cxx11_tensor_argmax()$/;"	f
test_cxx11_tensor_assign	tools/eigen/unsupported/test/cxx11_tensor_assign.cpp	/^void test_cxx11_tensor_assign()$/;"	f
test_cxx11_tensor_broadcasting	tools/eigen/unsupported/test/cxx11_tensor_broadcasting.cpp	/^void test_cxx11_tensor_broadcasting()$/;"	f
test_cxx11_tensor_casts	tools/eigen/unsupported/test/cxx11_tensor_casts.cpp	/^void test_cxx11_tensor_casts()$/;"	f
test_cxx11_tensor_chipping	tools/eigen/unsupported/test/cxx11_tensor_chipping.cpp	/^void test_cxx11_tensor_chipping()$/;"	f
test_cxx11_tensor_comparisons	tools/eigen/unsupported/test/cxx11_tensor_comparisons.cpp	/^void test_cxx11_tensor_comparisons()$/;"	f
test_cxx11_tensor_concatenation	tools/eigen/unsupported/test/cxx11_tensor_concatenation.cpp	/^void test_cxx11_tensor_concatenation()$/;"	f
test_cxx11_tensor_const	tools/eigen/unsupported/test/cxx11_tensor_const.cpp	/^void test_cxx11_tensor_const()$/;"	f
test_cxx11_tensor_contraction	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^void test_cxx11_tensor_contraction()$/;"	f
test_cxx11_tensor_convolution	tools/eigen/unsupported/test/cxx11_tensor_convolution.cpp	/^void test_cxx11_tensor_convolution()$/;"	f
test_cxx11_tensor_cuda	tools/eigen/unsupported/test/cxx11_tensor_argmax_cuda.cpp	/^void test_cxx11_tensor_cuda()$/;"	f
test_cxx11_tensor_cuda	tools/eigen/unsupported/test/cxx11_tensor_contract_cuda.cpp	/^void test_cxx11_tensor_cuda()$/;"	f
test_cxx11_tensor_cuda	tools/eigen/unsupported/test/cxx11_tensor_cuda.cpp	/^void test_cxx11_tensor_cuda()$/;"	f
test_cxx11_tensor_custom_op	tools/eigen/unsupported/test/cxx11_tensor_custom_op.cpp	/^void test_cxx11_tensor_custom_op()$/;"	f
test_cxx11_tensor_device	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^void test_cxx11_tensor_device()$/;"	f
test_cxx11_tensor_dimension	tools/eigen/unsupported/test/cxx11_tensor_dimension.cpp	/^void test_cxx11_tensor_dimension()$/;"	f
test_cxx11_tensor_expr	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^void test_cxx11_tensor_expr()$/;"	f
test_cxx11_tensor_fixed_size	tools/eigen/unsupported/test/cxx11_tensor_fixed_size.cpp	/^void test_cxx11_tensor_fixed_size()$/;"	f
test_cxx11_tensor_forced_eval	tools/eigen/unsupported/test/cxx11_tensor_forced_eval.cpp	/^void test_cxx11_tensor_forced_eval()$/;"	f
test_cxx11_tensor_generator	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^void test_cxx11_tensor_generator()$/;"	f
test_cxx11_tensor_image_patch	tools/eigen/unsupported/test/cxx11_tensor_image_patch.cpp	/^void test_cxx11_tensor_image_patch()$/;"	f
test_cxx11_tensor_index_list	tools/eigen/unsupported/test/cxx11_tensor_index_list.cpp	/^void test_cxx11_tensor_index_list()$/;"	f
test_cxx11_tensor_inflation	tools/eigen/unsupported/test/cxx11_tensor_inflation.cpp	/^void test_cxx11_tensor_inflation()$/;"	f
test_cxx11_tensor_intdiv	tools/eigen/unsupported/test/cxx11_tensor_intdiv.cpp	/^void test_cxx11_tensor_intdiv()$/;"	f
test_cxx11_tensor_io	tools/eigen/unsupported/test/cxx11_tensor_io.cpp	/^void test_cxx11_tensor_io()$/;"	f
test_cxx11_tensor_layout_swap	tools/eigen/unsupported/test/cxx11_tensor_layout_swap.cpp	/^void test_cxx11_tensor_layout_swap()$/;"	f
test_cxx11_tensor_lvalue	tools/eigen/unsupported/test/cxx11_tensor_lvalue.cpp	/^void test_cxx11_tensor_lvalue()$/;"	f
test_cxx11_tensor_map	tools/eigen/unsupported/test/cxx11_tensor_map.cpp	/^void test_cxx11_tensor_map()$/;"	f
test_cxx11_tensor_math	tools/eigen/unsupported/test/cxx11_tensor_math.cpp	/^void test_cxx11_tensor_math()$/;"	f
test_cxx11_tensor_mixed_indices	tools/eigen/unsupported/test/cxx11_tensor_mixed_indices.cpp	/^void test_cxx11_tensor_mixed_indices()$/;"	f
test_cxx11_tensor_morphing	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^void test_cxx11_tensor_morphing()$/;"	f
test_cxx11_tensor_of_complex	tools/eigen/unsupported/test/cxx11_tensor_of_complex.cpp	/^void test_cxx11_tensor_of_complex()$/;"	f
test_cxx11_tensor_of_const_values	tools/eigen/unsupported/test/cxx11_tensor_of_const_values.cpp	/^void test_cxx11_tensor_of_const_values()$/;"	f
test_cxx11_tensor_of_strings	tools/eigen/unsupported/test/cxx11_tensor_of_strings.cpp	/^void test_cxx11_tensor_of_strings()$/;"	f
test_cxx11_tensor_padding	tools/eigen/unsupported/test/cxx11_tensor_padding.cpp	/^void test_cxx11_tensor_padding()$/;"	f
test_cxx11_tensor_patch	tools/eigen/unsupported/test/cxx11_tensor_patch.cpp	/^void test_cxx11_tensor_patch()$/;"	f
test_cxx11_tensor_random	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^void test_cxx11_tensor_random()$/;"	f
test_cxx11_tensor_random_cuda	tools/eigen/unsupported/test/cxx11_tensor_random_cuda.cpp	/^void test_cxx11_tensor_random_cuda()$/;"	f
test_cxx11_tensor_reduction	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^void test_cxx11_tensor_reduction() {$/;"	f
test_cxx11_tensor_reduction_cuda	tools/eigen/unsupported/test/cxx11_tensor_reduction_cuda.cpp	/^void test_cxx11_tensor_reduction_cuda() {$/;"	f
test_cxx11_tensor_ref	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^void test_cxx11_tensor_ref()$/;"	f
test_cxx11_tensor_reverse	tools/eigen/unsupported/test/cxx11_tensor_reverse.cpp	/^void test_cxx11_tensor_reverse()$/;"	f
test_cxx11_tensor_shuffling	tools/eigen/unsupported/test/cxx11_tensor_shuffling.cpp	/^void test_cxx11_tensor_shuffling()$/;"	f
test_cxx11_tensor_simple	tools/eigen/unsupported/test/cxx11_tensor_simple.cpp	/^void test_cxx11_tensor_simple()$/;"	f
test_cxx11_tensor_striding	tools/eigen/unsupported/test/cxx11_tensor_striding.cpp	/^void test_cxx11_tensor_striding()$/;"	f
test_cxx11_tensor_symmetry	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^void test_cxx11_tensor_symmetry()$/;"	f
test_cxx11_tensor_thread_pool	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^void test_cxx11_tensor_thread_pool()$/;"	f
test_cxx11_tensor_volume_patch	tools/eigen/unsupported/test/cxx11_tensor_volume_patch.cpp	/^void test_cxx11_tensor_volume_patch()$/;"	f
test_default	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^static void test_default()$/;"	f	file:
test_default	tools/eigen/unsupported/test/cxx11_tensor_random_cuda.cpp	/^static void test_default()$/;"	f	file:
test_denseLM	tools/eigen/test/denseLM.cpp	/^void test_denseLM()$/;"	f
test_denseLM_T	tools/eigen/test/denseLM.cpp	/^void test_denseLM_T()$/;"	f
test_dense_storage	tools/eigen/test/dense_storage.cpp	/^void test_dense_storage()$/;"	f
test_determinant	tools/eigen/test/determinant.cpp	/^void test_determinant()$/;"	f
test_dgmres	tools/eigen/unsupported/test/dgmres.cpp	/^void test_dgmres()$/;"	f
test_dgmres_T	tools/eigen/unsupported/test/dgmres.cpp	/^template<typename T> void test_dgmres_T()$/;"	f
test_diagonal	tools/eigen/test/diagonal.cpp	/^void test_diagonal()$/;"	f
test_diagonalmatrices	tools/eigen/test/diagonalmatrices.cpp	/^void test_diagonalmatrices()$/;"	f
test_dim_check	tools/eigen/unsupported/test/cxx11_tensor_index_list.cpp	/^static void test_dim_check()$/;"	f	file:
test_dimension_failures	tools/eigen/unsupported/test/cxx11_tensor_concatenation.cpp	/^static void test_dimension_failures()$/;"	f	file:
test_dontalign	tools/eigen/test/dontalign.cpp	/^void test_dontalign()$/;"	f
test_dynalloc	tools/eigen/test/dynalloc.cpp	/^void test_dynalloc()$/;"	f
test_dynamic_chip	tools/eigen/unsupported/test/cxx11_tensor_chipping.cpp	/^static void test_dynamic_chip()$/;"	f	file:
test_dynamic_index_list	tools/eigen/unsupported/test/cxx11_tensor_index_list.cpp	/^static void test_dynamic_index_list()$/;"	f	file:
test_dynamic_size	tools/eigen/unsupported/test/cxx11_tensor_dimension.cpp	/^static void test_dynamic_size()$/;"	f	file:
test_eigen2support	tools/eigen/test/eigen2support.cpp	/^void test_eigen2support()$/;"	f
test_eigensolver_complex	tools/eigen/test/eigensolver_complex.cpp	/^void test_eigensolver_complex()$/;"	f
test_eigensolver_generalized_real	tools/eigen/test/eigensolver_generalized_real.cpp	/^void test_eigensolver_generalized_real()$/;"	f
test_eigensolver_generic	tools/eigen/test/eigensolver_generic.cpp	/^void test_eigensolver_generic()$/;"	f
test_eigensolver_selfadjoint	tools/eigen/test/eigensolver_selfadjoint.cpp	/^void test_eigensolver_selfadjoint()$/;"	f
test_entire_volume_patch	tools/eigen/unsupported/test/cxx11_tensor_volume_patch.cpp	/^static void test_entire_volume_patch()$/;"	f	file:
test_equality	tools/eigen/unsupported/test/cxx11_tensor_comparisons.cpp	/^static void test_equality()$/;"	f	file:
test_evals	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_evals()$/;"	f	file:
test_evals	tools/eigen/unsupported/test/cxx11_tensor_convolution.cpp	/^static void test_evals()$/;"	f	file:
test_evaluators	tools/eigen/test/evaluators.cpp	/^void test_evaluators()$/;"	f
test_exceptions	tools/eigen/test/exceptions.cpp	/^void test_exceptions()$/;"	f
test_expr	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_expr()$/;"	f	file:
test_expr	tools/eigen/unsupported/test/cxx11_tensor_convolution.cpp	/^static void test_expr()$/;"	f	file:
test_expr_reverse	tools/eigen/unsupported/test/cxx11_tensor_reverse.cpp	/^static void test_expr_reverse(bool LValue)$/;"	f	file:
test_expr_shuffling	tools/eigen/unsupported/test/cxx11_tensor_shuffling.cpp	/^static void test_expr_shuffling()$/;"	f	file:
test_first_aligned	tools/eigen/test/first_aligned.cpp	/^void test_first_aligned()$/;"	f
test_first_aligned_helper	tools/eigen/test/first_aligned.cpp	/^void test_first_aligned_helper(Scalar *array, int size)$/;"	f
test_fixed_size	tools/eigen/unsupported/test/cxx11_tensor_dimension.cpp	/^static void test_fixed_size()$/;"	f	file:
test_fixed_size_broadcasting	tools/eigen/unsupported/test/cxx11_tensor_broadcasting.cpp	/^static void test_fixed_size_broadcasting()$/;"	f	file:
test_float_to_int_cast	tools/eigen/unsupported/test/cxx11_tensor_casts.cpp	/^static void test_float_to_int_cast()$/;"	f	file:
test_forced_contextual_eval	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_forced_contextual_eval(Context* context)$/;"	f	file:
test_forward	tools/eigen/unsupported/test/NumericalDiff.cpp	/^void test_forward()$/;"	f
test_forward_adolc	tools/eigen/unsupported/test/forward_adolc.cpp	/^void test_forward_adolc()$/;"	f
test_full_reductions	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^static void test_full_reductions() {$/;"	f	file:
test_full_reductions	tools/eigen/unsupported/test/cxx11_tensor_reduction_cuda.cpp	/^static void test_full_reductions() {$/;"	f	file:
test_full_redux	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_full_redux()$/;"	f	file:
test_functors	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^static void test_functors()$/;"	f	file:
test_gaussian	tools/eigen/unsupported/test/cxx11_tensor_generator.cpp	/^static void test_gaussian()$/;"	f	file:
test_gen_numeric_list	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_gen_numeric_list()$/;"	f	file:
test_geo_alignedbox	tools/eigen/test/geo_alignedbox.cpp	/^void test_geo_alignedbox()$/;"	f
test_geo_eulerangles	tools/eigen/test/geo_eulerangles.cpp	/^void test_geo_eulerangles()$/;"	f
test_geo_homogeneous	tools/eigen/test/geo_homogeneous.cpp	/^void test_geo_homogeneous()$/;"	f
test_geo_hyperplane	tools/eigen/test/geo_hyperplane.cpp	/^void test_geo_hyperplane()$/;"	f
test_geo_orthomethods	tools/eigen/test/geo_orthomethods.cpp	/^void test_geo_orthomethods()$/;"	f
test_geo_parametrizedline	tools/eigen/test/geo_parametrizedline.cpp	/^void test_geo_parametrizedline()$/;"	f
test_geo_quaternion	tools/eigen/test/geo_quaternion.cpp	/^void test_geo_quaternion()$/;"	f
test_geo_transformations	tools/eigen/test/geo_transformations.cpp	/^void test_geo_transformations()$/;"	f
test_get	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_get()$/;"	f	file:
test_gmres	tools/eigen/unsupported/test/gmres.cpp	/^void test_gmres()$/;"	f
test_gmres_T	tools/eigen/unsupported/test/gmres.cpp	/^template<typename T> void test_gmres_T()$/;"	f
test_gpu	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^static void test_gpu() {$/;"	f	file:
test_hessenberg	tools/eigen/test/hessenberg.cpp	/^void test_hessenberg()$/;"	f
test_holes	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_holes() {$/;"	f	file:
test_householder	tools/eigen/test/householder.cpp	/^void test_householder()$/;"	f
test_id	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_id()$/;"	f	file:
test_id_helper	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_id_helper(dummy_a a, dummy_a b, dummy_a c)$/;"	f	file:
test_id_numeric	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_id_numeric()$/;"	f	file:
test_id_type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_id_type()$/;"	f	file:
test_imagenet_patches	tools/eigen/unsupported/test/cxx11_tensor_image_patch.cpp	/^static void test_imagenet_patches()$/;"	f	file:
test_incomplete_cholesky	tools/eigen/unsupported/test/incomplete_cholesky.cpp	/^void test_incomplete_cholesky()$/;"	f
test_incomplete_cholesky_T	tools/eigen/unsupported/test/incomplete_cholesky.cpp	/^template<typename T, typename I> void test_incomplete_cholesky_T()$/;"	f
test_index_tuples_dim	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^static void test_index_tuples_dim()$/;"	f	file:
test_initialization	tools/eigen/unsupported/test/cxx11_tensor_of_strings.cpp	/^static void test_initialization()$/;"	f	file:
test_innermost_first_dims	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^static void test_innermost_first_dims() {$/;"	f	file:
test_innermost_last_dims	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^static void test_innermost_last_dims() {$/;"	f	file:
test_integer_types	tools/eigen/test/integer_types.cpp	/^void test_integer_types()$/;"	f
test_inverse	tools/eigen/test/inverse.cpp	/^void test_inverse()$/;"	f
test_isApprox	tools/eigen/test/main.h	/^inline bool test_isApprox(const Type1& a, const Type2& b)$/;"	f	namespace:Eigen
test_isApprox	tools/eigen/test/main.h	/^inline bool test_isApprox(const double& a, const double& b)$/;"	f	namespace:Eigen
test_isApprox	tools/eigen/test/main.h	/^inline bool test_isApprox(const float& a, const float& b)$/;"	f	namespace:Eigen
test_isApprox	tools/eigen/test/main.h	/^inline bool test_isApprox(const int& a, const int& b)$/;"	f	namespace:Eigen
test_isApprox	tools/eigen/test/main.h	/^inline bool test_isApprox(const long double& a, const long double& b)$/;"	f	namespace:Eigen
test_isApprox	tools/eigen/test/main.h	/^inline bool test_isApprox(const std::complex<double>& a, const std::complex<double>& b)$/;"	f	namespace:Eigen
test_isApprox	tools/eigen/test/main.h	/^inline bool test_isApprox(const std::complex<float>& a, const std::complex<float>& b)$/;"	f	namespace:Eigen
test_isApprox	tools/eigen/test/main.h	/^inline bool test_isApprox(const std::complex<long double>& a, const std::complex<long double>& b)$/;"	f	namespace:Eigen
test_isApproxOrLessThan	tools/eigen/test/main.h	/^inline bool test_isApproxOrLessThan(const double& a, const double& b)$/;"	f	namespace:Eigen
test_isApproxOrLessThan	tools/eigen/test/main.h	/^inline bool test_isApproxOrLessThan(const float& a, const float& b)$/;"	f	namespace:Eigen
test_isApproxOrLessThan	tools/eigen/test/main.h	/^inline bool test_isApproxOrLessThan(const int& a, const int& b)$/;"	f	namespace:Eigen
test_isApproxOrLessThan	tools/eigen/test/main.h	/^inline bool test_isApproxOrLessThan(const long double& a, const long double& b)$/;"	f	namespace:Eigen
test_isApproxWithRef	tools/eigen/test/main.h	/^inline bool test_isApproxWithRef(const Scalar& a, const Scalar& b, const ScalarRef& ref)$/;"	f	namespace:Eigen
test_isApprox_abs	tools/eigen/unsupported/test/matrix_function.cpp	/^inline bool test_isApprox_abs(const Type1& a, const Type2& b)$/;"	f
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const MatrixBase<Derived1>& m1,$/;"	f	namespace:Eigen
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const MatrixBase<Derived>& m,$/;"	f	namespace:Eigen
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const double& a, const double& b)$/;"	f	namespace:Eigen
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const float& a, const float& b)$/;"	f	namespace:Eigen
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const int& a, const int& b)$/;"	f	namespace:Eigen
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const long double& a, const long double& b)$/;"	f	namespace:Eigen
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const std::complex<double>& a, const std::complex<double>& b)$/;"	f	namespace:Eigen
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const std::complex<float>& a, const std::complex<float>& b)$/;"	f	namespace:Eigen
test_isMuchSmallerThan	tools/eigen/test/main.h	/^inline bool test_isMuchSmallerThan(const std::complex<long double>& a, const std::complex<long double>& b)$/;"	f	namespace:Eigen
test_isUnitary	tools/eigen/test/main.h	/^inline bool test_isUnitary(const MatrixBase<Derived>& m)$/;"	f	namespace:Eigen
test_is_equal	tools/eigen/test/main.h	/^bool test_is_equal(const T& actual, const U& expected)$/;"	f	namespace:Eigen
test_is_same_dense	tools/eigen/test/is_same_dense.cpp	/^void test_is_same_dense()$/;"	f
test_is_same_gf	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_is_same_gf()$/;"	f	file:
test_jacobi	tools/eigen/test/jacobi.cpp	/^void test_jacobi()$/;"	f
test_jacobisvd	tools/eigen/test/jacobisvd.cpp	/^void test_jacobisvd()$/;"	f
test_kronecker_product	tools/eigen/unsupported/test/kronecker_product.cpp	/^void test_kronecker_product()$/;"	f
test_large_contraction	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_large_contraction()$/;"	f	file:
test_levenberg_marquardt	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^void test_levenberg_marquardt()$/;"	f
test_linearstructure	tools/eigen/test/linearstructure.cpp	/^void test_linearstructure()$/;"	f
test_lmder	tools/eigen/test/denseLM.cpp	/^int test_lmder(FunctorType& functor, VectorType& uv)$/;"	f
test_lscg	tools/eigen/test/lscg.cpp	/^void test_lscg()$/;"	f
test_lscg_T	tools/eigen/test/lscg.cpp	/^template<typename T> void test_lscg_T()$/;"	f
test_lu	tools/eigen/test/lu.cpp	/^void test_lu()$/;"	f
test_mapped_matrix	tools/eigen/test/mapped_matrix.cpp	/^void test_mapped_matrix()$/;"	f
test_mapstaticmethods	tools/eigen/test/mapstaticmethods.cpp	/^void test_mapstaticmethods()$/;"	f
test_mapstride	tools/eigen/test/mapstride.cpp	/^void test_mapstride()$/;"	f
test_match	tools/eigen/unsupported/test/cxx11_tensor_dimension.cpp	/^static void test_match()$/;"	f	file:
test_matrix_exponential	tools/eigen/unsupported/test/matrix_exponential.cpp	/^void test_matrix_exponential()$/;"	f
test_matrix_function	tools/eigen/unsupported/test/matrix_function.cpp	/^void test_matrix_function()$/;"	f
test_matrix_power	tools/eigen/unsupported/test/matrix_power.cpp	/^void test_matrix_power()$/;"	f
test_matrix_square_root	tools/eigen/unsupported/test/matrix_square_root.cpp	/^void test_matrix_square_root()$/;"	f
test_matrix_vector	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_matrix_vector()$/;"	f	file:
test_memcpy	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^static void test_memcpy() {$/;"	f	file:
test_meta	tools/eigen/test/meta.cpp	/^void test_meta()$/;"	f
test_metis_T	tools/eigen/test/metis_support.cpp	/^template<typename T> void test_metis_T()$/;"	f
test_metis_support	tools/eigen/test/metis_support.cpp	/^void test_metis_support()$/;"	f
test_minimizeLM	tools/eigen/test/denseLM.cpp	/^int test_minimizeLM(FunctorType& functor, VectorType& uv)$/;"	f
test_minimizeSteps	tools/eigen/test/denseLM.cpp	/^int test_minimizeSteps(FunctorType& functor, VectorType& uv)$/;"	f
test_minres	tools/eigen/unsupported/test/minres.cpp	/^void test_minres()$/;"	f
test_minres_T	tools/eigen/unsupported/test/minres.cpp	/^template<typename T> void test_minres_T()$/;"	f
test_miscmatrices	tools/eigen/test/miscmatrices.cpp	/^void test_miscmatrices()$/;"	f
test_mixed_index_list	tools/eigen/unsupported/test/cxx11_tensor_index_list.cpp	/^static void test_mixed_index_list()$/;"	f	file:
test_mixingtypes	tools/eigen/test/mixingtypes.cpp	/^void test_mixingtypes()$/;"	f
test_modes	tools/eigen/unsupported/test/cxx11_tensor_convolution.cpp	/^static void test_modes() {$/;"	f	file:
test_mpreal_support	tools/eigen/unsupported/test/mpreal_support.cpp	/^void test_mpreal_support()$/;"	f
test_multidims	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_multidims()$/;"	f	file:
test_multiple_dims	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^static void test_multiple_dims()$/;"	f	file:
test_multithread_compound_assignment	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^static void test_multithread_compound_assignment()$/;"	f	file:
test_multithread_contraction	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^static void test_multithread_contraction()$/;"	f	file:
test_multithread_contraction_agrees_with_singlethread	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^static void test_multithread_contraction_agrees_with_singlethread() {$/;"	f	file:
test_multithread_elementwise	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^static void test_multithread_elementwise()$/;"	f	file:
test_multithread_random	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^static void test_multithread_random()$/;"	f	file:
test_multithreaded_reductions	tools/eigen/unsupported/test/cxx11_tensor_thread_pool.cpp	/^static void test_multithreaded_reductions() {$/;"	f	file:
test_nested_ops_with_ref	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^static void test_nested_ops_with_ref()$/;"	f	file:
test_nesting_ops	tools/eigen/test/nesting_ops.cpp	/^void test_nesting_ops()$/;"	f
test_nomalloc	tools/eigen/test/nomalloc.cpp	/^void test_nomalloc()$/;"	f
test_none_aligned_helper	tools/eigen/test/first_aligned.cpp	/^void test_none_aligned_helper(Scalar *array, int size)$/;"	f
test_normal	tools/eigen/unsupported/test/cxx11_tensor_random.cpp	/^static void test_normal()$/;"	f	file:
test_nullary	tools/eigen/test/nullary.cpp	/^void test_nullary()$/;"	f
test_openglsupport	tools/eigen/unsupported/test/openglsupport.cpp	/^void test_openglsupport()$/;"	f
test_orderings	tools/eigen/unsupported/test/cxx11_tensor_comparisons.cpp	/^static void test_orderings()$/;"	f	file:
test_out_of_order_contraction	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_out_of_order_contraction()$/;"	f	file:
test_output_1d	tools/eigen/unsupported/test/cxx11_tensor_io.cpp	/^static void test_output_1d()$/;"	f	file:
test_output_2d	tools/eigen/unsupported/test/cxx11_tensor_io.cpp	/^static void test_output_2d()$/;"	f	file:
test_output_const	tools/eigen/unsupported/test/cxx11_tensor_io.cpp	/^static void test_output_const()$/;"	f	file:
test_output_expr	tools/eigen/unsupported/test/cxx11_tensor_io.cpp	/^static void test_output_expr()$/;"	f	file:
test_output_string	tools/eigen/unsupported/test/cxx11_tensor_io.cpp	/^static void test_output_string()$/;"	f	file:
test_packetmath	tools/eigen/test/packetmath.cpp	/^void test_packetmath()$/;"	f
test_padded_expr	tools/eigen/unsupported/test/cxx11_tensor_padding.cpp	/^static void test_padded_expr()$/;"	f	file:
test_pardiso_T	tools/eigen/test/pardiso_support.cpp	/^template<typename T> void test_pardiso_T()$/;"	f
test_pardiso_support	tools/eigen/test/pardiso_support.cpp	/^void test_pardiso_support()$/;"	f
test_pastix_T	tools/eigen/test/pastix_support.cpp	/^template<typename T> void test_pastix_T()$/;"	f
test_pastix_T_LU	tools/eigen/test/pastix_support.cpp	/^template<typename T> void test_pastix_T_LU()$/;"	f
test_pastix_support	tools/eigen/test/pastix_support.cpp	/^void test_pastix_support()$/;"	f
test_patch_no_extra_dim	tools/eigen/unsupported/test/cxx11_tensor_image_patch.cpp	/^static void test_patch_no_extra_dim()$/;"	f	file:
test_patch_padding_same	tools/eigen/unsupported/test/cxx11_tensor_image_patch.cpp	/^static void test_patch_padding_same()$/;"	f	file:
test_patch_padding_valid	tools/eigen/unsupported/test/cxx11_tensor_image_patch.cpp	/^static void test_patch_padding_valid()$/;"	f	file:
test_patch_padding_valid_same_value	tools/eigen/unsupported/test/cxx11_tensor_image_patch.cpp	/^static void test_patch_padding_valid_same_value()$/;"	f	file:
test_permutationmatrices	tools/eigen/test/permutationmatrices.cpp	/^void test_permutationmatrices()$/;"	f
test_plus	tools/eigen/unsupported/test/cxx11_tensor_of_const_values.cpp	/^static void test_plus()$/;"	f	file:
test_plus_equal	tools/eigen/unsupported/test/cxx11_tensor_of_const_values.cpp	/^static void test_plus_equal()$/;"	f	file:
test_polynomialsolver	tools/eigen/unsupported/test/polynomialsolver.cpp	/^void test_polynomialsolver()$/;"	f
test_polynomialutils	tools/eigen/unsupported/test/polynomialutils.cpp	/^void test_polynomialutils()$/;"	f
test_powers_32bit	tools/eigen/unsupported/test/cxx11_tensor_intdiv.cpp	/^void test_powers_32bit() {$/;"	f
test_powers_64bit	tools/eigen/unsupported/test/cxx11_tensor_intdiv.cpp	/^void test_powers_64bit() {$/;"	f
test_prec_inverse_4x4	tools/eigen/test/prec_inverse_4x4.cpp	/^void test_prec_inverse_4x4()$/;"	f
test_precision	tools/eigen/bench/spbench/spbenchsolver.h	/^template<> inline double test_precision<double>() { return 1e-6; }                                                            $/;"	f
test_precision	tools/eigen/bench/spbench/spbenchsolver.h	/^template<> inline double test_precision<std::complex<double> >() { return test_precision<double>(); }$/;"	f
test_precision	tools/eigen/bench/spbench/spbenchsolver.h	/^template<> inline float test_precision<float>() { return 1e-3f; }                                                             $/;"	f
test_precision	tools/eigen/bench/spbench/spbenchsolver.h	/^template<> inline float test_precision<std::complex<float> >() { return test_precision<float>(); }$/;"	f
test_precision	tools/eigen/bench/spbench/spbenchsolver.h	/^template<typename T> inline typename NumTraits<T>::Real test_precision() { return NumTraits<T>::dummy_precision(); }$/;"	f
test_precision	tools/eigen/test/main.h	/^template<> inline double test_precision<double>() { return 1e-6; }$/;"	f	namespace:Eigen
test_precision	tools/eigen/test/main.h	/^template<> inline double test_precision<std::complex<double> >() { return test_precision<double>(); }$/;"	f	namespace:Eigen
test_precision	tools/eigen/test/main.h	/^template<> inline float test_precision<float>() { return 1e-3f; }$/;"	f	namespace:Eigen
test_precision	tools/eigen/test/main.h	/^template<> inline float test_precision<std::complex<float> >() { return test_precision<float>(); }$/;"	f	namespace:Eigen
test_precision	tools/eigen/test/main.h	/^template<> inline long double test_precision<long double>() { return 1e-6; }$/;"	f	namespace:Eigen
test_precision	tools/eigen/test/main.h	/^template<> inline long double test_precision<std::complex<long double> >() { return test_precision<long double>(); }$/;"	f	namespace:Eigen
test_precision	tools/eigen/test/main.h	/^template<typename T> inline typename NumTraits<T>::Real test_precision() { return NumTraits<T>::dummy_precision(); }$/;"	f	namespace:Eigen
test_product_extra	tools/eigen/test/product_extra.cpp	/^void test_product_extra()$/;"	f
test_product_large	tools/eigen/test/product_large.cpp	/^void test_product_large()$/;"	f
test_product_mmtr	tools/eigen/test/product_mmtr.cpp	/^void test_product_mmtr()$/;"	f
test_product_notemporary	tools/eigen/test/product_notemporary.cpp	/^void test_product_notemporary()$/;"	f
test_product_selfadjoint	tools/eigen/test/product_selfadjoint.cpp	/^void test_product_selfadjoint()$/;"	f
test_product_small	tools/eigen/test/product_small.cpp	/^void test_product_small()$/;"	f
test_product_symm	tools/eigen/test/product_symm.cpp	/^void test_product_symm()$/;"	f
test_product_syrk	tools/eigen/test/product_syrk.cpp	/^void test_product_syrk()$/;"	f
test_product_trmm	tools/eigen/test/product_trmm.cpp	/^void test_product_trmm()$/;"	f
test_product_trmv	tools/eigen/test/product_trmv.cpp	/^void test_product_trmv()$/;"	f
test_product_trsolve	tools/eigen/test/product_trsolve.cpp	/^void test_product_trsolve()$/;"	f
test_qr	tools/eigen/test/qr.cpp	/^void test_qr()$/;"	f
test_qr_colpivoting	tools/eigen/test/qr_colpivoting.cpp	/^void test_qr_colpivoting()$/;"	f
test_qr_fullpivoting	tools/eigen/test/qr_fullpivoting.cpp	/^void test_qr_fullpivoting()$/;"	f
test_qtvector	tools/eigen/test/qtvector.cpp	/^void test_qtvector()$/;"	f
test_rand	tools/eigen/test/rand.cpp	/^void test_rand()$/;"	f
test_random_setter	tools/eigen/unsupported/test/sparse_extra.cpp	/^bool test_random_setter(DynamicSparseMatrix<T>& sm, const DenseType& ref, const std::vector<Vector2i>& nonzeroCoords)$/;"	f
test_random_setter	tools/eigen/unsupported/test/sparse_extra.cpp	/^bool test_random_setter(SparseMatrix<Scalar,Options>& sm, const DenseType& ref, const std::vector<Vector2i>& nonzeroCoords)$/;"	f
test_real_qz	tools/eigen/test/real_qz.cpp	/^void test_real_qz()$/;"	f
test_reduce_middle_dims	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^static void test_reduce_middle_dims() {$/;"	f	file:
test_redux	tools/eigen/test/redux.cpp	/^void test_redux()$/;"	f
test_redux	tools/eigen/test/vectorization_logic.cpp	/^bool test_redux(const Xpr&, int traversal, int unrolling)$/;"	f
test_ref	tools/eigen/test/ref.cpp	/^void test_ref()$/;"	f
test_ref_ambiguous	tools/eigen/test/ref.cpp	/^void test_ref_ambiguous(const Ref<const ArrayXd> &A, Ref<ArrayXd> B)$/;"	f
test_ref_in_expr	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^static void test_ref_in_expr()$/;"	f	file:
test_ref_of_ref	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^static void test_ref_of_ref()$/;"	f	file:
test_ref_overload_fun1	tools/eigen/test/ref.cpp	/^int test_ref_overload_fun1(Ref<MatrixXd> )       { return 1; }$/;"	f
test_ref_overload_fun1	tools/eigen/test/ref.cpp	/^int test_ref_overload_fun1(Ref<MatrixXf> )       { return 3; }$/;"	f
test_ref_overload_fun1	tools/eigen/test/ref.cpp	/^int test_ref_overload_fun1(Ref<RowMatrixXd> )    { return 2; }$/;"	f
test_ref_overload_fun2	tools/eigen/test/ref.cpp	/^int test_ref_overload_fun2(Ref<const MatrixXd> ) { return 4; }$/;"	f
test_ref_overload_fun2	tools/eigen/test/ref.cpp	/^int test_ref_overload_fun2(Ref<const MatrixXf> ) { return 5; }$/;"	f
test_ref_overloads	tools/eigen/test/ref.cpp	/^void test_ref_overloads()$/;"	f
test_reference	tools/eigen/test/nomalloc.cpp	/^template<typename MatrixType> void test_reference(const MatrixType& m) {$/;"	f
test_relative_error	tools/eigen/test/main.h	/^S test_relative_error(const AlignedBox<S,D> &a, const AlignedBox<S,D> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^S test_relative_error(const ParametrizedLine<S,D,O> &a, const ParametrizedLine<S,D,O> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^S test_relative_error(const Translation<S,D> &a, const Translation<S,D> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^T test_relative_error(const AngleAxis<T> &a, const AngleAxis<T> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^T test_relative_error(const Rotation2D<T> &a, const Rotation2D<T> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^typename NumTraits<T1>::Real test_relative_error(const T1 &a, const T2 &b, typename internal::enable_if<internal::is_arithmetic<typename NumTraits<T1>::Real>::value, T1>::type* = 0)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^typename T1::RealScalar test_relative_error(const EigenBase<T1> &a, const EigenBase<T2> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^typename T1::RealScalar test_relative_error(const MatrixBase<T1> &a, const SparseMatrixBase<T2> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^typename T1::RealScalar test_relative_error(const SparseMatrixBase<T1> &a, const MatrixBase<T2> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^typename T1::RealScalar test_relative_error(const SparseMatrixBase<T1> &a, const SparseMatrixBase<T2> &b)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^typename T1::RealScalar test_relative_error(const T1 &a, const T2 &b, const typename T1::Coefficients* = 0)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/test/main.h	/^typename T1::Scalar test_relative_error(const T1 &a, const T2 &b, const typename T1::MatrixType* = 0)$/;"	f	namespace:Eigen
test_relative_error	tools/eigen/unsupported/test/alignedvector3.cpp	/^T test_relative_error(const AlignedVector3<T> &a, const MatrixBase<Derived> &b)$/;"	f	namespace:Eigen
test_reshape_as_lvalue	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^static void test_reshape_as_lvalue()$/;"	f	file:
test_reshape_in_expr	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^static void test_reshape_in_expr() {$/;"	f	file:
test_resize	tools/eigen/test/resize.cpp	/^void test_resize()$/;"	f
test_resize	tools/eigen/unsupported/test/cxx11_tensor_simple.cpp	/^static void test_resize()$/;"	f	file:
test_return_by_value	tools/eigen/unsupported/test/FFTW.cpp	/^void test_return_by_value(int len)$/;"	f
test_rvalue_types	tools/eigen/test/rvalue_types.cpp	/^void test_rvalue_types()$/;"	f
test_same_type	tools/eigen/unsupported/test/cxx11_tensor_assign.cpp	/^static void test_same_type()$/;"	f	file:
test_scalar	tools/eigen/unsupported/test/FFTW.cpp	/^void test_scalar(int nfft)$/;"	f
test_scalar	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_scalar()$/;"	f	file:
test_scalar_generic	tools/eigen/unsupported/test/FFTW.cpp	/^void test_scalar_generic(int nfft)$/;"	f
test_schur_complex	tools/eigen/test/schur_complex.cpp	/^void test_schur_complex()$/;"	f
test_schur_real	tools/eigen/test/schur_real.cpp	/^void test_schur_real()$/;"	f
test_select	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^static void test_select()$/;"	f	file:
test_selfadjoint	tools/eigen/test/selfadjoint.cpp	/^void test_selfadjoint()$/;"	f
test_shuffle_unshuffle	tools/eigen/unsupported/test/cxx11_tensor_shuffling.cpp	/^static void test_shuffle_unshuffle()$/;"	f	file:
test_shuffling_as_value	tools/eigen/unsupported/test/cxx11_tensor_shuffling.cpp	/^static void test_shuffling_as_value()$/;"	f	file:
test_sigmoid	tools/eigen/unsupported/test/cxx11_tensor_math.cpp	/^static void test_sigmoid()$/;"	f	file:
test_signed_32bit	tools/eigen/unsupported/test/cxx11_tensor_intdiv.cpp	/^void test_signed_32bit()$/;"	f
test_signed_64bit	tools/eigen/unsupported/test/cxx11_tensor_intdiv.cpp	/^void test_signed_64bit()$/;"	f
test_simple	tools/eigen/unsupported/test/cxx11_tensor_forced_eval.cpp	/^static void test_simple()$/;"	f	file:
test_simple	tools/eigen/unsupported/test/cxx11_tensor_mixed_indices.cpp	/^static void test_simple()$/;"	f	file:
test_simple_argmax	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^static void test_simple_argmax()$/;"	f	file:
test_simple_argmin	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^static void test_simple_argmin()$/;"	f	file:
test_simple_assign	tools/eigen/unsupported/test/cxx11_tensor_const.cpp	/^static void test_simple_assign()$/;"	f	file:
test_simple_assign	tools/eigen/unsupported/test/cxx11_tensor_simple.cpp	/^static void test_simple_assign()$/;"	f	file:
test_simple_broadcasting	tools/eigen/unsupported/test/cxx11_tensor_broadcasting.cpp	/^static void test_simple_broadcasting()$/;"	f	file:
test_simple_cast	tools/eigen/unsupported/test/cxx11_tensor_casts.cpp	/^static void test_simple_cast()$/;"	f	file:
test_simple_chip	tools/eigen/unsupported/test/cxx11_tensor_chipping.cpp	/^static void test_simple_chip()$/;"	f	file:
test_simple_concatenation	tools/eigen/unsupported/test/cxx11_tensor_concatenation.cpp	/^static void test_simple_concatenation()$/;"	f	file:
test_simple_index_tuples	tools/eigen/unsupported/test/cxx11_tensor_argmax.cpp	/^static void test_simple_index_tuples()$/;"	f	file:
test_simple_inflation	tools/eigen/unsupported/test/cxx11_tensor_inflation.cpp	/^static void test_simple_inflation()$/;"	f	file:
test_simple_lvalue_ref	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^static void test_simple_lvalue_ref()$/;"	f	file:
test_simple_padding	tools/eigen/unsupported/test/cxx11_tensor_padding.cpp	/^static void test_simple_padding()$/;"	f	file:
test_simple_patch	tools/eigen/unsupported/test/cxx11_tensor_image_patch.cpp	/^static void test_simple_patch()$/;"	f	file:
test_simple_patch	tools/eigen/unsupported/test/cxx11_tensor_patch.cpp	/^static void test_simple_patch()$/;"	f	file:
test_simple_reductions	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^static void test_simple_reductions() {$/;"	f	file:
test_simple_reshape	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^static void test_simple_reshape()$/;"	f	file:
test_simple_reverse	tools/eigen/unsupported/test/cxx11_tensor_reverse.cpp	/^static void test_simple_reverse()$/;"	f	file:
test_simple_rvalue_ref	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^static void test_simple_rvalue_ref()$/;"	f	file:
test_simple_shuffling	tools/eigen/unsupported/test/cxx11_tensor_shuffling.cpp	/^static void test_simple_shuffling()$/;"	f	file:
test_simple_slice	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^static void test_simple_slice()$/;"	f	file:
test_simple_striding	tools/eigen/unsupported/test/cxx11_tensor_striding.cpp	/^static void test_simple_striding()$/;"	f	file:
test_simple_swap	tools/eigen/unsupported/test/cxx11_tensor_layout_swap.cpp	/^static void test_simple_swap()$/;"	f	file:
test_simplicial_cholesky	tools/eigen/test/simplicial_cholesky.cpp	/^void test_simplicial_cholesky()$/;"	f
test_simplicial_cholesky_T	tools/eigen/test/simplicial_cholesky.cpp	/^template<typename T, typename I> void test_simplicial_cholesky_T()$/;"	f
test_single_voxel_patch	tools/eigen/unsupported/test/cxx11_tensor_volume_patch.cpp	/^static void test_single_voxel_patch()$/;"	f	file:
test_sizeof	tools/eigen/test/sizeof.cpp	/^void test_sizeof()$/;"	f
test_sizeoverflow	tools/eigen/test/sizeoverflow.cpp	/^void test_sizeoverflow()$/;"	f
test_slice	tools/eigen/unsupported/test/cxx11_meta.cpp	/^static void test_slice()$/;"	f	file:
test_slice	tools/eigen/unsupported/test/cxx11_tensor_ref.cpp	/^static void test_slice()$/;"	f	file:
test_slice_as_lvalue	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^static void test_slice_as_lvalue()$/;"	f	file:
test_slice_in_expr	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^static void test_slice_in_expr() {$/;"	f	file:
test_slice_raw_data	tools/eigen/unsupported/test/cxx11_tensor_morphing.cpp	/^static void test_slice_raw_data()$/;"	f	file:
test_slices	tools/eigen/unsupported/test/cxx11_tensor_of_strings.cpp	/^static void test_slices()$/;"	f	file:
test_small_blocking_factors	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_small_blocking_factors()$/;"	f	file:
test_small_to_big_type_cast	tools/eigen/unsupported/test/cxx11_tensor_casts.cpp	/^static void test_small_to_big_type_cast()$/;"	f	file:
test_smallvectors	tools/eigen/test/smallvectors.cpp	/^void test_smallvectors()$/;"	f
test_sparseLM	tools/eigen/test/sparseLM.cpp	/^void test_sparseLM()$/;"	f
test_sparseLM_T	tools/eigen/test/sparseLM.cpp	/^void test_sparseLM_T()$/;"	f
test_sparse_basic	tools/eigen/test/sparse_basic.cpp	/^void test_sparse_basic()$/;"	f
test_sparse_block	tools/eigen/test/sparse_block.cpp	/^void test_sparse_block()$/;"	f
test_sparse_extra	tools/eigen/unsupported/test/sparse_extra.cpp	/^void test_sparse_extra()$/;"	f
test_sparse_permutations	tools/eigen/test/sparse_permutations.cpp	/^void test_sparse_permutations()$/;"	f
test_sparse_product	tools/eigen/test/sparse_product.cpp	/^void test_sparse_product()$/;"	f
test_sparse_ref	tools/eigen/test/sparse_ref.cpp	/^void test_sparse_ref()$/;"	f
test_sparse_solvers	tools/eigen/test/sparse_solvers.cpp	/^void test_sparse_solvers()$/;"	f
test_sparse_vector	tools/eigen/test/sparse_vector.cpp	/^void test_sparse_vector()$/;"	f
test_sparselu	tools/eigen/test/sparselu.cpp	/^void test_sparselu()$/;"	f
test_sparselu_T	tools/eigen/test/sparselu.cpp	/^template<typename T> void test_sparselu_T()$/;"	f
test_sparseqr	tools/eigen/test/sparseqr.cpp	/^void test_sparseqr()$/;"	f
test_sparseqr_scalar	tools/eigen/test/sparseqr.cpp	/^template<typename Scalar> void test_sparseqr_scalar()$/;"	f
test_special_numbers	tools/eigen/test/special_numbers.cpp	/^void test_special_numbers()$/;"	f
test_specific	tools/eigen/unsupported/test/cxx11_tensor_intdiv.cpp	/^void test_specific() {$/;"	f
test_splines	tools/eigen/unsupported/test/splines.cpp	/^void test_splines()$/;"	f
test_spqr_scalar	tools/eigen/test/spqr_support.cpp	/^template<typename Scalar> void test_spqr_scalar()$/;"	f
test_spqr_support	tools/eigen/test/spqr_support.cpp	/^void test_spqr_support()$/;"	f
test_stable_norm	tools/eigen/test/stable_norm.cpp	/^void test_stable_norm()$/;"	f
test_static_broadcasting	tools/eigen/unsupported/test/cxx11_tensor_broadcasting.cpp	/^static void test_static_broadcasting()$/;"	f	file:
test_static_dimension_failure	tools/eigen/unsupported/test/cxx11_tensor_concatenation.cpp	/^static void test_static_dimension_failure()$/;"	f	file:
test_static_dims	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^static void test_static_dims() {$/;"	f	file:
test_static_index_list	tools/eigen/unsupported/test/cxx11_tensor_index_list.cpp	/^static void test_static_index_list()$/;"	f	file:
test_std_initializers_tensor	tools/eigen/unsupported/test/cxx11_tensor_assign.cpp	/^static void test_std_initializers_tensor() {$/;"	f	file:
test_stddeque	tools/eigen/test/stddeque.cpp	/^void test_stddeque()$/;"	f
test_stdlist	tools/eigen/test/stdlist.cpp	/^void test_stdlist()$/;"	f
test_stdvector	tools/eigen/test/stdvector.cpp	/^void test_stdvector()$/;"	f
test_stdvector_overload	tools/eigen/test/stdvector_overload.cpp	/^void test_stdvector_overload()$/;"	f
test_strides	tools/eigen/unsupported/test/cxx11_tensor_convolution.cpp	/^static void test_strides() {$/;"	f	file:
test_striding_as_lvalue	tools/eigen/unsupported/test/cxx11_tensor_striding.cpp	/^static void test_striding_as_lvalue()$/;"	f	file:
test_superlu_support	tools/eigen/test/superlu_support.cpp	/^void test_superlu_support()$/;"	f
test_swap	tools/eigen/test/swap.cpp	/^void test_swap()$/;"	f
test_swap_as_lvalue	tools/eigen/unsupported/test/cxx11_tensor_layout_swap.cpp	/^static void test_swap_as_lvalue()$/;"	f	file:
test_symgroups_dynamic	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^static void test_symgroups_dynamic()$/;"	f	file:
test_symgroups_selection	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^static void test_symgroups_selection()$/;"	f	file:
test_symgroups_static	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^static void test_symgroups_static()$/;"	f	file:
test_tanh	tools/eigen/unsupported/test/cxx11_tensor_math.cpp	/^static void test_tanh()$/;"	f	file:
test_tensor_asym	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^static void test_tensor_asym()$/;"	f	file:
test_tensor_dynsym	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^static void test_tensor_dynsym()$/;"	f	file:
test_tensor_epsilon	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^static void test_tensor_epsilon()$/;"	f	file:
test_tensor_map	tools/eigen/unsupported/test/cxx11_tensor_fixed_size.cpp	/^static void test_tensor_map()$/;"	f	file:
test_tensor_maps	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^static void test_tensor_maps() {$/;"	f	file:
test_tensor_product	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_tensor_product()$/;"	f	file:
test_tensor_randacc	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^static void test_tensor_randacc()$/;"	f	file:
test_tensor_sym	tools/eigen/unsupported/test/cxx11_tensor_symmetry.cpp	/^static void test_tensor_sym()$/;"	f	file:
test_tensor_vector	tools/eigen/unsupported/test/cxx11_tensor_contraction.cpp	/^static void test_tensor_vector()$/;"	f	file:
test_transform	tools/eigen/bench/benchGeometry.cpp	/^struct test_transform$/;"	s	file:
test_triangular	tools/eigen/test/triangular.cpp	/^void test_triangular()$/;"	f
test_type2index_list	tools/eigen/unsupported/test/cxx11_tensor_index_list.cpp	/^static void test_type2index_list()$/;"	f	file:
test_type_casting	tools/eigen/unsupported/test/cxx11_tensor_expr.cpp	/^static void test_type_casting()$/;"	f	file:
test_umeyama	tools/eigen/test/umeyama.cpp	/^void test_umeyama()$/;"	f
test_umfpack_support	tools/eigen/test/umfpack_support.cpp	/^void test_umfpack_support()$/;"	f
test_umfpack_support_T	tools/eigen/test/umfpack_support.cpp	/^template<typename T> void test_umfpack_support_T()$/;"	f
test_unalignedassert	tools/eigen/test/unalignedassert.cpp	/^void test_unalignedassert()$/;"	f
test_unalignedcount	tools/eigen/test/unalignedcount.cpp	/^void test_unalignedcount()$/;"	f
test_unsigned_32bit	tools/eigen/unsupported/test/cxx11_tensor_intdiv.cpp	/^void test_unsigned_32bit()$/;"	f
test_unsigned_64bit	tools/eigen/unsupported/test/cxx11_tensor_intdiv.cpp	/^void test_unsigned_64bit()$/;"	f
test_upperbidiagonalization	tools/eigen/test/upperbidiagonalization.cpp	/^void test_upperbidiagonalization()$/;"	f
test_user_defined_reductions	tools/eigen/unsupported/test/cxx11_tensor_reduction.cpp	/^static void test_user_defined_reductions() {$/;"	f	file:
test_vectorization_logic	tools/eigen/test/vectorization_logic.cpp	/^void test_vectorization_logic()$/;"	f
test_vectorized_broadcasting	tools/eigen/unsupported/test/cxx11_tensor_broadcasting.cpp	/^static void test_vectorized_broadcasting()$/;"	f	file:
test_vectorized_cast	tools/eigen/unsupported/test/cxx11_tensor_casts.cpp	/^static void test_vectorized_cast()$/;"	f	file:
test_vectorwiseop	tools/eigen/test/vectorwiseop.cpp	/^void test_vectorwiseop()$/;"	f
test_visitor	tools/eigen/test/visitor.cpp	/^void test_visitor()$/;"	f
test_zerosized	tools/eigen/test/nomalloc.cpp	/^void test_zerosized() {$/;"	f
test_zerosized	tools/eigen/test/zerosized.cpp	/^void test_zerosized()$/;"	f
thenExpression	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^    const ThenXprType& thenExpression() const { return m_then; }$/;"	f	class:Eigen::TensorSelectOp
thenMatrix	tools/eigen/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ThenMatrixType& thenMatrix() const$/;"	f	class:Eigen::Select
thickness	tools/eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType thickness ; \/* number of original columns represented by this *\/$/;"	m	union:internal::colamd_col::__anon184
thinQ	tools/eigen/doc/snippets/HouseholderQR_householderQ.cpp	/^std::cout << "The thin matrix Q is:\\n" << thinQ << "\\n\\n";$/;"	v
threadIdx	tools/eigen/test/cuda_common.h	/^dim3 threadIdx, blockDim, blockIdx;$/;"	v
threadcount	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    int threadcount;$/;"	m	class:MandelbrotWidget
threads	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    MandelbrotThread **threads;$/;"	m	class:MandelbrotWidget
threads_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  std::vector<std::thread*> threads_;               \/\/ All threads$/;"	m	class:Eigen::ThreadPool
threshold	tools/eigen/Eigen/src/LU/FullPivLU.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivLU
threshold	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::ColPivHouseholderQR
threshold	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivHouseholderQR
threshold	tools/eigen/Eigen/src/SVD/SVDBase.h	/^  RealScalar threshold() const$/;"	f	class:Eigen::SVDBase
threshold_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  Index threshold_;$/;"	m	struct:Eigen::__anon117::MemcpyTriggerForSlicing
throw_std_bad_alloc	tools/eigen/Eigen/src/Core/util/Memory.h	/^inline void throw_std_bad_alloc()$/;"	f	namespace:Eigen::internal
thurber_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    thurber_functor(void) : Functor<double>(7,37) {}$/;"	f	struct:thurber_functor
thurber_functor	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^struct thurber_functor : Functor<double>$/;"	s	file:
thurber_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    thurber_functor(void) : DenseFunctor<double>(7,37) {}$/;"	f	struct:thurber_functor
thurber_functor	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^struct thurber_functor : DenseFunctor<double>$/;"	s	file:
time_calculate	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  BTL_DONT_INLINE double time_calculate(Action & action)$/;"	f	class:Portable_Perf_Analyzer
time_calculate	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  inline double time_calculate(Action & action)$/;"	f	class:Portable_Perf_Analyzer
time_init	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  inline double time_init(Action & action)$/;"	f	class:Portable_Perf_Analyzer
timer	tools/eigen/bench/benchmark-blocking-sizes.cpp	/^static BenchTimer timer;$/;"	v	file:
times2_op	tools/eigen/unsupported/test/cxx11_meta.cpp	/^struct times2_op { template<typename A> static A run(A v) { return v * 2; } };$/;"	s	file:
tindices	tools/eigen/demos/opengl/icosphere.cpp	/^static GLint tindices[20][3] = {$/;"	v	file:
tiny_blitz_interface	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^class tiny_blitz_interface$/;"	c
tinyness_before	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool tinyness_before   = true;$/;"	m	class:std::numeric_limits
tmp1	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool tmp1 = indices_statically_known_to_increase<ReducedDims>()();$/;"	m	struct:Eigen::internal::are_inner_most_dims
tmp1	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool tmp1 = indices_statically_known_to_increase<ReducedDims>()();$/;"	m	struct:Eigen::internal::preserve_inner_most_dims
tmp2	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool tmp2 = index_statically_eq<ReducedDims>()(0, 0);$/;"	m	struct:Eigen::internal::are_inner_most_dims
tmp2	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool tmp2 = index_statically_eq<ReducedDims>()(0, NumTensorDims - array_size<ReducedDims>::value);$/;"	m	struct:Eigen::internal::are_inner_most_dims
tmp2	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool tmp2 = index_statically_gt<ReducedDims>()(0, 0);$/;"	m	struct:Eigen::internal::preserve_inner_most_dims
tmp2	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool tmp2 = index_statically_lt<ReducedDims>()(array_size<ReducedDims>::value - 1, NumTensorDims - 1);$/;"	m	struct:Eigen::internal::preserve_inner_most_dims
tmp3	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool tmp3 = index_statically_eq<ReducedDims>()(array_size<ReducedDims>::value - 1, NumTensorDims - 1);$/;"	m	struct:Eigen::internal::are_inner_most_dims
tmp3	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool tmp3 = index_statically_eq<ReducedDims>()(array_size<ReducedDims>::value-1, array_size<ReducedDims>::value-1);$/;"	m	struct:Eigen::internal::are_inner_most_dims
toBool	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline bool             mpreal::toBool (mp_rnd_t \/*mode*\/) const   {    return  mpfr_zero_p (mpfr_srcptr()) == 0;     }$/;"	f	class:mpfr::mpreal
toDense	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    DenseMatrixType toDense() const$/;"	f	class:Eigen::SparseMatrixBase
toDense	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    Matrix<Scalar, RowsAtCompileTime, ColsAtCompileTime> toDense() const {$/;"	f	class:Eigen::SkylineMatrixBase
toDenseMatrix	tools/eigen/Eigen/src/Core/BandMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::internal::BandMatrixBase
toDenseMatrix	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return derived(); }$/;"	f	class:Eigen::DiagonalBase
toDenseMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return *this; }$/;"	f	class:Eigen::Transpose
toDenseMatrix	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::PermutationBase
toDenseMatrix	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::TriangularBase
toDouble	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline double           mpreal::toDouble (mp_rnd_t mode)  const    {    return  mpfr_get_d  (mpfr_srcptr(), mode);    }$/;"	f	class:mpfr::mpreal
toFloat	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline float            mpreal::toFloat  (mp_rnd_t mode)  const    {    return  mpfr_get_flt(mpfr_srcptr(), mode);    }$/;"	f	class:mpfr::mpreal
toInt64	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline int64_t      mpreal::toInt64 (mp_rnd_t mode)    const{    return mpfr_get_sj(mpfr_srcptr(), mode);    }$/;"	f	class:mpfr::mpreal
toLDouble	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline long double      mpreal::toLDouble(mp_rnd_t mode)  const    {    return  mpfr_get_ld (mpfr_srcptr(), mode);    }$/;"	f	class:mpfr::mpreal
toLong	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline long             mpreal::toLong   (mp_rnd_t mode)  const    {    return  mpfr_get_si (mpfr_srcptr(), mode);    }$/;"	f	class:mpfr::mpreal
toLowerCase	tools/eigen/bench/btl/generic_bench/btl.hh	/^    BtlString toLowerCase( void )$/;"	f	class:BtlString
toQMatrix	tools/eigen/Eigen/src/Geometry/Transform.h	/^QMatrix Transform<Scalar,Dim,Mode,Options>::toQMatrix(void) const$/;"	f	class:Eigen::Transform
toQTransform	tools/eigen/Eigen/src/Geometry/Transform.h	/^QTransform Transform<Scalar,Dim,Mode,Options>::toQTransform(void) const$/;"	f	class:Eigen::Transform
toRotationMatrix	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::AngleAxis
toRotationMatrix	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::toRotationMatrix(void) const$/;"	f	class:Eigen::QuaternionBase
toRotationMatrix	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^Rotation2D<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Rotation2D
toRotationMatrix	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType toRotationMatrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
toRotationMatrix	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^static inline Matrix<Scalar,2,2> toRotationMatrix(const Scalar& s)$/;"	f	namespace:Eigen::internal
toRotationMatrix	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^static inline Matrix<Scalar,Dim,Dim> toRotationMatrix(const RotationBase<OtherDerived,Dim>& r)$/;"	f	namespace:Eigen::internal
toRotationMatrix	tools/eigen/Eigen/src/Geometry/RotationBase.h	/^static inline const MatrixBase<OtherDerived>& toRotationMatrix(const MatrixBase<OtherDerived>& mat)$/;"	f	namespace:Eigen::internal
toRotationMatrix	tools/eigen/demos/opengl/quaternion_demo.cpp	/^  Matrix3 toRotationMatrix(void) const$/;"	f	class:EulerAngles
toString	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline std::string mpreal::toString(const std::string& format) const$/;"	f	class:mpfr::mpreal
toString	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline std::string mpreal::toString(int n, int b, mp_rnd_t mode) const$/;"	f	class:mpfr::mpreal
toString	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline std::string toString(T t, std::ios_base & (*f)(std::ios_base&))$/;"	f	namespace:mpfr
toUInt64	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline uint64_t     mpreal::toUInt64(mp_rnd_t mode)    const{    return mpfr_get_uj(mpfr_srcptr(), mode);    }$/;"	f	class:mpfr::mpreal
toULong	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline unsigned long    mpreal::toULong  (mp_rnd_t mode)  const    {    return  mpfr_get_ui (mpfr_srcptr(), mode);    }$/;"	f	class:mpfr::mpreal
toUpperCase	tools/eigen/bench/btl/generic_bench/btl.hh	/^    BtlString toUpperCase( void )$/;"	f	class:BtlString
to_string	tools/eigen/debug/gdb/printers.py	/^	def to_string(self):$/;"	m	class:EigenMatrixPrinter
to_string	tools/eigen/debug/gdb/printers.py	/^	def to_string(self):$/;"	m	class:EigenQuaternionPrinter
tol	Top.hh	/^    val tol;$/;"	m	class:Top
tolerance	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar tolerance() const { return m_tolerance; }$/;"	f	class:Eigen::IterativeSolverBase
topLeft2x2Corner	tools/eigen/doc/examples/class_FixedBlock.cpp	/^topLeft2x2Corner(MatrixBase<Derived>& m)$/;"	f
topLeft2x2Corner	tools/eigen/doc/examples/class_FixedBlock.cpp	/^topLeft2x2Corner(const MatrixBase<Derived>& m)$/;"	f
topLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topLeftCorner()$/;"	f
topLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topLeftCorner(Index cRows, Index cCols)$/;"	f
topLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> topLeftCorner(Index cRows, Index cCols)$/;"	f
topLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topLeftCorner() const$/;"	f
topLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topLeftCorner(Index cRows, Index cCols) const$/;"	f
topLeftCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> topLeftCorner(Index cRows, Index cCols) const$/;"	f
topLeftCorner	tools/eigen/doc/examples/class_Block.cpp	/^topLeftCorner(MatrixBase<Derived>& m, int rows, int cols)$/;"	f
topLeftCorner	tools/eigen/doc/examples/class_Block.cpp	/^topLeftCorner(const MatrixBase<Derived>& m, int rows, int cols)$/;"	f
topRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topRightCorner()$/;"	f
topRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topRightCorner(Index cRows, Index cCols)$/;"	f
topRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> topRightCorner(Index cRows, Index cCols)$/;"	f
topRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topRightCorner() const$/;"	f
topRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topRightCorner(Index cRows, Index cCols) const$/;"	f
topRightCorner	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> topRightCorner(Index cRows, Index cCols) const$/;"	f
topRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr topRows(Index n) const$/;"	f
topRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr topRows(Index n)$/;"	f
topRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type topRows(Index n = N) const$/;"	f
topRows	tools/eigen/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type topRows(Index n = N)$/;"	f
total	tools/eigen/bench/BenchTimer.h	/^  inline double total(int TIMER = CPU_TIMER) const$/;"	f	class:Eigen::BenchTimer
total_iter	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    long long total_iter;$/;"	m	class:MandelbrotThread
total_size	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static const std::ptrdiff_t total_size = internal::arg_prod(Indices...);$/;"	m	struct:Eigen::Sizes
tpmv	tools/eigen/blas/level2_impl.h	/^int EIGEN_BLAS_FUNC(tpmv)(char *uplo, char *opa, char *diag, int *n, RealScalar *pap, RealScalar *px, int *incx)$/;"	f
tpsv	tools/eigen/blas/level2_impl.h	/^int EIGEN_BLAS_FUNC(tpsv)(char *uplo, char *opa, char *diag, int *n, RealScalar *pap, RealScalar *px, int *incx)$/;"	f
trace	tools/eigen/Eigen/src/Core/Redux.h	/^MatrixBase<Derived>::trace() const$/;"	f	class:Eigen::MatrixBase
track	tools/eigen/demos/opengl/trackball.cpp	/^void Trackball::track(const Vector2i& point2D)$/;"	f	class:Trackball
train	Top-scalable.cc	/^bool Top::train(const Entity& e1, const Entity& e2, const Relation& trn, const Relation& tes) {$/;"	f	class:Top
train	Top.cc	/^bool Top::train(const Entity& e1, const Entity& e2, const Relation& r) {$/;"	f	class:Top
traits	tools/eigen/Eigen/src/Core/Array.h	/^struct traits<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > : traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^struct traits<ArrayWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^struct traits<MatrixWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrix<_Scalar,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Block.h	/^struct traits<Block<XprType, BlockRows, BlockCols, InnerPanel> > : traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct traits<EvalToTemp<ArgType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/CwiseBinaryOp.h	/^struct traits<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/CwiseNullaryOp.h	/^struct traits<CwiseNullaryOp<NullaryOp, PlainObjectType> > : traits<PlainObjectType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/CwiseUnaryOp.h	/^struct traits<CwiseUnaryOp<UnaryOp, XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/CwiseUnaryView.h	/^struct traits<CwiseUnaryView<ViewOp, MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Diagonal.h	/^struct traits<Diagonal<MatrixType,DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalMatrix<_Scalar,SizeAtCompileTime,MaxSizeAtCompileTime> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalWrapper<_DiagonalVectorType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^struct traits<ForceAlignedAccess<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Inverse.h	/^struct traits<Inverse<XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Map.h	/^struct traits<Map<PlainObjectType, MapOptions, StrideType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Matrix.h	/^struct traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/NestByValue.h	/^struct traits<NestByValue<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^struct traits<Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^struct traits<Transpose<PermutationBase<Derived> > >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Product.h	/^struct traits<Product<Lhs, Rhs, Option> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Ref.h	/^struct traits<Ref<_PlainObjectType, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Ref.h	/^struct traits<RefBase<Derived> > : public traits<Derived> {};$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Replicate.h	/^struct traits<Replicate<MatrixType,RowFactor,ColFactor> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^struct traits<ReturnByValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Reverse.h	/^struct traits<Reverse<MatrixType, Direction> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Select.h	/^struct traits<Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^struct traits<SelfAdjointView<MatrixType, UpLo> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Solve.h	/^struct traits<Solve<Decomposition, RhsType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^struct traits<triangular_solve_retval<Side, TriangularType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Transpose.h	/^struct traits<Transpose<MatrixType> > : public traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Transpositions.h	/^struct traits<Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Transpositions.h	/^struct traits<Transpose<TranspositionsBase<Derived> > >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Transpositions.h	/^struct traits<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/Transpositions.h	/^struct traits<TranspositionsWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct traits<TriangularView<MatrixType, _Mode> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/VectorBlock.h	/^struct traits<VectorBlock<VectorType, Size> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^struct traits<PartialReduxExpr<MatrixType, MemberOp, Direction> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  const Traits& traits;$/;"	m	struct:Eigen::internal::PossiblyRotatingKernelHelper
traits	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename T> struct traits<const T> : traits<T> {};$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^struct traits<HessenbergDecompositionMatrixHReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct traits<TridiagonalizationMatrixTReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/AngleAxis.h	/^template<typename _Scalar> struct traits<AngleAxis<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct traits<Homogeneous<MatrixType,Direction> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<const Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^struct traits<Quaternion<_Scalar,_Options> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/Rotation2D.h	/^template<typename _Scalar> struct traits<Rotation2D<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct traits<Transform<_Scalar,_Dim,_Mode,_Options> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^struct traits<HouseholderSequence<VectorsType,CoeffsType,Side> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^struct traits<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^struct traits<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^struct traits<LeastSquaresConjugateGradient<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct traits<SolveWithGuess<Decomposition, RhsType, GuessType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/LU/FullPivLU.h	/^template<typename _MatrixType> struct traits<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^template<typename _MatrixType> struct traits<PartialPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/QR/ColPivHouseholderQR.h	/^template<typename _MatrixType> struct traits<ColPivHouseholderQR<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^struct traits<FullPivHouseholderQRMatrixQReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename _MatrixType> struct traits<FullPivHouseholderQR<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType, typename Derived> struct traits<SPQR_QProduct<SPQRType, Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType> struct traits<SPQRMatrixQReturnType<SPQRType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType> struct traits<SPQRMatrixQTransposeReturnType<SPQRType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^struct traits<BDCSVD<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SVD/JacobiSVD.h	/^struct traits<JacobiSVD<_MatrixType,QRPreconditioner> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo, typename _Ordering> struct traits<SimplicialCholesky<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo, typename _Ordering> struct traits<SimplicialLLT<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType,int _UpLo, typename _Ordering> struct traits<SimplicialLDLT<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^struct traits<MappedSparseMatrix<_Scalar, _Flags, _StorageIndex> > : traits<SparseMatrix<_Scalar, _Flags, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^struct traits<SparseCompressedBase<Derived> > : traits<Derived>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^struct traits<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^struct traits<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<Diagonal<SparseMatrix<_Scalar, _Options, _Index>, DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<Diagonal<const SparseMatrix<_Scalar, _Options, _Index>, DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<SparseMatrix<_Scalar, _Options, _Index> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^struct traits<SparseRefBase<Derived> > : public traits<Derived> {};$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSelfAdjointView<MatrixType,Mode> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSymmetricPermutationProduct<MatrixType,Mode> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^struct traits<SparseVector<_Scalar, _Options, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^struct traits<SparseView<MatrixType> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType, typename Derived> struct traits<SparseQR_QProduct<SparseQRType, Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType> struct traits<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType> struct traits<SparseQRMatrixQTransposeReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/misc/Image.h	/^struct traits<image_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/Eigen/src/misc/Kernel.h	/^struct traits<kernel_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^struct traits<TensorIndexTupleOp<XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^struct traits<TensorTupleReducerOp<ReduceOp, Dims, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^struct traits<TensorAssignOp<LhsXprType, RhsXprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^struct traits<TensorBroadcastingOp<Broadcast, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^struct traits<TensorChippingOp<DimId, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^struct traits<TensorConcatenationOp<Axis, LhsXprType, RhsXprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^struct traits<TensorContractionOp<Dimensions, LhsXprType, RhsXprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^struct traits<TensorEvaluator<const TensorContractionOp<Indices_, LeftArgType_, RightArgType_>, Device_> > {$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^struct traits<TensorConversionOp<TargetType, XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^struct traits<TensorConvolutionOp<Dimensions, InputXprType, KernelXprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^struct traits<TensorCustomBinaryOp<CustomBinaryFunc, LhsXprType, RhsXprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^struct traits<TensorCustomUnaryOp<CustomUnaryFunc, XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^struct traits<TensorEvalToOp<XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct traits<TensorCwiseBinaryOp<BinaryOp, LhsXprType, RhsXprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct traits<TensorCwiseNullaryOp<NullaryOp, XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct traits<TensorCwiseUnaryOp<UnaryOp, XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^struct traits<TensorSelectOp<IfXprType, ThenXprType, ElseXprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^struct traits<TensorForcedEvalOp<XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^struct traits<TensorGeneratorOp<Generator, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^struct traits<TensorImagePatchOp<Rows, Cols, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^struct traits<TensorInflationOp<Strides, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^struct traits<TensorLayoutSwapOp<XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct traits<TensorReshapingOp<NewDimensions, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^struct traits<TensorSlicingOp<StartIndices, Sizes, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^struct traits<TensorPaddingOp<PaddingDimensions, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^struct traits<TensorPatchOp<PatchDim, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^struct traits<TensorReductionOp<Op, Dims, XprType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^struct traits<TensorReverseOp<ReverseDimensions,$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^struct traits<TensorShufflingOp<Shuffle, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^struct traits<TensorStridingOp<Strides, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct traits<Tensor<Scalar_, NumIndices_, Options_, IndexType_> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct traits<TensorFixedSize<Scalar_, Dimensions, Options_, IndexType_> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct traits<TensorMap<PlainObjectType, Options_> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^struct traits<TensorRef<PlainObjectType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^struct traits<TensorVolumePatchOp<Planes, Rows, Cols, XprType> > : public traits<XprType>$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^struct traits<DGMRES<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^struct traits<GMRES<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        struct traits<MINRES<_MatrixType,_UpLo,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^struct traits<KroneckerProduct<_Lhs,_Rhs> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^struct traits<KroneckerProductSparse<_Lhs,_Rhs> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^struct traits<MatrixExponentialReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^struct traits<MatrixFunctionReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  struct traits<MatrixLogarithmReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^struct traits< MatrixComplexPowerReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^struct traits< MatrixPowerParenthesesReturnValue<MatrixPowerType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h	/^struct traits< MatrixPowerReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^struct traits<MatrixSquareRootReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^struct traits<SkylineMatrix<_Scalar, _Options> > {$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^struct internal::traits<SkylineProduct<LhsNested, RhsNested, ProductMode> > {$/;"	s	class:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^struct traits<BlockSparseMatrix<_Scalar,_BlockAtCompileTime,_Options, _Index> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^struct traits<BlockSparseMatrixView<BlockSparseMatrixT> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^struct traits<BlockSparseTimeDenseProduct<BlockSparseMatrixT, VecType> >$/;"	s	namespace:Eigen::internal
traits	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^struct traits<DynamicSparseMatrix<_Scalar, _Options, _StorageIndex> >$/;"	s	namespace:Eigen::internal
trans	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    bool trans() const { return m_trans; }     \/**< \\brief Returns the transpose flag. *\/$/;"	f	class:Eigen::HouseholderSequence
trans	tools/eigen/bench/bench_gemm.cpp	/^static char trans = 'T';  $/;"	v	file:
trans	tools/eigen/bench/btl/libs/BLAS/blas_interface.hh	/^static char trans = 'T';$/;"	v
transcendentalFunc	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  void transcendentalFunc(int num_iters) {$/;"	f	class:BenchmarkSuite
transfer_constness	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^struct transfer_constness$/;"	s	struct:Eigen::internal::promote_index_type
transform	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const MatrixBase<XprType>& mat, TransformTraits traits = Affine)$/;"	f	class:Eigen::Hyperplane
transform	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const Transform<Scalar,AmbientDimAtCompileTime,Affine,TrOptions>& t,$/;"	f	class:Eigen::Hyperplane
transform	tools/eigen/bench/geometry.cpp	/^EIGEN_DONT_INLINE void transform(const Quaternion<Scalar>& t, Data& data)$/;"	f
transform	tools/eigen/bench/geometry.cpp	/^EIGEN_DONT_INLINE void transform(const ToRotationMatrixWrapper<QType>& t, Data& data)$/;"	f
transform	tools/eigen/bench/geometry.cpp	/^EIGEN_DONT_INLINE void transform(const Transform<Scalar,Dim,Projective>& t, Data& data)$/;"	f
transform	tools/eigen/bench/geometry.cpp	/^EIGEN_DONT_INLINE void transform(const Transformation& t, Data& data)$/;"	f
transform_alignment	tools/eigen/test/geo_transformations.cpp	/^template<typename Scalar> void transform_alignment()$/;"	f
transform_construct_from_matrix	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_make_affine	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_make_affine$/;"	s	namespace:Eigen::internal
transform_make_affine	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_make_affine<AffineCompact>$/;"	s	namespace:Eigen::internal
transform_product_result	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_product_result$/;"	s	namespace:Eigen::internal
transform_products	tools/eigen/test/geo_transformations.cpp	/^template<typename Scalar, int Dim, int Options> void transform_products()$/;"	f
transform_right_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 0 >$/;"	s	namespace:Eigen::internal
transform_right_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 1 >$/;"	s	namespace:Eigen::internal
transform_right_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 2 >$/;"	s	namespace:Eigen::internal
transform_take_affine_part	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_take_affine_part<Transform<Scalar,Dim,AffineCompact, Options> > {$/;"	s	namespace:Eigen::internal
transform_take_affine_part	tools/eigen/Eigen/src/Geometry/Transform.h	/^template<typename TransformType> struct transform_take_affine_part {$/;"	s	namespace:Eigen::internal
transform_traits	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_traits$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,AffineCompact,LhsOptions>,Transform<Scalar,Dim,Projective,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,false >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	tools/eigen/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,Projective,LhsOptions>,Transform<Scalar,Dim,AffineCompact,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transformations	tools/eigen/test/geo_transformations.cpp	/^template<typename Scalar, int Mode, int Options> void transformations()$/;"	f
translate	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& translate(const MatrixBase<Derived>& a_t)$/;"	f	class:Eigen::AlignedBox
translate	tools/eigen/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::translate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
translation	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline ConstTranslationPart translation() const { return ConstTranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline TranslationPart translation() { return TranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	tools/eigen/Eigen/src/Geometry/Translation.h	/^  VectorType& translation() { return m_coeffs; }$/;"	f	class:Eigen::Translation
translation	tools/eigen/Eigen/src/Geometry/Translation.h	/^  const VectorType& translation() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
translationExt	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt()$/;"	f	class:Eigen::Transform
translationExt	tools/eigen/Eigen/src/Geometry/Transform.h	/^  inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt() const$/;"	f	class:Eigen::Transform
transpose	tools/eigen/Eigen/src/Core/PermutationMatrix.h	/^    inline TransposeReturnType transpose() const$/;"	f	class:Eigen::PermutationBase
transpose	tools/eigen/Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose() const$/;"	f	class:Eigen::DenseBase
transpose	tools/eigen/Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose()$/;"	f	class:Eigen::DenseBase
transpose	tools/eigen/Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> transpose() const$/;"	f	class:Eigen::TranspositionsBase
transpose	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline TransposeReturnType transpose()$/;"	f	class:Eigen::TriangularView
transpose	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^    inline const ConstTransposeReturnType transpose() const$/;"	f	class:Eigen::TriangularView
transpose	tools/eigen/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence transpose() const$/;"	f	class:Eigen::HouseholderSequence
transpose	tools/eigen/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation transpose() const { using numext::conj; return JacobiRotation(m_c, -conj(m_s)); }$/;"	f	class:Eigen::JacobiRotation
transpose	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType<SPQRType> transpose() const$/;"	f	struct:Eigen::SPQRMatrixQReturnType
transpose	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    TransposeReturnType transpose() { return TransposeReturnType(derived()); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    const ConstTransposeReturnType transpose() const { return ConstTransposeReturnType(derived()); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	tools/eigen/Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType<SparseQRType> transpose() const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
transposeInPlace	tools/eigen/Eigen/src/Core/Transpose.h	/^inline void DenseBase<Derived>::transposeInPlace()$/;"	f	class:Eigen::DenseBase
transposed_matrix_matrix_product	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void transposed_matrix_matrix_product(gene_matrix & A, gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:blas_interface
transposed_matrix_matrix_product	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void transposed_matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:blaze_interface
transposed_matrix_matrix_product	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void transposed_matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:eigen2_interface
transposed_matrix_matrix_product	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void transposed_matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int  \/*N*\/){$/;"	f	class:eigen3_interface
transposed_matrix_matrix_product	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void transposed_matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:gmm_interface
transposed_matrix_matrix_product	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void transposed_matrix_matrix_product(const gene_matrix & A, const gene_matrix & B, gene_matrix & X, int N){$/;"	f	class:mtl4_interface
transposition_matrix_product	tools/eigen/Eigen/src/Core/ProductEvaluators.h	/^struct transposition_matrix_product$/;"	s	namespace:Eigen::internal
transpositionsP	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline const TranspositionType& transpositionsP() const$/;"	f	class:Eigen::LDLT
traps	tools/eigen/unsupported/test/mpreal/mpreal.h	/^        static const bool traps             = true;$/;"	m	class:std::numeric_limits
treePostorder	tools/eigen/Eigen/src/SparseCore/SparseColEtree.h	/^void treePostorder(typename IndexVector::Scalar n, IndexVector& parent, IndexVector& post)$/;"	f	namespace:Eigen::internal
tri	tools/eigen/doc/snippets/Tridiagonalization_compute.cpp	/^Tridiagonalization<MatrixXf> tri;$/;"	v
triangularView	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::MatrixBase
triangularView	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView()$/;"	f	class:Eigen::MatrixBase
triangularView	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^SparseMatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::SparseMatrixBase
triangular_assignment_loop	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop$/;"	s	namespace:Eigen::internal
triangular_assignment_loop	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop<Kernel, Mode, 0, SetOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_loop	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop<Kernel, Mode, Dynamic, SetOpposite>$/;"	s	namespace:Eigen::internal
triangular_dense_assignment_kernel	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC triangular_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
triangular_dense_assignment_kernel	tools/eigen/Eigen/src/Core/SelfAdjointView.h	/^class triangular_dense_assignment_kernel<UpLo,SelfAdjoint,SetOpposite,DstEvaluatorTypeT,SrcEvaluatorTypeT,Functor,Version>$/;"	c	namespace:Eigen::internal
triangular_dense_assignment_kernel	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC triangular_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
triangular_dense_assignment_kernel	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^class triangular_dense_assignment_kernel : public generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>$/;"	c	namespace:Eigen::internal
triangular_matrix_vector_product	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,ColMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,RowMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product_trmv	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^struct triangular_matrix_vector_product_trmv :$/;"	s	namespace:Eigen::internal
triangular_product_impl	tools/eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct triangular_product_impl<Mode,LhsIsTriangular,Lhs,false,Rhs,false>$/;"	s	namespace:Eigen::internal
triangular_product_impl	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_product_impl<Mode,false,Lhs,true,Rhs,false>$/;"	s	namespace:Eigen::internal
triangular_product_impl	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_product_impl<Mode,true,Lhs,false,Rhs,true>$/;"	s	namespace:Eigen::internal
triangular_rect	tools/eigen/test/triangular.cpp	/^template<typename MatrixType> void triangular_rect(const MatrixType& m)$/;"	f
triangular_solve_matrix	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	tools/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,Side,Mode,Conjugate,TriStorageOrder,RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_retval	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^  triangular_solve_retval(const TriangularType& tri, const Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solve_retval
triangular_solve_retval	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^template<int Side, typename TriangularType, typename Rhs> struct triangular_solve_retval$/;"	s	namespace:Eigen::internal
triangular_solve_vector	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	tools/eigen/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheRight, Mode, Conjugate, StorageOrder>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheLeft,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheRight,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,1>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,Dynamic>$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,Index,Size,false> {$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,Index,Size,true> {$/;"	s	namespace:Eigen::internal
triangular_square	tools/eigen/test/triangular.cpp	/^template<typename MatrixType> void triangular_square(const MatrixType& m)$/;"	f
triassign	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  template<typename Dest, typename Src> static void triassign(Dest& dst, const Src& src)$/;"	f	class:eigen3_interface
tribb_kernel	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct tribb_kernel$/;"	s	namespace:Eigen::internal
tridiagonal_qr_step	tools/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^static void tridiagonal_qr_step(RealScalar* diag, RealScalar* subdiag, Index start, Index end, Scalar* matrixQ, Index n)$/;"	f	namespace:Eigen::internal
tridiagonalization	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void tridiagonalization(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:blas_interface
tridiagonalization	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void tridiagonalization(const gene_matrix & X, gene_matrix & C, int N){$/;"	f	class:eigen2_interface
tridiagonalization	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void tridiagonalization(const gene_matrix & X, gene_matrix & C, int  N){$/;"	f	class:eigen3_interface
tridiagonalization	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void tridiagonalization(const gene_matrix & X, gene_matrix & R, int N){$/;"	f	class:gmm_interface
tridiagonalization_inplace	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& matA, CoeffVectorType& hCoeffs)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace_selector	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,1,IsComplex>$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	tools/eigen/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,3,false>$/;"	s	namespace:Eigen::internal
tries	tools/eigen/bench/btl/generic_bench/btl.hh	/^  int tries;$/;"	m	class:BtlConfig
triggerMatrixBadAlloc	tools/eigen/test/sizeoverflow.cpp	/^void triggerMatrixBadAlloc(Index rows, Index cols)$/;"	f
triggerVectorBadAlloc	tools/eigen/test/sizeoverflow.cpp	/^void triggerVectorBadAlloc(Index size)$/;"	f
trim	tools/eigen/bench/btl/generic_bench/btl.hh	/^    void trim( bool left = true, bool right = true )$/;"	f	class:BtlString
triplet	problem.hh	/^typedef Eigen::Triplet<val> triplet;$/;"	t
trisolve_lower	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void trisolve_lower(const gene_matrix & L, const gene_vector& B, gene_vector & X, int N){$/;"	f	class:blas_interface
trisolve_lower	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void trisolve_lower(const gene_matrix & L, const gene_vector & B, gene_vector & X, int N){$/;"	f	class:STL_interface
trisolve_lower	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void trisolve_lower(const gene_matrix & L, const gene_vector& B, gene_vector& X, int N){$/;"	f	class:eigen2_interface
trisolve_lower	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void trisolve_lower(const gene_matrix & L, const gene_vector& B, gene_vector& X, int  \/*N*\/){$/;"	f	class:eigen3_interface
trisolve_lower	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void trisolve_lower(const gene_matrix & L, const gene_vector& B, gene_vector & X, int N){$/;"	f	class:gmm_interface
trisolve_lower	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void trisolve_lower(const gene_matrix & L, const gene_vector& B, gene_vector & X, int N){$/;"	f	class:mtl4_interface
trisolve_lower	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void trisolve_lower(const gene_matrix & L, const gene_vector& B, gene_vector & X, int N){$/;"	f	class:ublas_interface
trisolve_lower_matrix	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void trisolve_lower_matrix(const gene_matrix & L, const gene_matrix& B, gene_matrix & X, int N){$/;"	f	class:blas_interface
trisolve_lower_matrix	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static inline void trisolve_lower_matrix(const gene_matrix & L, const gene_matrix& B, gene_matrix& X, int N){$/;"	f	class:eigen2_interface
trisolve_lower_matrix	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void trisolve_lower_matrix(const gene_matrix & L, const gene_matrix& B, gene_matrix& X, int  \/*N*\/){$/;"	f	class:eigen3_interface
trmm	tools/eigen/bench/btl/libs/BLAS/blas_interface_impl.hh	/^  static inline void trmm(gene_matrix & A, gene_matrix & B, gene_matrix & \/*X*\/, int N){$/;"	f	class:blas_interface
trmm	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static inline void trmm(const gene_matrix & L, const gene_matrix& B, gene_matrix& X, int  \/*N*\/){$/;"	f	class:eigen3_interface
trmm	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(trmm)(char *side, char *uplo, char *opa, char *diag, int *m, int *n, RealScalar *palpha,  RealScalar *pa, int *lda, RealScalar *pb, int *ldb)$/;"	f
trmm	tools/eigen/test/product_trmm.cpp	/^void trmm(int rows=internal::random<int>(1,EIGEN_TEST_MAX_SIZE), int cols=internal::random<int>(1,EIGEN_TEST_MAX_SIZE), int otherCols = internal::random<int>(1,EIGEN_TEST_MAX_SIZE))$/;"	f
trmm	tools/eigen/test/product_trmm.cpp	/^void trmm(int rows=internal::random<int>(1,EIGEN_TEST_MAX_SIZE),$/;"	f
trmv	tools/eigen/blas/level2_impl.h	/^int EIGEN_BLAS_FUNC(trmv)(char *uplo, char *opa, char *diag, int *n, RealScalar *pa, int *lda, RealScalar *pb, int *incb)$/;"	f
trmv	tools/eigen/test/product_trmm.cpp	/^void trmv(int rows=internal::random<int>(1,EIGEN_TEST_MAX_SIZE), int cols=internal::random<int>(1,EIGEN_TEST_MAX_SIZE))$/;"	f
trmv	tools/eigen/test/product_trmv.cpp	/^template<typename MatrixType> void trmv(const MatrixType& m)$/;"	f
trmv_selector	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^template<int Mode> struct trmv_selector<Mode,ColMajor>$/;"	s	namespace:Eigen::internal
trmv_selector	tools/eigen/Eigen/src/Core/products/TriangularMatrixVector.h	/^template<int Mode> struct trmv_selector<Mode,RowMajor>$/;"	s	namespace:Eigen::internal
trsm	tools/eigen/blas/level3_impl.h	/^int EIGEN_BLAS_FUNC(trsm)(char *side, char *uplo, char *opa, char *diag, int *m, int *n, RealScalar *palpha,  RealScalar *pa, int *lda, RealScalar *pb, int *ldb)$/;"	f
trsolve	tools/eigen/test/product_trsolve.cpp	/^template<typename Scalar,int Size, int Cols> void trsolve(int size=Size,int cols=Cols)$/;"	f
trsolve_traits	tools/eigen/Eigen/src/Core/SolveTriangular.h	/^class trsolve_traits$/;"	c	namespace:Eigen::internal
trsv	tools/eigen/blas/level2_impl.h	/^int EIGEN_BLAS_FUNC(trsv)(char *uplo, char *opa, char *diag, int *n, RealScalar *pa, int *lda, RealScalar *pb, int *incb)$/;"	f
true_type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
trunc	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal trunc(const mpreal& v)$/;"	f	namespace:mpfr
tuple_coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct tuple_coeff {$/;"	s	namespace:Eigen::internal
tuple_coeff	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct tuple_coeff<0> {$/;"	s	namespace:Eigen::internal
tvmet_interface	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^class tvmet_interface{$/;"	c
twistedBy	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseSymmetricPermutationProduct<Derived,Upper|Lower> twistedBy(const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm) const$/;"	f	class:Eigen::SparseMatrixBase
twistedBy	tools/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct<_MatrixTypeNested,Mode> twistedBy(const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm) const$/;"	f	class:Eigen::SparseSelfAdjointView
two	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^      int two;$/;"	m	struct:Eigen::DynamicSGroup::Generator
two_demos	tools/eigen/unsupported/doc/examples/FFT.cpp	/^void two_demos(int nfft)$/;"	f
twopassNorm	tools/eigen/bench/bench_norm.cpp	/^EIGEN_DONT_INLINE typename T::Scalar twopassNorm(T& v)$/;"	f
type	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^  typedef typename conditional<is_arithmetic<T>::value, T, typename add_const_on_value_type<T>::type>::type type;$/;"	t	struct:Eigen::internal::add_const_on_value_type_if_arithmetic
type	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::conj_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::log1p_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::pow_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::random_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::round_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::imag_ref_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::real_ref_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::abs2_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::arg_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::hypot_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::imag_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::norm1_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::real_retval
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  typedef typename T::Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	tools/eigen/Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	t	struct:Eigen::internal::always_void
type	tools/eigen/Eigen/src/Core/MatrixBase.h	/^      typedef Matrix<Scalar,MatrixBase::RowsAtCompileTime,MatrixBase::ColsAtCompileTime> type;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
type	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, AlignedMax, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedAlignedMapType
type	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, AlignedMax, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstAlignedMapType
type	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstMapType
type	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedMapType
type	tools/eigen/Eigen/src/Core/Ref.h	/^    typedef typename internal::conditional<MatchAtCompileTime,internal::true_type,internal::false_type>::type type;$/;"	t	struct:Eigen::internal::traits::match
type	tools/eigen/Eigen/src/Core/ReturnByValue.h	/^  typedef typename traits<Derived>::ReturnType type;$/;"	t	struct:Eigen::internal::nested_eval
type	tools/eigen/Eigen/src/Core/Transpose.h	/^  typedef typename dense_xpr_base<Transpose<MatrixType> >::type type;$/;"	t	struct:Eigen::internal::TransposeImpl_base
type	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet2cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet4cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet4d type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet8f type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef double2 type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef float4 type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	tools/eigen/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef bool type;$/;"	t	struct:Eigen::internal::result_of
type	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef ComplexScalar type(ComplexScalar, int);$/;"	t	struct:Eigen::internal::stem_function
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^    typedef typename binary_result_of_select<Func, ArgType0, ArgType1, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^    typedef typename unary_result_of_select<Func, ArgType, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^  typedef typename remove_all<type1>::type type;$/;"	t	struct:Eigen::internal::result_of
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef ArgType0 type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	t	struct:Eigen::internal::conditional
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	t	struct:Eigen::internal::conditional
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef ArgType type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	t	struct:Eigen::internal::remove_const
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	t	struct:Eigen::internal::remove_const
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	t	struct:Eigen::internal::add_const
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	t	struct:Eigen::internal::add_const
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	t	struct:Eigen::internal::remove_all
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^{ typedef T type; };$/;"	t	struct:Eigen::internal::enable_if
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	tools/eigen/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::template result<Func(ArgType0,ArgType1)>::type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^          > type;$/;"	t	struct:Eigen::internal::promote_index_type::plain_matrix_type_column_major
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^          > type;$/;"	t	struct:Eigen::internal::promote_index_type::plain_matrix_type_dense
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^          > type;$/;"	t	struct:Eigen::internal::promote_index_type::plain_matrix_type_row_major
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^    typedef Matrix<_Scalar, _Rows, _Cols, Options, _MaxRows, _MaxCols> type;$/;"	t	class:Eigen::internal::promote_index_type::make_proper_matrix_type
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  >::type type;$/;"	t	struct:Eigen::internal::promote_index_type::ref_selector
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  >::type type;$/;"	t	struct:Eigen::internal::promote_index_type::transfer_constness
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  typedef const Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& type;$/;"	t	struct:Eigen::internal::promote_index_type::eval
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  typedef const Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& type;$/;"	t	struct:Eigen::internal::promote_index_type::eval
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  typedef typename T::PlainObject type;$/;"	t	struct:Eigen::internal::promote_index_type::plain_matrix_type
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  typedef typename plain_matrix_type<T>::type type;$/;"	t	struct:Eigen::internal::promote_index_type::eval
type	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  typedef typename plain_matrix_type_dense<T,typename traits<T>::XprKind>::type type;$/;"	t	struct:Eigen::internal::promote_index_type::plain_matrix_type
type	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef MatrixOrTransformType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename TransformType::MatrixType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename internal::add_const<typename TransformType::ConstAffinePart>::type type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	tools/eigen/Eigen/src/Geometry/Umeyama.h	/^  > type;$/;"	t	struct:Eigen::internal::umeyama_transform_matrix_type
type	tools/eigen/Eigen/src/SparseCore/SparseRef.h	/^    typedef typename internal::conditional<MatchAtCompileTime,internal::true_type,internal::false_type>::type type;$/;"	t	struct:Eigen::internal::traits::match
type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^    typedef Matrix<_Scalar, 1, 1> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _StorageIndex> type;$/;"	t	struct:Eigen::internal::plain_matrix_type
type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, ColMajor, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, RowMajor, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  typedef SparseMatrixBase<Derived> type;$/;"	t	struct:Eigen::internal::generic_xpr_base
type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,SelfAdjointShape> { typedef SparseSelfAdjointShape type;  };$/;"	t	struct:Eigen::internal::glue_shapes
type	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,TriangularShape > { typedef SparseTriangularShape  type;  };$/;"	t	struct:Eigen::internal::glue_shapes
type	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  type_t type;$/;"	m	struct:inputfile_t	file:
type	tools/eigen/test/main.h	/^template<> struct GetDifferentType<double> { typedef float type; };$/;"	t	struct:GetDifferentType
type	tools/eigen/test/main.h	/^template<> struct GetDifferentType<float> { typedef double type; };$/;"	t	struct:GetDifferentType
type	tools/eigen/test/main.h	/^{ typedef std::complex<typename GetDifferentType<T>::type> type; };$/;"	t	struct:GetDifferentType
type	tools/eigen/test/swap.cpp	/^  typedef Matrix<_Scalar, _Rows, _Cols, _Options^RowMajor, _MaxRows, _MaxCols> type;$/;"	t	struct:other_matrix_type	file:
type	tools/eigen/test/swap.cpp	/^  typedef int type;$/;"	t	struct:other_matrix_type	file:
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct apply_op_from_left { typedef decltype(h_apply_op<true, op, additional_param>::helper(a())) type; };$/;"	t	struct:Eigen::internal::apply_op_from_left
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct apply_op_from_right { typedef decltype(h_apply_op<false, op, additional_param>::helper(a())) type; };$/;"	t	struct:Eigen::internal::apply_op_from_right
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct h_apply_op_helper                                        { typedef type_list<typename op<values, additional_param>::type...> type; };$/;"	t	struct:Eigen::internal::h_apply_op_helper
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct h_apply_op_helper<true, op, additional_param, values...> { typedef type_list<typename op<additional_param, values>::type...> type; };$/;"	t	struct:Eigen::internal::h_apply_op_helper
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<>                                  struct h_skip_helper_type<0>           { typedef type_list<> type; };$/;"	t	struct:Eigen::internal::h_skip_helper_type
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<>                                  struct take<0, type_list<>>         { typedef type_list<> type; };$/;"	t	struct:Eigen::internal::take
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n, typename a> struct skip { typedef decltype(h_skip<n>::helper(a())) type; };$/;"	t	struct:Eigen::internal::skip
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n>                             struct h_skip_helper_type<n>           { typedef type_list<> type; };$/;"	t	struct:Eigen::internal::h_skip_helper_type
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<int n>                             struct take<n, type_list<>>         { typedef type_list<> type; };$/;"	t	struct:Eigen::internal::take
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T V, T... nn>                struct gen_numeric_list_repeated<T, 0, V, nn...> { typedef numeric_list<T, nn...> type; };$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T a, T b, T start, T... ii>                    struct gen_numeric_list_swapped_pair<T, 0, a, b, start, ii...> { typedef numeric_list<T, ii...> type; };$/;"	t	struct:Eigen::internal::gen_numeric_list_swapped_pair
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T a, T... as>        struct take<0, numeric_list<T, a, as...>> { typedef numeric_list<T> type; };$/;"	t	struct:Eigen::internal::take
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T dummy, typename t> struct id_numeric  { typedef t type; };$/;"	t	struct:Eigen::internal::id_numeric
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T i, T... ii>        struct h_skip_helper_numeric<T, 0, i, ii...> { typedef numeric_list<T, i, ii...> type; };$/;"	t	struct:Eigen::internal::h_skip_helper_numeric
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T start, T... ii>                    struct gen_numeric_list<T, 0, start, ii...> { typedef numeric_list<T, ii...> type; };$/;"	t	struct:Eigen::internal::gen_numeric_list
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T start, T... ii>                    struct gen_numeric_list_reversed<T, 0, start, ii...> { typedef numeric_list<T, ii...> type; };$/;"	t	struct:Eigen::internal::gen_numeric_list_reversed
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T... as, T... bs>   struct concat<numeric_list<T, as...>, numeric_list<T, bs...> > { typedef numeric_list<T, as..., bs...> type; };$/;"	t	struct:Eigen::internal::concat
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, int n>               struct h_skip_helper_numeric<T, n>           { typedef numeric_list<T> type; };$/;"	t	struct:Eigen::internal::h_skip_helper_numeric
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, int n>               struct take<n, numeric_list<T>>           { typedef numeric_list<T> type; };$/;"	t	struct:Eigen::internal::take
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T>                      struct h_skip_helper_numeric<T, 0>           { typedef numeric_list<T> type; };$/;"	t	struct:Eigen::internal::h_skip_helper_numeric
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T>                      struct take<0, numeric_list<T>>           { typedef numeric_list<T> type; };$/;"	t	struct:Eigen::internal::take
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a, typename... as>                      struct get<0, type_list<a, as...>>   { typedef a type; };$/;"	t	struct:Eigen::internal::get
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a, typename... as>        struct take<0, type_list<a, as...>> { typedef type_list<> type; };$/;"	t	struct:Eigen::internal::take
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename a>                             struct mconcat<a>           { typedef a type; };$/;"	t	struct:Eigen::internal::mconcat
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename dummy, typename t>      struct id_type     { typedef t type; };$/;"	t	struct:Eigen::internal::id_type
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename t, typename... tt>        struct h_skip_helper_type<0, t, tt...> { typedef type_list<t, tt...> type; };$/;"	t	struct:Eigen::internal::h_skip_helper_type
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename... as, typename... bs> struct concat<type_list<as...>,       type_list<bs...>>        { typedef type_list<as..., bs...> type; };$/;"	t	struct:Eigen::internal::concat
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^                                  type2val<T, V> >::type type;$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^                                  type2val<T, V>, type2val<T, V> >::type type;$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^                                  type2val<T, V>, type2val<T, V>, type2val<T, V> >::type type;$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef Head type;$/;"	t	struct:Eigen::internal::get_type
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::type2val
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef empty_list type;$/;"	t	struct:Eigen::internal::make_type_list
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef type_list<T1, tailresult> type;$/;"	t	struct:Eigen::internal::make_type_list
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename Head::type type;$/;"	t	struct:Eigen::internal::get
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename Tail::HeadType::type type;$/;"	t	struct:Eigen::internal::get
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename get_type<i-1, Tail>::type type;$/;"	t	struct:Eigen::internal::get_type
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename make_type_list<type2val<T, V> >::type type;$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename make_type_list<type2val<T, V>, type2val<T, V> >::type type;$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename make_type_list<type2val<T, V>, type2val<T, V>, type2val<T, V> >::type type;$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename make_type_list<type2val<T, V>, type2val<T, V>, type2val<T, V>, type2val<T, V> >::type type;$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef typename make_type_list<type2val<T, V>, type2val<T, V>, type2val<T, V>, type2val<T, V>, type2val<T, V> >::type type;$/;"	t	struct:Eigen::internal::gen_numeric_list_repeated
type	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  typedef void type;$/;"	t	struct:Eigen::internal::get
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef TensorIndexTupleOp<XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef TensorTupleReducerOp<ReduceOp, Dims, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef const TensorIndexTupleOp<XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorArgMax.h	/^  typedef const TensorTupleReducerOp<ReduceOp, Dims, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef TensorAssignOp<LhsXprType, RhsXprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h	/^  typedef const TensorAssignOp<LhsXprType, RhsXprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef TensorBroadcastingOp<Broadcast, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBroadcasting.h	/^  typedef const TensorBroadcastingOp<Broadcast, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef TensorChippingOp<DimId, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  typedef const TensorChippingOp<DimId, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef TensorConcatenationOp<Axis, LhsXprType, RhsXprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  typedef const TensorConcatenationOp<Axis, LhsXprType, RhsXprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef TensorContractionOp<Dimensions, LhsXprType, RhsXprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h	/^  typedef const TensorContractionOp<Dimensions, LhsXprType, RhsXprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef TensorConversionOp<TargetType, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConversion.h	/^  typedef const TensorConversionOp<TargetType, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef TensorConvolutionOp<Dimensions, InputXprType, KernelXprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConvolution.h	/^  typedef const TensorConvolutionOp<Dimensions, InputXprType, KernelXprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef TensorCustomBinaryOp<CustomBinaryFunc, LhsXprType, RhsXprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef TensorCustomUnaryOp<CustomUnaryFunc, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef const TensorCustomBinaryOp<CustomBinaryFunc, LhsXprType, RhsXprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorCustomOp.h	/^  typedef const TensorCustomUnaryOp<CustomUnaryFunc, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef TensorEvalToOp<XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  typedef const TensorEvalToOp<XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef TensorCwiseBinaryOp<BinaryOp, LhsXprType, RhsXprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef TensorCwiseUnaryOp<UnaryOp, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef TensorSelectOp<IfXprType, ThenXprType, ElseXprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef const TensorCwiseBinaryOp<BinaryOp, LhsXprType, RhsXprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef const TensorCwiseUnaryOp<UnaryOp, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorExpr.h	/^  typedef const TensorSelectOp<IfXprType, ThenXprType, ElseXprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef TensorForcedEvalOp<XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForcedEval.h	/^  typedef const TensorForcedEvalOp<XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef TensorGeneratorOp<Generator, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorGenerator.h	/^  typedef const TensorGeneratorOp<Generator, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef TensorImagePatchOp<Rows, Cols, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  typedef const TensorImagePatchOp<Rows, Cols, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef TensorInflationOp<Strides, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorInflation.h	/^  typedef const TensorInflationOp<Strides, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^    typedef typename UnsignedTraits<T>::type type;$/;"	t	struct:Eigen::internal::__anon66::DividerTraits
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h	/^    typedef typename conditional<sizeof(T) == 8, uint64_t, uint32_t>::type type;$/;"	t	struct:Eigen::internal::__anon66::UnsignedTraits
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef TensorLayoutSwapOp<XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  typedef const TensorLayoutSwapOp<XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef TensorReshapingOp<NewDimensions, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef TensorSlicingOp<StartIndices, Sizes, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef const TensorReshapingOp<NewDimensions, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  typedef const TensorSlicingOp<StartIndices, Sizes, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef TensorPaddingOp<PaddingDimensions, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPadding.h	/^  typedef const TensorPaddingOp<PaddingDimensions, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef TensorPatchOp<PatchDim, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorPatch.h	/^  typedef const TensorPatchOp<PatchDim, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef TensorReductionOp<Op, Dims, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typedef const TensorReductionOp<Op, Dims, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef TensorReverseOp<ReverseDimensions, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  typedef const TensorReverseOp<ReverseDimensions, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef TensorShufflingOp<Shuffle, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  typedef const TensorShufflingOp<Shuffle, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef TensorStridingOp<Strides, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  typedef const TensorStridingOp<Strides, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef const Tensor<Scalar_, NumIndices_, Options_, IndexType_>& type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef const Tensor<_Scalar, NumIndices_, Options, IndexType_>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef const TensorFixedSize<Scalar_, Dimensions, Options, IndexType_>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef const TensorFixedSize<Scalar_, Dimensions, Options, IndexType_>& type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef const TensorMap<PlainObjectType, Options>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef const TensorMap<PlainObjectType, Options>& type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef const TensorRef<PlainObjectType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef const TensorRef<PlainObjectType>& type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorTraits.h	/^  typedef typename ref_selector<T>::type type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef TensorVolumePatchOp<Planes, Rows, Cols, XprType> type;$/;"	t	struct:Eigen::internal::nested
type	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  typedef const TensorVolumePatchOp<Planes, Rows, Cols, XprType>& type;$/;"	t	struct:Eigen::internal::eval
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    > type;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_multiply
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  > type;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_element_ctor
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  > type;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_identity_ctor
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^  typedef StaticSGroup<Gen...> type;$/;"	t	struct:Eigen::internal::tensor_static_symgroup
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  typedef void type;$/;"	t	struct:Eigen::internal::tensor_static_symgroup_if
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  >::type type;$/;"	t	struct:Eigen::internal::group_theory::strip_identities
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef elements type;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef elements type;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef elements type;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_generator
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef elements type;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef elements type;$/;"	t	struct:Eigen::internal::group_theory::dimino_first_step_elements_helper
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef type_list<> type;$/;"	t	struct:Eigen::internal::group_theory::dimino_get_coset_elements
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef type_list<> type;$/;"	t	struct:Eigen::internal::group_theory::strip_identities
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef type_list<id> type;$/;"	t	struct:Eigen::internal::group_theory::enumerate_group_elements_noid
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename _helper::type type;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_all_coset_spaces
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename _helper::type type;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_cosets_for_rep
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename _helper::type type;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_generator
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename _helper::type type;$/;"	t	struct:Eigen::internal::group_theory::enumerate_group_elements_noid
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename _next_iter::type type;$/;"	t	struct:Eigen::internal::group_theory::dimino_add_remaining_generators
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename apply_op_from_right<Multiply, new_coset_rep, sub_group_elements>::type type;$/;"	t	struct:Eigen::internal::group_theory::dimino_get_coset_elements
type	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util/TemplateGroupTheory.h	/^  typedef typename helper::type type;$/;"	t	struct:Eigen::internal::group_theory::dimino_first_step_elements
type	tools/eigen/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^    typedef SkylineMatrix<_Scalar, _Flags> type;$/;"	t	class:Eigen::internal::eval
type	tools/eigen/unsupported/test/FFTW.cpp	/^  typedef Matrix<Scalar,Dynamic,1> type;$/;"	t	struct:VectorType	file:
type	tools/eigen/unsupported/test/FFTW.cpp	/^  typedef vector<Scalar> type;$/;"	t	struct:VectorType	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_a, dummy_a> { typedef dummy_e type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_a, dummy_b> { typedef dummy_c type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_a, dummy_c> { typedef dummy_d type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_b, dummy_a> { typedef dummy_d type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_b, dummy_b> { typedef dummy_e type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_b, dummy_c> { typedef dummy_a type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_c, dummy_a> { typedef dummy_b type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_c, dummy_b> { typedef dummy_d type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_op<dummy_c, dummy_c> { typedef dummy_e type; };$/;"	t	struct:dummy_op	file:
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<double>              {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<int64_t  >           {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<int>                 {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<long double>         {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<long int>            {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<mpq_t>               {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<mpreal>              {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<mpz_t>               {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<uint64_t >           {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<unsigned int>        {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    template <> struct result_type<unsigned long int>   {typedef mpreal type;};    $/;"	t	struct:mpfr::internal::result_type
type1	tools/eigen/Eigen/src/Core/util/Meta.h	/^  typedef typename std::result_of<T>::type type1;$/;"	t	struct:Eigen::internal::result_of
type2index	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^struct type2index {$/;"	s	namespace:Eigen
type2val	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^struct type2val {$/;"	s	namespace:Eigen::internal
type_casting_traits	tools/eigen/Eigen/src/Core/GenericPacketMath.h	/^template <typename Src, typename Tgt> struct type_casting_traits {$/;"	s	namespace:Eigen::internal
type_casting_traits	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^struct type_casting_traits<float, int> {$/;"	s	namespace:Eigen::internal
type_casting_traits	tools/eigen/Eigen/src/Core/arch/AVX/TypeCasting.h	/^struct type_casting_traits<int, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<double, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<float, double> {$/;"	s	namespace:Eigen::internal
type_casting_traits	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<float, int> {$/;"	s	namespace:Eigen::internal
type_casting_traits	tools/eigen/Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<int, float> {$/;"	s	namespace:Eigen::internal
type_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct type_list { constexpr static int count = sizeof...(tt); };$/;"	s	namespace:Eigen::internal
type_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct type_list<t, tt...> { constexpr static int count = sizeof...(tt) + 1; typedef t first_type; };$/;"	s	namespace:Eigen::internal
type_list	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^template<typename T, typename Tail=empty_list> struct type_list {$/;"	s	namespace:Eigen::internal
type_name	tools/eigen/test/main.h	/^template<> std::string type_name<double>()                      { return "double"; }$/;"	f
type_name	tools/eigen/test/main.h	/^template<> std::string type_name<float>()                       { return "float"; }$/;"	f
type_name	tools/eigen/test/main.h	/^template<> std::string type_name<int>()                         { return "int"; }$/;"	f
type_name	tools/eigen/test/main.h	/^template<> std::string type_name<long double>()                 { return "long double"; }$/;"	f
type_name	tools/eigen/test/main.h	/^template<> std::string type_name<std::complex<double> >()       { return "complex<double>"; }$/;"	f
type_name	tools/eigen/test/main.h	/^template<> std::string type_name<std::complex<float> >()        { return "complex<float>"; }$/;"	f
type_name	tools/eigen/test/main.h	/^template<> std::string type_name<std::complex<int> >()          { return "complex<int>"; }$/;"	f
type_name	tools/eigen/test/main.h	/^template<> std::string type_name<std::complex<long double> >()  { return "complex<long double>"; }$/;"	f
type_name	tools/eigen/test/main.h	/^template<typename T> std::string type_name()                    { return "other"; }$/;"	f
type_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  enum class type_t {$/;"	c	struct:inputfile_t	file:
u	tools/eigen/doc/snippets/class_FullPivLU.cpp	/^Matrix5x3 u = lu.matrixLU().triangularView<Upper>();$/;"	v
u32	tools/eigen/bench/btl/generic_bench/timers/x86_timer.hh	28;"	d
ublas_interface	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^class ublas_interface{$/;"	c
ucol	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  ScalarVector  ucol; \/\/ nonzero values of U ordered by columns $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
uinteger	tools/eigen/blas/f2c/datatypes.h	/^typedef unsigned int uinteger;$/;"	t
umeyama	tools/eigen/Eigen/src/Geometry/Umeyama.h	/^umeyama(const MatrixBase<Derived>& src, const MatrixBase<OtherDerived>& dst, bool with_scaling = true)$/;"	f	namespace:Eigen
umeyama_transform_matrix_type	tools/eigen/Eigen/src/Geometry/Umeyama.h	/^struct umeyama_transform_matrix_type$/;"	s	namespace:Eigen::internal
umfpack_free_numeric	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, double)$/;"	f	namespace:Eigen
umfpack_free_numeric	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_free_symbolic	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, double)$/;"	f	namespace:Eigen
umfpack_free_symbolic	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_determinant	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(double *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO])$/;"	f	namespace:Eigen
umfpack_get_determinant	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(std::complex<double> *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO])$/;"	f	namespace:Eigen
umfpack_get_lunz	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, double)$/;"	f	namespace:Eigen
umfpack_get_lunz	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_numeric	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], double Lx[], int Up[], int Ui[], double Ux[],$/;"	f	namespace:Eigen
umfpack_get_numeric	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], std::complex<double> Lx[], int Up[], int Ui[], std::complex<double> Ux[],$/;"	f	namespace:Eigen
umfpack_numeric	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_numeric	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_solve	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_solve	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_symbolic	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_symbolic(int n_row,int n_col,$/;"	f	namespace:Eigen
unProject	tools/eigen/demos/opengl/camera.cpp	/^Vector3f Camera::unProject(const Vector2f& uv, float depth) const$/;"	f	class:Camera
unProject	tools/eigen/demos/opengl/camera.cpp	/^Vector3f Camera::unProject(const Vector2f& uv, float depth, const Matrix4f& invModelview) const$/;"	f	class:Camera
unaligned_dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct unaligned_dense_assignment_loop$/;"	s	namespace:Eigen::internal
unaligned_dense_assignment_loop	tools/eigen/Eigen/src/Core/AssignEvaluator.h	/^struct unaligned_dense_assignment_loop<false>$/;"	s	namespace:Eigen::internal
unaligned_objects	tools/eigen/test/product_extra.cpp	/^void unaligned_objects()$/;"	f
unalignedassert	tools/eigen/test/unalignedassert.cpp	/^void unalignedassert()$/;"	f
unaryExpr	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryExpr(const CustomUnaryOp& func = CustomUnaryOp()) const$/;"	f
unaryExpr	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h	/^    unaryExpr(const CustomUnaryOp& func) const {$/;"	f	class:Eigen::TensorBase
unaryViewExpr	tools/eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryViewExpr(const CustomViewOp& func = CustomViewOp()) const$/;"	f
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& block)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& replicate)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& reverse)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& t) : m_argImpl(t.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& wrapper)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<ArrayWrapper<TArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Block<ArgType, BlockRows, BlockCols, InnerPanel>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<CwiseUnaryOp<UnaryOp, ArgType>, IndexBased >$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<CwiseUnaryView<UnaryOp, ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<MatrixWrapper<TArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Replicate<ArgType, RowFactor, ColFactor> >$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Reverse<ArgType, Direction> >$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Transpose<ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/Inverse.h	/^  unary_evaluator(const InverseType& inv_xpr)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Core/Inverse.h	/^struct unary_evaluator<Inverse<ArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^  unary_evaluator(const XprType &xpr) : Base(xpr.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Core/TriangularMatrix.h	/^struct unary_evaluator<TriangularView<MatrixType,Mode>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^  explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/Geometry/Homogeneous.h	/^struct unary_evaluator<Homogeneous<ArgType,Direction>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  explicit unary_evaluator(const XprType &xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased >$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    explicit unary_evaluator(const XprType& op) : m_functor(op.functor()), m_argImpl(op.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^struct unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^struct unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    explicit unary_evaluator(const XprType& op) :m_argImpl(op.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^struct unary_evaluator<Transpose<ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^  explicit unary_evaluator(const XprType &xpr) : m_argImpl(xpr.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^struct unary_evaluator<TriangularView<ArgType,Mode>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^    explicit unary_evaluator(const XprType& xpr) : m_argImpl(xpr.nestedExpression()), m_view(xpr) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^struct unary_evaluator<SparseView<ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^struct unary_evaluator<SparseView<ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_result_of_select	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef ArgType type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	s	namespace:Eigen::internal
unblocked	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, SignMatrix& sign)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, SignMatrix& sign)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked	tools/eigen/Eigen/src/Cholesky/LLT.h	/^  static Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked_lu	tools/eigen/Eigen/src/LU/PartialPivLU.h	/^  static Index unblocked_lu(MatrixType& lu, PivIndex* row_transpositions, PivIndex& nb_transpositions)$/;"	f	struct:Eigen::internal::partial_lu_impl
uncompress	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    void uncompress()$/;"	f	class:Eigen::SparseMatrix
unitOrthogonal	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::unitOrthogonal() const$/;"	f	class:Eigen::MatrixBase
unitOrthogonal_selector	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,2>$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	tools/eigen/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,3>$/;"	s	namespace:Eigen::internal
unknown	tools/eigen/bench/analyze-blocking-sizes.cpp	/^    unknown,$/;"	m	class:inputfile_t::type_t	file:
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^template<typename Packet> struct unpacket_traits<DoublePacket<Packet> > { typedef DoublePacket<Packet> half; };$/;"	s	namespace:Eigen::internal
unrefEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    EIGEN_STRONG_INLINE void unrefEvaluator() {$/;"	f	class:Eigen::TensorRef
unrotateResult	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  void unrotateResult(AccPacket& res0,$/;"	f	struct:Eigen::internal::PossiblyRotatingKernelHelper
unrotateResult	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  void unrotateResult(AccPacket&,$/;"	f	struct:Eigen::internal::PossiblyRotatingKernelHelper
up	tools/eigen/demos/opengl/camera.cpp	/^Vector3f Camera::up(void) const$/;"	f	class:Camera
update	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool update(MatrixType& mat, TranspositionType& transpositions, Workspace& tmp, WType& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
update	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static bool update(MatrixType& mat, const TranspositionType& transpositions, Workspace& tmp, const WType& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
update	tools/eigen/scripts/relicense.py	/^def update(text):$/;"	f
updateGlobalFlags	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/DynamicSymmetry.h	/^inline void DynamicSGroup::updateGlobalFlags(int flagDiffOfSameGenerator)$/;"	f	class:Eigen::DynamicSGroup
updateInPlace	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^  static bool updateInPlace(MatrixType& mat, MatrixBase<WDerived>& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
updateList	tools/eigen/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h	/^inline void IncompleteCholesky<Scalar,_UpLo, OrderingType>::updateList(Ref<const VectorIx> colPtr, Ref<VectorIx> rowIdx, Ref<VectorSx> vals, const Index& col, const Index& jk, VectorIx& firstElt, VectorList& listCol)$/;"	f	class:Eigen::IncompleteCholesky
updateProjectionMatrix	tools/eigen/demos/opengl/camera.cpp	/^void Camera::updateProjectionMatrix(void) const$/;"	f	class:Camera
updateViewMatrix	tools/eigen/demos/opengl/camera.cpp	/^void Camera::updateViewMatrix(void) const$/;"	f	class:Camera
update_segrep	tools/eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  bool update_segrep(Index \/*krep*\/, Index \/*jj*\/)$/;"	f	struct:Eigen::internal::column_dfs_traits
update_segrep	tools/eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  bool update_segrep(Index krep, StorageIndex jj)$/;"	f	struct:Eigen::internal::panel_dfs_traits
update_value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^void update_value(T& val, DenseIndex new_val) {$/;"	f	namespace:Eigen::internal
update_value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^void update_value(type2index<n>& val, DenseIndex new_val) {$/;"	f	namespace:Eigen::internal
upper	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Scalar& upper(Index i) {$/;"	f	class:Eigen::SkylineStorage
upper	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Scalar& upper(Index i) const {$/;"	f	class:Eigen::SkylineStorage
upperNonZeros	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index upperNonZeros() const {$/;"	f	class:Eigen::SkylineMatrix
upperNonZeros	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index upperNonZeros(Index j) const {$/;"	f	class:Eigen::SkylineMatrix
upperProfile	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index& upperProfile(Index i) {$/;"	f	class:Eigen::SkylineStorage
upperProfile	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Index& upperProfile(Index i) const {$/;"	f	class:Eigen::SkylineStorage
upperProfileSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index upperProfileSize() const {$/;"	f	class:Eigen::SkylineStorage
upperSize	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index upperSize() const {$/;"	f	class:Eigen::SkylineStorage
upperbidiag	tools/eigen/test/upperbidiagonalization.cpp	/^template<typename MatrixType> void upperbidiag(const MatrixType& m)$/;"	f
upperbidiagonalization_blocked_helper	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_blocked_helper(MatrixType& A,$/;"	f	namespace:Eigen::internal
upperbidiagonalization_inplace_blocked	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_inplace_blocked(MatrixType& A, BidiagType& bidiagonal,$/;"	f	namespace:Eigen::internal
upperbidiagonalization_inplace_unblocked	tools/eigen/Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_inplace_unblocked(MatrixType& mat,$/;"	f	namespace:Eigen::internal
urandom	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal urandom (gmp_randstate_t& state, mp_rnd_t rnd_mode = mpreal::get_default_rnd())$/;"	f	namespace:mpfr
urandomb	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal urandomb (gmp_randstate_t& state)$/;"	f	namespace:mpfr
url	tools/eigen/scripts/eigen_gen_credits.cpp	/^  string url;$/;"	m	struct:contributor	file:
useExternalScaling	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    bool useExternalScaling; $/;"	m	class:Eigen::HybridNonLinearSolver
useExternalScaling	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    bool useExternalScaling; $/;"	m	class:Eigen::LevenbergMarquardt
useSpecificBlockingSizes	tools/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline bool useSpecificBlockingSizes(Index& k, Index& m, Index& n)$/;"	f	namespace:Eigen::internal
userColStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index userColStride() const { return m_col_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userColStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index userColStride() const { return m_col_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userInColStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index userInColStride() const { return m_in_col_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userInColStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index userInColStride() const { return m_in_col_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userInPlaneStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index userInPlaneStride() const { return m_in_plane_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userInRowStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index userInRowStride() const { return m_in_row_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userInRowStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index userInRowStride() const { return m_in_row_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userPlaneStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index userPlaneStride() const { return m_plane_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userRowStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorImagePatch.h	/^  Index userRowStride() const { return m_row_strides; }$/;"	f	struct:Eigen::TensorEvaluator
userRowStride	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorVolumePatch.h	/^  Index userRowStride() const { return m_row_strides; }$/;"	f	struct:Eigen::TensorEvaluator
user_time	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^   double user_time() { return elapsed(); }$/;"	f	class:Portable_Timer
user_time	tools/eigen/bench/btl/generic_bench/timers/portable_timer.hh	/^  double user_time()$/;"	f	class:Portable_Timer
users	tools/eigen/Eigen/src/Core/products/Parallelizer.h	/^  int volatile users;$/;"	m	struct:Eigen::internal::GemmParallelInfo
usub	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector usub; \/\/ row indices of U columns in ucol$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
v	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  __m256  v;$/;"	m	struct:Eigen::internal::Packet4cf
v	tools/eigen/Eigen/src/Core/arch/AVX/Complex.h	/^  __m256d  v;$/;"	m	struct:Eigen::internal::Packet2cd
v	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  Packet2d v;$/;"	m	struct:Eigen::internal::Packet1cd
v	tools/eigen/Eigen/src/Core/arch/AltiVec/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  Packet2d v;$/;"	m	struct:Eigen::internal::Packet1cd
v	tools/eigen/Eigen/src/Core/arch/NEON/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  __m128  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	tools/eigen/Eigen/src/Core/arch/SSE/Complex.h	/^  __m128d  v;$/;"	m	struct:Eigen::internal::Packet1cd
v	tools/eigen/doc/snippets/ComplexEigenSolver_compute.cpp	/^VectorXcf v = ces.eigenvectors().col(0);$/;"	v
v	tools/eigen/doc/snippets/Cwise_arg.cpp	/^ArrayXcf v = ArrayXcf::Random(3);$/;"	v
v	tools/eigen/doc/snippets/Cwise_atan.cpp	/^ArrayXd v = ArrayXd::LinSpaced(5,0,1);$/;"	v
v	tools/eigen/doc/snippets/Cwise_ceil.cpp	/^ArrayXd v = ArrayXd::LinSpaced(7,-2,2);$/;"	v
v	tools/eigen/doc/snippets/Cwise_cosh.cpp	/^ArrayXd v = ArrayXd::LinSpaced(5,0,1);$/;"	v
v	tools/eigen/doc/snippets/Cwise_floor.cpp	/^ArrayXd v = ArrayXd::LinSpaced(7,-2,2);$/;"	v
v	tools/eigen/doc/snippets/Cwise_round.cpp	/^ArrayXd v = ArrayXd::LinSpaced(7,-2,2);$/;"	v
v	tools/eigen/doc/snippets/Cwise_sinh.cpp	/^ArrayXd v = ArrayXd::LinSpaced(5,0,1);$/;"	v
v	tools/eigen/doc/snippets/Cwise_tanh.cpp	/^ArrayXd v = ArrayXd::LinSpaced(5,0,1);$/;"	v
v	tools/eigen/doc/snippets/DenseBase_setLinSpaced.cpp	/^VectorXf v;$/;"	v
v	tools/eigen/doc/snippets/DirectionWise_replicate_int.cpp	/^Vector3i v = Vector3i::Random();$/;"	v
v	tools/eigen/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp	/^VectorXcd v = es.eigenvectors().col(0);$/;"	v
v	tools/eigen/doc/snippets/HouseholderSequence_HouseholderSequence.cpp	/^Matrix3d v = Matrix3d::Random();$/;"	v
v	tools/eigen/doc/snippets/Jacobi_makeGivens.cpp	/^Vector2f v = Vector2f::Random();$/;"	v
v	tools/eigen/doc/snippets/Map_placement_new.cpp	/^cout << "Now v is: " << v << "\\n";/;"	v
v	tools/eigen/doc/snippets/Map_placement_new.cpp	/^cout << "The mapped vector v is: " << v << "\\n";$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_end_int.cpp	/^RowVector4i v = RowVector4i::Random();$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_hnormalized.cpp	/^Vector4d v = Vector4d::Random();$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_homogeneous.cpp	/^Vector3d v = Vector3d::Random(), w;$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_replicate_int_int.cpp	/^Vector3i v = Vector3i::Random();$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_segment_int_int.cpp	/^RowVector4i v = RowVector4i::Random();$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_start_int.cpp	/^RowVector4i v = RowVector4i::Random();$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_template_int_end.cpp	/^RowVector4i v = RowVector4i::Random();$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_template_int_segment.cpp	/^RowVector4i v = RowVector4i::Random();$/;"	v
v	tools/eigen/doc/snippets/MatrixBase_template_int_start.cpp	/^RowVector4i v = RowVector4i::Random();$/;"	v
v	tools/eigen/doc/snippets/Matrix_setConstant_int.cpp	/^VectorXf v;$/;"	v
v	tools/eigen/doc/snippets/Matrix_setOnes_int.cpp	/^VectorXf v;$/;"	v
v	tools/eigen/doc/snippets/Matrix_setRandom_int.cpp	/^VectorXf v;$/;"	v
v	tools/eigen/doc/snippets/Matrix_setZero_int.cpp	/^VectorXf v;$/;"	v
v	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp	/^VectorXd v = es.eigenvectors().col(0);$/;"	v
v	tools/eigen/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp	/^VectorXd v = es.eigenvectors().col(0);$/;"	v
v	tools/eigen/doc/snippets/tut_arithmetic_redux_minmax.cpp	/^  RowVector4i v = RowVector4i::Random();$/;"	v
v	tools/eigen/test/exceptions.cpp	/^    float* v;$/;"	m	class:ScalarWithExceptions	file:
v1	tools/eigen/doc/snippets/MatrixBase_set.cpp	/^      v1, m1.block(1,1,2,2);$/;"	v
v1	tools/eigen/doc/snippets/MatrixBase_set.cpp	/^Vector2i v1;$/;"	v
vaccum_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  typename Self::PacketReturnType vaccum_;$/;"	m	class:Eigen::internal::BlockReducer
val	problem.hh	/^typedef double val;$/;"	t
validate	Top-scalable.cc	/^Result Top::validate(const Relation& r) {$/;"	f	class:Top
value	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Scalar value() const          { return m_iter.value(); }$/;"	f	class:Eigen::InnerIterator
value	tools/eigen/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::inner_iterator_selector
value	tools/eigen/Eigen/src/Core/DenseBase.h	/^    CoeffReturnType value() const$/;"	f	class:Eigen::DenseBase
value	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^         value = is_large  ? Large$/;"	e	enum:Eigen::internal::product_size_category::__anon589
value	tools/eigen/Eigen/src/Core/GeneralProduct.h	/^    value = selector::ret,$/;"	e	enum:Eigen::internal::product_type::__anon592
value	tools/eigen/Eigen/src/Core/MathFunctions.h	/^         value = (upper <= lower + 1) ? int(meta_floor_log2_terminate)$/;"	e	enum:Eigen::internal::meta_floor_log2_selector::__anon303
value	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  enum { value = (n >= ((unsigned int)(1) << (lower+1))) ? lower+1 : lower };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon306
value	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  enum { value = meta_floor_log2<n, lower, meta_floor_log2_selector<n, lower, upper>::middle>::value };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon304
value	tools/eigen/Eigen/src/Core/MathFunctions.h	/^  enum { value = meta_floor_log2<n, meta_floor_log2_selector<n, lower, upper>::middle, upper>::value };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon305
value	tools/eigen/Eigen/src/Core/VectorwiseOp.h	/^  { enum { value = (Size-1) * functor_traits<BinaryOp>::Cost }; };$/;"	e	enum:Eigen::internal::member_redux::Cost::__anon578
value	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon363
value	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256d> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon365
value	tools/eigen/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256i> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon364
value	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<double2> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon315
value	tools/eigen/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<float4>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon314
value	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon338
value	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon340
value	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon339
value	tools/eigen/Eigen/src/Core/util/ForwardDeclarations.h	/^         value = has_direct_access ? (has_write_access ? DirectWriteAccessors : DirectAccessors)$/;"	e	enum:Eigen::internal::accessors_level::__anon491
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^  enum { value = is_convertible_impl<typename remove_all<From>::type,$/;"	e	enum:Eigen::internal::is_convertible::__anon546
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(test(ms_from, 0))==sizeof(yes) };$/;"	e	enum:Eigen::internal::is_convertible_impl::__anon545
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::false_type::__anon526
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	e	enum:Eigen::internal::true_type::__anon525
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_const::__anon543
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_const::__anon544
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon533
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon534
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon531
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon530
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon532
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon535
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon539
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon541
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon537
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon536
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon540
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon542
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon538
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_same::__anon527
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon529
value	tools/eigen/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_same::__anon528
value	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { value = 0 };$/;"	e	enum:Eigen::internal::promote_index_type::compute_default_alignment_helper::__anon559
value	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { value = AlignmentBytes };$/;"	e	enum:Eigen::internal::promote_index_type::compute_default_alignment_helper::__anon560
value	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { value = EIGEN_MAX_ALIGN_BYTES };$/;"	e	enum:Eigen::internal::promote_index_type::compute_default_alignment::__anon563
value	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { value = compute_default_alignment_helper<ArrayBytes, AlignmentBytes\/2>::value };$/;"	e	enum:Eigen::internal::promote_index_type::compute_default_alignment_helper::__anon561
value	tools/eigen/Eigen/src/Core/util/XprHelper.h	/^  enum { value = compute_default_alignment_helper<Size*sizeof(T),EIGEN_MAX_STATIC_ALIGN_BYTES>::value };$/;"	e	enum:Eigen::internal::promote_index_type::compute_default_alignment::__anon562
value	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^      Scalar value;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
value	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar value() const { return m_cachedValue; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
value	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& value(Index i) { return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    inline const Scalar& value(Index i) const { return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^  inline Scalar value() const { return m_value; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar& value() const { return m_values[m_id-1]; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar& value() const { return m_values[m_id]; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_functor(m_lhsIter.value(), m_rhsIter.value()); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_value; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return LhsIterator::value() * m_factor; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_coeff * SparseXprInnerIterator::value(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Scalar value() const { return m_sparseIter.value() * m_diagCoeffNested.coeff(index()); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^      inline Scalar value() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Scalar value() const$/;"	f	class:Eigen::TriangularViewImpl::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseUtil.h	/^  const Scalar& value() const { return m_value; }$/;"	f	class:Eigen::Triplet
value	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar value() const { return m_data.value(m_id); }$/;"	f	class:Eigen::SparseVector::InnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar value() const { return m_data.value(m_id-1); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
value	tools/eigen/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Scalar value() const { return m_matrix.valuePtr()[m_idval]; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
value	tools/eigen/bench/BenchTimer.h	/^  inline double value(int TIMER = CPU_TIMER) const$/;"	f	class:Eigen::BenchTimer
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^  constexpr static bool value = true;$/;"	m	struct:Eigen::internal::contained_in_list
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^  constexpr static bool value = true;$/;"	m	struct:Eigen::internal::contained_in_list_gf
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list<test, check_against, type_list<EIGEN_TPL_PP_SPEC_HACK_USE(empty)>, false> { constexpr static bool value = false; };$/;"	m	struct:Eigen::internal::contained_in_list
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^struct contained_in_list_gf<test, check_against, type_list<EIGEN_TPL_PP_SPEC_HACK_USE(empty)>, default_flags, false, last_check_flags> { constexpr static bool value = false; constexpr static int global_flags = default_flags; };$/;"	m	struct:Eigen::internal::contained_in_list_gf
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Meta.h	/^template<typename T, T a, T... as>                               struct get<0, numeric_list<T, a, as...>>   { constexpr static int value = a; };$/;"	m	struct:Eigen::internal::get
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/CXX11Workarounds.h	/^  static const size_t value = N;$/;"	m	struct:Eigen::internal::array_size
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const T value = n;$/;"	m	struct:Eigen::internal::type2val
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const char value = '\\0';$/;"	m	struct:Eigen::internal::get
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const int value = 1;$/;"	m	struct:Eigen::internal::arg_prod
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const size_t value = N;$/;"	m	struct:Eigen::internal::array_size
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const type value = Head::value;$/;"	m	struct:Eigen::internal::get
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const type value = get<i-1, Tail>::value;$/;"	m	struct:Eigen::internal::get
value	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  static const typename NList::HeadType::type value = get<0, NList>::value * arg_prod<typename NList::TailType>::value;$/;"	m	struct:Eigen::internal::arg_prod
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensionList.h	/^  static const size_t value = Rank;$/;"	m	struct:Eigen::internal::array_size
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static const size_t value = NumDims;$/;"	m	struct:Eigen::internal::array_size
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static const size_t value = Sizes<V1,V2,V3,V4,V5>::count;$/;"	m	struct:Eigen::internal::array_size
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^  static const std::size_t value = get<n, Dimension>::value;$/;"	m	struct:Eigen::internal::dget
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDimensions.h	/^static const std::ptrdiff_t value = Sizes<Indices...>::count;$/;"	m	struct:Eigen::internal::array_size
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h	/^  static const bool value = TensorEvaluator<Expression, Device>::PacketAccess;$/;"	m	struct:Eigen::internal::IsVectorizable
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h	/^  static const bool value = TensorEvaluator<Expression, GpuDevice>::PacketAccess &&$/;"	m	struct:Eigen::internal::IsVectorizable
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static const DenseIndex value = n;$/;"	m	struct:Eigen::type2index
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static const size_t value = std::tuple_size<std::tuple<FirstType, OtherTypes...> >::value;$/;"	m	struct:Eigen::internal::array_size
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr bool value = false;$/;"	m	struct:Eigen::internal::is_compile_time_constant
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr bool value = true;$/;"	m	struct:Eigen::internal::is_compile_time_constant
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool value = false;$/;"	m	struct:Eigen::internal::are_inner_most_dims
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool value = false;$/;"	m	struct:Eigen::internal::preserve_inner_most_dims
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool value = tmp1 & tmp2 & tmp3;$/;"	m	struct:Eigen::internal::are_inner_most_dims
value	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h	/^  static const bool value = tmp1 & tmp2;$/;"	m	struct:Eigen::internal::preserve_inner_most_dims
value	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/StaticSymmetry.h	/^    constexpr static bool value = is_same<iia, iib>::value;$/;"	m	struct:Eigen::internal::tensor_static_symgroup_equality
value	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t value = (maxOneTwoPlusOne > Three) ? maxOneTwoPlusOne : Three;$/;"	m	struct:Eigen::internal::tensor_symmetry_num_indices
value	tools/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/Symmetry.h	/^  constexpr static std::size_t value = 1;$/;"	m	struct:Eigen::internal::tensor_symmetry_num_indices
value	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline Scalar& value() { return m_value; }$/;"	f	class:Eigen::AutoDiffScalar
value	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline const Scalar& value() const { return m_value; }$/;"	f	class:Eigen::AutoDiffScalar
value	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  static const int value = 3;$/;"	m	struct:Eigen::internal::matrix_log_min_pade_degree
value	tools/eigen/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  static const int value = std::numeric_limits<RealScalar>::digits<= 24?  5:  \/\/ single precision$/;"	m	struct:Eigen::internal::matrix_log_max_pade_degree
value	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar value() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
value	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar value() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
value	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline const Map<const BlockScalar> value() const$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
value	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline const Scalar& value() const$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
value	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      Scalar value;$/;"	m	struct:Eigen::RandomSetter::ScalarWrapper
value	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_a, dummy_a>     { constexpr static bool value = true;  constexpr static int global_flags = 1; };$/;"	m	struct:dummy_test	file:
value	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_b, dummy_b>     { constexpr static bool value = true;  constexpr static int global_flags = 2; };$/;"	m	struct:dummy_test	file:
value	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<> struct dummy_test<dummy_c, dummy_c>     { constexpr static bool value = true;  constexpr static int global_flags = 4; };$/;"	m	struct:dummy_test	file:
value	tools/eigen/unsupported/test/cxx11_meta.cpp	/^template<typename A, typename B> struct dummy_test { constexpr static bool value = false; constexpr static int global_flags = 0; };$/;"	m	struct:dummy_test	file:
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar* valuePtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar* valuePtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar* valuePtr() { return derived().valuePtr(); }$/;"	f	class:Eigen::SparseCompressedBase
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar* valuePtr() const { return derived().valuePtr(); }$/;"	f	class:Eigen::SparseCompressedBase
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar* valuePtr()       { return Base::m_values; }$/;"	f	class:Eigen::SparseMapBase
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline const Scalar* valuePtr() const { return m_values; }$/;"	f	class:Eigen::SparseMapBase
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar* valuePtr() { return &m_data.value(0); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar* valuePtr() const { return &m_data.value(0); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline Scalar* valuePtr() { return derived().nestedExpression().valuePtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseTranspose.h	/^    inline const Scalar* valuePtr() const { return derived().nestedExpression().valuePtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Scalar* valuePtr() { return &m_data.value(0); }$/;"	f	class:Eigen::SparseVector
valuePtr	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const Scalar* valuePtr() const { return &m_data.value(0); }$/;"	f	class:Eigen::SparseVector
valuePtr	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Scalar* valuePtr() {  return m_nzval; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
valuePtr	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Scalar* valuePtr() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
valuePtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* valuePtr() {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
valuePtr	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* valuePtr() {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
valuePtr	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline BlockScalarReturnType *valuePtr() {return static_cast<BlockScalarReturnType *>(m_values);}$/;"	f	class:Eigen::BlockSparseMatrix
valueRef	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id-1]); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
valueRef	tools/eigen/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id]); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
valueRef	tools/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Scalar& valueRef() { return m_functor(Base::valueRef()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
valueRef	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_data.value(m_id)); }$/;"	f	class:Eigen::SparseVector::InnerIterator
valueRef	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_data.value(m_id-1)); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
valueRef	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_matrix.valuePtr()[m_idval]); }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
valueRef	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& valueRef() {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
valueRef	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& valueRef() {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
valueRef	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Map<BlockScalar> valueRef()$/;"	f	class:Eigen::BlockSparseMatrix::BlockInnerIterator
valueRef	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    inline Scalar& valueRef()$/;"	f	class:Eigen::BlockSparseMatrix::InnerIterator
value_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool value_known_statically(const DenseIndex i) const {$/;"	f	struct:Eigen::IndexList
value_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr bool value_known_statically(const DenseIndex i, const std::tuple<T...>& t) {$/;"	f	struct:Eigen::internal::tuple_coeff
value_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr bool value_known_statically(const DenseIndex i, const std::tuple<T...>&) {$/;"	f	struct:Eigen::internal::tuple_coeff
value_type	tools/eigen/Eigen/src/Core/DenseBase.h	/^    typedef Scalar value_type;$/;"	t	class:Eigen::DenseBase
value_type	tools/eigen/Eigen/src/Core/util/Memory.h	/^  typedef T               value_type;$/;"	t	class:Eigen::aligned_allocator
value_type	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^        typedef StorageIndex value_type;$/;"	t	class:Eigen::SparseMatrix::SingletonVector
value_type	tools/eigen/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Scalar value_type;$/;"	t	class:Eigen::SparseMatrixBase
value_type	tools/eigen/Eigen/src/StlSupport/details.h	/^    typedef T         value_type;$/;"	t	class:Eigen::aligned_allocator_indirection
values	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void *values;$/;"	m	struct:Eigen::SluMatrix::__anon152
values	tools/eigen/unsupported/Eigen/CXX11/src/Core/util/EmulateCXX11Meta.h	/^  T values[n];$/;"	m	class:Eigen::array
values	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline ValueType& values() { return m_values; }$/;"	f	class:Eigen::AutoDiffVector
values	tools/eigen/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline const ValueType& values() const { return m_values; }$/;"	f	class:Eigen::AutoDiffVector
values	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  int values() const { return m_values; }$/;"	f	struct:Eigen::DenseFunctor
values	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^  int values() const { return m_values; }$/;"	f	struct:Eigen::SparseFunctor
values	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^  int values() const { return m_values; }$/;"	f	struct:Functor
values	tools/eigen/unsupported/test/NumericalDiff.cpp	/^  int values() const { return m_values; }$/;"	f	struct:Functor
values	tools/eigen/unsupported/test/autodiff.cpp	/^  int values() const { return m_values; }$/;"	f	struct:TestFunc1
values	tools/eigen/unsupported/test/forward_adolc.cpp	/^  int values() const { return m_values; }$/;"	f	struct:TestFunc1
values_statically_known_to_increase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  constexpr bool values_statically_known_to_increase() const {$/;"	f	struct:Eigen::IndexList
values_up_to_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr bool values_up_to_known_statically(const std::tuple<T...>& t) {$/;"	f	struct:Eigen::internal::tuple_coeff
values_up_to_known_statically	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr bool values_up_to_known_statically(const std::tuple<T...>&) {$/;"	f	struct:Eigen::internal::tuple_coeff
values_up_to_statically_known_to_increase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr bool values_up_to_statically_known_to_increase(const std::tuple<T...>& t) {$/;"	f	struct:Eigen::internal::tuple_coeff
values_up_to_statically_known_to_increase	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorIndexList.h	/^  static constexpr bool values_up_to_statically_known_to_increase(const std::tuple<T...>&) {$/;"	f	struct:Eigen::internal::tuple_coeff
vdata	tools/eigen/demos/opengl/icosphere.cpp	/^static GLfloat vdata[12][3] = {$/;"	v	file:
vec	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline VectorBlock<Coefficients,3> vec() { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline const VectorBlock<const Coefficients,3> vec() const { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec1	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Join.cpp	/^joined << vec1, vec2;$/;"	v
vec2	tools/eigen/doc/snippets/Tutorial_AdvancedInitialization_Join.cpp	/^joined << vec1, vec2;$/;"	v
vec2d_swizzle1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	70;"	d
vec4f_swizzle1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	64;"	d
vec4f_swizzle2	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	73;"	d
vec4i_swizzle1	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	67;"	d
vec4i_swizzle2	tools/eigen/Eigen/src/Core/arch/SSE/PacketMath.h	76;"	d
vec_splat_dbl	tools/eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static EIGEN_STRONG_INLINE Packet2d vec_splat_dbl(Packet2d& a, int index)$/;"	f	namespace:Eigen::internal
vector	tools/eigen/Eigen/src/Geometry/Translation.h	/^  VectorType& vector() { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	tools/eigen/Eigen/src/Geometry/Translation.h	/^  const VectorType& vector() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	tools/eigen/Eigen/src/StlSupport/StdVector.h	/^  class vector<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
vectorD	tools/eigen/Eigen/src/Cholesky/LDLT.h	/^    inline Diagonal<const MatrixType> vectorD() const$/;"	f	class:Eigen::LDLT
vectorD	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialCholesky
vectorD	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialLDLT
vectorRedux	tools/eigen/test/redux.cpp	/^template<typename VectorType> void vectorRedux(const VectorType& w)$/;"	f
vectorVisitor	tools/eigen/test/visitor.cpp	/^template<typename VectorType> void vectorVisitor(const VectorType& w)$/;"	f
vector_base	tools/eigen/Eigen/src/StlSupport/StdVector.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > vector_base;$/;"	t	class:std::vector
vector_from_stl	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:c_interface_base
vector_from_stl	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:STL_interface
vector_from_stl	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:blaze_interface
vector_from_stl	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:blitz_interface
vector_from_stl	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:tiny_blitz_interface
vector_from_stl	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static BTL_DONT_INLINE  void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:eigen2_interface
vector_from_stl	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static BTL_DONT_INLINE  void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:eigen3_interface
vector_from_stl	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:gmm_interface
vector_from_stl	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:mtl4_interface
vector_from_stl	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static BTL_DONT_INLINE  void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:tensor_interface
vector_from_stl	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:tvmet_interface
vector_from_stl	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void vector_from_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:ublas_interface
vector_int_pair	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^  vector_int_pair(const VectorType &v, int i) : first(v), second(i) {}$/;"	f	struct:Eigen::internal::vector_int_pair
vector_int_pair	tools/eigen/unsupported/Eigen/src/BVH/KdBVH.h	/^struct vector_int_pair$/;"	s	namespace:Eigen::internal
vector_to_stl	tools/eigen/bench/btl/libs/BLAS/c_interface_base.h	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:c_interface_base
vector_to_stl	tools/eigen/bench/btl/libs/STL/STL_interface.hh	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:STL_interface
vector_to_stl	tools/eigen/bench/btl/libs/blaze/blaze_interface.hh	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:blaze_interface
vector_to_stl	tools/eigen/bench/btl/libs/blitz/blitz_interface.hh	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:blitz_interface
vector_to_stl	tools/eigen/bench/btl/libs/blitz/tiny_blitz_interface.hh	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:tiny_blitz_interface
vector_to_stl	tools/eigen/bench/btl/libs/eigen2/eigen2_interface.hh	/^  static BTL_DONT_INLINE  void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:eigen2_interface
vector_to_stl	tools/eigen/bench/btl/libs/eigen3/eigen3_interface.hh	/^  static BTL_DONT_INLINE  void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:eigen3_interface
vector_to_stl	tools/eigen/bench/btl/libs/gmm/gmm_interface.hh	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:gmm_interface
vector_to_stl	tools/eigen/bench/btl/libs/mtl4/mtl4_interface.hh	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:mtl4_interface
vector_to_stl	tools/eigen/bench/btl/libs/tensors/tensor_interface.hh	/^  static BTL_DONT_INLINE  void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:tensor_interface
vector_to_stl	tools/eigen/bench/btl/libs/tvmet/tvmet_interface.hh	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:tvmet_interface
vector_to_stl	tools/eigen/bench/btl/libs/ublas/ublas_interface.hh	/^  static inline void vector_to_stl(gene_vector & B, stl_vector & B_stl){$/;"	f	class:ublas_interface
vectorization_logic	tools/eigen/test/vectorization_logic.cpp	/^struct vectorization_logic$/;"	s	file:
vectorization_logic	tools/eigen/test/vectorization_logic.cpp	/^template<typename Scalar> struct vectorization_logic<Scalar,false>$/;"	s	file:
vectorization_logic_half	tools/eigen/test/vectorization_logic.cpp	/^struct vectorization_logic_half$/;"	s	file:
vectorization_logic_half	tools/eigen/test/vectorization_logic.cpp	/^template<typename Scalar> struct vectorization_logic_half<Scalar,false>$/;"	s	file:
vectorwise_reverse_inplace_impl	tools/eigen/Eigen/src/Core/Reverse.h	/^struct vectorwise_reverse_inplace_impl<Horizontal>$/;"	s	namespace:Eigen::internal
vectorwise_reverse_inplace_impl	tools/eigen/Eigen/src/Core/Reverse.h	/^struct vectorwise_reverse_inplace_impl<Vertical>$/;"	s	namespace:Eigen::internal
vectorwiseop_array	tools/eigen/test/vectorwiseop.cpp	/^template<typename ArrayType> void vectorwiseop_array(const ArrayType& m)$/;"	f
vectorwiseop_matrix	tools/eigen/test/vectorwiseop.cpp	/^template<typename MatrixType> void vectorwiseop_matrix(const MatrixType& m)$/;"	f
verifyIsApprox	tools/eigen/test/main.h	/^inline bool verifyIsApprox(const Type1& a, const Type2& b)$/;"	f	namespace:Eigen
verifyIsQuasiTriangular	tools/eigen/test/schur_real.cpp	/^template<typename MatrixType> void verifyIsQuasiTriangular(const MatrixType& T)$/;"	f
verifySizeOf	tools/eigen/test/sizeof.cpp	/^template<typename MatrixType> void verifySizeOf(const MatrixType&)$/;"	f
verify_euler	tools/eigen/test/geo_eulerangles.cpp	/^void verify_euler(const Matrix<Scalar,3,1>& ea, int i, int j, int k)$/;"	f
verify_impl	tools/eigen/test/main.h	/^inline void verify_impl(bool condition, const char *testname, const char *file, int line, const char *condition_as_string)$/;"	f
verify_is_approx_upto_permutation	tools/eigen/test/eigensolver_complex.cpp	/^void verify_is_approx_upto_permutation(const VectorType& vec1, const VectorType& vec2)$/;"	f
vertices	tools/eigen/demos/opengl/icosphere.h	/^    const std::vector<Eigen::Vector3f>& vertices() const { return mVertices; }$/;"	f	class:IcoSphere
view	tools/eigen/bench/btl/data/gnuplot_common_settings.hh	/^set view 60, 30, 1, 1$/;"	v
viewAsCholmod	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_dense viewAsCholmod(MatrixBase<Derived>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(SparseMatrix<_Scalar,_Options,_StorageIndex>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(const SparseSelfAdjointView<const SparseMatrix<_Scalar,_Options,_Index>, UpLo>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^const cholmod_sparse viewAsCholmod(const SparseMatrix<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsEigen	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^MappedSparseMatrix<Scalar,Flags,StorageIndex> viewAsEigen(cholmod_sparse& cm)$/;"	f	namespace:Eigen
viewMatrix	tools/eigen/demos/opengl/camera.cpp	/^const Affine3f& Camera::viewMatrix(void) const$/;"	f	class:Camera
visit	tools/eigen/Eigen/src/Core/Visitor.h	/^void DenseBase<Derived>::visit(Visitor& visitor) const$/;"	f	class:Eigen::DenseBase
visitor_evaluator	tools/eigen/Eigen/src/Core/Visitor.h	/^  explicit visitor_evaluator(const XprType &xpr) : m_evaluator(xpr), m_xpr(xpr) {}$/;"	f	class:Eigen::internal::visitor_evaluator
visitor_evaluator	tools/eigen/Eigen/src/Core/Visitor.h	/^class visitor_evaluator$/;"	c	namespace:Eigen::internal
visitor_impl	tools/eigen/Eigen/src/Core/Visitor.h	/^struct visitor_impl$/;"	s	namespace:Eigen::internal
visitor_impl	tools/eigen/Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, 1>$/;"	s	namespace:Eigen::internal
visitor_impl	tools/eigen/Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, Dynamic>$/;"	s	namespace:Eigen::internal
vld1_dup_f32	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x2_t vld1_dup_f32 (const float* x) { return ::vld1_dup_f32 ((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vld1_f32	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x2_t vld1_f32 (const float* x) { return ::vld1_f32 ((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vld1q_f32	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x4_t vld1q_f32(const float* x) { return ::vld1q_f32((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vml_assign_traits	tools/eigen/Eigen/src/Core/Assign_MKL.h	/^class vml_assign_traits$/;"	c	namespace:Eigen::internal
volume	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  inline Scalar volume() const$/;"	f	class:Eigen::AlignedBox
vpHeight	tools/eigen/demos/opengl/camera.h	/^    inline uint vpHeight(void) const { return mVpHeight; }$/;"	f	class:Camera
vpWidth	tools/eigen/demos/opengl/camera.h	/^    inline uint vpWidth(void) const { return mVpWidth; }$/;"	f	class:Camera
vpX	tools/eigen/demos/opengl/camera.h	/^    inline uint vpX(void) const { return mVpX; }$/;"	f	class:Camera
vpY	tools/eigen/demos/opengl/camera.h	/^    inline uint vpY(void) const { return mVpY; }$/;"	f	class:Camera
vreinterpretq_f64_u64	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^vreinterpretq_f64_u64 (uint64x2_t __a)$/;"	f	namespace:Eigen::internal
vreinterpretq_u64_f64	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^vreinterpretq_u64_f64 (float64x2_t __a)$/;"	f	namespace:Eigen::internal
vst1_f32	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1_f32 (float* to, float32x2_t from) { ::vst1_f32 ((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
vst1q_f32	tools/eigen/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1q_f32(float* to, float32x4_t from) { ::vst1q_f32((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
w	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    w() const { return (*this)[3]; }$/;"	f	class:Eigen::DenseCoeffsBase
w	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    w() { return (*this)[3]; }$/;"	f	class:Eigen::DenseCoeffsBase
w	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar w() const { return this->derived().coeffs().coeff(3); }$/;"	f	class:Eigen::QuaternionBase
w	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& w() { return this->derived().coeffs().coeffRef(3); }$/;"	f	class:Eigen::QuaternionBase
w	tools/eigen/doc/snippets/MatrixBase_homogeneous.cpp	/^Vector3d v = Vector3d::Random(), w;$/;"	v
w	tools/eigen/doc/snippets/Matrix_resize_int.cpp	/^RowVector3d w;$/;"	v
wa1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::HybridNonLinearSolver
wa1	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::LevenbergMarquardt
wa2	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::HybridNonLinearSolver
wa2	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::LevenbergMarquardt
wa3	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::HybridNonLinearSolver
wa3	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::LevenbergMarquardt
wa4	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::HybridNonLinearSolver
wa4	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::LevenbergMarquardt
wait_until_ready	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^static EIGEN_STRONG_INLINE void wait_until_ready(Notification* n) {$/;"	f	namespace:Eigen
waiters_	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  std::vector<Waiter*> waiters_;                    \/\/ Stack of waiting threads.$/;"	m	class:Eigen::ThreadPool
weighted_mean	tools/eigen/bench/btl/data/smooth.cxx	/^double weighted_mean(const VECTOR & data)$/;"	f
why	tools/eigen/unsupported/test/mpreal/mpreal.h	/^    std::string why() { return "inexact conversion from floating point"; }$/;"	f	class:mpfr::conversion_overflow
widget	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    MandelbrotWidget *widget;$/;"	m	class:MandelbrotThread
work	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^    std::function<void()> work;$/;"	m	struct:Eigen::ThreadPool::Waiter
work	tools/eigen/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void work( int stage,Complex * xout, const _Src * xin, size_t fstride,size_t in_stride)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
workaround_msvc_stl_support	tools/eigen/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support() : T() {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	tools/eigen/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support(const T& other) : T(other) {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	tools/eigen/Eigen/src/StlSupport/details.h	/^  template<typename T> struct workaround_msvc_stl_support : public T$/;"	s	namespace:Eigen::internal
worst	tools/eigen/bench/BenchTimer.h	/^  inline double worst(int TIMER = CPU_TIMER) const$/;"	f	class:Eigen::BenchTimer
writePacket	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::ArrayWrapper
writePacket	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::MatrixWrapper
writePacket	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::ArrayWrapper
writePacket	tools/eigen/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::MatrixWrapper
writePacket	tools/eigen/Eigen/src/Core/Block.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::internal::BlockImpl_dense
writePacket	tools/eigen/Eigen/src/Core/Block.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::internal::BlockImpl_dense
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x) $/;"	f	struct:Eigen::internal::mapbase_evaluator
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x) $/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x) $/;"	f	struct:Eigen::internal::mapbase_evaluator
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x) $/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
writePacket	tools/eigen/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	tools/eigen/Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::MapBase
writePacket	tools/eigen/Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& val)$/;"	f	class:Eigen::MapBase
writePacket	tools/eigen/Eigen/src/Core/NestByValue.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	tools/eigen/Eigen/src/Core/NestByValue.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::PlainObjectBase
writePacket	tools/eigen/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::PlainObjectBase
writePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorChipping.h	/^  void writePacket(Index index, const PacketReturnType& x)$/;"	f	struct:Eigen::TensorEvaluator
writePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorConcatenation.h	/^  void writePacket(Index index, const PacketReturnType& x)$/;"	f	struct:Eigen::TensorEvaluator
writePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvaluator.h	/^  void writePacket(Index index, const Packet& x)$/;"	f	struct:Eigen::TensorEvaluator
writePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorLayoutSwap.h	/^  void writePacket(Index index, const PacketReturnType& x)$/;"	f	struct:Eigen::TensorEvaluator
writePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h	/^  void writePacket(Index index, const PacketReturnType& x)$/;"	f	struct:Eigen::TensorEvaluator
writePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReverse.h	/^  void writePacket(Index index, const PacketReturnType& x) {$/;"	f	struct:Eigen::TensorEvaluator
writePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorShuffling.h	/^  void writePacket(Index index, const PacketReturnType& x)$/;"	f	struct:Eigen::TensorEvaluator
writePacket	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStriding.h	/^  void writePacket(Index index, const PacketReturnType& x)$/;"	f	struct:Eigen::TensorEvaluator
writeRegToShmem	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	236;"	d
writeRegToShmem	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	292;"	d
writeResultShmem	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	437;"	d
writeResultShmem	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	460;"	d
writeRow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	440;"	d
writeRow	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionCuda.h	461;"	d
write_xy_file	tools/eigen/bench/btl/data/smooth.cxx	/^void write_xy_file(const string & filename, vector<int> & tab_sizes, vector<double> & tab_mflops){$/;"	f
x	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    x() const { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    x() { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar x() const { return this->derived().coeffs().coeff(0); }$/;"	f	class:Eigen::QuaternionBase
x	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& x() { return this->derived().coeffs().coeffRef(0); }$/;"	f	class:Eigen::QuaternionBase
x	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Scalar x() const { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Scalar& x() { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	tools/eigen/doc/snippets/ColPivHouseholderQR_solve.cpp	/^Matrix3f x;$/;"	v
x	tools/eigen/doc/snippets/FullPivHouseholderQR_solve.cpp	/^Matrix3f x;$/;"	v
x	tools/eigen/doc/snippets/FullPivLU_solve.cpp	/^Matrix<float,3,2> x = m.fullPivLu().solve(y);$/;"	v
x	tools/eigen/doc/snippets/HouseholderQR_solve.cpp	/^Matrix3f x;$/;"	v
x	tools/eigen/doc/snippets/Tutorial_solve_matrix_inverse.cpp	/^Vector3f x = A.inverse() * b;$/;"	v
x	tools/eigen/doc/snippets/Tutorial_solve_reuse_decomposition.cpp	/^Vector3f x;$/;"	v
x	tools/eigen/doc/snippets/Tutorial_solve_singular.cpp	/^Vector3f x;$/;"	v
x	tools/eigen/doc/snippets/Tutorial_solve_triangular.cpp	/^Vector3f x = A.triangularView<Upper>().solve(b);$/;"	v
x	tools/eigen/test/first_aligned.cpp	/^struct some_non_vectorizable_type { float x; };$/;"	m	struct:some_non_vectorizable_type	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[14];$/;"	m	struct:misra1d_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[154];$/;"	m	struct:Bennett5_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[15];$/;"	m	struct:rat43_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[16];$/;"	m	struct:MGH10_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[24];$/;"	m	struct:lanczos1_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[33];$/;"	m	struct:MGH17_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[35];$/;"	m	struct:eckerle4_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[6];$/;"	m	struct:BoxBOD_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[9];$/;"	m	struct:rat42_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double Bennett5_functor::x[154] = { 7.447168E0, 8.102586E0, 8.452547E0, 8.711278E0, 8.916774E0, 9.087155E0, 9.232590E0, 9.359535E0, 9.472166E0, 9.573384E0, 9.665293E0, 9.749461E0, 9.827092E0, 9.899128E0, 9.966321E0, 10.029280E0, 10.088510E0, 10.144430E0, 10.197380E0, 10.247670E0, 10.295560E0, 10.341250E0, 10.384950E0, 10.426820E0, 10.467000E0, 10.505640E0, 10.542830E0, 10.578690E0, 10.613310E0, 10.646780E0, 10.679150E0, 10.710520E0, 10.740920E0, 10.770440E0, 10.799100E0, 10.826970E0, 10.854080E0, 10.880470E0, 10.906190E0, 10.931260E0, 10.955720E0, 10.979590E0, 11.002910E0, 11.025700E0, 11.047980E0, 11.069770E0, 11.091100E0, 11.111980E0, 11.132440E0, 11.152480E0, 11.172130E0, 11.191410E0, 11.210310E0, 11.228870E0, 11.247090E0, 11.264980E0, 11.282560E0, 11.299840E0, 11.316820E0, 11.333520E0, 11.349940E0, 11.366100E0, 11.382000E0, 11.397660E0, 11.413070E0, 11.428240E0, 11.443200E0, 11.457930E0, 11.472440E0, 11.486750E0, 11.500860E0, 11.514770E0, 11.528490E0, 11.542020E0, 11.555380E0, 11.568550E0,$/;"	m	class:Bennett5_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double BoxBOD_functor::x[6] = { 1., 2., 3., 5., 7., 10. };$/;"	m	class:BoxBOD_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double MGH10_functor::x[16] = { 5.000000E+01, 5.500000E+01, 6.000000E+01, 6.500000E+01, 7.000000E+01, 7.500000E+01, 8.000000E+01, 8.500000E+01, 9.000000E+01, 9.500000E+01, 1.000000E+02, 1.050000E+02, 1.100000E+02, 1.150000E+02, 1.200000E+02, 1.250000E+02 };$/;"	m	class:MGH10_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double MGH17_functor::x[33] = { 0.000000E+00, 1.000000E+01, 2.000000E+01, 3.000000E+01, 4.000000E+01, 5.000000E+01, 6.000000E+01, 7.000000E+01, 8.000000E+01, 9.000000E+01, 1.000000E+02, 1.100000E+02, 1.200000E+02, 1.300000E+02, 1.400000E+02, 1.500000E+02, 1.600000E+02, 1.700000E+02, 1.800000E+02, 1.900000E+02, 2.000000E+02, 2.100000E+02, 2.200000E+02, 2.300000E+02, 2.400000E+02, 2.500000E+02, 2.600000E+02, 2.700000E+02, 2.800000E+02, 2.900000E+02, 3.000000E+02, 3.100000E+02, 3.200000E+02 };$/;"	m	class:MGH17_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double eckerle4_functor::x[35] = { 400.0, 405.0, 410.0, 415.0, 420.0, 425.0, 430.0, 435.0, 436.5, 438.0, 439.5, 441.0, 442.5, 444.0, 445.5, 447.0, 448.5, 450.0, 451.5, 453.0, 454.5, 456.0, 457.5, 459.0, 460.5, 462.0, 463.5, 465.0, 470.0, 475.0, 480.0, 485.0, 490.0, 495.0, 500.0};$/;"	m	class:eckerle4_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double lanczos1_functor::x[24] = { 0.000000000000E+00, 5.000000000000E-02, 1.000000000000E-01, 1.500000000000E-01, 2.000000000000E-01, 2.500000000000E-01, 3.000000000000E-01, 3.500000000000E-01, 4.000000000000E-01, 4.500000000000E-01, 5.000000000000E-01, 5.500000000000E-01, 6.000000000000E-01, 6.500000000000E-01, 7.000000000000E-01, 7.500000000000E-01, 8.000000000000E-01, 8.500000000000E-01, 9.000000000000E-01, 9.500000000000E-01, 1.000000000000E+00, 1.050000000000E+00, 1.100000000000E+00, 1.150000000000E+00 };$/;"	m	class:lanczos1_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double misra1d_functor::x[14] = { 77.6E0, 114.9E0, 141.1E0, 190.8E0, 239.9E0, 289.0E0, 332.8E0, 378.4E0, 434.8E0, 477.3E0, 536.8E0, 593.1E0, 689.1E0, 760.0E0};$/;"	m	class:misra1d_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double rat42_functor::x[9] = { 9.000E0, 14.000E0, 21.000E0, 28.000E0, 42.000E0, 57.000E0, 63.000E0, 70.000E0, 79.000E0 };$/;"	m	class:rat42_functor	file:
x	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double rat43_functor::x[15] = { 1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15. };$/;"	m	class:rat43_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[14];$/;"	m	struct:misra1d_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[154];$/;"	m	struct:Bennett5_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[15];$/;"	m	struct:rat43_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[16];$/;"	m	struct:MGH10_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[24];$/;"	m	struct:lanczos1_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[33];$/;"	m	struct:MGH17_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[35];$/;"	m	struct:eckerle4_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[6];$/;"	m	struct:BoxBOD_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double x[9];$/;"	m	struct:rat42_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double Bennett5_functor::x[154] = { 7.447168E0, 8.102586E0, 8.452547E0, 8.711278E0, 8.916774E0, 9.087155E0, 9.232590E0, 9.359535E0, 9.472166E0, 9.573384E0, 9.665293E0, 9.749461E0, 9.827092E0, 9.899128E0, 9.966321E0, 10.029280E0, 10.088510E0, 10.144430E0, 10.197380E0, 10.247670E0, 10.295560E0, 10.341250E0, 10.384950E0, 10.426820E0, 10.467000E0, 10.505640E0, 10.542830E0, 10.578690E0, 10.613310E0, 10.646780E0, 10.679150E0, 10.710520E0, 10.740920E0, 10.770440E0, 10.799100E0, 10.826970E0, 10.854080E0, 10.880470E0, 10.906190E0, 10.931260E0, 10.955720E0, 10.979590E0, 11.002910E0, 11.025700E0, 11.047980E0, 11.069770E0, 11.091100E0, 11.111980E0, 11.132440E0, 11.152480E0, 11.172130E0, 11.191410E0, 11.210310E0, 11.228870E0, 11.247090E0, 11.264980E0, 11.282560E0, 11.299840E0, 11.316820E0, 11.333520E0, 11.349940E0, 11.366100E0, 11.382000E0, 11.397660E0, 11.413070E0, 11.428240E0, 11.443200E0, 11.457930E0, 11.472440E0, 11.486750E0, 11.500860E0, 11.514770E0, 11.528490E0, 11.542020E0, 11.555380E0, 11.568550E0,$/;"	m	class:Bennett5_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double BoxBOD_functor::x[6] = { 1., 2., 3., 5., 7., 10. };$/;"	m	class:BoxBOD_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double MGH10_functor::x[16] = { 5.000000E+01, 5.500000E+01, 6.000000E+01, 6.500000E+01, 7.000000E+01, 7.500000E+01, 8.000000E+01, 8.500000E+01, 9.000000E+01, 9.500000E+01, 1.000000E+02, 1.050000E+02, 1.100000E+02, 1.150000E+02, 1.200000E+02, 1.250000E+02 };$/;"	m	class:MGH10_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double MGH17_functor::x[33] = { 0.000000E+00, 1.000000E+01, 2.000000E+01, 3.000000E+01, 4.000000E+01, 5.000000E+01, 6.000000E+01, 7.000000E+01, 8.000000E+01, 9.000000E+01, 1.000000E+02, 1.100000E+02, 1.200000E+02, 1.300000E+02, 1.400000E+02, 1.500000E+02, 1.600000E+02, 1.700000E+02, 1.800000E+02, 1.900000E+02, 2.000000E+02, 2.100000E+02, 2.200000E+02, 2.300000E+02, 2.400000E+02, 2.500000E+02, 2.600000E+02, 2.700000E+02, 2.800000E+02, 2.900000E+02, 3.000000E+02, 3.100000E+02, 3.200000E+02 };$/;"	m	class:MGH17_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double eckerle4_functor::x[35] = { 400.0, 405.0, 410.0, 415.0, 420.0, 425.0, 430.0, 435.0, 436.5, 438.0, 439.5, 441.0, 442.5, 444.0, 445.5, 447.0, 448.5, 450.0, 451.5, 453.0, 454.5, 456.0, 457.5, 459.0, 460.5, 462.0, 463.5, 465.0, 470.0, 475.0, 480.0, 485.0, 490.0, 495.0, 500.0};$/;"	m	class:eckerle4_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double lanczos1_functor::x[24] = { 0.000000000000E+00, 5.000000000000E-02, 1.000000000000E-01, 1.500000000000E-01, 2.000000000000E-01, 2.500000000000E-01, 3.000000000000E-01, 3.500000000000E-01, 4.000000000000E-01, 4.500000000000E-01, 5.000000000000E-01, 5.500000000000E-01, 6.000000000000E-01, 6.500000000000E-01, 7.000000000000E-01, 7.500000000000E-01, 8.000000000000E-01, 8.500000000000E-01, 9.000000000000E-01, 9.500000000000E-01, 1.000000000000E+00, 1.050000000000E+00, 1.100000000000E+00, 1.150000000000E+00 };$/;"	m	class:lanczos1_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double misra1d_functor::x[14] = { 77.6E0, 114.9E0, 141.1E0, 190.8E0, 239.9E0, 289.0E0, 332.8E0, 378.4E0, 434.8E0, 477.3E0, 536.8E0, 593.1E0, 689.1E0, 760.0E0};$/;"	m	class:misra1d_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double rat42_functor::x[9] = { 9.000E0, 14.000E0, 21.000E0, 28.000E0, 42.000E0, 57.000E0, 63.000E0, 70.000E0, 79.000E0 };$/;"	m	class:rat42_functor	file:
x	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double rat43_functor::x[15] = { 1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15. };$/;"	m	class:rat43_functor	file:
xerbla_	tools/eigen/blas/xerbla.cpp	/^EIGEN_WEAK_LINKING int xerbla_(const char * msg, int *info, int)$/;"	f
xlsub	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xlsub; \/\/ pointers to the beginning of each column in lsub$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xlusup	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xlusup; \/\/ pointers to the beginning of each column in lusup$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xnorm	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar pnorm, xnorm, fnorm1;$/;"	m	class:Eigen::HybridNonLinearSolver
xnorm	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
xradius	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    double xradius;$/;"	m	class:MandelbrotWidget
xsup	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xsup; \/\/First supernode column ... xsup(s) points to the beginning of the s-th supernode$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xtol	tools/eigen/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h	/^    RealScalar xtol() const {return m_xtol; }$/;"	f	class:Eigen::LevenbergMarquardt
xtol	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Scalar xtol;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
xtol	tools/eigen/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar xtol;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
xusub	tools/eigen/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xusub; \/\/ Pointers to the beginning of each column of U in ucol $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xy	tools/eigen/doc/snippets/LLT_solve.cpp	/^Matrix<float,2,1> xy$/;"	v
y	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    y() const { return (*this)[1]; }$/;"	f	class:Eigen::DenseCoeffsBase
y	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    y() { return (*this)[1]; }$/;"	f	class:Eigen::DenseCoeffsBase
y	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar y() const { return this->derived().coeffs().coeff(1); }$/;"	f	class:Eigen::QuaternionBase
y	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& y() { return this->derived().coeffs().coeffRef(1); }$/;"	f	class:Eigen::QuaternionBase
y	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Scalar y() const { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Scalar& y() { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y	tools/eigen/doc/snippets/ColPivHouseholderQR_solve.cpp	/^Matrix3f y = Matrix3f::Random();$/;"	v
y	tools/eigen/doc/snippets/FullPivHouseholderQR_solve.cpp	/^Matrix3f y = Matrix3f::Random();$/;"	v
y	tools/eigen/doc/snippets/FullPivLU_solve.cpp	/^Matrix2f y = Matrix2f::Random();$/;"	v
y	tools/eigen/doc/snippets/HouseholderQR_solve.cpp	/^Matrix3f y = Matrix3f::Random();$/;"	v
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[11];$/;"	m	struct:MGH09_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[14];$/;"	m	struct:misra1d_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[154];$/;"	m	struct:Bennett5_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[15];$/;"	m	struct:rat43_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[16];$/;"	m	struct:MGH10_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[24];$/;"	m	struct:lanczos1_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[33];$/;"	m	struct:MGH17_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[35];$/;"	m	struct:eckerle4_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[9];$/;"	m	struct:rat42_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double Bennett5_functor::y[154] = { -34.834702E0 ,-34.393200E0 ,-34.152901E0 ,-33.979099E0 ,-33.845901E0 ,-33.732899E0 ,-33.640301E0 ,-33.559200E0 ,-33.486801E0 ,-33.423100E0 ,-33.365101E0 ,-33.313000E0 ,-33.260899E0 ,-33.217400E0 ,-33.176899E0 ,-33.139198E0 ,-33.101601E0 ,-33.066799E0 ,-33.035000E0 ,-33.003101E0 ,-32.971298E0 ,-32.942299E0 ,-32.916302E0 ,-32.890202E0 ,-32.864101E0 ,-32.841000E0 ,-32.817799E0 ,-32.797501E0 ,-32.774300E0 ,-32.757000E0 ,-32.733799E0 ,-32.716400E0 ,-32.699100E0 ,-32.678799E0 ,-32.661400E0 ,-32.644001E0 ,-32.626701E0 ,-32.612202E0 ,-32.597698E0 ,-32.583199E0 ,-32.568699E0 ,-32.554298E0 ,-32.539799E0 ,-32.525299E0 ,-32.510799E0 ,-32.499199E0 ,-32.487598E0 ,-32.473202E0 ,-32.461601E0 ,-32.435501E0 ,-32.435501E0 ,-32.426800E0 ,-32.412300E0 ,-32.400799E0 ,-32.392101E0 ,-32.380501E0 ,-32.366001E0 ,-32.357300E0 ,-32.348598E0 ,-32.339901E0 ,-32.328400E0 ,-32.319698E0 ,-32.311001E0 ,-32.299400E0 ,-32.290699E0 ,-32.282001E0 ,-32.273300E0 ,-32.264599E0 ,-32.256001E0 ,-32.247299E0$/;"	m	class:Bennett5_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double MGH09_functor::y[11] = { 1.957000E-01, 1.947000E-01, 1.735000E-01, 1.600000E-01, 8.440000E-02, 6.270000E-02, 4.560000E-02, 3.420000E-02, 3.230000E-02, 2.350000E-02, 2.460000E-02 };$/;"	m	class:MGH09_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double MGH10_functor::y[16] = { 3.478000E+04, 2.861000E+04, 2.365000E+04, 1.963000E+04, 1.637000E+04, 1.372000E+04, 1.154000E+04, 9.744000E+03, 8.261000E+03, 7.030000E+03, 6.005000E+03, 5.147000E+03, 4.427000E+03, 3.820000E+03, 3.307000E+03, 2.872000E+03 };$/;"	m	class:MGH10_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double MGH17_functor::y[33] = { 8.440000E-01, 9.080000E-01, 9.320000E-01, 9.360000E-01, 9.250000E-01, 9.080000E-01, 8.810000E-01, 8.500000E-01, 8.180000E-01, 7.840000E-01, 7.510000E-01, 7.180000E-01, 6.850000E-01, 6.580000E-01, 6.280000E-01, 6.030000E-01, 5.800000E-01, 5.580000E-01, 5.380000E-01, 5.220000E-01, 5.060000E-01, 4.900000E-01, 4.780000E-01, 4.670000E-01, 4.570000E-01, 4.480000E-01, 4.380000E-01, 4.310000E-01, 4.240000E-01, 4.200000E-01, 4.140000E-01, 4.110000E-01, 4.060000E-01 };$/;"	m	class:MGH17_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double eckerle4_functor::y[35] = { 0.0001575, 0.0001699, 0.0002350, 0.0003102, 0.0004917, 0.0008710, 0.0017418, 0.0046400, 0.0065895, 0.0097302, 0.0149002, 0.0237310, 0.0401683, 0.0712559, 0.1264458, 0.2073413, 0.2902366, 0.3445623, 0.3698049, 0.3668534, 0.3106727, 0.2078154, 0.1164354, 0.0616764, 0.0337200, 0.0194023, 0.0117831, 0.0074357, 0.0022732, 0.0008800, 0.0004579, 0.0002345, 0.0001586, 0.0001143, 0.0000710 };$/;"	m	class:eckerle4_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double lanczos1_functor::y[24] = { 2.513400000000E+00 ,2.044333373291E+00 ,1.668404436564E+00 ,1.366418021208E+00 ,1.123232487372E+00 ,9.268897180037E-01 ,7.679338563728E-01 ,6.388775523106E-01 ,5.337835317402E-01 ,4.479363617347E-01 ,3.775847884350E-01 ,3.197393199326E-01 ,2.720130773746E-01 ,2.324965529032E-01 ,1.996589546065E-01 ,1.722704126914E-01 ,1.493405660168E-01 ,1.300700206922E-01 ,1.138119324644E-01 ,1.000415587559E-01 ,8.833209084540E-02 ,7.833544019350E-02 ,6.976693743449E-02 ,6.239312536719E-02 };$/;"	m	class:lanczos1_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double misra1d_functor::y[14] = { 10.07E0, 14.73E0, 17.94E0, 23.93E0, 29.61E0, 35.18E0, 40.02E0, 44.82E0, 50.76E0, 55.05E0, 61.01E0, 66.40E0, 75.47E0, 81.78E0};$/;"	m	class:misra1d_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double rat42_functor::y[9] = { 8.930E0 ,10.800E0 ,18.590E0 ,22.330E0 ,39.350E0 ,56.110E0 ,61.730E0 ,64.620E0 ,67.080E0 };$/;"	m	class:rat42_functor	file:
y	tools/eigen/unsupported/test/NonLinearOptimization.cpp	/^const double rat43_functor::y[15] = { 16.08, 33.83, 65.80, 97.20, 191.55, 326.20, 386.87, 520.53, 590.03, 651.92, 724.93, 699.56, 689.96, 637.56, 717.41 };$/;"	m	class:rat43_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[11];$/;"	m	struct:MGH09_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[14];$/;"	m	struct:misra1d_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[154];$/;"	m	struct:Bennett5_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[15];$/;"	m	struct:rat43_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[16];$/;"	m	struct:MGH10_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[24];$/;"	m	struct:lanczos1_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[33];$/;"	m	struct:MGH17_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[35];$/;"	m	struct:eckerle4_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^    static const double y[9];$/;"	m	struct:rat42_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double Bennett5_functor::y[154] = { -34.834702E0 ,-34.393200E0 ,-34.152901E0 ,-33.979099E0 ,-33.845901E0 ,-33.732899E0 ,-33.640301E0 ,-33.559200E0 ,-33.486801E0 ,-33.423100E0 ,-33.365101E0 ,-33.313000E0 ,-33.260899E0 ,-33.217400E0 ,-33.176899E0 ,-33.139198E0 ,-33.101601E0 ,-33.066799E0 ,-33.035000E0 ,-33.003101E0 ,-32.971298E0 ,-32.942299E0 ,-32.916302E0 ,-32.890202E0 ,-32.864101E0 ,-32.841000E0 ,-32.817799E0 ,-32.797501E0 ,-32.774300E0 ,-32.757000E0 ,-32.733799E0 ,-32.716400E0 ,-32.699100E0 ,-32.678799E0 ,-32.661400E0 ,-32.644001E0 ,-32.626701E0 ,-32.612202E0 ,-32.597698E0 ,-32.583199E0 ,-32.568699E0 ,-32.554298E0 ,-32.539799E0 ,-32.525299E0 ,-32.510799E0 ,-32.499199E0 ,-32.487598E0 ,-32.473202E0 ,-32.461601E0 ,-32.435501E0 ,-32.435501E0 ,-32.426800E0 ,-32.412300E0 ,-32.400799E0 ,-32.392101E0 ,-32.380501E0 ,-32.366001E0 ,-32.357300E0 ,-32.348598E0 ,-32.339901E0 ,-32.328400E0 ,-32.319698E0 ,-32.311001E0 ,-32.299400E0 ,-32.290699E0 ,-32.282001E0 ,-32.273300E0 ,-32.264599E0 ,-32.256001E0 ,-32.247299E0$/;"	m	class:Bennett5_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double MGH09_functor::y[11] = { 1.957000E-01, 1.947000E-01, 1.735000E-01, 1.600000E-01, 8.440000E-02, 6.270000E-02, 4.560000E-02, 3.420000E-02, 3.230000E-02, 2.350000E-02, 2.460000E-02 };$/;"	m	class:MGH09_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double MGH10_functor::y[16] = { 3.478000E+04, 2.861000E+04, 2.365000E+04, 1.963000E+04, 1.637000E+04, 1.372000E+04, 1.154000E+04, 9.744000E+03, 8.261000E+03, 7.030000E+03, 6.005000E+03, 5.147000E+03, 4.427000E+03, 3.820000E+03, 3.307000E+03, 2.872000E+03 };$/;"	m	class:MGH10_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double MGH17_functor::y[33] = { 8.440000E-01, 9.080000E-01, 9.320000E-01, 9.360000E-01, 9.250000E-01, 9.080000E-01, 8.810000E-01, 8.500000E-01, 8.180000E-01, 7.840000E-01, 7.510000E-01, 7.180000E-01, 6.850000E-01, 6.580000E-01, 6.280000E-01, 6.030000E-01, 5.800000E-01, 5.580000E-01, 5.380000E-01, 5.220000E-01, 5.060000E-01, 4.900000E-01, 4.780000E-01, 4.670000E-01, 4.570000E-01, 4.480000E-01, 4.380000E-01, 4.310000E-01, 4.240000E-01, 4.200000E-01, 4.140000E-01, 4.110000E-01, 4.060000E-01 };$/;"	m	class:MGH17_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double eckerle4_functor::y[35] = { 0.0001575, 0.0001699, 0.0002350, 0.0003102, 0.0004917, 0.0008710, 0.0017418, 0.0046400, 0.0065895, 0.0097302, 0.0149002, 0.0237310, 0.0401683, 0.0712559, 0.1264458, 0.2073413, 0.2902366, 0.3445623, 0.3698049, 0.3668534, 0.3106727, 0.2078154, 0.1164354, 0.0616764, 0.0337200, 0.0194023, 0.0117831, 0.0074357, 0.0022732, 0.0008800, 0.0004579, 0.0002345, 0.0001586, 0.0001143, 0.0000710 };$/;"	m	class:eckerle4_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double lanczos1_functor::y[24] = { 2.513400000000E+00 ,2.044333373291E+00 ,1.668404436564E+00 ,1.366418021208E+00 ,1.123232487372E+00 ,9.268897180037E-01 ,7.679338563728E-01 ,6.388775523106E-01 ,5.337835317402E-01 ,4.479363617347E-01 ,3.775847884350E-01 ,3.197393199326E-01 ,2.720130773746E-01 ,2.324965529032E-01 ,1.996589546065E-01 ,1.722704126914E-01 ,1.493405660168E-01 ,1.300700206922E-01 ,1.138119324644E-01 ,1.000415587559E-01 ,8.833209084540E-02 ,7.833544019350E-02 ,6.976693743449E-02 ,6.239312536719E-02 };$/;"	m	class:lanczos1_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double misra1d_functor::y[14] = { 10.07E0, 14.73E0, 17.94E0, 23.93E0, 29.61E0, 35.18E0, 40.02E0, 44.82E0, 50.76E0, 55.05E0, 61.01E0, 66.40E0, 75.47E0, 81.78E0};$/;"	m	class:misra1d_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double rat42_functor::y[9] = { 8.930E0 ,10.800E0 ,18.590E0 ,22.330E0 ,39.350E0 ,56.110E0 ,61.730E0 ,64.620E0 ,67.080E0 };$/;"	m	class:rat42_functor	file:
y	tools/eigen/unsupported/test/levenberg_marquardt.cpp	/^const double rat43_functor::y[15] = { 16.08, 33.83, 65.80, 97.20, 191.55, 326.20, 386.87, 520.53, 590.03, 651.92, 724.93, 699.56, 689.96, 637.56, 717.41 };$/;"	m	class:rat43_functor	file:
yes	tools/eigen/Eigen/src/Core/util/Meta.h	/^  struct yes {int a[1];};$/;"	s	struct:Eigen::internal::is_convertible_impl
z	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    z() const { return (*this)[2]; }$/;"	f	class:Eigen::DenseCoeffsBase
z	tools/eigen/Eigen/src/Core/DenseCoeffsBase.h	/^    z() { return (*this)[2]; }$/;"	f	class:Eigen::DenseCoeffsBase
z	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar z() const { return this->derived().coeffs().coeff(2); }$/;"	f	class:Eigen::QuaternionBase
z	tools/eigen/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& z() { return this->derived().coeffs().coeffRef(2); }$/;"	f	class:Eigen::QuaternionBase
z	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Scalar z() const { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
z	tools/eigen/Eigen/src/Geometry/Translation.h	/^  inline Scalar& z() { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
zdotc_	tools/eigen/blas/f2c/complexdots.c	/^doublecomplex zdotc_(integer *n, doublecomplex *cx, integer *incx, $/;"	f
zdotu_	tools/eigen/blas/f2c/complexdots.c	/^doublecomplex zdotu_(integer *n, doublecomplex *cx, integer *incx, $/;"	f
zero	tools/eigen/test/svd_common.h	/^EIGEN_DONT_INLINE Scalar zero() { return Scalar(0); }$/;"	f
zeroReduction	tools/eigen/test/zerosized.cpp	/^template<typename MatrixType> void zeroReduction(const MatrixType& m) {$/;"	f
zeroSizedMatrix	tools/eigen/test/zerosized.cpp	/^template<typename MatrixType> void zeroSizedMatrix()$/;"	f
zeroSizedVector	tools/eigen/test/zerosized.cpp	/^template<typename VectorType> void zeroSizedVector()$/;"	f
zero_sized_objects	tools/eigen/test/product_extra.cpp	/^void zero_sized_objects(const MatrixType& m)$/;"	f
zeta	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline const mpreal zeta    (const mpreal& x, mp_rnd_t r = mpreal::get_default_rnd()) {   MPREAL_UNARY_MATH_FUNCTION_BODY(zeta   );    }$/;"	f	namespace:mpfr
zhbmv_	tools/eigen/blas/f2c/zhbmv.c	/^\/* Subroutine *\/ int zhbmv_(char *uplo, integer *n, integer *k, doublecomplex $/;"	f
zhpmv_	tools/eigen/blas/f2c/zhpmv.c	/^\/* Subroutine *\/ int zhpmv_(char *uplo, integer *n, doublecomplex *alpha, $/;"	f
zoom	tools/eigen/demos/opengl/camera.cpp	/^void Camera::zoom(float d)$/;"	f	class:Camera
ztbmv_	tools/eigen/blas/f2c/ztbmv.c	/^\/* Subroutine *\/ int ztbmv_(char *uplo, char *trans, char *diag, integer *n, $/;"	f
~Action_aat_product	tools/eigen/bench/btl/actions/action_aat_product.hh	/^  ~Action_aat_product( void ){$/;"	f	class:Action_aat_product
~Action_ata_product	tools/eigen/bench/btl/actions/action_ata_product.hh	/^  ~Action_ata_product( void ){$/;"	f	class:Action_ata_product
~Action_atv_product	tools/eigen/bench/btl/actions/action_atv_product.hh	/^  ~Action_atv_product( void )$/;"	f	class:Action_atv_product
~Action_axpby	tools/eigen/bench/btl/actions/action_axpby.hh	/^  ~Action_axpby( void ){$/;"	f	class:Action_axpby
~Action_axpy	tools/eigen/bench/btl/actions/action_axpy.hh	/^  ~Action_axpy( void ){$/;"	f	class:Action_axpy
~Action_cholesky	tools/eigen/bench/btl/actions/action_cholesky.hh	/^  ~Action_cholesky( void ){$/;"	f	class:Action_cholesky
~Action_ger	tools/eigen/bench/btl/actions/action_ger.hh	/^  BTL_DONT_INLINE ~Action_ger( void ){$/;"	f	class:Action_ger
~Action_hessenberg	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  ~Action_hessenberg( void ){$/;"	f	class:Action_hessenberg
~Action_lu_decomp	tools/eigen/bench/btl/actions/action_lu_decomp.hh	/^  ~Action_lu_decomp( void ){$/;"	f	class:Action_lu_decomp
~Action_matrix_matrix_product	tools/eigen/bench/btl/actions/action_matrix_matrix_product.hh	/^  ~Action_matrix_matrix_product( void ){$/;"	f	class:Action_matrix_matrix_product
~Action_matrix_vector_product	tools/eigen/bench/btl/actions/action_matrix_vector_product.hh	/^  BTL_DONT_INLINE ~Action_matrix_vector_product( void ){$/;"	f	class:Action_matrix_vector_product
~Action_partial_lu	tools/eigen/bench/btl/actions/action_partial_lu.hh	/^  ~Action_partial_lu( void ){$/;"	f	class:Action_partial_lu
~Action_rot	tools/eigen/bench/btl/actions/action_rot.hh	/^  BTL_DONT_INLINE ~Action_rot( void ){$/;"	f	class:Action_rot
~Action_symv	tools/eigen/bench/btl/actions/action_symv.hh	/^  BTL_DONT_INLINE ~Action_symv( void ){$/;"	f	class:Action_symv
~Action_syr2	tools/eigen/bench/btl/actions/action_syr2.hh	/^  BTL_DONT_INLINE ~Action_syr2( void ){$/;"	f	class:Action_syr2
~Action_tridiagonalization	tools/eigen/bench/btl/actions/action_hessenberg.hh	/^  ~Action_tridiagonalization( void ){$/;"	f	class:Action_tridiagonalization
~Action_trisolve	tools/eigen/bench/btl/actions/action_trisolve.hh	/^  ~Action_trisolve( void ){$/;"	f	class:Action_trisolve
~Action_trisolve_matrix	tools/eigen/bench/btl/actions/action_trisolve_matrix.hh	/^  ~Action_trisolve_matrix( void ){$/;"	f	class:Action_trisolve_matrix
~Action_trmm	tools/eigen/bench/btl/actions/action_trmm.hh	/^  ~Action_trmm( void ){$/;"	f	class:Action_trmm
~AlignedBox	tools/eigen/Eigen/src/Geometry/AlignedBox.h	/^  ~AlignedBox() {}$/;"	f	class:Eigen::AlignedBox
~AmbiVector	tools/eigen/Eigen/src/SparseCore/AmbiVector.h	/^    ~AmbiVector() { delete[] m_buffer; }$/;"	f	class:Eigen::internal::AmbiVector
~BDCSVD	tools/eigen/Eigen/src/SVD/BDCSVD.h	/^  ~BDCSVD() $/;"	f	class:Eigen::BDCSVD
~BenchTimer	tools/eigen/bench/BenchTimer.h	/^  ~BenchTimer() {}$/;"	f	class:Eigen::BenchTimer
~BenchmarkSuite	tools/eigen/bench/tensors/tensor_benchmarks.h	/^  ~BenchmarkSuite() {$/;"	f	class:BenchmarkSuite
~BiCGSTAB	tools/eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  ~BiCGSTAB() {}$/;"	f	class:Eigen::BiCGSTAB
~BlockSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/BlockSparseMatrix.h	/^    ~BlockSparseMatrix()$/;"	f	class:Eigen::BlockSparseMatrix
~CSimpleIniTempl	tools/SimpleIni.h	/^CSimpleIniTempl<SI_CHAR,SI_STRLESS,SI_CONVERTER>::~CSimpleIniTempl()$/;"	f	class:CSimpleIniTempl
~Camera	tools/eigen/demos/opengl/camera.cpp	/^Camera::~Camera()$/;"	f	class:Camera
~CholmodBase	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodBase()$/;"	f	class:Eigen::CholmodBase
~CholmodDecomposition	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodDecomposition() {}$/;"	f	class:Eigen::CholmodDecomposition
~CholmodSimplicialLDLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLDLT() {}$/;"	f	class:Eigen::CholmodSimplicialLDLT
~CholmodSimplicialLLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLLT() {}$/;"	f	class:Eigen::CholmodSimplicialLLT
~CholmodSupernodalLLT	tools/eigen/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSupernodalLLT() {}$/;"	f	class:Eigen::CholmodSupernodalLLT
~CommaInitializer	tools/eigen/Eigen/src/Core/CommaInitializer.h	/^  inline ~CommaInitializer()$/;"	f	struct:Eigen::CommaInitializer
~CompressedStorage	tools/eigen/Eigen/src/SparseCore/CompressedStorage.h	/^    ~CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
~ConjugateGradient	tools/eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ~ConjugateGradient() {}$/;"	f	class:Eigen::ConjugateGradient
~DGMRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/DGMRES.h	/^  ~DGMRES() {}$/;"	f	class:Eigen::DGMRES
~DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	tools/eigen/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~DynamicSparseMatrix	tools/eigen/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline ~DynamicSparseMatrix() {}$/;"	f	class:Eigen::DynamicSparseMatrix
~Foo	tools/eigen/test/ctorleak.cpp	/^  ~Foo()$/;"	f	struct:Foo
~GMRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  ~GMRES() {}$/;"	f	class:Eigen::GMRES
~GPUContext	tools/eigen/unsupported/test/cxx11_tensor_device.cpp	/^  ~GPUContext() {$/;"	f	struct:GPUContext
~GpuHelper	tools/eigen/demos/opengl/gpuhelper.cpp	/^GpuHelper::~GpuHelper()$/;"	f	class:GpuHelper
~Hyperplane	tools/eigen/Eigen/src/Geometry/Hyperplane.h	/^  ~Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
~IterScaling	tools/eigen/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    ~IterScaling() { }$/;"	f	class:Eigen::IterScaling
~IterativeSolverBase	tools/eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ~IterativeSolverBase() {}$/;"	f	class:Eigen::IterativeSolverBase
~LeastSquaresConjugateGradient	tools/eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  ~LeastSquaresConjugateGradient() {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
~Lib_Mean	tools/eigen/bench/btl/data/mean.cxx	/^  ~Lib_Mean( void ){$/;"	f	class:Lib_Mean
~MINRES	tools/eigen/unsupported/Eigen/src/IterativeSolvers/MINRES.h	/^        ~MINRES(){}$/;"	f	class:Eigen::MINRES
~MandelbrotWidget	tools/eigen/demos/mandelbrot/mandelbrot.h	/^    ~MandelbrotWidget()$/;"	f	class:MandelbrotWidget
~Map	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline ~Map() {}$/;"	f	class:Eigen::Map
~MappedSparseMatrix	tools/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline ~MappedSparseMatrix() {}$/;"	f	class:Eigen::MappedSparseMatrix
~MappedSuperNodalMatrix	tools/eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    ~MappedSuperNodalMatrix()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
~MatrixMarketIterator	tools/eigen/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    ~MatrixMarketIterator()$/;"	f	class:Eigen::MatrixMarketIterator
~Mixed_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh	/^  ~Mixed_Perf_Analyzer( void ){$/;"	f	class:Mixed_Perf_Analyzer
~Notification	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  ~Notification() {}$/;"	f	class:Eigen::Notification
~OutputWriter	tools/SimpleIni.h	/^        virtual ~OutputWriter() { }$/;"	f	class:CSimpleIniTempl::OutputWriter
~ParametrizedLine	tools/eigen/Eigen/src/Geometry/ParametrizedLine.h	/^  ~ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
~PardisoImpl	tools/eigen/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ~PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
~PastixBase	tools/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ~PastixBase() $/;"	f	class:Eigen::PastixBase
~Portable_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer.hh	/^  ~Portable_Perf_Analyzer(){$/;"	f	class:Portable_Perf_Analyzer
~Portable_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh	/^  ~Portable_Perf_Analyzer( void ){$/;"	f	class:Portable_Perf_Analyzer
~RandomSetter	tools/eigen/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    ~RandomSetter()$/;"	f	class:Eigen::RandomSetter
~RenderingWidget	tools/eigen/demos/opengl/quaternion_demo.h	/^    ~RenderingWidget() { }$/;"	f	class:RenderingWidget
~SI_ConvertW	tools/SimpleIni.h	/^    ~SI_ConvertW() { if (m_pConverter) ucnv_close(m_pConverter); }$/;"	f	class:SI_ConvertW
~SPQR	tools/eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    ~SPQR()$/;"	f	class:Eigen::SPQR
~STL_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/STL_perf_analyzer.hh	/^  ~STL_Perf_Analyzer( void ){$/;"	f	class:STL_Perf_Analyzer
~ScalarWithExceptions	tools/eigen/test/exceptions.cpp	/^    ~ScalarWithExceptions() {$/;"	f	class:ScalarWithExceptions
~SimplicialCholeskyBase	tools/eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ~SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
~SkylineMatrix	tools/eigen/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline ~SkylineMatrix() {$/;"	f	class:Eigen::SkylineMatrix
~SkylineStorage	tools/eigen/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    ~SkylineStorage() {$/;"	f	class:Eigen::SkylineStorage
~SparseLU	tools/eigen/Eigen/src/SparseLU/SparseLU.h	/^    ~SparseLU()$/;"	f	class:Eigen::SparseLU
~SparseMapBase	tools/eigen/Eigen/src/SparseCore/SparseMap.h	/^    inline ~SparseMapBase() {}$/;"	f	class:Eigen::SparseMapBase
~SparseMatrix	tools/eigen/Eigen/src/SparseCore/SparseMatrix.h	/^    inline ~SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
~SparseSolverBase	tools/eigen/Eigen/src/SparseCore/SparseSolverBase.h	/^    ~SparseSolverBase()$/;"	f	class:Eigen::SparseSolverBase
~SparseVector	tools/eigen/Eigen/src/SparseCore/SparseVector.h	/^    inline ~SparseVector() {}$/;"	f	class:Eigen::SparseVector
~StreamInterface	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  virtual ~StreamInterface() {}$/;"	f	class:Eigen::StreamInterface
~SuperILU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperILU()$/;"	f	class:Eigen::SuperILU
~SuperLU	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLU()$/;"	f	class:Eigen::SuperLU
~SuperLUBase	tools/eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLUBase()$/;"	f	class:Eigen::SuperLUBase
~TensorEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorEvalTo.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE ~TensorEvaluator() {$/;"	f	struct:Eigen::TensorEvaluator
~TensorLazyBaseEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  virtual ~TensorLazyBaseEvaluator() { }$/;"	f	class:Eigen::internal::TensorLazyBaseEvaluator
~TensorLazyEvaluator	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  virtual ~TensorLazyEvaluator() {$/;"	f	class:Eigen::internal::TensorLazyEvaluator
~TensorLazyEvaluatorReadOnly	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  virtual ~TensorLazyEvaluatorReadOnly() {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorReadOnly
~TensorLazyEvaluatorWritable	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^  virtual ~TensorLazyEvaluatorWritable() {$/;"	f	class:Eigen::internal::TensorLazyEvaluatorWritable
~TensorRef	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorRef.h	/^    ~TensorRef() {$/;"	f	class:Eigen::TensorRef
~TensorStorage	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorStorage.h	/^    EIGEN_DEVICE_FUNC  ~TensorStorage() { internal::conditional_aligned_delete_auto<T,(Options_&DontAlign)==0>(m_data, internal::array_prod(m_dimensions)); }$/;"	f	class:Eigen::TensorStorage
~ThreadPool	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  ~ThreadPool()$/;"	f	class:Eigen::ThreadPool
~ThreadPoolInterface	tools/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceType.h	/^  virtual ~ThreadPoolInterface() {}$/;"	f	class:Eigen::ThreadPoolInterface
~UmfPackLU	tools/eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ~UmfPackLU()$/;"	f	class:Eigen::UmfPackLU
~X86_Perf_Analyzer	tools/eigen/bench/btl/generic_bench/timers/x86_perf_analyzer.hh	/^  ~X86_Perf_Analyzer( void ){$/;"	f	class:X86_Perf_Analyzer
~action_t	tools/eigen/bench/analyze-blocking-sizes.cpp	/^  virtual ~action_t() {}$/;"	f	struct:action_t
~aligned_allocator	tools/eigen/Eigen/src/Core/util/Memory.h	/^  ~aligned_allocator() {}$/;"	f	class:Eigen::aligned_allocator
~aligned_allocator_indirection	tools/eigen/Eigen/src/StlSupport/details.h	/^    ~aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
~aligned_stack_memory_handler	tools/eigen/Eigen/src/Core/util/Memory.h	/^    ~aligned_stack_memory_handler()$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
~eigen_assert_exception	tools/eigen/test/main.h	/^      ~eigen_assert_exception() { Eigen::no_more_assert = false; }$/;"	f	struct:Eigen::eigen_assert_exception
~fftw_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      ~fftw_plan() {if (m_plan) fftw_destroy_plan(m_plan);}$/;"	f	struct:Eigen::internal::fftw_plan
~fftw_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      ~fftw_plan() {if (m_plan) fftwf_destroy_plan(m_plan);}$/;"	f	struct:Eigen::internal::fftw_plan
~fftw_plan	tools/eigen/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      ~fftw_plan() {if (m_plan) fftwl_destroy_plan(m_plan);}$/;"	f	struct:Eigen::internal::fftw_plan
~gemm_blocking_space	tools/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    ~gemm_blocking_space()$/;"	f	class:Eigen::internal::gemm_blocking_space
~mpreal	tools/eigen/unsupported/test/mpreal/mpreal.h	/^inline mpreal::~mpreal() $/;"	f	class:mpfr::mpreal
~my_exception	tools/eigen/test/exceptions.cpp	/^  ~my_exception() {}$/;"	f	struct:my_exception
~noncopyable	tools/eigen/Eigen/src/Core/util/Meta.h	/^  EIGEN_DEVICE_FUNC ~noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
~scoped_array	tools/eigen/Eigen/src/Core/util/Memory.h	/^  ~scoped_array()$/;"	f	class:Eigen::internal::scoped_array
